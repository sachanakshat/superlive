{"version":3,"file":"dash.mediaplayer.min.js","mappings":"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EnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,OAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,OAEN,CACEnmC,KAAM,MACNmmC,GAAI,OAEN,CACEnmC,KAAM,MACNmmC,GAAI,OAEN,CACEnmC,KAAM,MACNmmC,GAAI,OAEN,CACEnmC,KAAM,MACNmmC,GAAI,OAEN,CACEnmC,KAAM,MACNmmC,GAAI,OAEN,CACEnmC,KAAM,MACNmmC,GAAI,OAEN,CACEnmC,KAAM,MACNmmC,GAAI,OAEN,CACEnmC,KAAM,MACNmmC,GAAI,OAEN,CACEnmC,KAAM,MACNmmC,GAAI,OAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,SAEN,CACEnmC,KAAM,MACNmmC,GAAI,OAEN,CACEnmC,KAAM,MACNmmC,GAAI,OAEN,CACEnmC,KAAM,MACNmmC,GAAI,OAEN,CACEnmC,KAAM,MACNmmC,GAAI,OAEN,CACEnmC,KAAM,MACNmmC,GAAI,OAEN,CACEnmC,KAAM,MACNmmC,GAAI,OAEN,CACEnmC,KAAM,MACNmmC,GAAI,OAEN,CACEnmC,KAAM,MACNmmC,GAAI,OAEN,CACEnmC,KAAM,MACNmmC,GAAI,OAEN,CACEnmC,KAAM,MACNmmC,GAAI,OAEN,CACEnmC,KAAM,MACNmmC,GAAI,OAEN,CACEnmC,KAAM,MACNmmC,GAAI,OAEN,CACEnmC,KAAM,MACNmmC,GAAI,OAEN,CACEnmC,KAAM,MACNmmC,GAAI,OAEN,CACEnmC,KAAM,MACNmmC,GAAI,OAEN,CACEnmC,KAAM,MACNmmC,GAAI,OAEN,CACEnmC,KAAM,MACNmmC,GAAI,OAEN,CACEnmC,KAAM,MACNmmC,GAAI,OAEN,CACEnmC,KAAM,MACNmmC,GAAI,OAEN,CACEnmC,KAAM,MACNmmC,GAAI,OAEN,CACEnmC,KAAM,MACNmmC,GAAI,OAEN,CACEnmC,KAAM,MACNmmC,GAAI,OAEN,CACEnmC,KAAM,MACNmmC,GAAI,OAEN,CACEnmC,KAAM,MACNmmC,GAAI,OAEN,CACEnmC,KAAM,MACNmmC,GAAI,OAEN,CACEnmC,KAAM,MACNmmC,GAAI,OAEN,CACEnmC,KAAM,MACNmmC,GAAI,OAEN,CACEnmC,KAAM,MACNmmC,GAAI,OAEN,CACEnmC,KAAM,MACNmmC,GAAI,OAEN,CACEnmC,KAAM,MACNmmC,GAAI,OAEN,CACEnmC,KAAM,MACNmmC,GAAI,OAEN,CACEnmC,KAAM,MACNmmC,GAAI,OAEN,CACEnmC,KAAM,MACNmmC,GAAI,OAEN,CACEnmC,KAAM,MACNmmC,GAAI,OAEN,CACEnmC,KAAM,MACNmmC,GAAI,OAEN,CACEnmC,KAAM,MACNmmC,GAAI,OAEN,CACEnmC,KAAM,MACNmmC,GAAI,OAEN,CACEnmC,KAAM,MACNmmC,GAAI,OAEN,CACEnmC,KAAM,MACNmmC,GAAI,OAEN,CACEnmC,KAAM,MACNmmC,GAAI,OAEN,CACEnmC,KAAM,MACNmmC,GAAI,OAEN,CACEnmC,KAAM,MACNmmC,GAAI,OAEN,CACEnmC,KAAM,MACNmmC,GAAI,OAEN,CACEnmC,KAAM,MACNmmC,GAAI,OAEN,CACEnmC,KAAM,MACNmmC,GAAI,OAEN,CACEnmC,KAAM,MACNmmC,GAAI,OAEN,CACEnmC,KAAM,MACNmmC,GAAI,OAEN,CACEnmC,KAAM,MACNmmC,GAAI,SAEN,CACEnmC,KAAM,MACNmmC,GAAI,OAEN,CACEnmC,KAAM,MACNmmC,GAAI,OAEN,CACEnmC,KAAM,MACNmmC,GAAI,OAEN,CACEnmC,KAAM,MACNmmC,GAAI,OAEN,CACEnmC,KAAM,MACNmmC,GAAI,OAEN,CACEnmC,KAAM,MACNmmC,GAAI,OAEN,CACEnmC,KAAM,MACNmmC,GAAI,OAEN,CACEnmC,KAAM,MACNmmC,GAAI,OAEN,CACEnmC,KAAM,MACNmmC,GAAI,OAEN,CACEnmC,KAAM,MACNmmC,GAAI,OAEN,CACEnmC,KAAM,MACNmmC,GAAI,OAEN,CACEnmC,KAAM,MACNmmC,GAAI,OAEN,CACEnmC,KAAM,MACNmmC,GAAI,OAEN,CACEnmC,KAAM,MACNmmC,GAAI,OAEN,CACEnmC,KAAM,MACNmmC,GAAI,OAEN,CACEnmC,KAAM,MACNmmC,GAAI,OAEN,CACEnmC,KAAM,MACNmmC,GAAI,OAEN,CACEnmC,KAAM,MACNmmC,GAAI,OAEN,CACEnmC,KAAM,MACNmmC,GAAI,OAEN,CACEnmC,KAAM,MACNmmC,GAAI,OAEN,CACEnmC,KAAM,MACNmmC,GAAI,OAEN,CACEnmC,KAAM,MACNmmC,GAAI,OAEN,CACEnmC,KAAM,MACNmmC,GAAI,OAEN,CACEnmC,KAAM,MACNmmC,GAAI,OAEN,CACEnmC,KAAM,MACNmmC,GAAI,OAEN,CACEnmC,KAAM,MACNmmC,GAAI,OAEN,CACEnmC,KAAM,MACNmmC,GAAI,OAEN,CACEnmC,KAAM,MACNmmC,GAAI,OAEN,CACEnmC,KAAM,MACNmmC,GAAI,OAEN,CACEnmC,KAAM,MACNmmC,GAAI,OAEN,CACEnmC,KAAM,MACNmmC,GAAI,OAEN,CACEnmC,KAAM,MACNmmC,GAAI,OAEN,CACEnmC,KAAM,MACNmmC,GAAI,OAEN,CACEnmC,KAAM,MACNmmC,GAAI,OAEN,CACEnmC,KAAM,MACNmmC,GAAI,OAEN,CACEnmC,KAAM,MACNmmC,GAAI,OAEN,CACEnmC,KAAM,MACNmmC,GAAI,OAEN,CACEnmC,KAAM,MACNmmC,GAAI,OAEN,CACEnmC,KAAM,MACNmmC,GAAI,OAEN,CACEnmC,KAAM,MACNmmC,GAAI,OAEN,CACEnmC,KAAM,MACNmmC,GAAI,OAEN,CACEnmC,KAAM,MACNmmC,GAAI,OAEN,CACEnmC,KAAM,MACNmmC,GAAI,OAEN,CACEnmC,KAAM,MACNmmC,GAAI,OAEN,CACEnmC,KAAM,MACNmmC,GAAI,OAEN,CACEnmC,KAAM,MACNmmC,GAAI,OAEN,CACEnmC,KAAM,MACNmmC,GAAI,OAEN,CACEnmC,KAAM,MACNmmC,GAAI,OAEN,CACEnmC,KAAM,MACNmmC,GAAI,OAEN,CACEnmC,KAAM,MACNmmC,GAAI,OAEN,CACEnmC,KAAM,MACNmmC,GAAI,OAEN,CACEnmC,KAAM,MACNmmC,GAAI,OAEN,CACEnmC,KAAM,MACNmmC,GAAI,OAEN,CACEnmC,KAAM,MACNmmC,GAAI,OAEN,CACEnmC,KAAM,MACNmmC,GAAI,OAEN,CACEnmC,KAAM,MACNmmC,GAAI,OAEN,CACEnmC,KAAM,MACNmmC,GAAI,OAEN,CACEnmC,KAAM,MACNmmC,GAAI,OAEN,CACEnmC,KAAM,MACNmmC,GAAI,OAEN,CACEnmC,KAAM,MACNmmC,GAAI,OAEN,CACEnmC,KAAM,MACNmmC,GAAI,OAEN,CACEnmC,KAAM,MACNmmC,GAAI,OAEN,CACEnmC,KAAM,MACNmmC,GAAI,OAEN,CACEnmC,KAAM,MACNmmC,GAAI,OAEN,CACEnmC,KAAM,MACNmmC,GAAI,OAEN,CACEnmC,KAAM,MACNmmC,GAAI,OAEN,CACEnmC,KAAM,MACNmmC,GAAI,OAEN,CACEnmC,KAAM,MACNmmC,GAAI,OAEN,CACEnmC,KAAM,MACNmmC,GAAI,OAEN,CACEnmC,KAAM,MACNmmC,GAAI,OAEN,CACEnmC,KAAM,MACNmmC,GAAI,OAEN,CACEnmC,KAAM,MACNmmC,GAAI,OAEN,CACEnmC,KAAM,MACNmmC,GAAI,OAEN,CACEnmC,KAAM,MACNmmC,GAAI,OAEN,CACEnmC,KAAM,MACNmmC,GAAI,OAEN,CACEnmC,KAAM,MACNmmC,GAAI,OAEN,CACEnmC,KAAM,MACNmmC,GAAI,OAEN,CACEnmC,KAAM,MACNmmC,GAAI,OAEN,CACEnmC,KAAM,MACNmmC,GAAI,OAEN,CACEnmC,KAAM,SACNmmC,GAAI,OAEN,CACEnmC,KAAM,SACNmmC,GAAI,OAEN,CACEnmC,KAAM,SACNmmC,GAAI,OAEN,CACEnmC,KAAM,SACNmmC,GAAI,OAEN,CACEnmC,KAAM,SACNmmC,GAAI,OAEN,CACEnmC,KAAM,SACNmmC,GAAI,OAEN,CACEnmC,KAAM,SACNmmC,GAAI,OAEN,CACEnmC,KAAM,SACNmmC,GAAI,OAEN,CACEnmC,KAAM,SACNmmC,GAAI,OAEN,CACEnmC,KAAM,SACNmmC,GAAI,OAEN,CACEnmC,KAAM,SACNmmC,GAAI,OAEN,CACEnmC,KAAM,SACNmmC,GAAI,OAEN,CACEnmC,KAAM,SACNmmC,GAAI,OAEN,CACEnmC,KAAM,SACNmmC,GAAI,OAEN,CACEnmC,KAAM,SACNmmC,GAAI,OAEN,CACEnmC,KAAM,SACNmmC,GAAI,OAEN,CACEnmC,KAAM,SACNmmC,GAAI,OAEN,CACEnmC,KAAM,SACNmmC,GAAI,OAEN,CACEnmC,KAAM,SACNmmC,GAAI,OAEN,CACEnmC,KAAM,SACNmmC,GAAI,MAEN,CACEnmC,KAAM,cACNmmC,GAAI,WAEN,CACEnmC,KAAM,cACNmmC,GAAI,WAEN,CACEnmC,KAAM,SACNmmC,GAAI,OAEN,CACEnmC,KAAM,SACNmmC,GAAI,OAEN,CACEnmC,KAAM,SACNmmC,GAAI,OAEN,CACEnmC,KAAM,YACNmmC,GAAI,MAEN,CACEnmC,KAAM,aACNmmC,GAAI,MAEN,CACEnmC,KAAM,WACNmmC,GAAI,OAEN,CACEnmC,KAAM,KACNmmC,GAAI,WAEN,CACEnmC,KAAM,MACNmmC,GAAI,SAEN,CACEnmC,KAAM,KACNmmC,GAAI,OAEN,CACEnmC,KAAM,MACNmmC,GAAI,OAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,OAEN,CACEnmC,KAAM,MACNmmC,GAAI,OAEN,CACEnmC,KAAM,MACNmmC,GAAI,OAEN,CACEnmC,KAAM,MACNmmC,GAAI,OAEN,CACEnmC,KAAM,MACNmmC,GAAI,OAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,OAEN,CACEnmC,KAAM,MACNmmC,GAAI,OAEN,CACEnmC,KAAM,MACNmmC,GAAI,OAEN,CACEnmC,KAAM,MACNmmC,GAAI,OAEN,CACEnmC,KAAM,MACNmmC,GAAI,OAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,OAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,OAEN,CACEnmC,KAAM,MACNmmC,GAAI,OAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,OAEN,CACEnmC,KAAM,MACNmmC,GAAI,OAEN,CACEnmC,KAAM,MACNmmC,GAAI,OAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,OAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,OAEN,CACEnmC,KAAM,MACNmmC,GAAI,OAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,OAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,OAEN,CACEnmC,KAAM,MACNmmC,GAAI,OAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,OAEN,CACEnmC,KAAM,KACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,OAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,OAEN,CACEnmC,KAAM,MACNmmC,GAAI,OAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,OAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,OAEN,CACEnmC,KAAM,MACNmmC,GAAI,OAEN,CACEnmC,KAAM,KACNmmC,GAAI,OAEN,CACEnmC,KAAM,MACNmmC,GAAI,SAEN,CACEnmC,KAAM,MACNmmC,GAAI,SAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,OAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,WAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,OAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,MACNmmC,GAAI,MAEN,CACEnmC,KAAM,aACNmmC,GAAI,UAEN,CACEnmC,KAAM,aACNmmC,GAAI,OAEN,CACEnmC,KAAM,cACNmmC,GAAI,OAEN,CACEnmC,KAAM,cACNmmC,GAAI,OAEN,CACEnmC,KAAM,aACNmmC,GAAI,OAEN,CACEnmC,KAAM,YACNmmC,GAAI,OAEN,CACEnmC,KAAM,aACNmmC,GAAI,OAEN,CACEnmC,KAAM,cACNmmC,GAAI,OAEN,CACEnmC,KAAM,YACNmmC,GAAI,OAEN,CACEnmC,KAAM,YACNmmC,GAAI,OAEN,CACEnmC,KAAM,qBACNmmC,GAAI,gBCjzDKu9G,GAAS,CACpB,CACE1jJ,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,QAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,SAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,MAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,MAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,MAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,MAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,MAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,MAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,MAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,MAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,MAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,MAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,MAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,MAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,MAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,MAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,MAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,MAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,MAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,MAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,MAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,MAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,SACP9tE,MAAO,OAETkmC,GAAI,CACF4nC,MAAO,SACP9tE,MAAO,OAGX,CACED,KAAM,CACJ+tE,MAAO,WACP9tE,MAAO,YAETkmC,GAAI,CACF4nC,MAAO,WACP9tE,MAAO,YAGX,CACED,KAAM,CACJ+tE,MAAO,WACP9tE,MAAO,UAETkmC,GAAI,CACF4nC,MAAO,WACP9tE,MAAO,aCtoGA0jJ,GAAO,CAClBxyH,OAAQ,CACN,IAAK,CACH,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MAEF,IAAK,CAAC,KAAM,MACZ,IAAK,CAAC,KAAM,KAAM,MAClB,IAAK,CAAC,KAAM,KAAM,MAClB,IAAK,CAAC,KAAM,MACZ,IAAK,CAAC,KAAM,KAAM,KAAM,MACxB,IAAK,CACH,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MAEF,IAAK,CAAC,KAAM,MACZ,IAAK,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MACpC,IAAK,CAAC,KAAM,MACZyyH,GAAI,CAAC,KAAM,KAAM,MACjBj2H,GAAI,CAAC,KAAM,MACXk2H,GAAI,CAAC,KAAM,MACXC,GAAI,CAAC,KAAM,MACXC,GAAI,CAAC,KAAM,KAAM,KAAM,MACvBr+B,GAAI,CACF,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MAEFs+B,GAAI,CAAC,KAAM,MACX,MAAO,CAAC,MAAO,OACfC,IAAK,CAAC,KAAM,KAAM,MAClBC,IAAK,CAAC,KAAM,MACZC,IAAK,CAAC,KAAM,MACZC,IAAK,CACH,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MAEFC,IAAK,CAAC,KAAM,QCzFHC,GAAS,CACpBC,GAAI,aACJC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACL,WAAY,cACZC,IAAK,cACL,WAAY,cACZC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLxrB,GAAI,aACJyrB,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACL,WAAY,cACZC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLh2F,IAAK,cACLp0C,IAAK,cACLqqI,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACL,WAAY,cACZ,WAAY,cACZC,IAAK,cACLC,IAAK,cACLC,IAAK,cACL9lD,IAAK,cACL+lD,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACL,WAAY,cACZC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,GAAI,aACJC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK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K,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACL,WAAY,cACZC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,GAAI,aACJC,IAAK,cACL,WAAY,cACZC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACL,WAAY,cACZC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACL,WAAY,cACZC,IAAK,cACLC,IAAK,cACL,WAAY,cACZC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,GAAI,aACJC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACL,WAAY,cACZ,WAAY,cACZC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACL,WAAY,cACZ,WAAY,cACZC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACL,WAAY,cACZ,WAAY,cACZC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACL1+I,GAAI,aACJ2+I,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACL,WAAY,cACZ,WAAY,cACZC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,GAAI,aACJC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,GAAI,aACJC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,GAAI,aACJC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLlnK,IAAK,cACLmnK,IAAK,cACLC,IAAK,cACL,WAAY,cACZC,IAAK,cACLC,IAAK,cACLnkJ,IAAK,cACLokJ,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACL,WAAY,cACZC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLljJ,GAAI,aACJmjJ,IAAK,cACLC,IAAK,cACL,WAAY,cACZ,WAAY,cACZC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACL,WAAY,cACZ,WAAY,cACZC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLn0D,GAAI,aACJo0D,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACL,WAAY,cACZC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACL,WAAY,cACZC,IAAK,cACL,WAAY,cACZC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACL,WAAY,cACZC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACL,WAAY,cACZC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACL9+K,IAAK,cACL++K,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACL,WAAY,cACZC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACL,WAAY,cACZC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACL,WAAY,cACZ,WAAY,cACZC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACL,WAAY,cACZ,WAAY,cACZC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,eACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,GAAI,aACJC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACL,WAAY,cACZC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACL,WAAY,cACZC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,c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ACZC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACL,WAAY,cACZC,IAAK,cACLC,IAAK,cACL17L,IAAK,cACL27L,IAAK,cACL,WAAY,cACZC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACL,WAAY,cACZC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,c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AK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,GAAI,aACJC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,GAAI,aACJC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACL,WAAY,cACZC,IAAK,cACLC,IAAK,cACL,WAAY,cACZC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACL,WAAY,cACZC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,GAAI,aACJC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACL,WAAY,cACZC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,GAAI,aACJC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACL,WAAY,cACZC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,GAAI,aACJ,QAAS,aACT,QAAS,aACTC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACL,WAAY,cACZC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACL,WAAY,cACZ,WAAY,cACZzqK,IAAK,cACL0qK,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,GAAI,aACJC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLvlN,GAAI,aACJ,UAAW,aACXwlN,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACL,WAAY,cACZC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACL,WAAY,cACZ,WAAY,cACZC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACL,WAAY,cACZ,WAAY,cACZC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACL,WAAY,cACZC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACL,SAAU,cACV,SAAU,cACV,SAAU,cACV,SAAU,cACV,SAAU,cACV,WAAY,cACZ,SAAU,cACV,SAAU,cACV,SAAU,cACV,SAAU,cACV,SAAU,cACVC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,GAAI,aACJC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,GAAI,aACJC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACL,WAAY,cACZC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,GAAI,aACJC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,GAAI,aACJC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACL,WAAY,cACZC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,GAAI,aACJC,IAAK,cACLC,IAAK,cACLC,GAAI,aACJC,GAAI,cACJC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLlqM,GAAI,aACJmqM,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,GAAI,cACJC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,GAAI,aACJC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,eACL,WAAY,eACZC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,GAAI,aACJC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,GAAI,aACJC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACL,WAAY,cACZC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACL,WAAY,cACZ,WAAY,cACZC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,GAAI,aACJC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,GAAI,cACJC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACL,WAAY,cACZC,IAAK,cACLC,IAAK,cACL55M,GAAI,aACJ65M,IAAK,cACLC,IAAK,cACLr+L,IAAK,cACLs+L,IAAK,cACLC,IAAK,cACLC,IAAK,cACL,WAAY,cACZC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,GAAI,aACJC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,GAAI,aACJC,IAAK,cACL,WAAY,cACZ,WAAY,cACZ,WAAY,cACZC,IAAK,cACLC,IAAK,cACLC,GAAI,aACJC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,GAAI,aACJC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,eACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACL,WAAY,cACZC,IAAK,cACLC,IAAK,cACLC,IAAK,cACL,WAAY,cACZ,WAAY,cACZC,IAAK,cACLC,IAAK,cACLC,IAAK,cACL,WAAY,cACZC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACL,WAAY,cACZC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,GAAI,aACJC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACL,WAAY,cACZ,WAAY,cACZC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACL,WAAY,cACZC,IAAK,cACLC,IAAK,cACL,WAAY,cACZ,WAAY,cACZC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,GAAI,aACJC,IAAK,cACLC,IAAK,cACLC,GAAI,aACJC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,GAAI,aACJC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACL,WAAY,cACZC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,c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C,IAAK,cACL,WAAY,cACZC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,GAAI,aACJC,IAAK,cACLC,IAAK,cACLC,IAAK,cACL,WAAY,cACZC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,GAAI,aACJC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACL,WAAY,cACZC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACL,WAAY,cACZC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,GAAI,aACJC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAA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CLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACL,WAAY,cACZ,WAAY,cACZC,IAAK,cACLC,IAAK,cACL,WAAY,cACZ,WAAY,cACZC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,GAAI,aACJC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACL,WAAY,cACZC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACL,WAAY,cACZC,IAAK,cACLC,GAAI,aACJC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACL,WAAY,cACZC,IAAK,cACLC,IAAK,cACL,WAAY,cACZC,IAAK,cACLC,IAAK,cACLC,IAAK,cACL,WAAY,cACZC,IAAK,cACL,WAAY,cACZC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,eACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLnyP,IAAK,cACLoyP,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,eACL,WAAY,eACZC,GAAI,aACJC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,GAAI,aACJC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACL,WAAY,cACZC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACL,WAAY,cACZC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACL93K,GAAI,aACJ+3K,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACL1yP,GAAI,aACJ2yP,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACL77O,IAAK,cACL87O,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACL,WAAY,cACZC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACL,WAAY,cACZC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACL,WAAY,cACZC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,GAAI,aACJC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,GAAI,aACJC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACL,WAAY,cACZ,WAAY,cACZC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,GAAI,aACJC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACL,SAAU,cACVC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACL,SAAU,cACV,WAAY,cACZC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLh3P,IAAK,cACLi3P,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACL,WAAY,cACZC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACL,WAAY,cACZC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACL,WAAY,cACZC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACL,WAAY,cACZC,IAAK,cACLC,IAAK,cACL,WAAY,cACZC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACL,WAAY,cACZC,IAAK,cACLC,IAAK,cACLC,GAAI,aACJC,IAAK,cACLC,IAAK,cACLC,IAAK,cACL,WAAY,cACZC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,GAAI,aACJC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,GAAI,aACJC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLnlQ,IAAK,cACLolQ,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACL,WAAY,cACZC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACL,WAAY,cACZC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACL,WAAY,cACZC,IAAK,cACLC,IAAK,cACLC,GAAI,aACJC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,GAAI,aACJC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACL,WAAY,cACZC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC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LC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACL,WAAY,cACZC,IAAK,cACLC,IAAK,cACLC,IAAK,cACL,WAAY,cACZC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACL,WAAY,cACZC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACL,WAAY,cACZC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,GAAI,aACJC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IA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AK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACL,WAAY,cACZC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACL,WAAY,cACZC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,GAAI,aACJC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACL,WAAY,cACZC,IAAK,cACLC,IAAK,cACL,WAAY,cACZC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,GAAI,aACJC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACL,WAAY,cACZC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,GAAI,aACJC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cAC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K,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,GAAI,aACJC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,GAAI,aACJC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACL,WAAY,cACZC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,GAAI,aACJC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACL7tS,GAAI,aACJ8tS,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,eACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLz6S,IAAK,cACL06S,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACL,WAAY,cACZC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLpnT,GAAI,aACJqnT,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACL,WAAY,cACZC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLnnS,GAAI,aACJonS,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLr7S,GAAI,aACJs7S,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLrrR,IAAK,cACLsrR,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,GAAI,aACJC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACL,WAAY,cACZC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,eACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,GAAI,aACJ,UAAW,aACX,QAAS,aACT,QAAS,aACTC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,GAAI,aACJC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,aACL,UAAW,aACX,UAAW,aACX,UAAW,aACX,UAAW,aACX,UAAW,aACX,UAAW,aACX,UAAW,aACX,UAAW,aACX,UAAW,aACX,UAAW,aACX,UAAW,aACX,UAAW,aACX,UAAW,aACX,UAAW,aACX,UAAW,aACX,UAAW,aACX,UAAW,aACX,UAAW,aACX,UAAW,aACX,UAAW,aACX,UAAW,aACX,UAAW,aACX,UAAW,aACX,UAAW,aACX,UAAW,aACX,UAAW,aACX,UAAW,aACX,UAAW,aACX,UAAW,aACX,UAAW,cACX,SAAU,aACV,WAAY,aACZ,SAAU,aACV,SAAU,aACV,WAAY,cACZ,WAAY,cACZ,SAAU,aACV,SAAU,aACV,SAAU,aACV,SAAU,cACV,SAAU,aACV,WAAY,aACZ,cAAe,aACf,cAAe,aACf,cAAe,aACf,cAAe,aACf,cAAe,aACf,cAAe,cACf,cAAe,cACf,cAAe,aACf,cAAe,aACf,cAAe,aACf,cAAe,aACf,cAAe,cACf,cAAe,cACf,cAAe,aACf,cAAe,cACf,cAAe,cACf,WAAY,cACZ,WAAY,aACZ,SAAU,aACV,SAAU,aACV,WAAY,aACZ,SAAU,aACV,SAAU,aACV,SAAU,aACV,SAAU,aACV,WAAY,cACZ,WAAY,cACZ,WAAY,cACZ,WAAY,cACZ,SAAU,aACV,SAAU,aACV,WAAY,aACZ,SAAU,aACV,SAAU,aACV,SAAU,aACV,WAAY,aACZ,SAAU,aACV,SAAU,aACV,SAAU,aACV,SAAU,aACV,SAAU,aACV,WAAY,aACZ,SAAU,cACV,SAAU,aACV,WAAY,cACZ,WAAY,aACZ,SAAU,aACV,WAAY,cACZ,WAAY,cACZ,SAAU,cACV,SAAU,aACV,WAAY,cACZ,WAAY,aACZ,WAAY,cACZ,SAAU,aACV,SAAU,aACV,SAAU,aACV,SAAU,aACV,WAAY,cACZ,WAAY,cACZ,WAAY,cACZ,SAAU,aACV,SAAU,aACV,SAAU,aACV,SAAU,aACV,SAAU,aACV,WAAY,cACZ,SAAU,cACV,WAAY,cACZ,cAAe,cACf,WAAY,cACZ,SAAU,aACV,SAAU,aACV,SAAU,aACV,SAAU,cACV,SAAU,aACV,WAAY,aACZ,cAAe,aACf,cAAe,aACf,cAAe,aACf,cAAe,aACf,cAAe,aACf,cAAe,aACf,cAAe,aACf,cAAe,cACf,cAAe,aACf,SAAU,aACV,SAAU,aACV,WAAY,aACZ,cAAe,aACf,cAAe,cACf,cAAe,cACf,cAAe,cACf,WAAY,aACZ,SAAU,aACV,SAAU,aACV,SAAU,aACV,WAAY,cACZ,WAAY,aACZ,SAAU,aACV,SAAU,aACV,SAAU,aACV,SAAU,aACV,SAAU,aACV,WAAY,cACZ,SAAU,aACV,WAAY,aACZ,WAAY,cACZ,SAAU,aACV,SAAU,aACV,SAAU,aACV,WAAY,aACZ,SAAU,aACV,SAAU,aACV,SAAU,aACV,SAAU,aACV,SAAU,aACV,SAAU,aACV,SAAU,aACV,WAAY,aACZ,SAAU,aACV,SAAU,aACV,SAAU,aACV,WAAY,aACZ,SAAU,aACV,WAAY,cACZ,WAAY,cACZ,WAAY,cACZ,SAAU,aACV,SAAU,aACV,SAAU,aACV,WAAY,aACZ,WAAY,aACZ,cAAe,cACf,SAAU,cACV,SAAU,aACV,WAAY,aACZ,WAAY,aACZ,SAAU,aACV,WAAY,aACZ,WAAY,aACZ,WAAY,aACZ,WAAY,cACZ,WAAY,aACZ,WAAY,aACZ,cAAe,cACf,WAAY,aACZ,cAAe,aACf,cAAe,aACf,cAAe,aACf,WAAY,aACZ,SAAU,aACV,WAAY,cACZ,SAAU,cACV,WAAY,cACZ,WAAY,cACZ,SAAU,aACV,SAAU,aACV,SAAU,aACV,SAAU,aACV,WAAY,aACZ,SAAU,aACV,SAAU,aACV,SAAU,aACV,SAAU,aACV,SAAU,aACV,SAAU,aACV,SAAU,aACV,SAAU,aACV,WAAY,cACZ,WAAY,aACZ,WAAY,aACZ,SAAU,aACV,SAAU,aACV,WAAY,aACZ,WAAY,cACZ,WAAY,aACZ,WAAY,cACZ,SAAU,aACV,SAAU,aACV,SAAU,aACV,WAAY,cACZ,WAAY,aACZ,WAAY,aACZ,WAAY,cACZ,SAAU,aACV,WAAY,aACZ,WAAY,aACZ,SAAU,aACV,SAAU,aACV,WAAY,cACZ,SAAU,aACV,SAAU,aACV,SAAU,aACV,WAAY,cACZ,WAAY,aACZ,cAAe,cACf,cAAe,cACf,cAAe,cACf,cAAe,cACf,cAAe,cACf,cAAe,cACf,cAAe,cACf,cAAe,cACf,cAAe,cACf,cAAe,aACf,cAAe,aACf,cAAe,aACf,cAAe,aACf,cAAe,aACf,cAAe,aACf,cAAe,aACf,cAAe,aACf,cAAe,aACf,cAAe,aACf,cAAe,aACf,cAAe,cACf,cAAe,aACf,cAAe,aACf,cAAe,cACf,cAAe,aACf,cAAe,aACf,cAAe,cACf,cAAe,aACf,SAAU,aACV,WAAY,cACZ,SAAU,aACV,WAAY,cACZ,WAAY,cACZ,WAAY,cACZ,WAAY,cACZ,SAAU,aACV,SAAU,aACV,SAAU,aACV,SAAU,aACV,SAAU,aACV,SAAU,aACV,WAAY,cACZ,WAAY,cACZ,SAAU,aACV,WAAY,aACZ,WAAY,cACZ,WAAY,cACZ,WAAY,cACZ,WAAY,aACZ,SAAU,aACV,SAAU,aACV,SAAU,aACV,WAAY,cACZ,WAAY,cACZ,WAAY,cACZ,WAAY,cACZ,SAAU,aACV,SAAU,aACV,SAAU,aACV,SAAU,aACV,WAAY,aACZ,SAAU,aACV,SAAU,aACV,SAAU,aACV,WAAY,aACZ,WAAY,aACZ,SAAU,aACV,SAAU,aACV,WAAY,cACZ,SAAU,aACV,WAAY,cACZ,SAAU,cACV,WAAY,cACZ,SAAU,aACV,SAAU,aACV,SAAU,aACV,WAAY,aACZ,cAAe,cACf,cAAe,cACf,SAAU,aACV,SAAU,aACV,WAAY,cACZ,WAAY,aACZ,WAAY,cACZ,WAAY,cACZ,SAAU,aACV,SAAU,aACV,WAAY,cACZ,SAAU,aACV,WAAY,cACZ,SAAU,aACV,SAAU,aACV,SAAU,aACV,WAAY,cACZ,WAAY,cACZ,WAAY,cACZ,SAAU,aACV,WAAY,cACZ,WAAY,aACZ,WAAY,cACZ,WAAY,aACZ,WAAY,eACZ,SAAU,aACV,WAAY,cACZ,WAAY,cACZ,SAAU,aACV,WAAY,aACZ,SAAU,aACV,SAAU,cACV,SAAU,cACV,WAAY,cACZ,WAAY,cACZ,WAAY,cACZ,WAAY,cACZ,SAAU,aACV,SAAU,aACV,WAAY,cACZ,SAAU,aACV,SAAU,aACV,WAAY,cACZ,SAAU,aACV,SAAU,aACV,SAAU,cACV,SAAU,aACV,SAAU,aACV,SAAU,aACV,SAAU,aACV,WAAY,cACZ,SAAU,aACV,WAAY,cACZ,SAAU,aACV,SAAU,aACV,WAAY,cACZ,SAAU,aACV,SAAU,aACV,WAAY,cACZ,WAAY,cACZ,WAAY,cACZ,SAAU,aACV,SAAU,aACV,SAAU,aACV,WAAY,cACZ,WAAY,aACZ,WAAY,aACZ,SAAU,aACV,WAAY,aACZ,WAAY,aACZ,WAAY,aACZ,SAAU,aACV,SAAU,aACV,SAAU,aACV,SAAU,aACV,SAAU,aACV,WAAY,cACZ,WAAY,cACZ,WAAY,cACZ,WAAY,cACZ,SAAU,aACV,SAAU,aACV,WAAY,aACZ,SAAU,aACV,SAAU,aACV,WAAY,cACZ,WAAY,cACZ,WAAY,cACZ,WAAY,cACZ,WAAY,cACZ,WAAY,cACZ,WAAY,aACZ,WAAY,cACZ,WAAY,cACZ,SAAU,aACV,WAAY,aACZ,SAAU,aACV,WAAY,cACZ,SAAU,aACV,WAAY,cACZ,SAAU,aACV,WAAY,aACZ,WAAY,aACZ,cAAe,cACf,cAAe,cACf,cAAe,cACf,WAAY,aACZ,WAAY,cACZ,SAAU,aACV,SAAU,cACV,SAAU,aACV,SAAU,aACV,SAAU,aACV,WAAY,cACZ,SAAU,aACV,WAAY,cACZ,SAAU,aACV,SAAU,cACV,SAAU,aACV,SAAU,aACV,SAAU,aACV,SAAU,aACV,WAAY,cACZ,SAAU,aACV,SAAU,aACV,SAAU,aACV,WAAY,cACZ,SAAU,aACV,WAAY,aACZ,SAAU,aACV,SAAU,aACV,WAAY,cACZ,WAAY,cACZ,SAAU,aACV,SAAU,aACV,SAAU,aACV,WAAY,cACZ,WAAY,cACZ,SAAU,aACV,WAAY,aACZ,WAAY,aACZ,SAAU,aACV,WAAY,cACZ,SAAU,aACVC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACL,WAAY,cACZ,SAAU,cACVC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,GAAI,aACJC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLz/T,IAAK,cACL0/T,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACL,WAAY,cACZC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACL,WAAY,cACZC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,GAAI,aACJ,QAAS,aACT,UAAW,aACX,QAAS,aACTC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLplV,IAAK,cACLqlV,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACL,WAAY,cACZC,IAAK,cACLC,IAAK,cACL,WAAY,cACZC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,GAAI,aACJC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,GAAI,aACJC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACL,WAAY,cACZC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,GAAI,cACJC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACL,WAAY,cACZC,GAAI,aACJC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACL,WAAY,cACZ,WAAY,cACZC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACL,WAAY,cACZC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,GAAI,aACJC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACL,WAAY,cACZC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACL,WAAY,cACZC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,GAAI,aACJC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACL,WAAY,cACZC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACL,WAAY,cACZC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACL,WAAY,cACZ,WAAY,cACZC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACL,WAAY,cACZC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACL,WAAY,cACZC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACL,WAAY,cACZC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACL,WAAY,cACZC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,GAAI,cACJC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACL,WAAY,cACZC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACL,WAAY,cACZC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,GAAI,aACJC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACL,SAAU,cACV,WAAY,cACZC,IAAK,cACLxtN,IAAK,cACLytN,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACL,WAAY,cACZC,IAAK,cACLC,IAAK,cACL,WAAY,cACZC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,GAAI,aACJC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACL,WAAY,cACZC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACL,WAAY,cACZC,IAAK,cACLC,IAAK,eACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACLC,IAAK,cACL,WAAY,cACZC,IAAK,cACLC,IAAK,cAC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","sources":["webpack://dashjs/./node_modules/base64-js/index.js","webpack://dashjs/./node_modules/buffer/index.js","webpack://dashjs/./node_modules/codem-isoboxer/dist/iso_boxer.js","webpack://dashjs/./node_modules/events/events.js","webpack://dashjs/./node_modules/fast-deep-equal/index.js","webpack://dashjs/./node_modules/ieee754/index.js","webpack://dashjs/./node_modules/imsc/node_modules/sax/lib/sax.js","webpack://dashjs/./node_modules/imsc/src/main/js/doc.js","webpack://dashjs/./node_modules/imsc/src/main/js/html.js","webpack://dashjs/./node_modules/imsc/src/main/js/isd.js","webpack://dashjs/./node_modules/imsc/src/main/js/main.js","webpack://dashjs/./node_modules/imsc/src/main/js/names.js","webpack://dashjs/./node_modules/imsc/src/main/js/styles.js","webpack://dashjs/./node_modules/imsc/src/main/js/utils.js","webpack://dashjs/./node_modules/inherits/inherits_browser.js","webpack://dashjs/./node_modules/path-browserify/index.js","webpack://dashjs/./node_modules/stream-browserify/index.js","webpack://dashjs/./node_modules/stream-browserify/node_modules/readable-stream/errors-browser.js","webpack://dashjs/./node_modules/stream-browserify/node_modules/readable-stream/lib/_stream_duplex.js","webpack://dashjs/./node_modules/stream-browserify/node_modules/readable-stream/lib/_stream_passthrough.js","webpack://dashjs/./node_modules/stream-browserify/node_modules/readable-stream/lib/_stream_readable.js","webpack://dashjs/./node_modules/stream-browserify/node_modules/readable-stream/lib/_stream_transform.js","webpack://dashjs/./node_modules/stream-browserify/node_modules/readable-stream/lib/_stream_writable.js","webpack://dashjs/./node_modules/stream-browserify/node_modules/readable-stream/lib/internal/streams/async_iterator.js","webpack://dashjs/./node_modules/stream-browserify/node_modules/readable-stream/lib/internal/streams/buffer_list.js","webpack://dashjs/./node_modules/stream-browserify/node_modules/readable-stream/lib/internal/streams/destroy.js","webpack://dashjs/./node_modules/stream-browserify/node_modules/readable-stream/lib/internal/streams/end-of-stream.js","webpack://dashjs/./node_modules/stream-browserify/node_modules/readable-stream/lib/internal/streams/from-browser.js","webpack://dashjs/./node_modules/stream-browserify/node_modules/readable-stream/lib/internal/streams/pipeline.js","webpack://dashjs/./node_modules/stream-browserify/node_modules/readable-stream/lib/internal/streams/state.js","webpack://dashjs/./node_modules/stream-browserify/node_modules/readable-stream/lib/internal/streams/stream-browser.js","webpack://dashjs/./node_modules/string_decoder/lib/string_decoder.js","webpack://dashjs/./node_modules/string_decoder/node_modules/safe-buffer/index.js","webpack://dashjs/./node_modules/ua-parser-js/src/ua-parser.js","webpack://dashjs/./node_modules/util-deprecate/browser.js","webpack://dashjs/./src/core/Debug.js","webpack://dashjs/./src/core/EventBus.js","webpack://dashjs/./src/core/FactoryMaker.js","webpack://dashjs/./src/core/Settings.js","webpack://dashjs/./src/core/Utils.js","webpack://dashjs/./src/core/Version.js","webpack://dashjs/./src/core/errors/ErrorsBase.js","webpack://dashjs/./src/core/events/CoreEvents.js","webpack://dashjs/./src/core/events/Events.js","webpack://dashjs/./src/core/events/EventsBase.js","webpack://dashjs/./src/dash/constants/DashConstants.js","webpack://dashjs/./src/dash/vo/UTCTiming.js","webpack://dashjs/../../../src/cta/608/CaptionsLogger.ts","webpack://dashjs/../../../src/cta/608/VerboseLevel.ts","webpack://dashjs/../../../src/cta/608/PenState.ts","webpack://dashjs/../../../src/cta/608/StyledUnicodeChar.ts","webpack://dashjs/../../../../src/cta/608/utils/NR_COLS.ts","webpack://dashjs/../../../../src/cta/608/utils/specialCea608CharsCodes.ts","webpack://dashjs/../../../../src/cta/608/utils/getCharForByte.ts","webpack://dashjs/../../../src/cta/608/Row.ts","webpack://dashjs/../../../../src/cta/608/utils/NR_ROWS.ts","webpack://dashjs/../../../src/cta/608/CaptionScreen.ts","webpack://dashjs/../../../src/cta/608/Cta608Channel.ts","webpack://dashjs/../../../../src/cta/608/utils/backgroundColors.ts","webpack://dashjs/../../../../src/cta/608/utils/hasCmdRepeated.ts","webpack://dashjs/../../../../src/cta/608/utils/numArrayToHexArray.ts","webpack://dashjs/../../../../src/cta/608/utils/rowsHighCh1.ts","webpack://dashjs/../../../../src/cta/608/utils/rowsHighCh2.ts","webpack://dashjs/../../../../src/cta/608/utils/rowsLowCh1.ts","webpack://dashjs/../../../../src/cta/608/utils/rowsLowCh2.ts","webpack://dashjs/../../../../src/cta/608/utils/setLastCmd.ts","webpack://dashjs/../../../src/cta/608/Cta608Parser.ts","webpack://dashjs/../../../../src/cta/608/utils/createCmdHistory.ts","webpack://dashjs/./src/streaming/constants/MetricsConstants.js","webpack://dashjs/./src/streaming/controllers/PlaybackController.js","webpack://dashjs/./src/streaming/vo/FragmentRequest.js","webpack://dashjs/./src/streaming/models/FragmentModel.js","webpack://dashjs/./src/core/errors/Errors.js","webpack://dashjs/./src/streaming/SourceBufferSink.js","webpack://dashjs/./src/streaming/PreBufferSink.js","webpack://dashjs/./src/streaming/utils/InitCache.js","webpack://dashjs/./src/streaming/controllers/BufferController.js","webpack://dashjs/./src/streaming/text/NotFragmentedTextBufferController.js","webpack://dashjs/./src/streaming/controllers/ScheduleController.js","webpack://dashjs/./src/dash/vo/Segment.js","webpack://dashjs/./src/dash/utils/SegmentsUtils.js","webpack://dashjs/./src/dash/controllers/RepresentationController.js","webpack://dashjs/./src/dash/DashHandler.js","webpack://dashjs/./src/streaming/utils/DefaultURLUtils.js","webpack://dashjs/./src/streaming/utils/URLUtils.js","webpack://dashjs/./src/streaming/vo/metrics/PlayList.js","webpack://dashjs/./src/dash/utils/TimelineSegmentsGetter.js","webpack://dashjs/./src/dash/utils/TemplateSegmentsGetter.js","webpack://dashjs/./src/dash/utils/ListSegmentsGetter.js","webpack://dashjs/./src/dash/utils/SegmentBaseGetter.js","webpack://dashjs/./src/dash/controllers/SegmentsController.js","webpack://dashjs/./src/streaming/utils/TimeUtils.js","webpack://dashjs/./src/streaming/vo/MediaInfoSelectionInput.js","webpack://dashjs/./src/streaming/StreamProcessor.js","webpack://dashjs/./src/streaming/vo/DataChunk.js","webpack://dashjs/./src/streaming/net/XHRLoader.js","webpack://dashjs/./src/streaming/net/FetchLoader.js","webpack://dashjs/./src/dash/vo/AdaptationSet.js","webpack://dashjs/./src/dash/vo/BaseURL.js","webpack://dashjs/./src/dash/vo/DescriptorType.js","webpack://dashjs/./src/dash/vo/CMCDParameters.js","webpack://dashjs/./src/dash/vo/ClientDataReporting.js","webpack://dashjs/./src/dash/vo/ContentProtection.js","webpack://dashjs/./src/dash/vo/ContentSteering.js","webpack://dashjs/./src/dash/vo/Event.js","webpack://dashjs/./src/dash/vo/EventStream.js","webpack://dashjs/./src/dash/vo/Mpd.js","webpack://dashjs/./src/dash/vo/MpdLocation.js","webpack://dashjs/./src/dash/vo/PatchLocation.js","webpack://dashjs/./src/dash/vo/Period.js","webpack://dashjs/./src/dash/vo/ProducerReferenceTime.js","webpack://dashjs/./src/dash/vo/Representation.js","webpack://dashjs/./src/dash/models/DashManifestModel.js","webpack://dashjs/../../src/cmcd/CMCD_PARAM.ts","webpack://dashjs/../../src/cta/CmObjectType.ts","webpack://dashjs/../../src/cmcd/CmcdObjectType.ts","webpack://dashjs/../../src/cmcd/CmcdStreamType.ts","webpack://dashjs/../../src/cta/CmStreamType.ts","webpack://dashjs/../../src/cmcd/CmcdStreamingFormat.ts","webpack://dashjs/../../src/cta/CmStreamingFormat.ts","webpack://dashjs/../../src/structuredfield/SfItem.ts","webpack://dashjs/../../../src/structuredfield/utils/DICT.ts","webpack://dashjs/../../../src/structuredfield/utils/throwError.ts","webpack://dashjs/../../../src/structuredfield/serialize/serializeError.ts","webpack://dashjs/../../src/structuredfield/SfToken.ts","webpack://dashjs/../../../src/structuredfield/utils/BARE_ITEM.ts","webpack://dashjs/../../../src/structuredfield/utils/BOOLEAN.ts","webpack://dashjs/../../../src/structuredfield/utils/BYTES.ts","webpack://dashjs/../../../src/structuredfield/utils/INTEGER.ts","webpack://dashjs/../../../src/structuredfield/utils/isInvalidInt.ts","webpack://dashjs/../../../src/structuredfield/serialize/serializeInteger.ts","webpack://dashjs/../../src/utils/roundToEven.ts","webpack://dashjs/../../../src/structuredfield/utils/DECIMAL.ts","webpack://dashjs/../../../src/structuredfield/serialize/serializeDecimal.ts","webpack://dashjs/../../../src/structuredfield/utils/STRING.ts","webpack://dashjs/../../../src/structuredfield/utils/STRING_REGEX.ts","webpack://dashjs/../../../src/cta/utils/symbolToStr.ts","webpack://dashjs/../../../src/structuredfield/utils/TOKEN.ts","webpack://dashjs/../../../src/structuredfield/serialize/serializeToken.ts","webpack://dashjs/../../../src/structuredfield/serialize/serializeBareItem.ts","webpack://dashjs/../../../src/structuredfield/serialize/serializeString.ts","webpack://dashjs/../../../src/structuredfield/serialize/serializeBoolean.ts","webpack://dashjs/../../../src/structuredfield/serialize/serializeDate.ts","webpack://dashjs/../../../src/structuredfield/serialize/serializeByteSequence.ts","webpack://dashjs/../../src/utils/base64encode.ts","webpack://dashjs/../../../src/structuredfield/utils/KEY.ts","webpack://dashjs/../../../src/structuredfield/serialize/serializeKey.ts","webpack://dashjs/../../../src/structuredfield/serialize/serializeParams.ts","webpack://dashjs/../../../src/structuredfield/serialize/serializeItem.ts","webpack://dashjs/../../src/cmcd/CmcdFormatters.ts","webpack://dashjs/../../src/utils/urlToRelativePath.ts","webpack://dashjs/../../src/cmcd/encodeCmcd.ts","webpack://dashjs/../../src/structuredfield/encodeSfDict.ts","webpack://dashjs/../../../src/structuredfield/serialize/serializeDict.ts","webpack://dashjs/../../../src/structuredfield/serialize/serializeInnerList.ts","webpack://dashjs/../../../src/cmcd/utils/processCmcd.ts","webpack://dashjs/../../../src/cta/utils/isValid.ts","webpack://dashjs/../../../src/cta/utils/isTokenField.ts","webpack://dashjs/../../src/cmcd/CMCD_OBJECT.ts","webpack://dashjs/../../src/cmcd/CmcdHeaderField.ts","webpack://dashjs/../../src/cmcd/CMCD_REQUEST.ts","webpack://dashjs/../../src/cmcd/CMCD_SESSION.ts","webpack://dashjs/../../src/cmcd/CMCD_STATUS.ts","webpack://dashjs/../../src/cmcd/CmcdHeaderMap.ts","webpack://dashjs/./src/streaming/models/CmcdModel.js","webpack://dashjs/../../src/cmcd/toCmcdHeaders.ts","webpack://dashjs/../../src/cmsd/CMSD_DYNAMIC.ts","webpack://dashjs/../../src/cmsd/CMSD_STATIC.ts","webpack://dashjs/../../src/cmsd/CmsdObjectType.ts","webpack://dashjs/../../../src/structuredfield/parse/parseError.ts","webpack://dashjs/../../../src/structuredfield/utils/LIST.ts","webpack://dashjs/../../../src/structuredfield/parse/ParsedValue.ts","webpack://dashjs/../../../src/structuredfield/utils/INNER.ts","webpack://dashjs/../../../src/structuredfield/utils/DATE.ts","webpack://dashjs/../../../src/structuredfield/utils/INTEGER_DECIMAL.ts","webpack://dashjs/../../../src/structuredfield/parse/parseIntegerOrDecimal.ts","webpack://dashjs/../../../src/structuredfield/parse/parseBareItem.ts","webpack://dashjs/../../../src/structuredfield/parse/parseString.ts","webpack://dashjs/../../../src/structuredfield/parse/parseBoolean.ts","webpack://dashjs/../../../src/structuredfield/parse/parseByteSequence.ts","webpack://dashjs/../../src/utils/base64decode.ts","webpack://dashjs/../../../src/structuredfield/parse/parseToken.ts","webpack://dashjs/../../../src/structuredfield/parse/parseDate.ts","webpack://dashjs/../../../src/structuredfield/parse/parseKey.ts","webpack://dashjs/../../../src/structuredfield/parse/parseParameters.ts","webpack://dashjs/../../../src/structuredfield/parse/parseItem.ts","webpack://dashjs/../../../src/structuredfield/parse/parseItemOrInnerList.ts","webpack://dashjs/../../../src/structuredfield/parse/parseInnerList.ts","webpack://dashjs/./src/streaming/models/CmsdModel.js","webpack://dashjs/../../src/cmsd/decodeCmsdStatic.ts","webpack://dashjs/../../src/structuredfield/decodeSfDict.ts","webpack://dashjs/../../../src/structuredfield/parse/parseDict.ts","webpack://dashjs/../../src/cmsd/decodeCmsdDynamic.ts","webpack://dashjs/../../src/structuredfield/decodeSfList.ts","webpack://dashjs/../../../src/structuredfield/parse/parseList.ts","webpack://dashjs/./src/streaming/controllers/CommonAccessTokenController.js","webpack://dashjs/./src/streaming/controllers/ClientDataReportingController.js","webpack://dashjs/./src/streaming/controllers/ExtUrlQueryInfoController.js","webpack://dashjs/./src/streaming/vo/CommonMediaRequest.js","webpack://dashjs/./src/streaming/vo/CommonMediaResponse.js","webpack://dashjs/./src/streaming/net/HTTPLoader.js","webpack://dashjs/./src/streaming/net/SchemeLoaderFactory.js","webpack://dashjs/./src/streaming/net/URLLoader.js","webpack://dashjs/./src/streaming/vo/HeadRequest.js","webpack://dashjs/./src/streaming/FragmentLoader.js","webpack://dashjs/./src/streaming/controllers/FragmentController.js","webpack://dashjs/./src/streaming/vo/Thumbnail.js","webpack://dashjs/./src/streaming/vo/ThumbnailTrackInfo.js","webpack://dashjs/./src/streaming/vo/IsoBox.js","webpack://dashjs/./src/streaming/utils/IsoFile.js","webpack://dashjs/./src/streaming/vo/IsoBoxSearchInfo.js","webpack://dashjs/./src/streaming/utils/BoxParser.js","webpack://dashjs/./src/streaming/thumbnail/ThumbnailTracks.js","webpack://dashjs/./src/streaming/thumbnail/ThumbnailController.js","webpack://dashjs/./src/streaming/controllers/BlacklistController.js","webpack://dashjs/./src/streaming/Stream.js","webpack://dashjs/./src/dash/vo/ContentSteeringRequest.js","webpack://dashjs/./src/dash/vo/ContentSteeringResponse.js","webpack://dashjs/./src/dash/controllers/ContentSteeringController.js","webpack://dashjs/./src/streaming/utils/LocationSelector.js","webpack://dashjs/./src/streaming/ManifestUpdater.js","webpack://dashjs/./src/streaming/controllers/TimeSyncController.js","webpack://dashjs/./src/streaming/controllers/MediaSourceController.js","webpack://dashjs/./src/streaming/controllers/EventController.js","webpack://dashjs/./src/streaming/constants/ConformanceViolationConstants.js","webpack://dashjs/./src/streaming/controllers/StreamController.js","webpack://dashjs/./src/streaming/controllers/GapController.js","webpack://dashjs/./src/streaming/controllers/CatchupController.js","webpack://dashjs/./src/dash/controllers/ServiceDescriptionController.js","webpack://dashjs/./node_modules/bcp-47/lib/stringify.js","webpack://dashjs/./node_modules/is-alphabetical/index.js","webpack://dashjs/./node_modules/is-decimal/index.js","webpack://dashjs/./node_modules/is-alphanumerical/index.js","webpack://dashjs/./node_modules/bcp-47/lib/regular.js","webpack://dashjs/./node_modules/bcp-47/lib/normal.js","webpack://dashjs/./node_modules/bcp-47/lib/parse.js","webpack://dashjs/./node_modules/bcp-47-match/index.js","webpack://dashjs/./node_modules/bcp-47-normalize/lib/matches.js","webpack://dashjs/./node_modules/bcp-47-normalize/lib/fields.js","webpack://dashjs/./node_modules/bcp-47-normalize/lib/many.js","webpack://dashjs/./node_modules/bcp-47-normalize/lib/likely.js","webpack://dashjs/./node_modules/bcp-47-normalize/lib/index.js","webpack://dashjs/./src/streaming/controllers/MediaController.js","webpack://dashjs/./src/streaming/models/BaseURLTreeModel.js","webpack://dashjs/./src/streaming/utils/baseUrlResolution/DVBSelector.js","webpack://dashjs/./src/streaming/utils/baseUrlResolution/BasicSelector.js","webpack://dashjs/./src/streaming/utils/baseUrlResolution/ContentSteeringSelector.js","webpack://dashjs/./src/streaming/utils/BaseURLSelector.js","webpack://dashjs/./src/streaming/controllers/BaseURLController.js","webpack://dashjs/./src/streaming/vo/TextRequest.js","webpack://dashjs/./src/streaming/XlinkLoader.js","webpack://dashjs/./src/streaming/controllers/XlinkController.js","webpack://dashjs/./src/dash/parser/objectiron.js","webpack://dashjs/./src/dash/parser/matchers/BaseMatcher.js","webpack://dashjs/./src/dash/parser/matchers/DurationMatcher.js","webpack://dashjs/./src/dash/parser/matchers/DateTimeMatcher.js","webpack://dashjs/./src/dash/parser/matchers/NumericMatcher.js","webpack://dashjs/./src/dash/parser/matchers/LangMatcher.js","webpack://dashjs/./src/dash/parser/maps/CommonProperty.js","webpack://dashjs/./src/dash/parser/maps/MapNode.js","webpack://dashjs/./src/dash/parser/maps/RepresentationBaseValuesMap.js","webpack://dashjs/./src/dash/parser/maps/SegmentValuesMap.js","webpack://dashjs/./externals/tXml.js","webpack://dashjs/./src/dash/parser/DashParser.js","webpack://dashjs/./src/streaming/ManifestLoader.js","webpack://dashjs/./src/streaming/utils/ErrorHandler.js","webpack://dashjs/./src/streaming/utils/CapabilitiesFilter.js","webpack://dashjs/./src/streaming/vo/URIFragmentData.js","webpack://dashjs/./src/streaming/models/URIFragmentModel.js","webpack://dashjs/./src/streaming/models/ManifestModel.js","webpack://dashjs/./src/streaming/models/MediaPlayerModel.js","webpack://dashjs/./src/streaming/rules/SwitchRequest.js","webpack://dashjs/./src/streaming/rules/abr/ThroughputRule.js","webpack://dashjs/./src/streaming/rules/abr/InsufficientBufferRule.js","webpack://dashjs/./src/streaming/rules/abr/AbandonRequestsRule.js","webpack://dashjs/./src/streaming/rules/abr/DroppedFramesRule.js","webpack://dashjs/./src/streaming/rules/abr/SwitchHistoryRule.js","webpack://dashjs/./src/streaming/rules/abr/BolaRule.js","webpack://dashjs/./src/streaming/rules/abr/L2ARule.js","webpack://dashjs/./src/streaming/rules/abr/lolp/LearningAbrController.js","webpack://dashjs/./src/streaming/rules/abr/lolp/QoeInfo.js","webpack://dashjs/./src/streaming/rules/abr/lolp/LoLpQoEEvaluator.js","webpack://dashjs/./src/streaming/rules/abr/lolp/LoLpWeightSelector.js","webpack://dashjs/./src/streaming/rules/abr/lolp/LoLpRule.js","webpack://dashjs/./src/streaming/rules/abr/ABRRulesCollection.js","webpack://dashjs/./src/streaming/rules/RulesContext.js","webpack://dashjs/./src/streaming/rules/SwitchRequestHistory.js","webpack://dashjs/./src/streaming/rules/DroppedFramesHistory.js","webpack://dashjs/./src/streaming/controllers/AbrController.js","webpack://dashjs/./src/streaming/models/VideoModel.js","webpack://dashjs/./src/streaming/utils/DOMStorage.js","webpack://dashjs/./src/dash/SegmentBaseLoader.js","webpack://dashjs/./src/streaming/utils/EBMLParser.js","webpack://dashjs/./src/dash/WebmSegmentBaseLoader.js","webpack://dashjs/./src/dash/controllers/SegmentBaseController.js","webpack://dashjs/./src/dash/vo/MediaInfo.js","webpack://dashjs/./src/dash/vo/StreamInfo.js","webpack://dashjs/./src/dash/vo/ManifestInfo.js","webpack://dashjs/./src/dash/vo/SimpleXPath.js","webpack://dashjs/./src/dash/vo/PatchOperation.js","webpack://dashjs/./src/dash/models/PatchManifestModel.js","webpack://dashjs/../../src/utils/utf8ArrayToStr.ts","webpack://dashjs/../../../src/id3/util/utf8.ts","webpack://dashjs/../../../src/id3/util/decodeId3Frame.ts","webpack://dashjs/../../../src/id3/util/decodeId3PrivFrame.ts","webpack://dashjs/../../../src/id3/util/decodeId3UrlFrame.ts","webpack://dashjs/../../../src/id3/util/decodeId3ImageFrame.ts","webpack://dashjs/../../../src/id3/util/toArrayBuffer.ts","webpack://dashjs/../../../src/id3/util/decodeId3TextFrame.ts","webpack://dashjs/../../../src/id3/util/readId3Size.ts","webpack://dashjs/../../../src/id3/util/getId3FrameData.ts","webpack://dashjs/../../../src/id3/util/isId3Footer.ts","webpack://dashjs/../../../src/id3/util/isId3Header.ts","webpack://dashjs/./src/dash/DashAdapter.js","webpack://dashjs/../../src/id3/getId3Frames.ts","webpack://dashjs/./src/dash/utils/Round10.js","webpack://dashjs/./src/streaming/vo/MetricsList.js","webpack://dashjs/./src/streaming/vo/metrics/RepresentationSwitch.js","webpack://dashjs/./src/streaming/vo/metrics/BufferLevel.js","webpack://dashjs/./src/streaming/vo/metrics/BufferState.js","webpack://dashjs/./src/streaming/vo/metrics/DVRInfo.js","webpack://dashjs/./src/streaming/vo/metrics/DroppedFrames.js","webpack://dashjs/./src/streaming/vo/metrics/ManifestUpdate.js","webpack://dashjs/./src/streaming/vo/metrics/SchedulingInfo.js","webpack://dashjs/./src/streaming/vo/metrics/RequestsQueue.js","webpack://dashjs/./src/streaming/models/MetricsModel.js","webpack://dashjs/./src/dash/DashMetrics.js","webpack://dashjs/./src/dash/utils/TimelineConverter.js","webpack://dashjs/./externals/base64.js","webpack://dashjs/./src/streaming/vo/TextTrackInfo.js","webpack://dashjs/./src/streaming/text/EmbeddedTextHtmlRender.js","webpack://dashjs/../../../../src/cta/608/utils/seiHelpers.ts","webpack://dashjs/../../../src/cta/608/extractCta608DataFromSample.ts","webpack://dashjs/./src/streaming/text/TextSourceBuffer.js","webpack://dashjs/./src/streaming/text/TextTracks.js","webpack://dashjs/./src/streaming/utils/VTTParser.js","webpack://dashjs/./src/streaming/utils/VttCustomRenderingParser.js","webpack://dashjs/./src/streaming/utils/TTMLParser.js","webpack://dashjs/./src/streaming/text/DVBFonts.js","webpack://dashjs/./src/streaming/text/TextController.js","webpack://dashjs/./src/streaming/models/ThroughputModel.js","webpack://dashjs/./src/streaming/controllers/ThroughputController.js","webpack://dashjs/./src/streaming/MediaPlayer.js","webpack://dashjs/./src/streaming/MediaPlayerEvents.js","webpack://dashjs/./src/streaming/constants/Constants.js","webpack://dashjs/./src/streaming/constants/ProtectionConstants.js","webpack://dashjs/./src/streaming/metrics/MetricsReportingEvents.js","webpack://dashjs/./src/streaming/models/CustomParametersModel.js","webpack://dashjs/./src/streaming/protection/ProtectionEvents.js","webpack://dashjs/./src/streaming/protection/errors/ProtectionErrors.js","webpack://dashjs/./src/streaming/utils/Capabilities.js","webpack://dashjs/./src/streaming/utils/CustomTimeRanges.js","webpack://dashjs/./src/streaming/utils/ObjectUtils.js","webpack://dashjs/./src/streaming/utils/SupervisorTools.js","webpack://dashjs/./src/streaming/vo/DashJSError.js","webpack://dashjs/./src/streaming/vo/metrics/HTTPRequest.js","webpack://dashjs/webpack/bootstrap","webpack://dashjs/webpack/runtime/amd options","webpack://dashjs/webpack/runtime/define property getters","webpack://dashjs/webpack/runtime/global","webpack://dashjs/webpack/runtime/hasOwnProperty shorthand","webpack://dashjs/webpack/runtime/make namespace object","webpack://dashjs/./index_mediaplayerOnly.js"],"sourcesContent":["'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nvar K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    var arr = new Uint8Array(1)\n    var proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  var buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  var valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  var b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(\n      value[Symbol.toPrimitive]('string'), encodingOrOffset, length\n    )\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  var length = byteLength(string, encoding) | 0\n  var buf = createBuffer(length)\n\n  var actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  var buf = createBuffer(length)\n  for (var i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    var copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  var buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    var buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        Buffer.from(buf).copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  var len = string.length\n  var mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  var strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (var i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    var len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nvar hexSliceLookupTable = (function () {\n  var alphabet = '0123456789abcdef'\n  var table = new Array(256)\n  for (var i = 0; i < 16; ++i) {\n    var i16 = i * 16\n    for (var j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n","/*! codem-isoboxer v0.3.10 https://github.com/madebyhiro/codem-isoboxer/blob/master/LICENSE.txt */\nvar ISOBoxer = {};\n\nISOBoxer.parseBuffer = function(arrayBuffer) {\n  return new ISOFile(arrayBuffer).parse();\n};\n\nISOBoxer.addBoxProcessor = function(type, parser) {\n  if (typeof type !== 'string' || typeof parser !== 'function') {\n    return;\n  }\n  ISOBox.prototype._boxProcessors[type] = parser;\n};\n\nISOBoxer.createFile = function() {\n  return new ISOFile();\n};\n\n// See ISOBoxer.append() for 'pos' parameter syntax\nISOBoxer.createBox = function(type, parent, pos) {\n  var newBox = ISOBox.create(type);\n  if (parent) {\n    parent.append(newBox, pos);\n  }\n  return newBox;\n};\n\n// See ISOBoxer.append() for 'pos' parameter syntax\nISOBoxer.createFullBox = function(type, parent, pos) {\n  var newBox = ISOBoxer.createBox(type, parent, pos);\n  newBox.version = 0;\n  newBox.flags = 0;\n  return newBox;\n};\n\nISOBoxer.Utils = {};\nISOBoxer.Utils.dataViewToString = function(dataView, encoding) {\n  var impliedEncoding = encoding || 'utf-8';\n  if (typeof TextDecoder !== 'undefined') {\n    return new TextDecoder(impliedEncoding).decode(dataView);\n  }\n  var a = [];\n  var i = 0;\n\n  if (impliedEncoding === 'utf-8') {\n    /* The following algorithm is essentially a rewrite of the UTF8.decode at\n    http://bannister.us/weblog/2007/simple-base64-encodedecode-javascript/\n    */\n\n    while (i < dataView.byteLength) {\n      var c = dataView.getUint8(i++);\n      if (c < 0x80) {\n        // 1-byte character (7 bits)\n      } else if (c < 0xe0) {\n        // 2-byte character (11 bits)\n        c = (c & 0x1f) << 6;\n        c |= (dataView.getUint8(i++) & 0x3f);\n      } else if (c < 0xf0) {\n        // 3-byte character (16 bits)\n        c = (c & 0xf) << 12;\n        c |= (dataView.getUint8(i++) & 0x3f) << 6;\n        c |= (dataView.getUint8(i++) & 0x3f);\n      } else {\n        // 4-byte character (21 bits)\n        c = (c & 0x7) << 18;\n        c |= (dataView.getUint8(i++) & 0x3f) << 12;\n        c |= (dataView.getUint8(i++) & 0x3f) << 6;\n        c |= (dataView.getUint8(i++) & 0x3f);\n      }\n      a.push(String.fromCharCode(c));\n    }\n  } else { // Just map byte-by-byte (probably wrong)\n    while (i < dataView.byteLength) {\n      a.push(String.fromCharCode(dataView.getUint8(i++)));\n    }\n  }\n  return a.join('');\n};\n\nISOBoxer.Utils.utf8ToByteArray = function(string) {\n  // Only UTF-8 encoding is supported by TextEncoder\n  var u, i;\n  if (typeof TextEncoder !== 'undefined') {\n    u = new TextEncoder().encode(string);\n  } else {\n    u = [];\n    for (i = 0; i < string.length; ++i) {\n      var c = string.charCodeAt(i);\n      if (c < 0x80) {\n        u.push(c);\n      } else if (c < 0x800) {\n        u.push(0xC0 | (c >> 6));\n        u.push(0x80 | (63 & c));\n      } else if (c < 0x10000) {\n        u.push(0xE0 | (c >> 12));\n        u.push(0x80 | (63 & (c >> 6)));\n        u.push(0x80 | (63 & c));\n      } else {\n        u.push(0xF0 | (c >> 18));\n        u.push(0x80 | (63 & (c >> 12)));\n        u.push(0x80 | (63 & (c >> 6)));\n        u.push(0x80 | (63 & c));\n      }\n    }\n  }\n  return u;\n};\n\n// Method to append a box in the list of child boxes\n// The 'pos' parameter can be either:\n//   - (number) a position index at which to insert the new box\n//   - (string) the type of the box after which to insert the new box\n//   - (object) the box after which to insert the new box\nISOBoxer.Utils.appendBox = function(parent, box, pos) {\n  box._offset = parent._cursor.offset;\n  box._root = (parent._root ? parent._root : parent);\n  box._raw = parent._raw;\n  box._parent = parent;\n\n  if (pos === -1) {\n    // The new box is a sub-box of the parent but not added in boxes array,\n    // for example when the new box is set as an entry (see dref and stsd for example)\n    return;\n  }\n\n  if (pos === undefined || pos === null) {\n    parent.boxes.push(box);\n    return;\n  }\n\n  var index = -1,\n      type;\n\n  if (typeof pos === \"number\") {\n    index = pos;\n  } else {\n    if (typeof pos === \"string\") {\n      type = pos;\n    } else if (typeof pos === \"object\" && pos.type) {\n      type = pos.type;\n    } else {\n      parent.boxes.push(box);\n      return;\n    }\n\n    for (var i = 0; i < parent.boxes.length; i++) {\n      if (type === parent.boxes[i].type) {\n        index = i + 1;\n        break;\n      }\n    }\n  }\n  parent.boxes.splice(index, 0, box);\n};\n\nif (typeof exports !== 'undefined') {\n  exports.parseBuffer     = ISOBoxer.parseBuffer;\n  exports.addBoxProcessor = ISOBoxer.addBoxProcessor;\n  exports.createFile      = ISOBoxer.createFile;\n  exports.createBox       = ISOBoxer.createBox;\n  exports.createFullBox   = ISOBoxer.createFullBox;\n  exports.Utils           = ISOBoxer.Utils;\n}\n\nISOBoxer.Cursor = function(initialOffset) {\n  this.offset = (typeof initialOffset == 'undefined' ? 0 : initialOffset);\n};\n\nvar ISOFile = function(arrayBuffer) {\n  this._cursor = new ISOBoxer.Cursor();\n  this.boxes = [];\n  if (arrayBuffer) {\n    this._raw = new DataView(arrayBuffer);\n  }\n};\n\nISOFile.prototype.fetch = function(type) {\n  var result = this.fetchAll(type, true);\n  return (result.length ? result[0] : null);\n};\n\nISOFile.prototype.fetchAll = function(type, returnEarly) {\n  var result = [];\n  ISOFile._sweep.call(this, type, result, returnEarly);\n  return result;\n};\n\nISOFile.prototype.parse = function() {\n  this._cursor.offset = 0;\n  this.boxes = [];\n  while (this._cursor.offset < this._raw.byteLength) {\n    var box = ISOBox.parse(this);\n\n    // Box could not be parsed\n    if (typeof box.type === 'undefined') break;\n\n    this.boxes.push(box);\n  }\n  return this;\n};\n\nISOFile._sweep = function(type, result, returnEarly) {\n  if (this.type && this.type == type) result.push(this);\n  for (var box in this.boxes) {\n    if (result.length && returnEarly) return;\n    ISOFile._sweep.call(this.boxes[box], type, result, returnEarly);\n  }\n};\n\nISOFile.prototype.write = function() {\n\n  var length = 0,\n      i;\n\n  for (i = 0; i < this.boxes.length; i++) {\n    length += this.boxes[i].getLength(false);\n  }\n\n  var bytes = new Uint8Array(length);\n  this._rawo = new DataView(bytes.buffer);\n  this.bytes = bytes;\n  this._cursor.offset = 0;\n\n  for (i = 0; i < this.boxes.length; i++) {\n    this.boxes[i].write();\n  }\n\n  return bytes.buffer;\n};\n\nISOFile.prototype.append = function(box, pos) {\n  ISOBoxer.Utils.appendBox(this, box, pos);\n};\nvar ISOBox = function() {\n  this._cursor = new ISOBoxer.Cursor();\n};\n\nISOBox.parse = function(parent) {\n  var newBox = new ISOBox();\n  newBox._offset = parent._cursor.offset;\n  newBox._root = (parent._root ? parent._root : parent);\n  newBox._raw = parent._raw;\n  newBox._parent = parent;\n  newBox._parseBox();\n  parent._cursor.offset = newBox._raw.byteOffset + newBox._raw.byteLength;\n  return newBox;\n};\n\nISOBox.create = function(type) {\n  var newBox = new ISOBox();\n  newBox.type = type;\n  newBox.boxes = [];\n  return newBox;\n};\n\nISOBox.prototype._boxContainers = ['dinf', 'edts', 'mdia', 'meco', 'mfra', 'minf', 'moof', 'moov', 'mvex', 'stbl', 'strk', 'traf', 'trak', 'tref', 'udta', 'vttc', 'sinf', 'schi', 'encv', 'enca','meta','grpl','prsl'];\n\nISOBox.prototype._boxProcessors = {};\n\n///////////////////////////////////////////////////////////////////////////////////////////////////\n// Generic read/write functions\n\nISOBox.prototype._procField = function (name, type, size) {\n  if (this._parsing) {\n    this[name] = this._readField(type, size);\n  }\n  else {\n    this._writeField(type, size, this[name]);\n  }\n};\n\nISOBox.prototype._procFieldArray = function (name, length, type, size) {\n  var i;\n  if (this._parsing) {\n    this[name] = [];\n    for (i = 0; i < length; i++) {\n      this[name][i] = this._readField(type, size);\n    }\n  }\n  else {\n    for (i = 0; i < this[name].length; i++) {\n      this._writeField(type, size, this[name][i]);\n    }\n  }\n};\n\nISOBox.prototype._procFullBox = function() {\n  this._procField('version', 'uint', 8);\n  this._procField('flags', 'uint', 24);\n};\n\nISOBox.prototype._procEntries = function(name, length, fn) {\n  var i;\n  if (this._parsing) {\n    this[name] = [];\n    for (i = 0; i < length; i++) {\n      this[name].push({});\n      fn.call(this, this[name][i]);\n    }\n  }\n  else {\n    for (i = 0; i < length; i++) {\n      fn.call(this, this[name][i]);\n    }\n  }\n};\n\nISOBox.prototype._procSubEntries = function(entry, name, length, fn) {\n  var i;\n  if (this._parsing) {\n    entry[name] = [];\n    for (i = 0; i < length; i++) {\n      entry[name].push({});\n      fn.call(this, entry[name][i]);\n    }\n  }\n  else {\n    for (i = 0; i < length; i++) {\n      fn.call(this, entry[name][i]);\n    }\n  }\n};\n\nISOBox.prototype._procEntryField = function (entry, name, type, size) {\n  if (this._parsing) {\n    entry[name] = this._readField(type, size);\n  }\n  else {\n    this._writeField(type, size, entry[name]);\n  }\n};\n\nISOBox.prototype._procSubBoxes = function(name, length) {\n  var i;\n  if (this._parsing) {\n    this[name] = [];\n    for (i = 0; i < length; i++) {\n      this[name].push(ISOBox.parse(this));\n    }\n  }\n  else {\n    for (i = 0; i < length; i++) {\n      if (this._rawo) {\n        this[name][i].write();\n      } else {\n        this.size += this[name][i].getLength();\n      }\n    }\n  }\n};\n\n///////////////////////////////////////////////////////////////////////////////////////////////////\n// Read/parse functions\n\nISOBox.prototype._readField = function(type, size) {\n  switch (type) {\n    case 'uint':\n      return this._readUint(size);\n    case 'int':\n      return this._readInt(size);\n    case 'template':\n      return this._readTemplate(size);\n    case 'string':\n      return (size === -1) ? this._readTerminatedString() : this._readString(size);\n    case 'data':\n      return this._readData(size);\n    case 'utf8':\n      return this._readUTF8String();\n    case 'utf8string':\n      return this._readUTF8TerminatedString();\n    default:\n      return -1;\n  }\n};\n\nISOBox.prototype._readInt = function(size) {\n  var result = null,\n      offset = this._cursor.offset - this._raw.byteOffset;\n  switch(size) {\n  case 8:\n    result = this._raw.getInt8(offset);\n    break;\n  case 16:\n    result = this._raw.getInt16(offset);\n    break;\n  case 32:\n    result = this._raw.getInt32(offset);\n    break;\n  case 64:\n    // Warning: JavaScript cannot handle 64-bit integers natively.\n    // This will give unexpected results for integers >= 2^53\n    var s1 = this._raw.getInt32(offset);\n    var s2 = this._raw.getInt32(offset + 4);\n    result = (s1 * Math.pow(2,32)) + s2;\n    break;\n  }\n  this._cursor.offset += (size >> 3);\n  return result;\n};\n\nISOBox.prototype._readUint = function(size) {\n  var result = null,\n      offset = this._cursor.offset - this._raw.byteOffset,\n      s1, s2;\n  switch(size) {\n  case 8:\n    result = this._raw.getUint8(offset);\n    break;\n  case 16:\n    result = this._raw.getUint16(offset);\n    break;\n  case 24:\n    s1 = this._raw.getUint16(offset);\n    s2 = this._raw.getUint8(offset + 2);\n    result = (s1 << 8) + s2;\n    break;\n  case 32:\n    result = this._raw.getUint32(offset);\n    break;\n  case 64:\n    // Warning: JavaScript cannot handle 64-bit integers natively.\n    // This will give unexpected results for integers >= 2^53\n    s1 = this._raw.getUint32(offset);\n    s2 = this._raw.getUint32(offset + 4);\n    result = (s1 * Math.pow(2,32)) + s2;\n    break;\n  }\n  this._cursor.offset += (size >> 3);\n  return result;\n};\n\nISOBox.prototype._readString = function(length) {\n  var str = '';\n  for (var c = 0; c < length; c++) {\n    var char = this._readUint(8);\n    str += String.fromCharCode(char);\n  }\n  return str;\n};\n\nISOBox.prototype._readTemplate = function(size) {\n  var pre = this._readUint(size / 2);\n  var post = this._readUint(size / 2);\n  return pre + (post / Math.pow(2, size / 2));\n};\n\nISOBox.prototype._readTerminatedString = function() {\n  var str = '';\n  while (this._cursor.offset - this._offset < this._raw.byteLength) {\n    var char = this._readUint(8);\n    if (char === 0) break;\n    str += String.fromCharCode(char);\n  }\n  return str;\n};\n\nISOBox.prototype._readData = function(size) {\n  var length = (size > 0) ? size : (this._raw.byteLength - (this._cursor.offset - this._offset));\n  if (length > 0) {\n    var data = new Uint8Array(this._raw.buffer, this._cursor.offset, length);\n\n    this._cursor.offset += length;\n    return data;\n  }\n  else {\n    return null;\n  }\n};\n\nISOBox.prototype._readUTF8String = function() {\n  var length = this._raw.byteLength - (this._cursor.offset - this._offset);\n  var data = null;\n  if (length > 0) {\n    data = new DataView(this._raw.buffer, this._cursor.offset, length);\n    this._cursor.offset += length;\n  }\n \n  return data ? ISOBoxer.Utils.dataViewToString(data) : data;\n};\n\nISOBox.prototype._readUTF8TerminatedString = function() {\n  var length = this._raw.byteLength - (this._cursor.offset - this._offset);\n  var data = null;\n  if (length > 0) {\n    data = new DataView(this._raw.buffer, this._cursor.offset, length);\n\n    var l;\n    for (l=0; l<length; l++)\n      if (data.getUint8(l) === 0)\n        break;\n\n    // remap the Dataview with the actual length\n    data = new DataView(this._raw.buffer, this._cursor.offset, l);\n    this._cursor.offset += Math.min(l+1, length);\n  }\n\n  return data ? ISOBoxer.Utils.dataViewToString(data) : data;\n};\n\nISOBox.prototype._parseBox = function() {\n  this._parsing = true;\n  this._cursor.offset = this._offset;\n\n  // return immediately if there are not enough bytes to read the header\n  if (this._offset + 8 > this._raw.buffer.byteLength) {\n    this._root._incomplete = true;\n    return;\n  }\n\n  this._procField('size', 'uint', 32);\n  this._procField('type', 'string', 4);\n\n  if (this.size === 1)      { this._procField('largesize', 'uint', 64); }\n  if (this.type === 'uuid') { this._procFieldArray('usertype', 16, 'uint', 8); }\n\n  switch(this.size) {\n  case 0:\n    // Size zero indicates last box in the file. Consume remaining buffer.\n    this._raw = new DataView(this._raw.buffer, this._offset);\n    break;\n  case 1:\n    if (this._offset + this.size > this._raw.buffer.byteLength) {\n      this._incomplete = true;\n      this._root._incomplete = true;\n    } else {\n      this._raw = new DataView(this._raw.buffer, this._offset, this.largesize);\n    }\n    break;\n  default:\n    if (this._offset + this.size > this._raw.buffer.byteLength) {\n      this._incomplete = true;\n      this._root._incomplete = true;\n    } else {\n      this._raw = new DataView(this._raw.buffer, this._offset, this.size);\n    }\n  }\n\n  // additional parsing\n  if (!this._incomplete) {\n    if (this._boxProcessors[this.type]) {\n      this._boxProcessors[this.type].call(this);\n    }\n    if (this._boxContainers.indexOf(this.type) !== -1) {\n      this._parseContainerBox();\n    } else{\n      // Unknown box => read and store box content\n      this._data = this._readData();\n    }\n  }\n};\n\nISOBox.prototype._parseFullBox = function() {\n  this.version = this._readUint(8);\n  this.flags = this._readUint(24);\n};\n\nISOBox.prototype._parseContainerBox = function() {\n  this.boxes = [];\n  while (this._cursor.offset - this._raw.byteOffset < this._raw.byteLength) {\n    this.boxes.push(ISOBox.parse(this));\n  }\n};\n\n///////////////////////////////////////////////////////////////////////////////////////////////////\n// Write functions\n\nISOBox.prototype.append = function(box, pos) {\n  ISOBoxer.Utils.appendBox(this, box, pos);\n};\n\nISOBox.prototype.getLength = function() {\n  this._parsing = false;\n  this._rawo = null;\n\n  this.size = 0;\n  this._procField('size', 'uint', 32);\n  this._procField('type', 'string', 4);\n\n  if (this.size === 1)      { this._procField('largesize', 'uint', 64); }\n  if (this.type === 'uuid') { this._procFieldArray('usertype', 16, 'uint', 8); }\n\n  if (this._boxProcessors[this.type]) {\n    this._boxProcessors[this.type].call(this);\n  }\n\n  if (this._boxContainers.indexOf(this.type) !== -1) {\n    for (var i = 0; i < this.boxes.length; i++) {\n      this.size += this.boxes[i].getLength();\n    }\n  } \n\n  if (this._data) {\n    this._writeData(this._data);\n  }\n\n  return this.size;\n};\n\nISOBox.prototype.write = function() {\n  this._parsing = false;\n  this._cursor.offset = this._parent._cursor.offset;\n\n  switch(this.size) {\n  case 0:\n    this._rawo = new DataView(this._parent._rawo.buffer, this._cursor.offset, (this.parent._rawo.byteLength - this._cursor.offset));\n    break;\n  case 1:\n      this._rawo = new DataView(this._parent._rawo.buffer, this._cursor.offset, this.largesize);\n    break;\n  default:\n      this._rawo = new DataView(this._parent._rawo.buffer, this._cursor.offset, this.size);\n  }\n\n  this._procField('size', 'uint', 32);\n  this._procField('type', 'string', 4);\n\n  if (this.size === 1)      { this._procField('largesize', 'uint', 64); }\n  if (this.type === 'uuid') { this._procFieldArray('usertype', 16, 'uint', 8); }\n\n  if (this._boxProcessors[this.type]) {\n    this._boxProcessors[this.type].call(this);\n  }\n\n  if (this._boxContainers.indexOf(this.type) !== -1) {\n    for (var i = 0; i < this.boxes.length; i++) {\n      this.boxes[i].write();\n    }\n  } \n\n  if (this._data) {\n    this._writeData(this._data);\n  }\n\n  this._parent._cursor.offset += this.size;\n\n  return this.size;\n};\n\nISOBox.prototype._writeInt = function(size, value) {\n  if (this._rawo) {\n    var offset = this._cursor.offset - this._rawo.byteOffset;\n    switch(size) {\n    case 8:\n      this._rawo.setInt8(offset, value);\n      break;\n    case 16:\n      this._rawo.setInt16(offset, value);\n      break;\n    case 32:\n      this._rawo.setInt32(offset, value);\n      break;\n    case 64:\n      // Warning: JavaScript cannot handle 64-bit integers natively.\n      // This will give unexpected results for integers >= 2^53\n      var s1 = Math.floor(value / Math.pow(2,32));\n      var s2 = value - (s1 * Math.pow(2,32));\n      this._rawo.setUint32(offset, s1);\n      this._rawo.setUint32(offset + 4, s2);\n      break;\n    }\n    this._cursor.offset += (size >> 3);\n  } else {\n    this.size += (size >> 3);\n  }\n};\n\nISOBox.prototype._writeUint = function(size, value) {\n\n  if (this._rawo) {\n    var offset = this._cursor.offset - this._rawo.byteOffset,\n        s1, s2;\n    switch(size) {\n    case 8:\n      this._rawo.setUint8(offset, value);\n      break;\n    case 16:\n      this._rawo.setUint16(offset, value);\n      break;\n    case 24:\n      s1 = (value & 0xFFFF00) >> 8;\n      s2 = (value & 0x0000FF);\n      this._rawo.setUint16(offset, s1);\n      this._rawo.setUint8(offset + 2, s2);\n      break;\n    case 32:\n      this._rawo.setUint32(offset, value);\n      break;\n    case 64:\n      // Warning: JavaScript cannot handle 64-bit integers natively.\n      // This will give unexpected results for integers >= 2^53\n      s1 = Math.floor(value / Math.pow(2,32));\n      s2 = value - (s1 * Math.pow(2,32));\n      this._rawo.setUint32(offset, s1);\n      this._rawo.setUint32(offset + 4, s2);\n      break;\n    }\n    this._cursor.offset += (size >> 3);\n  } else {\n    this.size += (size >> 3);\n  }\n};\n\nISOBox.prototype._writeString = function(size, str) {\n  for (var c = 0; c < size; c++) {\n    this._writeUint(8, str.charCodeAt(c));\n  }\n};\n\nISOBox.prototype._writeTerminatedString = function(str) {\n  if (str.length === 0) {\n    return;\n  }\n  for (var c = 0; c < str.length; c++) {\n    this._writeUint(8, str.charCodeAt(c));\n  }\n  this._writeUint(8, 0);\n};\n\nISOBox.prototype._writeTemplate = function(size, value) {\n  var pre = Math.floor(value);\n  var post = (value - pre) * Math.pow(2, size / 2);\n  this._writeUint(size / 2, pre);\n  this._writeUint(size / 2, post);\n};\n\nISOBox.prototype._writeData = function(data) {\n  var i;\n  //data to copy\n  if (data) {\n    if (this._rawo) {\n      //Array and Uint8Array has also to be managed\n      if (data instanceof Array) {\n        var offset = this._cursor.offset - this._rawo.byteOffset;\n        for (var i = 0; i < data.length; i++) {\n          this._rawo.setInt8(offset + i, data[i]);\n        }\n        this._cursor.offset += data.length;\n      } \n\n      if (data instanceof Uint8Array) {\n        this._root.bytes.set(data, this._cursor.offset);\n        this._cursor.offset += data.length;\n      }\n\n    } else {\n      //nothing to copy only size to compute\n      this.size += data.length;\n    }\n  }\n};\n\nISOBox.prototype._writeUTF8String = function(string) {\n  var u = ISOBoxer.Utils.utf8ToByteArray(string);\n  if (this._rawo) {\n    var dataView = new DataView(this._rawo.buffer, this._cursor.offset, u.length);\n    for (var i = 0; i < u.length; i++) {\n      dataView.setUint8(i, u[i]);\n    }\n  } else {\n    this.size += u.length;\n  }\n};\n\nISOBox.prototype._writeField = function(type, size, value) {\n  switch (type) {\n  case 'uint':\n    this._writeUint(size, value);\n    break;\n  case 'int':\n    this._writeInt(size, value);\n    break;\n  case 'template':\n    this._writeTemplate(size, value);\n    break;\n  case 'string':\n      if (size == -1) {\n        this._writeTerminatedString(value);\n      } else {\n        this._writeString(size, value);\n      }\n      break;\n  case 'data':\n    this._writeData(value);\n    break;\n  case 'utf8':\n    this._writeUTF8String(value);\n    break;\n  default:\n    break;\n  }\n};\n\n// ISO/IEC 14496-12:202x - 12.2.8 Audio rendering indication box\nISOBox.prototype._boxProcessors['ardi'] = function() {\n  this._procFullBox();\n  this._procField('audio_rendering_indication', 'uint', 8);\n};\n\n// ISO/IEC 14496-15:2014 - avc1/2/3/4, hev1, hvc1, encv\nISOBox.prototype._boxProcessors['avc1'] =\nISOBox.prototype._boxProcessors['avc2'] =\nISOBox.prototype._boxProcessors['avc3'] =\nISOBox.prototype._boxProcessors['avc4'] =\nISOBox.prototype._boxProcessors['hvc1'] =\nISOBox.prototype._boxProcessors['hev1'] =\nISOBox.prototype._boxProcessors['encv'] = function() {\n  // SampleEntry fields\n  this._procFieldArray('reserved1', 6,    'uint', 8);\n  this._procField('data_reference_index', 'uint', 16);\n  // VisualSampleEntry fields\n  this._procField('pre_defined1',         'uint',     16);\n  this._procField('reserved2',            'uint',     16);\n  this._procFieldArray('pre_defined2', 3, 'uint',     32);\n  this._procField('width',                'uint',     16);\n  this._procField('height',               'uint',     16);\n  this._procField('horizresolution',      'template', 32);\n  this._procField('vertresolution',       'template', 32);\n  this._procField('reserved3',            'uint',     32);\n  this._procField('frame_count',          'uint',     16);\n  this._procFieldArray('compressorname', 32,'uint',    8);\n  this._procField('depth',                'uint',     16);\n  this._procField('pre_defined3',         'int',      16);\n  // Codec-specific fields\n  this._procField('config', 'data', -1);\n};\n\n// ISO/IEC 14496-12:2012 - 8.6.1.3 Composition Time To Sample Box\nISOBox.prototype._boxProcessors['ctts'] = function() {\n  this._procFullBox();\n  this._procField('entry_count', 'uint', 32);\n  this._procEntries('entries', this.entry_count, function(entry) {\n    this._procEntryField(entry, 'sample_count', 'uint', 32);\n    this._procEntryField(entry, 'sample_offset', (this.version === 1) ? 'int' : 'uint', 32);\n  });\n};\n\n// ISO/IEC 14496-12:2012 - 8.7.2 Data Reference Box\nISOBox.prototype._boxProcessors['dref'] = function() {\n  this._procFullBox();\n  this._procField('entry_count', 'uint', 32);\n  this._procSubBoxes('entries', this.entry_count);\n};\n\n// ISO/IEC 14496-12:202x - 8.4.6 Extended language tag\nISOBox.prototype._boxProcessors['elng'] = function() {\n  this._procFullBox();\n  this._procField('extended_language', 'utf8string');\n};\n\n// ISO/IEC 14496-12:2012 - 8.6.6 Edit List Box\nISOBox.prototype._boxProcessors['elst'] = function() {\n  this._procFullBox();\n  this._procField('entry_count', 'uint', 32);\n  this._procEntries('entries', this.entry_count, function(entry) {\n    this._procEntryField(entry, 'segment_duration',     'uint', (this.version === 1) ? 64 : 32);\n    this._procEntryField(entry, 'media_time',           'int',  (this.version === 1) ? 64 : 32);\n    this._procEntryField(entry, 'media_rate_integer',   'int',  16);\n    this._procEntryField(entry, 'media_rate_fraction',  'int',  16);\n  });\n};\n\n// ISO/IEC 23009-1:2014 - 5.10.3.3 Event Message Box\nISOBox.prototype._boxProcessors['emsg'] = function() {\n  this._procFullBox();\n  if (this.version == 1) {\n    this._procField('timescale',                'uint',   32);\n    this._procField('presentation_time',        'uint',   64);\n    this._procField('event_duration',           'uint',   32);\n    this._procField('id',                       'uint',   32);\n    this._procField('scheme_id_uri',            'string', -1);\n    this._procField('value',                    'string', -1);\n  } else {\n    this._procField('scheme_id_uri',            'string', -1);\n    this._procField('value',                    'string', -1);\n    this._procField('timescale',                'uint',   32);\n    this._procField('presentation_time_delta',  'uint',   32);\n    this._procField('event_duration',           'uint',   32);\n    this._procField('id',                       'uint',   32);\n  }\n  this._procField('message_data',             'data',   -1);\n};\n// ISO/IEC 14496-12:2012 - 8.1.2 Free Space Box\nISOBox.prototype._boxProcessors['free'] = ISOBox.prototype._boxProcessors['skip'] = function() {\n  this._procField('data', 'data', -1);\n};\n\n// ISO/IEC 14496-12:2012 - 8.12.2 Original Format Box\nISOBox.prototype._boxProcessors['frma'] = function() {\n  this._procField('data_format', 'uint', 32);\n};\n// ISO/IEC 14496-12:2012 - 4.3 File Type Box / 8.16.2 Segment Type Box\nISOBox.prototype._boxProcessors['ftyp'] =\nISOBox.prototype._boxProcessors['styp'] = function() {\n  this._procField('major_brand', 'string', 4);\n  this._procField('minor_version', 'uint', 32);\n  var nbCompatibleBrands = -1;\n  if (this._parsing) {\n    nbCompatibleBrands = (this._raw.byteLength - (this._cursor.offset - this._raw.byteOffset)) / 4;\n  }\n  this._procFieldArray('compatible_brands', nbCompatibleBrands, 'string', 4);\n};\n\n// ISO/IEC 14496-12:2012 - 8.4.3 Handler Reference Box\nISOBox.prototype._boxProcessors['hdlr'] = function() {\n  this._procFullBox();\n  this._procField('pre_defined',      'uint',   32);\n  this._procField('handler_type',     'string', 4);\n  this._procFieldArray('reserved', 3, 'uint', 32);\n  this._procField('name',             'string', -1);\n};\n\n// ISO/IEC 14496-12:2012 - 9.1.4.1 Identified media data box\nISOBox.prototype._boxProcessors['imda'] = function() {\n  this._procField('imda_identifier', 'uint', 32);\n  // until the end of the box\n  this._procField('data', 'data', -1);\n};\n\n// ISO/IEC 14496-12:202x - 8.10.4 Track kind box\nISOBox.prototype._boxProcessors['kind'] = function() {\n  this._procFullBox();\n\n  this._procField('schemeURI', 'utf8string');\n  this._procField('value', 'utf8string');\n};\n\n// ISO/IEC 14496-12:202x - 8.10.5 Label box\nISOBox.prototype._boxProcessors['labl'] = function() {\n  this._procFullBox();\n  this.is_group_label = (this.flags & 0x1) != 0;\n  this._procField('label_id', 'uint', 16);\n  this._procField('language', 'utf8string');\n  this._procField('label', 'utf8string');\n};\n\n// ISO/IEC 14496-12:2012 - 8.1.1 Media Data Box\nISOBox.prototype._boxProcessors['mdat'] = function() {\n  this._procField('data', 'data', -1);\n};\n\n// ISO/IEC 14496-12:2012 - 8.4.2 Media Header Box\nISOBox.prototype._boxProcessors['mdhd'] = function() {\n  this._procFullBox();\n  this._procField('creation_time',      'uint', (this.version == 1) ? 64 : 32);\n  this._procField('modification_time',  'uint', (this.version == 1) ? 64 : 32);\n  this._procField('timescale',          'uint', 32);\n  this._procField('duration',           'uint', (this.version == 1) ? 64 : 32);\n  if (!this._parsing && typeof this.language === 'string') {\n    // In case of writing and language has been set as a string, then convert it into char codes array\n    this.language = ((this.language.charCodeAt(0) - 0x60) << 10) |\n                    ((this.language.charCodeAt(1) - 0x60) << 5) |\n                    ((this.language.charCodeAt(2) - 0x60));\n  }\n  this._procField('language',           'uint', 16);\n  if (this._parsing) {\n    this.language = String.fromCharCode(((this.language >> 10) & 0x1F) + 0x60,\n                                        ((this.language >> 5) & 0x1F) + 0x60,\n                                        (this.language & 0x1F) + 0x60);\n  }\n  this._procField('pre_defined',        'uint', 16);\n};\n\n// ISO/IEC 14496-12:2012 - 8.8.2 Movie Extends Header Box\nISOBox.prototype._boxProcessors['mehd'] = function() {\n  this._procFullBox();\n  this._procField('fragment_duration', 'uint', (this.version == 1) ? 64 : 32);\n};\n\n// ISO/IEC 14496-12:202x - 8.11.1 Meta box\nISOBox.prototype._boxProcessors['meta'] = function() {\n  this._procFullBox();\n\n  /* rest of the boxes will be read by _parseContainerBox */\n};\n\n// ISO/IEC 14496-12:2012 - 8.8.5 Movie Fragment Header Box\nISOBox.prototype._boxProcessors['mfhd'] = function() {\n  this._procFullBox();\n  this._procField('sequence_number', 'uint', 32);\n};\n\n// ISO/IEC 14496-12:2012 - 8.8.11 Movie Fragment Random Access Box\nISOBox.prototype._boxProcessors['mfro'] = function() {\n  this._procFullBox();\n  this._procField('mfra_size', 'uint', 32); // Called mfra_size to distinguish from the normal \"size\" attribute of a box\n};\n\n\n// ISO/IEC 14496-12:2012 - 8.5.2.2 mp4a box (use AudioSampleEntry definition and naming)\nISOBox.prototype._boxProcessors['mp4a'] = ISOBox.prototype._boxProcessors['enca'] = function() {\n  // SampleEntry fields\n  this._procFieldArray('reserved1', 6,    'uint', 8);\n  this._procField('data_reference_index', 'uint', 16);\n  // AudioSampleEntry fields\n  this._procFieldArray('reserved2', 2,    'uint', 32);\n  this._procField('channelcount',         'uint', 16);\n  this._procField('samplesize',           'uint', 16);\n  this._procField('pre_defined',          'uint', 16);\n  this._procField('reserved3',            'uint', 16);\n  this._procField('samplerate',           'template', 32);\n  // ESDescriptor fields\n  this._procField('esds',                 'data', -1);\n};\n\n// ISO/IEC 14496-12:2012 - 8.2.2 Movie Header Box\nISOBox.prototype._boxProcessors['mvhd'] = function() {\n  this._procFullBox();\n  this._procField('creation_time',      'uint',     (this.version == 1) ? 64 : 32);\n  this._procField('modification_time',  'uint',     (this.version == 1) ? 64 : 32);\n  this._procField('timescale',          'uint',     32);\n  this._procField('duration',           'uint',     (this.version == 1) ? 64 : 32);\n  this._procField('rate',               'template', 32);\n  this._procField('volume',             'template', 16);\n  this._procField('reserved1',          'uint',  16);\n  this._procFieldArray('reserved2', 2,  'uint',     32);\n  this._procFieldArray('matrix', 9,     'template', 32);\n  this._procFieldArray('pre_defined', 6,'uint',   32);\n  this._procField('next_track_ID',      'uint',     32);\n};\n\n// ISO/IEC 14496-30:2014 - WebVTT Cue Payload Box.\nISOBox.prototype._boxProcessors['payl'] = function() {\n  this._procField('cue_text', 'utf8');\n};\n\n// ISO/IEC 14496-12:2012 - 8.16.5 Producer Reference Time\nISOBox.prototype._boxProcessors['prft'] = function() {\n  this._procFullBox();\n  this._procField('reference_track_ID', 'uint', 32);\n  this._procField('ntp_timestamp_sec', 'uint', 32);\n  this._procField('ntp_timestamp_frac', 'uint', 32);\n  this._procField('media_time', 'uint', (this.version == 1) ? 64 : 32);\n};\n\n// ISO/IEC 14496-12:202x - 8.18.4.1 Preselection group box\nISOBox.prototype._boxProcessors['prsl'] = function() {\n  this._procFullBox();\n  this._procField('group_id', 'uint', 32);\n  this._procField('num_entities_in_group', 'uint', 32);\n  this._procEntries('entities', this.num_entities_in_group, function(entry) {\n    this._procEntryField(entry, 'entity_id', 'uint', 32);\n  });\n  if (this.flags & 0x1000) this._procField('preselection_tag', 'utf8string');\n  if (this.flags & 0x2000) this._procField('selection_priority', 'uint', 8);\n  if (this.flags & 0x4000) this._procField('interleaving_tag', 'utf8string');\n\n  /* rest of the boxes will be read by _parseContainerBox */\n};\n\n//ISO/IEC 23001-7:2011 - 8.1 Protection System Specific Header Box\nISOBox.prototype._boxProcessors['pssh'] = function() {\n  this._procFullBox();\n  \n  this._procFieldArray('SystemID', 16, 'uint', 8);\n  this._procField('DataSize', 'uint', 32);\n  this._procFieldArray('Data', this.DataSize, 'uint', 8);\n};\n// ISO/IEC 14496-12:2012 - 8.12.5 Scheme Type Box\nISOBox.prototype._boxProcessors['schm'] = function() {\n    this._procFullBox();\n    \n    this._procField('scheme_type', 'uint', 32);\n    this._procField('scheme_version', 'uint', 32);\n\n    if (this.flags & 0x000001) {\n        this._procField('scheme_uri', 'string', -1);\n    }\n};\n// ISO/IEC 14496-12:2012 - 8.6.4.1 sdtp box \nISOBox.prototype._boxProcessors['sdtp'] = function() {\n  this._procFullBox();\n\n  var sample_count = -1;\n  if (this._parsing) {\n    sample_count = (this._raw.byteLength - (this._cursor.offset - this._raw.byteOffset));\n  }\n\n  this._procFieldArray('sample_dependency_table', sample_count, 'uint', 8);\n};\n\n// ISO/IEC 14496-12:2012 - 8.16.3 Segment Index Box\nISOBox.prototype._boxProcessors['sidx'] = function() {\n  this._procFullBox();\n  this._procField('reference_ID', 'uint', 32);\n  this._procField('timescale', 'uint', 32);\n  this._procField('earliest_presentation_time', 'uint', (this.version == 1) ? 64 : 32);\n  this._procField('first_offset', 'uint', (this.version == 1) ? 64 : 32);\n  this._procField('reserved', 'uint', 16);\n  this._procField('reference_count', 'uint', 16);\n  this._procEntries('references', this.reference_count, function(entry) {\n    if (!this._parsing) {\n      entry.reference  = (entry.reference_type  & 0x00000001) << 31;\n      entry.reference |= (entry.referenced_size & 0x7FFFFFFF);\n      entry.sap  = (entry.starts_with_SAP & 0x00000001) << 31;\n      entry.sap |= (entry.SAP_type        & 0x00000003) << 28;\n      entry.sap |= (entry.SAP_delta_time  & 0x0FFFFFFF);\n    }\n    this._procEntryField(entry, 'reference', 'uint', 32);\n    this._procEntryField(entry, 'subsegment_duration', 'uint', 32);\n    this._procEntryField(entry, 'sap', 'uint', 32);\n    if (this._parsing) {\n      entry.reference_type = (entry.reference >> 31) & 0x00000001;\n      entry.referenced_size = entry.reference & 0x7FFFFFFF;\n      entry.starts_with_SAP  = (entry.sap >> 31) & 0x00000001;\n      entry.SAP_type = (entry.sap >> 28) & 0x00000007;\n      entry.SAP_delta_time = (entry.sap  & 0x0FFFFFFF);\n    }\n  });\n};\n\n// ISO/IEC 14496-12:2012 - 8.4.5.3 Sound Media Header Box\nISOBox.prototype._boxProcessors['smhd'] = function() {\n  this._procFullBox();\n  this._procField('balance',  'uint', 16);\n  this._procField('reserved', 'uint', 16);\n};\n\n// ISO/IEC 14496-12:2012 - 8.16.4 Subsegment Index Box\nISOBox.prototype._boxProcessors['ssix'] = function() {\n  this._procFullBox();\n  this._procField('subsegment_count', 'uint', 32);\n  this._procEntries('subsegments', this.subsegment_count, function(subsegment) {\n    this._procEntryField(subsegment, 'ranges_count', 'uint', 32);\n    this._procSubEntries(subsegment, 'ranges', subsegment.ranges_count, function(range) {\n      this._procEntryField(range, 'level', 'uint', 8);\n      this._procEntryField(range, 'range_size', 'uint', 24);\n    });\n  });\n};\n\n// ISO/IEC 14496-12:2012 - 8.5.2 Sample Description Box\nISOBox.prototype._boxProcessors['stsd'] = function() {\n  this._procFullBox();\n  this._procField('entry_count', 'uint', 32);\n  this._procSubBoxes('entries', this.entry_count);\n};\n\n// ISO/IEC 14496-30:2014 - WebVTT Cue Settings Box.\nISOBox.prototype._boxProcessors['sttg'] = function() {\n    this._procField('settings', 'utf8');\n};\n\n// ISO/IEC 14496-12:2012 - 8.6.1.2 Decoding Time To Sample Box\nISOBox.prototype._boxProcessors['stts'] = function() {\n  this._procFullBox();\n  this._procField('entry_count', 'uint', 32);\n  this._procEntries('entries', this.entry_count, function(entry) {\n    this._procEntryField(entry, 'sample_count', 'uint', 32);\n    this._procEntryField(entry, 'sample_delta', 'uint', 32);\n  });\n};\n\n// ISO/IEC 14496-12:2015 - 8.7.7 Sub-Sample Information Box\nISOBox.prototype._boxProcessors['subs'] = function () {\n  this._procFullBox();\n  this._procField('entry_count', 'uint', 32);\n  this._procEntries('entries', this.entry_count, function(entry) {\n    this._procEntryField(entry, 'sample_delta', 'uint', 32);\n    this._procEntryField(entry, 'subsample_count', 'uint', 16);\n    this._procSubEntries(entry, 'subsamples', entry.subsample_count, function(subsample) {\n      this._procEntryField(subsample, 'subsample_size', 'uint', (this.version === 1) ? 32 : 16);\n      this._procEntryField(subsample, 'subsample_priority', 'uint', 8);\n      this._procEntryField(subsample, 'discardable', 'uint', 8);\n      this._procEntryField(subsample, 'codec_specific_parameters', 'uint', 32);\n    });\n  });\n};\n\n//ISO/IEC 23001-7:2011 - 8.2 Track Encryption Box\nISOBox.prototype._boxProcessors['tenc'] = function() {\n    this._procFullBox();\n\n    this._procField('default_IsEncrypted', 'uint', 24);\n    this._procField('default_IV_size', 'uint', 8);\n    this._procFieldArray('default_KID', 16,    'uint', 8);\n };\n\n// ISO/IEC 14496-12:2012 - 8.8.12 Track Fragmnent Decode Time\nISOBox.prototype._boxProcessors['tfdt'] = function() {\n  this._procFullBox();\n  this._procField('baseMediaDecodeTime', 'uint', (this.version == 1) ? 64 : 32);\n};\n\n// ISO/IEC 14496-12:2012 - 8.8.7 Track Fragment Header Box\nISOBox.prototype._boxProcessors['tfhd'] = function() {\n  this._procFullBox();\n  this._procField('track_ID', 'uint', 32);\n  if (this.flags & 0x01) this._procField('base_data_offset',          'uint', 64);\n  if (this.flags & 0x02) this._procField('sample_description_offset', 'uint', 32);\n  if (this.flags & 0x08) this._procField('default_sample_duration',   'uint', 32);\n  if (this.flags & 0x10) this._procField('default_sample_size',       'uint', 32);\n  if (this.flags & 0x20) this._procField('default_sample_flags',      'uint', 32);\n};\n\n// ISO/IEC 14496-12:2012 - 8.8.10 Track Fragment Random Access Box\nISOBox.prototype._boxProcessors['tfra'] = function() {\n  this._procFullBox();\n  this._procField('track_ID', 'uint', 32);\n  if (!this._parsing) {\n    this.reserved = 0;\n    this.reserved |= (this.length_size_of_traf_num  & 0x00000030) << 4;\n    this.reserved |= (this.length_size_of_trun_num  & 0x0000000C) << 2;\n    this.reserved |= (this.length_size_of_sample_num  & 0x00000003);\n  }\n  this._procField('reserved', 'uint', 32);\n  if (this._parsing) {\n    this.length_size_of_traf_num = (this.reserved & 0x00000030) >> 4;\n    this.length_size_of_trun_num = (this.reserved & 0x0000000C) >> 2;\n    this.length_size_of_sample_num = (this.reserved & 0x00000003);\n  }\n  this._procField('number_of_entry', 'uint', 32);\n  this._procEntries('entries', this.number_of_entry, function(entry) {\n    this._procEntryField(entry, 'time', 'uint', (this.version === 1) ? 64 : 32);\n    this._procEntryField(entry, 'moof_offset', 'uint', (this.version === 1) ? 64 : 32);\n    this._procEntryField(entry, 'traf_number', 'uint', (this.length_size_of_traf_num + 1) * 8);\n    this._procEntryField(entry, 'trun_number', 'uint', (this.length_size_of_trun_num + 1) * 8);\n    this._procEntryField(entry, 'sample_number', 'uint', (this.length_size_of_sample_num + 1) * 8);\n  });\n};\n\n// ISO/IEC 14496-12:2012 - 8.3.2 Track Header Box\nISOBox.prototype._boxProcessors['tkhd'] = function() {\n  this._procFullBox();\n  this._procField('creation_time',      'uint',     (this.version == 1) ? 64 : 32);\n  this._procField('modification_time',  'uint',     (this.version == 1) ? 64 : 32);\n  this._procField('track_ID',           'uint',     32);\n  this._procField('reserved1',          'uint',     32);\n  this._procField('duration',           'uint',     (this.version == 1) ? 64 : 32);\n  this._procFieldArray('reserved2', 2,  'uint',     32);\n  this._procField('layer',              'uint',     16);\n  this._procField('alternate_group',    'uint',     16);\n  this._procField('volume',             'template', 16);\n  this._procField('reserved3',          'uint',     16);\n  this._procFieldArray('matrix', 9,     'template', 32);\n  this._procField('width',              'template', 32);\n  this._procField('height',             'template', 32);\n};\n\n// ISO/IEC 14496-12:2012 - 8.8.3 Track Extends Box\nISOBox.prototype._boxProcessors['trex'] = function() {\n  this._procFullBox();\n  this._procField('track_ID',                         'uint', 32);\n  this._procField('default_sample_description_index', 'uint', 32);\n  this._procField('default_sample_duration',          'uint', 32);\n  this._procField('default_sample_size',              'uint', 32);\n  this._procField('default_sample_flags',             'uint', 32);\n};\n\n// ISO/IEC 14496-12:2012 - 8.8.8 Track Run Box\n// Note: the 'trun' box has a direct relation to the 'tfhd' box for defaults.\n// These defaults are not set explicitly here, but are left to resolve for the user.\nISOBox.prototype._boxProcessors['trun'] = function() {\n  this._procFullBox();\n  this._procField('sample_count', 'uint', 32);\n  if (this.flags & 0x1) this._procField('data_offset', 'int', 32);\n  if (this.flags & 0x4) this._procField('first_sample_flags', 'uint', 32);\n  this._procEntries('samples', this.sample_count, function(sample) {\n    if (this.flags & 0x100) this._procEntryField(sample, 'sample_duration', 'uint', 32);\n    if (this.flags & 0x200) this._procEntryField(sample, 'sample_size', 'uint', 32);\n    if (this.flags & 0x400) this._procEntryField(sample, 'sample_flags', 'uint', 32);\n    if (this.flags & 0x800) this._procEntryField(sample, 'sample_composition_time_offset', (this.version === 1) ? 'int' : 'uint',  32);\n  });\n};\n\n// ISO/IEC 14496-12:2012 - 8.7.2 Data Reference Box\nISOBox.prototype._boxProcessors['url '] = ISOBox.prototype._boxProcessors['urn '] = function() {\n  this._procFullBox();\n  if (this.type === 'urn ') {\n    this._procField('name', 'string', -1);\n  }\n  this._procField('location', 'string', -1);\n};\n\n// ISO/IEC 14496-30:2014 - WebVTT Source Label Box\nISOBox.prototype._boxProcessors['vlab'] = function() {\n  this._procField('source_label', 'utf8');\n};\n\n// ISO/IEC 14496-12:2012 - 8.4.5.2 Video Media Header Box\nISOBox.prototype._boxProcessors['vmhd'] = function() {\n  this._procFullBox();\n  this._procField('graphicsmode', 'uint', 16);\n  this._procFieldArray('opcolor', 3, 'uint', 16);\n};\n\n// ISO/IEC 14496-30:2014 - WebVTT Configuration Box\nISOBox.prototype._boxProcessors['vttC'] = function() {\n  this._procField('config', 'utf8');\n};\n\n// ISO/IEC 14496-30:2014 - WebVTT Empty Sample Box\nISOBox.prototype._boxProcessors['vtte'] = function() {\n  // Nothing should happen here.\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\nmodule.exports.once = once;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      checkListener(listener);\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      checkListener(listener);\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction once(emitter, name) {\n  return new Promise(function (resolve, reject) {\n    function errorListener(err) {\n      emitter.removeListener(name, resolver);\n      reject(err);\n    }\n\n    function resolver() {\n      if (typeof emitter.removeListener === 'function') {\n        emitter.removeListener('error', errorListener);\n      }\n      resolve([].slice.call(arguments));\n    };\n\n    eventTargetAgnosticAddListener(emitter, name, resolver, { once: true });\n    if (name !== 'error') {\n      addErrorHandlerIfEventEmitter(emitter, errorListener, { once: true });\n    }\n  });\n}\n\nfunction addErrorHandlerIfEventEmitter(emitter, handler, flags) {\n  if (typeof emitter.on === 'function') {\n    eventTargetAgnosticAddListener(emitter, 'error', handler, flags);\n  }\n}\n\nfunction eventTargetAgnosticAddListener(emitter, name, listener, flags) {\n  if (typeof emitter.on === 'function') {\n    if (flags.once) {\n      emitter.once(name, listener);\n    } else {\n      emitter.on(name, listener);\n    }\n  } else if (typeof emitter.addEventListener === 'function') {\n    // EventTarget does not have `error` event semantics like Node\n    // EventEmitters, we do not listen for `error` events here.\n    emitter.addEventListener(name, function wrapListener(arg) {\n      // IE does not have builtin `{ once: true }` support so we\n      // have to do it manually.\n      if (flags.once) {\n        emitter.removeEventListener(name, wrapListener);\n      }\n      listener(arg);\n    });\n  } else {\n    throw new TypeError('The \"emitter\" argument must be of type EventEmitter. Received type ' + typeof emitter);\n  }\n}\n","'use strict';\n\n// do not edit .js files directly - edit src/index.jst\n\n\n\nmodule.exports = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n\n    var length, i, keys;\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;)\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      var key = keys[i];\n\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  return a!==a && b!==b;\n};\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n",";(function (sax) { // wrapper for non-node envs\n  sax.parser = function (strict, opt) { return new SAXParser(strict, opt) }\n  sax.SAXParser = SAXParser\n  sax.SAXStream = SAXStream\n  sax.createStream = createStream\n\n  // When we pass the MAX_BUFFER_LENGTH position, start checking for buffer overruns.\n  // When we check, schedule the next check for MAX_BUFFER_LENGTH - (max(buffer lengths)),\n  // since that's the earliest that a buffer overrun could occur.  This way, checks are\n  // as rare as required, but as often as necessary to ensure never crossing this bound.\n  // Furthermore, buffers are only tested at most once per write(), so passing a very\n  // large string into write() might have undesirable effects, but this is manageable by\n  // the caller, so it is assumed to be safe.  Thus, a call to write() may, in the extreme\n  // edge case, result in creating at most one complete copy of the string passed in.\n  // Set to Infinity to have unlimited buffers.\n  sax.MAX_BUFFER_LENGTH = 64 * 1024\n\n  var buffers = [\n    'comment', 'sgmlDecl', 'textNode', 'tagName', 'doctype',\n    'procInstName', 'procInstBody', 'entity', 'attribName',\n    'attribValue', 'cdata', 'script'\n  ]\n\n  sax.EVENTS = [\n    'text',\n    'processinginstruction',\n    'sgmldeclaration',\n    'doctype',\n    'comment',\n    'opentagstart',\n    'attribute',\n    'opentag',\n    'closetag',\n    'opencdata',\n    'cdata',\n    'closecdata',\n    'error',\n    'end',\n    'ready',\n    'script',\n    'opennamespace',\n    'closenamespace'\n  ]\n\n  function SAXParser (strict, opt) {\n    if (!(this instanceof SAXParser)) {\n      return new SAXParser(strict, opt)\n    }\n\n    var parser = this\n    clearBuffers(parser)\n    parser.q = parser.c = ''\n    parser.bufferCheckPosition = sax.MAX_BUFFER_LENGTH\n    parser.opt = opt || {}\n    parser.opt.lowercase = parser.opt.lowercase || parser.opt.lowercasetags\n    parser.looseCase = parser.opt.lowercase ? 'toLowerCase' : 'toUpperCase'\n    parser.tags = []\n    parser.closed = parser.closedRoot = parser.sawRoot = false\n    parser.tag = parser.error = null\n    parser.strict = !!strict\n    parser.noscript = !!(strict || parser.opt.noscript)\n    parser.state = S.BEGIN\n    parser.strictEntities = parser.opt.strictEntities\n    parser.ENTITIES = parser.strictEntities ? Object.create(sax.XML_ENTITIES) : Object.create(sax.ENTITIES)\n    parser.attribList = []\n\n    // namespaces form a prototype chain.\n    // it always points at the current tag,\n    // which protos to its parent tag.\n    if (parser.opt.xmlns) {\n      parser.ns = Object.create(rootNS)\n    }\n\n    // mostly just for error reporting\n    parser.trackPosition = parser.opt.position !== false\n    if (parser.trackPosition) {\n      parser.position = parser.line = parser.column = 0\n    }\n    emit(parser, 'onready')\n  }\n\n  if (!Object.create) {\n    Object.create = function (o) {\n      function F () {}\n      F.prototype = o\n      var newf = new F()\n      return newf\n    }\n  }\n\n  if (!Object.keys) {\n    Object.keys = function (o) {\n      var a = []\n      for (var i in o) if (o.hasOwnProperty(i)) a.push(i)\n      return a\n    }\n  }\n\n  function checkBufferLength (parser) {\n    var maxAllowed = Math.max(sax.MAX_BUFFER_LENGTH, 10)\n    var maxActual = 0\n    for (var i = 0, l = buffers.length; i < l; i++) {\n      var len = parser[buffers[i]].length\n      if (len > maxAllowed) {\n        // Text/cdata nodes can get big, and since they're buffered,\n        // we can get here under normal conditions.\n        // Avoid issues by emitting the text node now,\n        // so at least it won't get any bigger.\n        switch (buffers[i]) {\n          case 'textNode':\n            closeText(parser)\n            break\n\n          case 'cdata':\n            emitNode(parser, 'oncdata', parser.cdata)\n            parser.cdata = ''\n            break\n\n          case 'script':\n            emitNode(parser, 'onscript', parser.script)\n            parser.script = ''\n            break\n\n          default:\n            error(parser, 'Max buffer length exceeded: ' + buffers[i])\n        }\n      }\n      maxActual = Math.max(maxActual, len)\n    }\n    // schedule the next check for the earliest possible buffer overrun.\n    var m = sax.MAX_BUFFER_LENGTH - maxActual\n    parser.bufferCheckPosition = m + parser.position\n  }\n\n  function clearBuffers (parser) {\n    for (var i = 0, l = buffers.length; i < l; i++) {\n      parser[buffers[i]] = ''\n    }\n  }\n\n  function flushBuffers (parser) {\n    closeText(parser)\n    if (parser.cdata !== '') {\n      emitNode(parser, 'oncdata', parser.cdata)\n      parser.cdata = ''\n    }\n    if (parser.script !== '') {\n      emitNode(parser, 'onscript', parser.script)\n      parser.script = ''\n    }\n  }\n\n  SAXParser.prototype = {\n    end: function () { end(this) },\n    write: write,\n    resume: function () { this.error = null; return this },\n    close: function () { return this.write(null) },\n    flush: function () { flushBuffers(this) }\n  }\n\n  var Stream\n  try {\n    Stream = require('stream').Stream\n  } catch (ex) {\n    Stream = function () {}\n  }\n\n  var streamWraps = sax.EVENTS.filter(function (ev) {\n    return ev !== 'error' && ev !== 'end'\n  })\n\n  function createStream (strict, opt) {\n    return new SAXStream(strict, opt)\n  }\n\n  function SAXStream (strict, opt) {\n    if (!(this instanceof SAXStream)) {\n      return new SAXStream(strict, opt)\n    }\n\n    Stream.apply(this)\n\n    this._parser = new SAXParser(strict, opt)\n    this.writable = true\n    this.readable = true\n\n    var me = this\n\n    this._parser.onend = function () {\n      me.emit('end')\n    }\n\n    this._parser.onerror = function (er) {\n      me.emit('error', er)\n\n      // if didn't throw, then means error was handled.\n      // go ahead and clear error, so we can write again.\n      me._parser.error = null\n    }\n\n    this._decoder = null\n\n    streamWraps.forEach(function (ev) {\n      Object.defineProperty(me, 'on' + ev, {\n        get: function () {\n          return me._parser['on' + ev]\n        },\n        set: function (h) {\n          if (!h) {\n            me.removeAllListeners(ev)\n            me._parser['on' + ev] = h\n            return h\n          }\n          me.on(ev, h)\n        },\n        enumerable: true,\n        configurable: false\n      })\n    })\n  }\n\n  SAXStream.prototype = Object.create(Stream.prototype, {\n    constructor: {\n      value: SAXStream\n    }\n  })\n\n  SAXStream.prototype.write = function (data) {\n    if (typeof Buffer === 'function' &&\n      typeof Buffer.isBuffer === 'function' &&\n      Buffer.isBuffer(data)) {\n      if (!this._decoder) {\n        var SD = require('string_decoder').StringDecoder\n        this._decoder = new SD('utf8')\n      }\n      data = this._decoder.write(data)\n    }\n\n    this._parser.write(data.toString())\n    this.emit('data', data)\n    return true\n  }\n\n  SAXStream.prototype.end = function (chunk) {\n    if (chunk && chunk.length) {\n      this.write(chunk)\n    }\n    this._parser.end()\n    return true\n  }\n\n  SAXStream.prototype.on = function (ev, handler) {\n    var me = this\n    if (!me._parser['on' + ev] && streamWraps.indexOf(ev) !== -1) {\n      me._parser['on' + ev] = function () {\n        var args = arguments.length === 1 ? [arguments[0]] : Array.apply(null, arguments)\n        args.splice(0, 0, ev)\n        me.emit.apply(me, args)\n      }\n    }\n\n    return Stream.prototype.on.call(me, ev, handler)\n  }\n\n  // character classes and tokens\n  var whitespace = '\\r\\n\\t '\n\n  // this really needs to be replaced with character classes.\n  // XML allows all manner of ridiculous numbers and digits.\n  var number = '0124356789'\n  var letter = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n\n  // (Letter | \"_\" | \":\")\n  var quote = '\\'\"'\n  var attribEnd = whitespace + '>'\n  var CDATA = '[CDATA['\n  var DOCTYPE = 'DOCTYPE'\n  var XML_NAMESPACE = 'http://www.w3.org/XML/1998/namespace'\n  var XMLNS_NAMESPACE = 'http://www.w3.org/2000/xmlns/'\n  var rootNS = { xml: XML_NAMESPACE, xmlns: XMLNS_NAMESPACE }\n\n  // turn all the string character sets into character class objects.\n  whitespace = charClass(whitespace)\n  number = charClass(number)\n  letter = charClass(letter)\n\n  // http://www.w3.org/TR/REC-xml/#NT-NameStartChar\n  // This implementation works on strings, a single character at a time\n  // as such, it cannot ever support astral-plane characters (10000-EFFFF)\n  // without a significant breaking change to either this  parser, or the\n  // JavaScript language.  Implementation of an emoji-capable xml parser\n  // is left as an exercise for the reader.\n  var nameStart = /[:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/\n\n  var nameBody = /[:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\u00B7\\u0300-\\u036F\\u203F-\\u2040\\.\\d-]/\n\n  var entityStart = /[#:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/\n  var entityBody = /[#:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\u00B7\\u0300-\\u036F\\u203F-\\u2040\\.\\d-]/\n\n  quote = charClass(quote)\n  attribEnd = charClass(attribEnd)\n\n  function charClass (str) {\n    return str.split('').reduce(function (s, c) {\n      s[c] = true\n      return s\n    }, {})\n  }\n\n  function isRegExp (c) {\n    return Object.prototype.toString.call(c) === '[object RegExp]'\n  }\n\n  function is (charclass, c) {\n    return isRegExp(charclass) ? !!c.match(charclass) : charclass[c]\n  }\n\n  function not (charclass, c) {\n    return !is(charclass, c)\n  }\n\n  var S = 0\n  sax.STATE = {\n    BEGIN: S++, // leading byte order mark or whitespace\n    BEGIN_WHITESPACE: S++, // leading whitespace\n    TEXT: S++, // general stuff\n    TEXT_ENTITY: S++, // &amp and such.\n    OPEN_WAKA: S++, // <\n    SGML_DECL: S++, // <!BLARG\n    SGML_DECL_QUOTED: S++, // <!BLARG foo \"bar\n    DOCTYPE: S++, // <!DOCTYPE\n    DOCTYPE_QUOTED: S++, // <!DOCTYPE \"//blah\n    DOCTYPE_DTD: S++, // <!DOCTYPE \"//blah\" [ ...\n    DOCTYPE_DTD_QUOTED: S++, // <!DOCTYPE \"//blah\" [ \"foo\n    COMMENT_STARTING: S++, // <!-\n    COMMENT: S++, // <!--\n    COMMENT_ENDING: S++, // <!-- blah -\n    COMMENT_ENDED: S++, // <!-- blah --\n    CDATA: S++, // <![CDATA[ something\n    CDATA_ENDING: S++, // ]\n    CDATA_ENDING_2: S++, // ]]\n    PROC_INST: S++, // <?hi\n    PROC_INST_BODY: S++, // <?hi there\n    PROC_INST_ENDING: S++, // <?hi \"there\" ?\n    OPEN_TAG: S++, // <strong\n    OPEN_TAG_SLASH: S++, // <strong /\n    ATTRIB: S++, // <a\n    ATTRIB_NAME: S++, // <a foo\n    ATTRIB_NAME_SAW_WHITE: S++, // <a foo _\n    ATTRIB_VALUE: S++, // <a foo=\n    ATTRIB_VALUE_QUOTED: S++, // <a foo=\"bar\n    ATTRIB_VALUE_CLOSED: S++, // <a foo=\"bar\"\n    ATTRIB_VALUE_UNQUOTED: S++, // <a foo=bar\n    ATTRIB_VALUE_ENTITY_Q: S++, // <foo bar=\"&quot;\"\n    ATTRIB_VALUE_ENTITY_U: S++, // <foo bar=&quot\n    CLOSE_TAG: S++, // </a\n    CLOSE_TAG_SAW_WHITE: S++, // </a   >\n    SCRIPT: S++, // <script> ...\n    SCRIPT_ENDING: S++ // <script> ... <\n  }\n\n  sax.XML_ENTITIES = {\n    'amp': '&',\n    'gt': '>',\n    'lt': '<',\n    'quot': '\"',\n    'apos': \"'\"\n  }\n\n  sax.ENTITIES = {\n    'amp': '&',\n    'gt': '>',\n    'lt': '<',\n    'quot': '\"',\n    'apos': \"'\",\n    'AElig': 198,\n    'Aacute': 193,\n    'Acirc': 194,\n    'Agrave': 192,\n    'Aring': 197,\n    'Atilde': 195,\n    'Auml': 196,\n    'Ccedil': 199,\n    'ETH': 208,\n    'Eacute': 201,\n    'Ecirc': 202,\n    'Egrave': 200,\n    'Euml': 203,\n    'Iacute': 205,\n    'Icirc': 206,\n    'Igrave': 204,\n    'Iuml': 207,\n    'Ntilde': 209,\n    'Oacute': 211,\n    'Ocirc': 212,\n    'Ograve': 210,\n    'Oslash': 216,\n    'Otilde': 213,\n    'Ouml': 214,\n    'THORN': 222,\n    'Uacute': 218,\n    'Ucirc': 219,\n    'Ugrave': 217,\n    'Uuml': 220,\n    'Yacute': 221,\n    'aacute': 225,\n    'acirc': 226,\n    'aelig': 230,\n    'agrave': 224,\n    'aring': 229,\n    'atilde': 227,\n    'auml': 228,\n    'ccedil': 231,\n    'eacute': 233,\n    'ecirc': 234,\n    'egrave': 232,\n    'eth': 240,\n    'euml': 235,\n    'iacute': 237,\n    'icirc': 238,\n    'igrave': 236,\n    'iuml': 239,\n    'ntilde': 241,\n    'oacute': 243,\n    'ocirc': 244,\n    'ograve': 242,\n    'oslash': 248,\n    'otilde': 245,\n    'ouml': 246,\n    'szlig': 223,\n    'thorn': 254,\n    'uacute': 250,\n    'ucirc': 251,\n    'ugrave': 249,\n    'uuml': 252,\n    'yacute': 253,\n    'yuml': 255,\n    'copy': 169,\n    'reg': 174,\n    'nbsp': 160,\n    'iexcl': 161,\n    'cent': 162,\n    'pound': 163,\n    'curren': 164,\n    'yen': 165,\n    'brvbar': 166,\n    'sect': 167,\n    'uml': 168,\n    'ordf': 170,\n    'laquo': 171,\n    'not': 172,\n    'shy': 173,\n    'macr': 175,\n    'deg': 176,\n    'plusmn': 177,\n    'sup1': 185,\n    'sup2': 178,\n    'sup3': 179,\n    'acute': 180,\n    'micro': 181,\n    'para': 182,\n    'middot': 183,\n    'cedil': 184,\n    'ordm': 186,\n    'raquo': 187,\n    'frac14': 188,\n    'frac12': 189,\n    'frac34': 190,\n    'iquest': 191,\n    'times': 215,\n    'divide': 247,\n    'OElig': 338,\n    'oelig': 339,\n    'Scaron': 352,\n    'scaron': 353,\n    'Yuml': 376,\n    'fnof': 402,\n    'circ': 710,\n    'tilde': 732,\n    'Alpha': 913,\n    'Beta': 914,\n    'Gamma': 915,\n    'Delta': 916,\n    'Epsilon': 917,\n    'Zeta': 918,\n    'Eta': 919,\n    'Theta': 920,\n    'Iota': 921,\n    'Kappa': 922,\n    'Lambda': 923,\n    'Mu': 924,\n    'Nu': 925,\n    'Xi': 926,\n    'Omicron': 927,\n    'Pi': 928,\n    'Rho': 929,\n    'Sigma': 931,\n    'Tau': 932,\n    'Upsilon': 933,\n    'Phi': 934,\n    'Chi': 935,\n    'Psi': 936,\n    'Omega': 937,\n    'alpha': 945,\n    'beta': 946,\n    'gamma': 947,\n    'delta': 948,\n    'epsilon': 949,\n    'zeta': 950,\n    'eta': 951,\n    'theta': 952,\n    'iota': 953,\n    'kappa': 954,\n    'lambda': 955,\n    'mu': 956,\n    'nu': 957,\n    'xi': 958,\n    'omicron': 959,\n    'pi': 960,\n    'rho': 961,\n    'sigmaf': 962,\n    'sigma': 963,\n    'tau': 964,\n    'upsilon': 965,\n    'phi': 966,\n    'chi': 967,\n    'psi': 968,\n    'omega': 969,\n    'thetasym': 977,\n    'upsih': 978,\n    'piv': 982,\n    'ensp': 8194,\n    'emsp': 8195,\n    'thinsp': 8201,\n    'zwnj': 8204,\n    'zwj': 8205,\n    'lrm': 8206,\n    'rlm': 8207,\n    'ndash': 8211,\n    'mdash': 8212,\n    'lsquo': 8216,\n    'rsquo': 8217,\n    'sbquo': 8218,\n    'ldquo': 8220,\n    'rdquo': 8221,\n    'bdquo': 8222,\n    'dagger': 8224,\n    'Dagger': 8225,\n    'bull': 8226,\n    'hellip': 8230,\n    'permil': 8240,\n    'prime': 8242,\n    'Prime': 8243,\n    'lsaquo': 8249,\n    'rsaquo': 8250,\n    'oline': 8254,\n    'frasl': 8260,\n    'euro': 8364,\n    'image': 8465,\n    'weierp': 8472,\n    'real': 8476,\n    'trade': 8482,\n    'alefsym': 8501,\n    'larr': 8592,\n    'uarr': 8593,\n    'rarr': 8594,\n    'darr': 8595,\n    'harr': 8596,\n    'crarr': 8629,\n    'lArr': 8656,\n    'uArr': 8657,\n    'rArr': 8658,\n    'dArr': 8659,\n    'hArr': 8660,\n    'forall': 8704,\n    'part': 8706,\n    'exist': 8707,\n    'empty': 8709,\n    'nabla': 8711,\n    'isin': 8712,\n    'notin': 8713,\n    'ni': 8715,\n    'prod': 8719,\n    'sum': 8721,\n    'minus': 8722,\n    'lowast': 8727,\n    'radic': 8730,\n    'prop': 8733,\n    'infin': 8734,\n    'ang': 8736,\n    'and': 8743,\n    'or': 8744,\n    'cap': 8745,\n    'cup': 8746,\n    'int': 8747,\n    'there4': 8756,\n    'sim': 8764,\n    'cong': 8773,\n    'asymp': 8776,\n    'ne': 8800,\n    'equiv': 8801,\n    'le': 8804,\n    'ge': 8805,\n    'sub': 8834,\n    'sup': 8835,\n    'nsub': 8836,\n    'sube': 8838,\n    'supe': 8839,\n    'oplus': 8853,\n    'otimes': 8855,\n    'perp': 8869,\n    'sdot': 8901,\n    'lceil': 8968,\n    'rceil': 8969,\n    'lfloor': 8970,\n    'rfloor': 8971,\n    'lang': 9001,\n    'rang': 9002,\n    'loz': 9674,\n    'spades': 9824,\n    'clubs': 9827,\n    'hearts': 9829,\n    'diams': 9830\n  }\n\n  Object.keys(sax.ENTITIES).forEach(function (key) {\n    var e = sax.ENTITIES[key]\n    var s = typeof e === 'number' ? String.fromCharCode(e) : e\n    sax.ENTITIES[key] = s\n  })\n\n  for (var s in sax.STATE) {\n    sax.STATE[sax.STATE[s]] = s\n  }\n\n  // shorthand\n  S = sax.STATE\n\n  function emit (parser, event, data) {\n    parser[event] && parser[event](data)\n  }\n\n  function emitNode (parser, nodeType, data) {\n    if (parser.textNode) closeText(parser)\n    emit(parser, nodeType, data)\n  }\n\n  function closeText (parser) {\n    parser.textNode = textopts(parser.opt, parser.textNode)\n    if (parser.textNode) emit(parser, 'ontext', parser.textNode)\n    parser.textNode = ''\n  }\n\n  function textopts (opt, text) {\n    if (opt.trim) text = text.trim()\n    if (opt.normalize) text = text.replace(/\\s+/g, ' ')\n    return text\n  }\n\n  function error (parser, er) {\n    closeText(parser)\n    if (parser.trackPosition) {\n      er += '\\nLine: ' + parser.line +\n        '\\nColumn: ' + parser.column +\n        '\\nChar: ' + parser.c\n    }\n    er = new Error(er)\n    parser.error = er\n    emit(parser, 'onerror', er)\n    return parser\n  }\n\n  function end (parser) {\n    if (parser.sawRoot && !parser.closedRoot) strictFail(parser, 'Unclosed root tag')\n    if ((parser.state !== S.BEGIN) &&\n      (parser.state !== S.BEGIN_WHITESPACE) &&\n      (parser.state !== S.TEXT)) {\n      error(parser, 'Unexpected end')\n    }\n    closeText(parser)\n    parser.c = ''\n    parser.closed = true\n    emit(parser, 'onend')\n    SAXParser.call(parser, parser.strict, parser.opt)\n    return parser\n  }\n\n  function strictFail (parser, message) {\n    if (typeof parser !== 'object' || !(parser instanceof SAXParser)) {\n      throw new Error('bad call to strictFail')\n    }\n    if (parser.strict) {\n      error(parser, message)\n    }\n  }\n\n  function newTag (parser) {\n    if (!parser.strict) parser.tagName = parser.tagName[parser.looseCase]()\n    var parent = parser.tags[parser.tags.length - 1] || parser\n    var tag = parser.tag = { name: parser.tagName, attributes: {} }\n\n    // will be overridden if tag contails an xmlns=\"foo\" or xmlns:foo=\"bar\"\n    if (parser.opt.xmlns) {\n      tag.ns = parent.ns\n    }\n    parser.attribList.length = 0\n    emitNode(parser, 'onopentagstart', tag)\n  }\n\n  function qname (name, attribute) {\n    var i = name.indexOf(':')\n    var qualName = i < 0 ? [ '', name ] : name.split(':')\n    var prefix = qualName[0]\n    var local = qualName[1]\n\n    // <x \"xmlns\"=\"http://foo\">\n    if (attribute && name === 'xmlns') {\n      prefix = 'xmlns'\n      local = ''\n    }\n\n    return { prefix: prefix, local: local }\n  }\n\n  function attrib (parser) {\n    if (!parser.strict) {\n      parser.attribName = parser.attribName[parser.looseCase]()\n    }\n\n    if (parser.attribList.indexOf(parser.attribName) !== -1 ||\n      parser.tag.attributes.hasOwnProperty(parser.attribName)) {\n      parser.attribName = parser.attribValue = ''\n      return\n    }\n\n    if (parser.opt.xmlns) {\n      var qn = qname(parser.attribName, true)\n      var prefix = qn.prefix\n      var local = qn.local\n\n      if (prefix === 'xmlns') {\n        // namespace binding attribute. push the binding into scope\n        if (local === 'xml' && parser.attribValue !== XML_NAMESPACE) {\n          strictFail(parser,\n            'xml: prefix must be bound to ' + XML_NAMESPACE + '\\n' +\n            'Actual: ' + parser.attribValue)\n        } else if (local === 'xmlns' && parser.attribValue !== XMLNS_NAMESPACE) {\n          strictFail(parser,\n            'xmlns: prefix must be bound to ' + XMLNS_NAMESPACE + '\\n' +\n            'Actual: ' + parser.attribValue)\n        } else {\n          var tag = parser.tag\n          var parent = parser.tags[parser.tags.length - 1] || parser\n          if (tag.ns === parent.ns) {\n            tag.ns = Object.create(parent.ns)\n          }\n          tag.ns[local] = parser.attribValue\n        }\n      }\n\n      // defer onattribute events until all attributes have been seen\n      // so any new bindings can take effect. preserve attribute order\n      // so deferred events can be emitted in document order\n      parser.attribList.push([parser.attribName, parser.attribValue])\n    } else {\n      // in non-xmlns mode, we can emit the event right away\n      parser.tag.attributes[parser.attribName] = parser.attribValue\n      emitNode(parser, 'onattribute', {\n        name: parser.attribName,\n        value: parser.attribValue\n      })\n    }\n\n    parser.attribName = parser.attribValue = ''\n  }\n\n  function openTag (parser, selfClosing) {\n    if (parser.opt.xmlns) {\n      // emit namespace binding events\n      var tag = parser.tag\n\n      // add namespace info to tag\n      var qn = qname(parser.tagName)\n      tag.prefix = qn.prefix\n      tag.local = qn.local\n      tag.uri = tag.ns[qn.prefix] || ''\n\n      if (tag.prefix && !tag.uri) {\n        strictFail(parser, 'Unbound namespace prefix: ' +\n          JSON.stringify(parser.tagName))\n        tag.uri = qn.prefix\n      }\n\n      var parent = parser.tags[parser.tags.length - 1] || parser\n      if (tag.ns && parent.ns !== tag.ns) {\n        Object.keys(tag.ns).forEach(function (p) {\n          emitNode(parser, 'onopennamespace', {\n            prefix: p,\n            uri: tag.ns[p]\n          })\n        })\n      }\n\n      // handle deferred onattribute events\n      // Note: do not apply default ns to attributes:\n      //   http://www.w3.org/TR/REC-xml-names/#defaulting\n      for (var i = 0, l = parser.attribList.length; i < l; i++) {\n        var nv = parser.attribList[i]\n        var name = nv[0]\n        var value = nv[1]\n        var qualName = qname(name, true)\n        var prefix = qualName.prefix\n        var local = qualName.local\n        var uri = prefix === '' ? '' : (tag.ns[prefix] || '')\n        var a = {\n          name: name,\n          value: value,\n          prefix: prefix,\n          local: local,\n          uri: uri\n        }\n\n        // if there's any attributes with an undefined namespace,\n        // then fail on them now.\n        if (prefix && prefix !== 'xmlns' && !uri) {\n          strictFail(parser, 'Unbound namespace prefix: ' +\n            JSON.stringify(prefix))\n          a.uri = prefix\n        }\n        parser.tag.attributes[name] = a\n        emitNode(parser, 'onattribute', a)\n      }\n      parser.attribList.length = 0\n    }\n\n    parser.tag.isSelfClosing = !!selfClosing\n\n    // process the tag\n    parser.sawRoot = true\n    parser.tags.push(parser.tag)\n    emitNode(parser, 'onopentag', parser.tag)\n    if (!selfClosing) {\n      // special case for <script> in non-strict mode.\n      if (!parser.noscript && parser.tagName.toLowerCase() === 'script') {\n        parser.state = S.SCRIPT\n      } else {\n        parser.state = S.TEXT\n      }\n      parser.tag = null\n      parser.tagName = ''\n    }\n    parser.attribName = parser.attribValue = ''\n    parser.attribList.length = 0\n  }\n\n  function closeTag (parser) {\n    if (!parser.tagName) {\n      strictFail(parser, 'Weird empty close tag.')\n      parser.textNode += '</>'\n      parser.state = S.TEXT\n      return\n    }\n\n    if (parser.script) {\n      if (parser.tagName !== 'script') {\n        parser.script += '</' + parser.tagName + '>'\n        parser.tagName = ''\n        parser.state = S.SCRIPT\n        return\n      }\n      emitNode(parser, 'onscript', parser.script)\n      parser.script = ''\n    }\n\n    // first make sure that the closing tag actually exists.\n    // <a><b></c></b></a> will close everything, otherwise.\n    var t = parser.tags.length\n    var tagName = parser.tagName\n    if (!parser.strict) {\n      tagName = tagName[parser.looseCase]()\n    }\n    var closeTo = tagName\n    while (t--) {\n      var close = parser.tags[t]\n      if (close.name !== closeTo) {\n        // fail the first time in strict mode\n        strictFail(parser, 'Unexpected close tag')\n      } else {\n        break\n      }\n    }\n\n    // didn't find it.  we already failed for strict, so just abort.\n    if (t < 0) {\n      strictFail(parser, 'Unmatched closing tag: ' + parser.tagName)\n      parser.textNode += '</' + parser.tagName + '>'\n      parser.state = S.TEXT\n      return\n    }\n    parser.tagName = tagName\n    var s = parser.tags.length\n    while (s-- > t) {\n      var tag = parser.tag = parser.tags.pop()\n      parser.tagName = parser.tag.name\n      emitNode(parser, 'onclosetag', parser.tagName)\n\n      var x = {}\n      for (var i in tag.ns) {\n        x[i] = tag.ns[i]\n      }\n\n      var parent = parser.tags[parser.tags.length - 1] || parser\n      if (parser.opt.xmlns && tag.ns !== parent.ns) {\n        // remove namespace bindings introduced by tag\n        Object.keys(tag.ns).forEach(function (p) {\n          var n = tag.ns[p]\n          emitNode(parser, 'onclosenamespace', { prefix: p, uri: n })\n        })\n      }\n    }\n    if (t === 0) parser.closedRoot = true\n    parser.tagName = parser.attribValue = parser.attribName = ''\n    parser.attribList.length = 0\n    parser.state = S.TEXT\n  }\n\n  function parseEntity (parser) {\n    var entity = parser.entity\n    var entityLC = entity.toLowerCase()\n    var num\n    var numStr = ''\n\n    if (parser.ENTITIES[entity]) {\n      return parser.ENTITIES[entity]\n    }\n    if (parser.ENTITIES[entityLC]) {\n      return parser.ENTITIES[entityLC]\n    }\n    entity = entityLC\n    if (entity.charAt(0) === '#') {\n      if (entity.charAt(1) === 'x') {\n        entity = entity.slice(2)\n        num = parseInt(entity, 16)\n        numStr = num.toString(16)\n      } else {\n        entity = entity.slice(1)\n        num = parseInt(entity, 10)\n        numStr = num.toString(10)\n      }\n    }\n    entity = entity.replace(/^0+/, '')\n    if (numStr.toLowerCase() !== entity) {\n      strictFail(parser, 'Invalid character entity')\n      return '&' + parser.entity + ';'\n    }\n\n    return String.fromCodePoint(num)\n  }\n\n  function beginWhiteSpace (parser, c) {\n    if (c === '<') {\n      parser.state = S.OPEN_WAKA\n      parser.startTagPosition = parser.position\n    } else if (not(whitespace, c)) {\n      // have to process this as a text node.\n      // weird, but happens.\n      strictFail(parser, 'Non-whitespace before first tag.')\n      parser.textNode = c\n      parser.state = S.TEXT\n    }\n  }\n\n  function charAt (chunk, i) {\n    var result = ''\n    if (i < chunk.length) {\n      result = chunk.charAt(i)\n    }\n    return result\n  }\n\n  function write (chunk) {\n    var parser = this\n    if (this.error) {\n      throw this.error\n    }\n    if (parser.closed) {\n      return error(parser,\n        'Cannot write after close. Assign an onready handler.')\n    }\n    if (chunk === null) {\n      return end(parser)\n    }\n    if (typeof chunk === 'object') {\n      chunk = chunk.toString()\n    }\n    var i = 0\n    var c = ''\n    while (true) {\n      c = charAt(chunk, i++)\n      parser.c = c\n      if (!c) {\n        break\n      }\n      if (parser.trackPosition) {\n        parser.position++\n        if (c === '\\n') {\n          parser.line++\n          parser.column = 0\n        } else {\n          parser.column++\n        }\n      }\n      switch (parser.state) {\n        case S.BEGIN:\n          parser.state = S.BEGIN_WHITESPACE\n          if (c === '\\uFEFF') {\n            continue\n          }\n          beginWhiteSpace(parser, c)\n          continue\n\n        case S.BEGIN_WHITESPACE:\n          beginWhiteSpace(parser, c)\n          continue\n\n        case S.TEXT:\n          if (parser.sawRoot && !parser.closedRoot) {\n            var starti = i - 1\n            while (c && c !== '<' && c !== '&') {\n              c = charAt(chunk, i++)\n              if (c && parser.trackPosition) {\n                parser.position++\n                if (c === '\\n') {\n                  parser.line++\n                  parser.column = 0\n                } else {\n                  parser.column++\n                }\n              }\n            }\n            parser.textNode += chunk.substring(starti, i - 1)\n          }\n          if (c === '<' && !(parser.sawRoot && parser.closedRoot && !parser.strict)) {\n            parser.state = S.OPEN_WAKA\n            parser.startTagPosition = parser.position\n          } else {\n            if (not(whitespace, c) && (!parser.sawRoot || parser.closedRoot)) {\n              strictFail(parser, 'Text data outside of root node.')\n            }\n            if (c === '&') {\n              parser.state = S.TEXT_ENTITY\n            } else {\n              parser.textNode += c\n            }\n          }\n          continue\n\n        case S.SCRIPT:\n          // only non-strict\n          if (c === '<') {\n            parser.state = S.SCRIPT_ENDING\n          } else {\n            parser.script += c\n          }\n          continue\n\n        case S.SCRIPT_ENDING:\n          if (c === '/') {\n            parser.state = S.CLOSE_TAG\n          } else {\n            parser.script += '<' + c\n            parser.state = S.SCRIPT\n          }\n          continue\n\n        case S.OPEN_WAKA:\n          // either a /, ?, !, or text is coming next.\n          if (c === '!') {\n            parser.state = S.SGML_DECL\n            parser.sgmlDecl = ''\n          } else if (is(whitespace, c)) {\n            // wait for it...\n          } else if (is(nameStart, c)) {\n            parser.state = S.OPEN_TAG\n            parser.tagName = c\n          } else if (c === '/') {\n            parser.state = S.CLOSE_TAG\n            parser.tagName = ''\n          } else if (c === '?') {\n            parser.state = S.PROC_INST\n            parser.procInstName = parser.procInstBody = ''\n          } else {\n            strictFail(parser, 'Unencoded <')\n            // if there was some whitespace, then add that in.\n            if (parser.startTagPosition + 1 < parser.position) {\n              var pad = parser.position - parser.startTagPosition\n              c = new Array(pad).join(' ') + c\n            }\n            parser.textNode += '<' + c\n            parser.state = S.TEXT\n          }\n          continue\n\n        case S.SGML_DECL:\n          if ((parser.sgmlDecl + c).toUpperCase() === CDATA) {\n            emitNode(parser, 'onopencdata')\n            parser.state = S.CDATA\n            parser.sgmlDecl = ''\n            parser.cdata = ''\n          } else if (parser.sgmlDecl + c === '--') {\n            parser.state = S.COMMENT\n            parser.comment = ''\n            parser.sgmlDecl = ''\n          } else if ((parser.sgmlDecl + c).toUpperCase() === DOCTYPE) {\n            parser.state = S.DOCTYPE\n            if (parser.doctype || parser.sawRoot) {\n              strictFail(parser,\n                'Inappropriately located doctype declaration')\n            }\n            parser.doctype = ''\n            parser.sgmlDecl = ''\n          } else if (c === '>') {\n            emitNode(parser, 'onsgmldeclaration', parser.sgmlDecl)\n            parser.sgmlDecl = ''\n            parser.state = S.TEXT\n          } else if (is(quote, c)) {\n            parser.state = S.SGML_DECL_QUOTED\n            parser.sgmlDecl += c\n          } else {\n            parser.sgmlDecl += c\n          }\n          continue\n\n        case S.SGML_DECL_QUOTED:\n          if (c === parser.q) {\n            parser.state = S.SGML_DECL\n            parser.q = ''\n          }\n          parser.sgmlDecl += c\n          continue\n\n        case S.DOCTYPE:\n          if (c === '>') {\n            parser.state = S.TEXT\n            emitNode(parser, 'ondoctype', parser.doctype)\n            parser.doctype = true // just remember that we saw it.\n          } else {\n            parser.doctype += c\n            if (c === '[') {\n              parser.state = S.DOCTYPE_DTD\n            } else if (is(quote, c)) {\n              parser.state = S.DOCTYPE_QUOTED\n              parser.q = c\n            }\n          }\n          continue\n\n        case S.DOCTYPE_QUOTED:\n          parser.doctype += c\n          if (c === parser.q) {\n            parser.q = ''\n            parser.state = S.DOCTYPE\n          }\n          continue\n\n        case S.DOCTYPE_DTD:\n          parser.doctype += c\n          if (c === ']') {\n            parser.state = S.DOCTYPE\n          } else if (is(quote, c)) {\n            parser.state = S.DOCTYPE_DTD_QUOTED\n            parser.q = c\n          }\n          continue\n\n        case S.DOCTYPE_DTD_QUOTED:\n          parser.doctype += c\n          if (c === parser.q) {\n            parser.state = S.DOCTYPE_DTD\n            parser.q = ''\n          }\n          continue\n\n        case S.COMMENT:\n          if (c === '-') {\n            parser.state = S.COMMENT_ENDING\n          } else {\n            parser.comment += c\n          }\n          continue\n\n        case S.COMMENT_ENDING:\n          if (c === '-') {\n            parser.state = S.COMMENT_ENDED\n            parser.comment = textopts(parser.opt, parser.comment)\n            if (parser.comment) {\n              emitNode(parser, 'oncomment', parser.comment)\n            }\n            parser.comment = ''\n          } else {\n            parser.comment += '-' + c\n            parser.state = S.COMMENT\n          }\n          continue\n\n        case S.COMMENT_ENDED:\n          if (c !== '>') {\n            strictFail(parser, 'Malformed comment')\n            // allow <!-- blah -- bloo --> in non-strict mode,\n            // which is a comment of \" blah -- bloo \"\n            parser.comment += '--' + c\n            parser.state = S.COMMENT\n          } else {\n            parser.state = S.TEXT\n          }\n          continue\n\n        case S.CDATA:\n          if (c === ']') {\n            parser.state = S.CDATA_ENDING\n          } else {\n            parser.cdata += c\n          }\n          continue\n\n        case S.CDATA_ENDING:\n          if (c === ']') {\n            parser.state = S.CDATA_ENDING_2\n          } else {\n            parser.cdata += ']' + c\n            parser.state = S.CDATA\n          }\n          continue\n\n        case S.CDATA_ENDING_2:\n          if (c === '>') {\n            if (parser.cdata) {\n              emitNode(parser, 'oncdata', parser.cdata)\n            }\n            emitNode(parser, 'onclosecdata')\n            parser.cdata = ''\n            parser.state = S.TEXT\n          } else if (c === ']') {\n            parser.cdata += ']'\n          } else {\n            parser.cdata += ']]' + c\n            parser.state = S.CDATA\n          }\n          continue\n\n        case S.PROC_INST:\n          if (c === '?') {\n            parser.state = S.PROC_INST_ENDING\n          } else if (is(whitespace, c)) {\n            parser.state = S.PROC_INST_BODY\n          } else {\n            parser.procInstName += c\n          }\n          continue\n\n        case S.PROC_INST_BODY:\n          if (!parser.procInstBody && is(whitespace, c)) {\n            continue\n          } else if (c === '?') {\n            parser.state = S.PROC_INST_ENDING\n          } else {\n            parser.procInstBody += c\n          }\n          continue\n\n        case S.PROC_INST_ENDING:\n          if (c === '>') {\n            emitNode(parser, 'onprocessinginstruction', {\n              name: parser.procInstName,\n              body: parser.procInstBody\n            })\n            parser.procInstName = parser.procInstBody = ''\n            parser.state = S.TEXT\n          } else {\n            parser.procInstBody += '?' + c\n            parser.state = S.PROC_INST_BODY\n          }\n          continue\n\n        case S.OPEN_TAG:\n          if (is(nameBody, c)) {\n            parser.tagName += c\n          } else {\n            newTag(parser)\n            if (c === '>') {\n              openTag(parser)\n            } else if (c === '/') {\n              parser.state = S.OPEN_TAG_SLASH\n            } else {\n              if (not(whitespace, c)) {\n                strictFail(parser, 'Invalid character in tag name')\n              }\n              parser.state = S.ATTRIB\n            }\n          }\n          continue\n\n        case S.OPEN_TAG_SLASH:\n          if (c === '>') {\n            openTag(parser, true)\n            closeTag(parser)\n          } else {\n            strictFail(parser, 'Forward-slash in opening tag not followed by >')\n            parser.state = S.ATTRIB\n          }\n          continue\n\n        case S.ATTRIB:\n          // haven't read the attribute name yet.\n          if (is(whitespace, c)) {\n            continue\n          } else if (c === '>') {\n            openTag(parser)\n          } else if (c === '/') {\n            parser.state = S.OPEN_TAG_SLASH\n          } else if (is(nameStart, c)) {\n            parser.attribName = c\n            parser.attribValue = ''\n            parser.state = S.ATTRIB_NAME\n          } else {\n            strictFail(parser, 'Invalid attribute name')\n          }\n          continue\n\n        case S.ATTRIB_NAME:\n          if (c === '=') {\n            parser.state = S.ATTRIB_VALUE\n          } else if (c === '>') {\n            strictFail(parser, 'Attribute without value')\n            parser.attribValue = parser.attribName\n            attrib(parser)\n            openTag(parser)\n          } else if (is(whitespace, c)) {\n            parser.state = S.ATTRIB_NAME_SAW_WHITE\n          } else if (is(nameBody, c)) {\n            parser.attribName += c\n          } else {\n            strictFail(parser, 'Invalid attribute name')\n          }\n          continue\n\n        case S.ATTRIB_NAME_SAW_WHITE:\n          if (c === '=') {\n            parser.state = S.ATTRIB_VALUE\n          } else if (is(whitespace, c)) {\n            continue\n          } else {\n            strictFail(parser, 'Attribute without value')\n            parser.tag.attributes[parser.attribName] = ''\n            parser.attribValue = ''\n            emitNode(parser, 'onattribute', {\n              name: parser.attribName,\n              value: ''\n            })\n            parser.attribName = ''\n            if (c === '>') {\n              openTag(parser)\n            } else if (is(nameStart, c)) {\n              parser.attribName = c\n              parser.state = S.ATTRIB_NAME\n            } else {\n              strictFail(parser, 'Invalid attribute name')\n              parser.state = S.ATTRIB\n            }\n          }\n          continue\n\n        case S.ATTRIB_VALUE:\n          if (is(whitespace, c)) {\n            continue\n          } else if (is(quote, c)) {\n            parser.q = c\n            parser.state = S.ATTRIB_VALUE_QUOTED\n          } else {\n            strictFail(parser, 'Unquoted attribute value')\n            parser.state = S.ATTRIB_VALUE_UNQUOTED\n            parser.attribValue = c\n          }\n          continue\n\n        case S.ATTRIB_VALUE_QUOTED:\n          if (c !== parser.q) {\n            if (c === '&') {\n              parser.state = S.ATTRIB_VALUE_ENTITY_Q\n            } else {\n              parser.attribValue += c\n            }\n            continue\n          }\n          attrib(parser)\n          parser.q = ''\n          parser.state = S.ATTRIB_VALUE_CLOSED\n          continue\n\n        case S.ATTRIB_VALUE_CLOSED:\n          if (is(whitespace, c)) {\n            parser.state = S.ATTRIB\n          } else if (c === '>') {\n            openTag(parser)\n          } else if (c === '/') {\n            parser.state = S.OPEN_TAG_SLASH\n          } else if (is(nameStart, c)) {\n            strictFail(parser, 'No whitespace between attributes')\n            parser.attribName = c\n            parser.attribValue = ''\n            parser.state = S.ATTRIB_NAME\n          } else {\n            strictFail(parser, 'Invalid attribute name')\n          }\n          continue\n\n        case S.ATTRIB_VALUE_UNQUOTED:\n          if (not(attribEnd, c)) {\n            if (c === '&') {\n              parser.state = S.ATTRIB_VALUE_ENTITY_U\n            } else {\n              parser.attribValue += c\n            }\n            continue\n          }\n          attrib(parser)\n          if (c === '>') {\n            openTag(parser)\n          } else {\n            parser.state = S.ATTRIB\n          }\n          continue\n\n        case S.CLOSE_TAG:\n          if (!parser.tagName) {\n            if (is(whitespace, c)) {\n              continue\n            } else if (not(nameStart, c)) {\n              if (parser.script) {\n                parser.script += '</' + c\n                parser.state = S.SCRIPT\n              } else {\n                strictFail(parser, 'Invalid tagname in closing tag.')\n              }\n            } else {\n              parser.tagName = c\n            }\n          } else if (c === '>') {\n            closeTag(parser)\n          } else if (is(nameBody, c)) {\n            parser.tagName += c\n          } else if (parser.script) {\n            parser.script += '</' + parser.tagName\n            parser.tagName = ''\n            parser.state = S.SCRIPT\n          } else {\n            if (not(whitespace, c)) {\n              strictFail(parser, 'Invalid tagname in closing tag')\n            }\n            parser.state = S.CLOSE_TAG_SAW_WHITE\n          }\n          continue\n\n        case S.CLOSE_TAG_SAW_WHITE:\n          if (is(whitespace, c)) {\n            continue\n          }\n          if (c === '>') {\n            closeTag(parser)\n          } else {\n            strictFail(parser, 'Invalid characters in closing tag')\n          }\n          continue\n\n        case S.TEXT_ENTITY:\n        case S.ATTRIB_VALUE_ENTITY_Q:\n        case S.ATTRIB_VALUE_ENTITY_U:\n          var returnState\n          var buffer\n          switch (parser.state) {\n            case S.TEXT_ENTITY:\n              returnState = S.TEXT\n              buffer = 'textNode'\n              break\n\n            case S.ATTRIB_VALUE_ENTITY_Q:\n              returnState = S.ATTRIB_VALUE_QUOTED\n              buffer = 'attribValue'\n              break\n\n            case S.ATTRIB_VALUE_ENTITY_U:\n              returnState = S.ATTRIB_VALUE_UNQUOTED\n              buffer = 'attribValue'\n              break\n          }\n\n          if (c === ';') {\n            parser[buffer] += parseEntity(parser)\n            parser.entity = ''\n            parser.state = returnState\n          } else if (is(parser.entity.length ? entityBody : entityStart, c)) {\n            parser.entity += c\n          } else {\n            strictFail(parser, 'Invalid character in entity name')\n            parser[buffer] += '&' + parser.entity + c\n            parser.entity = ''\n            parser.state = returnState\n          }\n\n          continue\n\n        default:\n          throw new Error(parser, 'Unknown state: ' + parser.state)\n      }\n    } // while\n\n    if (parser.position >= parser.bufferCheckPosition) {\n      checkBufferLength(parser)\n    }\n    return parser\n  }\n\n  /*! http://mths.be/fromcodepoint v0.1.0 by @mathias */\n  if (!String.fromCodePoint) {\n    (function () {\n      var stringFromCharCode = String.fromCharCode\n      var floor = Math.floor\n      var fromCodePoint = function () {\n        var MAX_SIZE = 0x4000\n        var codeUnits = []\n        var highSurrogate\n        var lowSurrogate\n        var index = -1\n        var length = arguments.length\n        if (!length) {\n          return ''\n        }\n        var result = ''\n        while (++index < length) {\n          var codePoint = Number(arguments[index])\n          if (\n            !isFinite(codePoint) || // `NaN`, `+Infinity`, or `-Infinity`\n            codePoint < 0 || // not a valid Unicode code point\n            codePoint > 0x10FFFF || // not a valid Unicode code point\n            floor(codePoint) !== codePoint // not an integer\n          ) {\n            throw RangeError('Invalid code point: ' + codePoint)\n          }\n          if (codePoint <= 0xFFFF) { // BMP code point\n            codeUnits.push(codePoint)\n          } else { // Astral code point; split in surrogate halves\n            // http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n            codePoint -= 0x10000\n            highSurrogate = (codePoint >> 10) + 0xD800\n            lowSurrogate = (codePoint % 0x400) + 0xDC00\n            codeUnits.push(highSurrogate, lowSurrogate)\n          }\n          if (index + 1 === length || codeUnits.length > MAX_SIZE) {\n            result += stringFromCharCode.apply(null, codeUnits)\n            codeUnits.length = 0\n          }\n        }\n        return result\n      }\n      if (Object.defineProperty) {\n        Object.defineProperty(String, 'fromCodePoint', {\n          value: fromCodePoint,\n          configurable: true,\n          writable: true\n        })\n      } else {\n        String.fromCodePoint = fromCodePoint\n      }\n    }())\n  }\n})(typeof exports === 'undefined' ? this.sax = {} : exports)\n","/* \r\n * Copyright (c) 2016, Pierre-Anthony Lemieux <pal@sandflow.com>\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are met:\r\n *\r\n * * Redistributions of source code must retain the above copyright notice, this\r\n *   list of conditions and the following disclaimer.\r\n * * Redistributions in binary form must reproduce the above copyright notice,\r\n *   this list of conditions and the following disclaimer in the documentation\r\n *   and/or other materials provided with the distribution.\r\n *\r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\r\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\r\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\r\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\r\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\r\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\r\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\r\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\r\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n * POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\n/**\r\n * @module imscDoc\r\n */\r\n\r\n;\r\n(function (imscDoc, sax, imscNames, imscStyles, imscUtils) {\r\n\r\n\r\n    /**\r\n     * Allows a client to provide callbacks to handle children of the <metadata> element\r\n     * @typedef {Object} MetadataHandler\r\n     * @property {?OpenTagCallBack} onOpenTag\r\n     * @property {?CloseTagCallBack} onCloseTag\r\n     * @property {?TextCallBack} onText\r\n     */\r\n\r\n    /**\r\n     * Called when the opening tag of an element node is encountered.\r\n     * @callback OpenTagCallBack\r\n     * @param {string} ns Namespace URI of the element\r\n     * @param {string} name Local name of the element\r\n     * @param {Object[]} attributes List of attributes, each consisting of a\r\n     *                              `uri`, `name` and `value`\r\n     */\r\n\r\n    /**\r\n     * Called when the closing tag of an element node is encountered.\r\n     * @callback CloseTagCallBack\r\n     */\r\n\r\n    /**\r\n     * Called when a text node is encountered.\r\n     * @callback TextCallBack\r\n     * @param {string} contents Contents of the text node\r\n     */\r\n\r\n    /**\r\n     * Parses an IMSC1 document into an opaque in-memory representation that exposes\r\n     * a single method <pre>getMediaTimeEvents()</pre> that returns a list of time\r\n     * offsets (in seconds) of the ISD, i.e. the points in time where the visual\r\n     * representation of the document change. `metadataHandler` allows the caller to\r\n     * be called back when nodes are present in <metadata> elements. \r\n     * \r\n     * @param {string} xmlstring XML document\r\n     * @param {?module:imscUtils.ErrorHandler} errorHandler Error callback\r\n     * @param {?MetadataHandler} metadataHandler Callback for <Metadata> elements\r\n     * @returns {Object} Opaque in-memory representation of an IMSC1 document\r\n     */\r\n\r\n    imscDoc.fromXML = function (xmlstring, errorHandler, metadataHandler) {\r\n        var p = sax.parser(true, {xmlns: true});\r\n        var estack = [];\r\n        var xmllangstack = [];\r\n        var xmlspacestack = [];\r\n        var metadata_depth = 0;\r\n        var doc = null;\r\n\r\n        p.onclosetag = function (node) {\r\n\r\n            \r\n            if (estack[0] instanceof Region) {\r\n\r\n                /* merge referenced styles */\r\n\r\n                if (doc.head !== null && doc.head.styling !== null) {\r\n                    mergeReferencedStyles(doc.head.styling, estack[0].styleRefs, estack[0].styleAttrs, errorHandler);\r\n                }\r\n\r\n                delete estack[0].styleRefs;\r\n\r\n            } else if (estack[0] instanceof Styling) {\r\n\r\n                /* flatten chained referential styling */\r\n\r\n                for (var sid in estack[0].styles) {\r\n\r\n                    if (! estack[0].styles.hasOwnProperty(sid)) continue;\r\n\r\n                    mergeChainedStyles(estack[0], estack[0].styles[sid], errorHandler);\r\n\r\n                }\r\n\r\n            } else if (estack[0] instanceof P || estack[0] instanceof Span) {\r\n\r\n                /* merge anonymous spans */\r\n\r\n                if (estack[0].contents.length > 1) {\r\n\r\n                    var cs = [estack[0].contents[0]];\r\n\r\n                    var c;\r\n\r\n                    for (c = 1; c < estack[0].contents.length; c++) {\r\n\r\n                        if (estack[0].contents[c] instanceof AnonymousSpan &&\r\n                                cs[cs.length - 1] instanceof AnonymousSpan) {\r\n\r\n                            cs[cs.length - 1].text += estack[0].contents[c].text;\r\n\r\n                        } else {\r\n\r\n                            cs.push(estack[0].contents[c]);\r\n\r\n                        }\r\n\r\n                    }\r\n\r\n                    estack[0].contents = cs;\r\n\r\n                }\r\n\r\n                // remove redundant nested anonymous spans (9.3.3(1)(c))\r\n\r\n                if (estack[0] instanceof Span &&\r\n                        estack[0].contents.length === 1 &&\r\n                        estack[0].contents[0] instanceof AnonymousSpan) {\r\n\r\n                    estack[0].text = estack[0].contents[0].text;\r\n                    delete estack[0].contents;\r\n\r\n                }\r\n\r\n            } else if (estack[0] instanceof ForeignElement) {\r\n\r\n                if (estack[0].node.uri === imscNames.ns_tt &&\r\n                        estack[0].node.local === 'metadata') {\r\n\r\n                    /* leave the metadata element */\r\n\r\n                    metadata_depth--;\r\n\r\n                } else if (metadata_depth > 0 &&\r\n                        metadataHandler &&\r\n                        'onCloseTag' in metadataHandler) {\r\n\r\n                    /* end of child of metadata element */\r\n\r\n                    metadataHandler.onCloseTag();\r\n\r\n                }\r\n\r\n            }\r\n\r\n            // TODO: delete stylerefs?\r\n\r\n            // maintain the xml:space stack\r\n\r\n            xmlspacestack.shift();\r\n\r\n            // maintain the xml:lang stack\r\n\r\n            xmllangstack.shift();\r\n\r\n            // prepare for the next element\r\n\r\n            estack.shift();\r\n        };\r\n\r\n        p.ontext = function (str) {\r\n\r\n            if (estack[0] === undefined) {\r\n\r\n                /* ignoring text outside of elements */\r\n\r\n            } else if (estack[0] instanceof Span || estack[0] instanceof P) {\r\n\r\n                /* ignore children text nodes in ruby container spans */\r\n\r\n                if (estack[0] instanceof Span) {\r\n\r\n                    var ruby = estack[0].styleAttrs[imscStyles.byName.ruby.qname];\r\n\r\n                    if (ruby === 'container' || ruby === 'textContainer' || ruby === 'baseContainer') {\r\n\r\n                        return;\r\n\r\n                    }\r\n\r\n                }\r\n\r\n                /* create an anonymous span */\r\n\r\n                var s = new AnonymousSpan();\r\n\r\n                s.initFromText(doc, estack[0], str, xmllangstack[0], xmlspacestack[0], errorHandler);\r\n\r\n                estack[0].contents.push(s);\r\n\r\n            } else if (estack[0] instanceof ForeignElement &&\r\n                    metadata_depth > 0 &&\r\n                    metadataHandler &&\r\n                    'onText' in metadataHandler) {\r\n\r\n                /* text node within a child of metadata element */\r\n\r\n                metadataHandler.onText(str);\r\n\r\n            }\r\n\r\n        };\r\n\r\n\r\n        p.onopentag = function (node) {\r\n\r\n            // maintain the xml:space stack\r\n\r\n            var xmlspace = node.attributes[\"xml:space\"];\r\n\r\n            if (xmlspace) {\r\n\r\n                xmlspacestack.unshift(xmlspace.value);\r\n\r\n            } else {\r\n\r\n                if (xmlspacestack.length === 0) {\r\n\r\n                    xmlspacestack.unshift(\"default\");\r\n\r\n                } else {\r\n\r\n                    xmlspacestack.unshift(xmlspacestack[0]);\r\n\r\n                }\r\n\r\n            }\r\n\r\n            /* maintain the xml:lang stack */\r\n\r\n\r\n            var xmllang = node.attributes[\"xml:lang\"];\r\n\r\n            if (xmllang) {\r\n\r\n                xmllangstack.unshift(xmllang.value);\r\n\r\n            } else {\r\n\r\n                if (xmllangstack.length === 0) {\r\n\r\n                    xmllangstack.unshift(\"\");\r\n\r\n                } else {\r\n\r\n                    xmllangstack.unshift(xmllangstack[0]);\r\n\r\n                }\r\n\r\n            }\r\n\r\n\r\n            /* process the element */\r\n\r\n            if (node.uri === imscNames.ns_tt) {\r\n\r\n                if (node.local === 'tt') {\r\n\r\n                    if (doc !== null) {\r\n\r\n                        reportFatal(errorHandler, \"Two <tt> elements at (\" + this.line + \",\" + this.column + \")\");\r\n\r\n                    }\r\n\r\n                    doc = new TT();\r\n\r\n                    doc.initFromNode(node, xmllangstack[0], errorHandler);\r\n\r\n                    estack.unshift(doc);\r\n\r\n                } else if (node.local === 'head') {\r\n\r\n                    if (!(estack[0] instanceof TT)) {\r\n                        reportFatal(errorHandler, \"Parent of <head> element is not <tt> at (\" + this.line + \",\" + this.column + \")\");\r\n                    }\r\n\r\n                    estack.unshift(doc.head);\r\n\r\n                } else if (node.local === 'styling') {\r\n\r\n                    if (!(estack[0] instanceof Head)) {\r\n                        reportFatal(errorHandler, \"Parent of <styling> element is not <head> at (\" + this.line + \",\" + this.column + \")\");\r\n                    }\r\n\r\n                    estack.unshift(doc.head.styling);\r\n\r\n                } else if (node.local === 'style') {\r\n\r\n                    var s;\r\n\r\n                    if (estack[0] instanceof Styling) {\r\n\r\n                        s = new Style();\r\n\r\n                        s.initFromNode(node, errorHandler);\r\n\r\n                        /* ignore <style> element missing @id */\r\n\r\n                        if (!s.id) {\r\n\r\n                            reportError(errorHandler, \"<style> element missing @id attribute\");\r\n\r\n                        } else {\r\n\r\n                            doc.head.styling.styles[s.id] = s;\r\n\r\n                        }\r\n\r\n                        estack.unshift(s);\r\n\r\n                    } else if (estack[0] instanceof Region) {\r\n\r\n                        /* nested styles can be merged with specified styles\r\n                         * immediately, with lower priority\r\n                         * (see 8.4.4.2(3) at TTML1 )\r\n                         */\r\n\r\n                        s = new Style();\r\n\r\n                        s.initFromNode(node, errorHandler);\r\n\r\n                        mergeStylesIfNotPresent(s.styleAttrs, estack[0].styleAttrs);\r\n\r\n                        estack.unshift(s);\r\n\r\n                    } else {\r\n\r\n                        reportFatal(errorHandler, \"Parent of <style> element is not <styling> or <region> at (\" + this.line + \",\" + this.column + \")\");\r\n\r\n                    }\r\n\r\n                }  else if (node.local === 'initial') {\r\n\r\n                    var ini;\r\n\r\n                    if (estack[0] instanceof Styling) {\r\n\r\n                        ini = new Initial();\r\n\r\n                        ini.initFromNode(node, errorHandler);\r\n                        \r\n                        for (var qn in ini.styleAttrs) {\r\n\r\n                            if (! ini.styleAttrs.hasOwnProperty(qn)) continue;\r\n                            \r\n                            doc.head.styling.initials[qn] = ini.styleAttrs[qn];\r\n                            \r\n                        }\r\n                        \r\n                        estack.unshift(ini);\r\n\r\n                    } else {\r\n\r\n                        reportFatal(errorHandler, \"Parent of <initial> element is not <styling> at (\" + this.line + \",\" + this.column + \")\");\r\n\r\n                    }\r\n\r\n                } else if (node.local === 'layout') {\r\n\r\n                    if (!(estack[0] instanceof Head)) {\r\n\r\n                        reportFatal(errorHandler, \"Parent of <layout> element is not <head> at \" + this.line + \",\" + this.column + \")\");\r\n\r\n                    }\r\n\r\n                    estack.unshift(doc.head.layout);\r\n\r\n                } else if (node.local === 'region') {\r\n\r\n                    if (!(estack[0] instanceof Layout)) {\r\n                        reportFatal(errorHandler, \"Parent of <region> element is not <layout> at \" + this.line + \",\" + this.column + \")\");\r\n                    }\r\n\r\n                    var r = new Region();\r\n\r\n                    r.initFromNode(doc, node, xmllangstack[0], errorHandler);\r\n\r\n                    if (!r.id || r.id in doc.head.layout.regions) {\r\n\r\n                        reportError(errorHandler, \"Ignoring <region> with duplicate or missing @id at \" + this.line + \",\" + this.column + \")\");\r\n\r\n                    } else {\r\n\r\n                        doc.head.layout.regions[r.id] = r;\r\n\r\n                    }\r\n\r\n                    estack.unshift(r);\r\n\r\n                } else if (node.local === 'body') {\r\n\r\n                    if (!(estack[0] instanceof TT)) {\r\n\r\n                        reportFatal(errorHandler, \"Parent of <body> element is not <tt> at \" + this.line + \",\" + this.column + \")\");\r\n\r\n                    }\r\n\r\n                    if (doc.body !== null) {\r\n\r\n                        reportFatal(errorHandler, \"Second <body> element at \" + this.line + \",\" + this.column + \")\");\r\n\r\n                    }\r\n\r\n                    var b = new Body();\r\n\r\n                    b.initFromNode(doc, node, xmllangstack[0], errorHandler);\r\n\r\n                    doc.body = b;\r\n\r\n                    estack.unshift(b);\r\n\r\n                } else if (node.local === 'div') {\r\n\r\n                    if (!(estack[0] instanceof Div || estack[0] instanceof Body)) {\r\n\r\n                        reportFatal(errorHandler, \"Parent of <div> element is not <body> or <div> at \" + this.line + \",\" + this.column + \")\");\r\n\r\n                    }\r\n\r\n                    var d = new Div();\r\n\r\n                    d.initFromNode(doc, estack[0], node, xmllangstack[0], errorHandler);\r\n                    \r\n                    /* transform smpte:backgroundImage to TTML2 image element */\r\n                    \r\n                    var bi = d.styleAttrs[imscStyles.byName.backgroundImage.qname];\r\n                    \r\n                    if (bi) {\r\n                        d.contents.push(new Image(bi));\r\n                        delete d.styleAttrs[imscStyles.byName.backgroundImage.qname];                  \r\n                    }\r\n\r\n                    estack[0].contents.push(d);\r\n\r\n                    estack.unshift(d);\r\n\r\n                } else if (node.local === 'image') {\r\n\r\n                    if (!(estack[0] instanceof Div)) {\r\n\r\n                        reportFatal(errorHandler, \"Parent of <image> element is not <div> at \" + this.line + \",\" + this.column + \")\");\r\n\r\n                    }\r\n\r\n                    var img = new Image();\r\n                    \r\n                    img.initFromNode(doc, estack[0], node, xmllangstack[0], errorHandler);\r\n                    \r\n                    estack[0].contents.push(img);\r\n\r\n                    estack.unshift(img);\r\n\r\n                } else if (node.local === 'p') {\r\n\r\n                    if (!(estack[0] instanceof Div)) {\r\n\r\n                        reportFatal(errorHandler, \"Parent of <p> element is not <div> at \" + this.line + \",\" + this.column + \")\");\r\n\r\n                    }\r\n\r\n                    var p = new P();\r\n\r\n                    p.initFromNode(doc, estack[0], node, xmllangstack[0], errorHandler);\r\n\r\n                    estack[0].contents.push(p);\r\n\r\n                    estack.unshift(p);\r\n\r\n                } else if (node.local === 'span') {\r\n\r\n                    if (!(estack[0] instanceof Span || estack[0] instanceof P)) {\r\n\r\n                        reportFatal(errorHandler, \"Parent of <span> element is not <span> or <p> at \" + this.line + \",\" + this.column + \")\");\r\n\r\n                    }\r\n\r\n                    var ns = new Span();\r\n\r\n                    ns.initFromNode(doc, estack[0], node, xmllangstack[0], xmlspacestack[0], errorHandler);\r\n\r\n                    estack[0].contents.push(ns);\r\n\r\n                    estack.unshift(ns);\r\n\r\n                } else if (node.local === 'br') {\r\n\r\n                    if (!(estack[0] instanceof Span || estack[0] instanceof P)) {\r\n\r\n                        reportFatal(errorHandler, \"Parent of <br> element is not <span> or <p> at \" + this.line + \",\" + this.column + \")\");\r\n\r\n                    }\r\n\r\n                    var nb = new Br();\r\n\r\n                    nb.initFromNode(doc, estack[0], node, xmllangstack[0], errorHandler);\r\n\r\n                    estack[0].contents.push(nb);\r\n\r\n                    estack.unshift(nb);\r\n\r\n                } else if (node.local === 'set') {\r\n\r\n                    if (!(estack[0] instanceof Span ||\r\n                            estack[0] instanceof P ||\r\n                            estack[0] instanceof Div ||\r\n                            estack[0] instanceof Body ||\r\n                            estack[0] instanceof Region ||\r\n                            estack[0] instanceof Br)) {\r\n\r\n                        reportFatal(errorHandler, \"Parent of <set> element is not a content element or a region at \" + this.line + \",\" + this.column + \")\");\r\n\r\n                    }\r\n\r\n                    var st = new Set();\r\n\r\n                    st.initFromNode(doc, estack[0], node, errorHandler);\r\n\r\n                    estack[0].sets.push(st);\r\n\r\n                    estack.unshift(st);\r\n\r\n                } else {\r\n\r\n                    /* element in the TT namespace, but not a content element */\r\n\r\n                    estack.unshift(new ForeignElement(node));\r\n                }\r\n\r\n            } else {\r\n\r\n                /* ignore elements not in the TTML namespace unless in metadata element */\r\n\r\n                estack.unshift(new ForeignElement(node));\r\n\r\n            }\r\n\r\n            /* handle metadata callbacks */\r\n\r\n            if (estack[0] instanceof ForeignElement) {\r\n\r\n                if (node.uri === imscNames.ns_tt &&\r\n                        node.local === 'metadata') {\r\n\r\n                    /* enter the metadata element */\r\n\r\n                    metadata_depth++;\r\n\r\n                } else if (\r\n                        metadata_depth > 0 &&\r\n                        metadataHandler &&\r\n                        'onOpenTag' in metadataHandler\r\n                        ) {\r\n\r\n                    /* start of child of metadata element */\r\n\r\n                    var attrs = [];\r\n\r\n                    for (var a in node.attributes) {\r\n                        attrs[node.attributes[a].uri + \" \" + node.attributes[a].local] =\r\n                                {\r\n                                    uri: node.attributes[a].uri,\r\n                                    local: node.attributes[a].local,\r\n                                    value: node.attributes[a].value\r\n                                };\r\n                    }\r\n\r\n                    metadataHandler.onOpenTag(node.uri, node.local, attrs);\r\n\r\n                }\r\n\r\n            }\r\n\r\n        };\r\n\r\n        // parse the document\r\n\r\n        p.write(xmlstring).close();\r\n\r\n        // all referential styling has been flatten, so delete styles\r\n\r\n        delete doc.head.styling.styles;\r\n       \r\n        // create default region if no regions specified\r\n\r\n        var hasRegions = false;\r\n\r\n        /* AFAIK the only way to determine whether an object has members */\r\n\r\n        for (var i in doc.head.layout.regions) {\r\n\r\n            if (doc.head.layout.regions.hasOwnProperty(i)) {\r\n                hasRegions = true;\r\n                break;\r\n            }\r\n\r\n        }\r\n\r\n        if (!hasRegions) {\r\n\r\n            /* create default region */\r\n\r\n            var dr = Region.prototype.createDefaultRegion(doc.lang);\r\n\r\n            doc.head.layout.regions[dr.id] = dr;\r\n\r\n        }\r\n\r\n        /* resolve desired timing for regions */\r\n\r\n        for (var region_i in doc.head.layout.regions) {\r\n\r\n            if (! doc.head.layout.regions.hasOwnProperty(region_i)) continue;\r\n\r\n            resolveTiming(doc, doc.head.layout.regions[region_i], null, null);\r\n\r\n        }\r\n\r\n        /* resolve desired timing for content elements */\r\n\r\n        if (doc.body) {\r\n            resolveTiming(doc, doc.body, null, null);\r\n        }\r\n\r\n        /* remove undefined spans in ruby containers */\r\n\r\n        if (doc.body) {\r\n            cleanRubyContainers(doc.body);\r\n        }\r\n\r\n        return doc;\r\n    };\r\n\r\n    function cleanRubyContainers(element) {\r\n        \r\n        if (! ('contents' in element)) return;\r\n\r\n        var rubyval = 'styleAttrs' in element ? element.styleAttrs[imscStyles.byName.ruby.qname] : null;\r\n\r\n        var isrubycontainer = (element.kind === 'span' && (rubyval === \"container\" || rubyval === \"textContainer\" || rubyval === \"baseContainer\"));\r\n\r\n        for (var i = element.contents.length - 1; i >= 0; i--) {\r\n\r\n            if (isrubycontainer && !('styleAttrs' in element.contents[i] && imscStyles.byName.ruby.qname in element.contents[i].styleAttrs)) {\r\n\r\n                /* prune undefined <span> in ruby containers */\r\n\r\n                delete element.contents[i];\r\n\r\n            } else {\r\n\r\n                cleanRubyContainers(element.contents[i]);\r\n\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    function resolveTiming(doc, element, prev_sibling, parent) {\r\n\r\n        /* are we in a seq container? */\r\n\r\n        var isinseq = parent && parent.timeContainer === \"seq\";\r\n\r\n        /* determine implicit begin */\r\n\r\n        var implicit_begin = 0; /* default */\r\n\r\n        if (parent) {\r\n\r\n            if (isinseq && prev_sibling) {\r\n\r\n                /*\r\n                 * if seq time container, offset from the previous sibling end\r\n                 */\r\n\r\n                implicit_begin = prev_sibling.end;\r\n\r\n\r\n            } else {\r\n\r\n                implicit_begin = parent.begin;\r\n\r\n            }\r\n\r\n        }\r\n\r\n        /* compute desired begin */\r\n\r\n        element.begin = element.explicit_begin ? element.explicit_begin + implicit_begin : implicit_begin;\r\n\r\n\r\n        /* determine implicit end */\r\n\r\n        var implicit_end = element.begin;\r\n\r\n        var s = null;\r\n\r\n        if (\"sets\" in element) {\r\n\r\n            for (var set_i = 0; set_i < element.sets.length; set_i++) {\r\n\r\n                resolveTiming(doc, element.sets[set_i], s, element);\r\n\r\n                if (element.timeContainer === \"seq\") {\r\n\r\n                    implicit_end = element.sets[set_i].end;\r\n\r\n                } else {\r\n\r\n                    implicit_end = Math.max(implicit_end, element.sets[set_i].end);\r\n\r\n                }\r\n\r\n                s = element.sets[set_i];\r\n\r\n            }\r\n\r\n        }\r\n\r\n        if (!('contents' in element)) {\r\n\r\n            /* anonymous spans and regions and <set> and <br>s and spans with only children text nodes */\r\n\r\n            if (isinseq) {\r\n\r\n                /* in seq container, implicit duration is zero */\r\n\r\n                implicit_end = element.begin;\r\n\r\n            } else {\r\n\r\n                /* in par container, implicit duration is indefinite */\r\n\r\n                implicit_end = Number.POSITIVE_INFINITY;\r\n\r\n            }\r\n\r\n        } else if (\"contents\" in element) {\r\n \r\n            for (var content_i = 0; content_i < element.contents.length; content_i++) {\r\n\r\n                resolveTiming(doc, element.contents[content_i], s, element);\r\n\r\n                if (element.timeContainer === \"seq\") {\r\n\r\n                    implicit_end = element.contents[content_i].end;\r\n\r\n                } else {\r\n\r\n                    implicit_end = Math.max(implicit_end, element.contents[content_i].end);\r\n\r\n                }\r\n\r\n                s = element.contents[content_i];\r\n\r\n            }\r\n\r\n        }\r\n\r\n        /* determine desired end */\r\n        /* it is never made really clear in SMIL that the explicit end is offset by the implicit begin */\r\n\r\n        if (element.explicit_end !== null && element.explicit_dur !== null) {\r\n\r\n            element.end = Math.min(element.begin + element.explicit_dur, implicit_begin + element.explicit_end);\r\n\r\n        } else if (element.explicit_end === null && element.explicit_dur !== null) {\r\n\r\n            element.end = element.begin + element.explicit_dur;\r\n\r\n        } else if (element.explicit_end !== null && element.explicit_dur === null) {\r\n\r\n            element.end = implicit_begin + element.explicit_end;\r\n\r\n        } else {\r\n\r\n            element.end = implicit_end;\r\n        }\r\n\r\n        delete element.explicit_begin;\r\n        delete element.explicit_dur;\r\n        delete element.explicit_end;\r\n\r\n        doc._registerEvent(element);\r\n\r\n    }\r\n\r\n    function ForeignElement(node) {\r\n        this.node = node;\r\n    }\r\n\r\n    function TT() {\r\n        this.events = [];\r\n        this.head = new Head();\r\n        this.body = null;\r\n    }\r\n\r\n    TT.prototype.initFromNode = function (node, xmllang, errorHandler) {\r\n\r\n        /* compute cell resolution */\r\n\r\n        var cr = extractCellResolution(node, errorHandler);\r\n        \r\n        this.cellLength = {\r\n                'h': new imscUtils.ComputedLength(0, 1/cr.h),\r\n                'w': new imscUtils.ComputedLength(1/cr.w, 0)\r\n            };\r\n\r\n        /* extract frame rate and tick rate */\r\n\r\n        var frtr = extractFrameAndTickRate(node, errorHandler);\r\n\r\n        this.effectiveFrameRate = frtr.effectiveFrameRate;\r\n\r\n        this.tickRate = frtr.tickRate;\r\n\r\n        /* extract aspect ratio */\r\n\r\n        this.aspectRatio = extractAspectRatio(node, errorHandler);\r\n\r\n        /* check timebase */\r\n\r\n        var attr = findAttribute(node, imscNames.ns_ttp, \"timeBase\");\r\n\r\n        if (attr !== null && attr !== \"media\") {\r\n\r\n            reportFatal(errorHandler, \"Unsupported time base\");\r\n\r\n        }\r\n\r\n        /* retrieve extent */\r\n\r\n        var e = extractExtent(node, errorHandler);\r\n\r\n        if (e === null) {\r\n\r\n            this.pxLength = {\r\n                'h': null,\r\n                'w': null\r\n            };\r\n\r\n        } else {\r\n\r\n            if (e.h.unit !== \"px\" || e.w.unit !== \"px\") {\r\n                reportFatal(errorHandler, \"Extent on TT must be in px or absent\");\r\n            }\r\n\r\n            this.pxLength = {\r\n                'h': new imscUtils.ComputedLength(0, 1 / e.h.value),\r\n                'w': new imscUtils.ComputedLength(1 / e.w.value, 0)\r\n            };\r\n        }\r\n        \r\n        /** set root container dimensions to (1, 1) arbitrarily\r\n          * the root container is mapped to actual dimensions at rendering\r\n        **/\r\n        \r\n        this.dimensions = {\r\n                'h': new imscUtils.ComputedLength(0, 1),\r\n                'w': new imscUtils.ComputedLength(1, 0)\r\n\r\n        };\r\n\r\n        /* xml:lang */\r\n\r\n        this.lang = xmllang;\r\n\r\n    };\r\n\r\n    /* register a temporal events */\r\n    TT.prototype._registerEvent = function (elem) {\r\n\r\n        /* skip if begin is not < then end */\r\n\r\n        if (elem.end <= elem.begin)\r\n            return;\r\n\r\n        /* index the begin time of the event */\r\n\r\n        var b_i = indexOf(this.events, elem.begin);\r\n\r\n        if (!b_i.found) {\r\n            this.events.splice(b_i.index, 0, elem.begin);\r\n        }\r\n\r\n        /* index the end time of the event */\r\n\r\n        if (elem.end !== Number.POSITIVE_INFINITY) {\r\n\r\n            var e_i = indexOf(this.events, elem.end);\r\n\r\n            if (!e_i.found) {\r\n                this.events.splice(e_i.index, 0, elem.end);\r\n            }\r\n\r\n        }\r\n\r\n    };\r\n\r\n\r\n    /*\r\n     * Retrieves the range of ISD times covered by the document\r\n     * \r\n     * @returns {Array} Array of two elements: min_begin_time and max_begin_time\r\n     * \r\n     */\r\n    TT.prototype.getMediaTimeRange = function () {\r\n\r\n        return [this.events[0], this.events[this.events.length - 1]];\r\n    };\r\n\r\n    /*\r\n     * Returns list of ISD begin times  \r\n     * \r\n     * @returns {Array}\r\n     */\r\n    TT.prototype.getMediaTimeEvents = function () {\r\n\r\n        return this.events;\r\n    };\r\n\r\n    /*\r\n     * Represents a TTML Head element\r\n     */\r\n\r\n    function Head() {\r\n        this.styling = new Styling();\r\n        this.layout = new Layout();\r\n    }\r\n\r\n    /*\r\n     * Represents a TTML Styling element\r\n     */\r\n\r\n    function Styling() {\r\n        this.styles = {};\r\n        this.initials = {};\r\n    }\r\n\r\n    /*\r\n     * Represents a TTML Style element\r\n     */\r\n\r\n    function Style() {\r\n        this.id = null;\r\n        this.styleAttrs = null;\r\n        this.styleRefs = null;\r\n    }\r\n\r\n    Style.prototype.initFromNode = function (node, errorHandler) {\r\n        this.id = elementGetXMLID(node);\r\n        this.styleAttrs = elementGetStyles(node, errorHandler);\r\n        this.styleRefs = elementGetStyleRefs(node);\r\n    };\r\n    \r\n    /*\r\n     * Represents a TTML initial element\r\n     */\r\n\r\n    function Initial() {\r\n        this.styleAttrs = null;\r\n    }\r\n\r\n    Initial.prototype.initFromNode = function (node, errorHandler) {\r\n        \r\n        this.styleAttrs = {};\r\n        \r\n        for (var i in node.attributes) {\r\n\r\n            if (node.attributes[i].uri === imscNames.ns_itts ||\r\n                node.attributes[i].uri === imscNames.ns_ebutts ||\r\n                node.attributes[i].uri === imscNames.ns_tts) {\r\n                \r\n                var qname = node.attributes[i].uri + \" \" + node.attributes[i].local;\r\n                \r\n                this.styleAttrs[qname] = node.attributes[i].value;\r\n\r\n            }\r\n        }\r\n        \r\n    };\r\n\r\n    /*\r\n     * Represents a TTML Layout element\r\n     * \r\n     */\r\n\r\n    function Layout() {\r\n        this.regions = {};\r\n    }\r\n    \r\n    /*\r\n     * Represents a TTML image element\r\n     */\r\n\r\n    function Image(src, type) {\r\n        ContentElement.call(this, 'image');\r\n        this.src = src;\r\n        this.type = type;\r\n    }\r\n\r\n    Image.prototype.initFromNode = function (doc, parent, node, xmllang, errorHandler) {\r\n        this.src = 'src' in node.attributes ? node.attributes.src.value : null;\r\n        \r\n        if (! this.src) {\r\n            reportError(errorHandler, \"Invalid image@src attribute\");\r\n        }\r\n        \r\n        this.type = 'type' in node.attributes ? node.attributes.type.value : null;\r\n        \r\n        if (! this.type) {\r\n            reportError(errorHandler, \"Invalid image@type attribute\");\r\n        }\r\n        \r\n        StyledElement.prototype.initFromNode.call(this, doc, parent, node, errorHandler);\r\n        TimedElement.prototype.initFromNode.call(this, doc, parent, node, errorHandler);\r\n        AnimatedElement.prototype.initFromNode.call(this, doc, parent, node, errorHandler);\r\n        LayoutElement.prototype.initFromNode.call(this, doc, parent, node, errorHandler);\r\n\r\n        this.lang = xmllang;\r\n    };\r\n\r\n    /*\r\n     * TTML element utility functions\r\n     * \r\n     */\r\n\r\n    function ContentElement(kind) {\r\n        this.kind = kind;\r\n    }\r\n\r\n    function IdentifiedElement(id) {\r\n        this.id = id;\r\n    }\r\n\r\n    IdentifiedElement.prototype.initFromNode = function (doc, parent, node, errorHandler) {\r\n        this.id = elementGetXMLID(node);\r\n    };\r\n\r\n    function LayoutElement(id) {\r\n        this.regionID = id;\r\n    }\r\n\r\n    LayoutElement.prototype.initFromNode = function (doc, parent, node, errorHandler) {\r\n        this.regionID = elementGetRegionID(node);\r\n    };\r\n\r\n    function StyledElement(styleAttrs) {\r\n        this.styleAttrs = styleAttrs;\r\n    }\r\n\r\n    StyledElement.prototype.initFromNode = function (doc, parent, node, errorHandler) {\r\n\r\n        this.styleAttrs = elementGetStyles(node, errorHandler);\r\n\r\n        if (doc.head !== null && doc.head.styling !== null) {\r\n            mergeReferencedStyles(doc.head.styling, elementGetStyleRefs(node), this.styleAttrs, errorHandler);\r\n        }\r\n\r\n    };\r\n\r\n    function AnimatedElement(sets) {\r\n        this.sets = sets;\r\n    }\r\n\r\n    AnimatedElement.prototype.initFromNode = function (doc, parent, node, errorHandler) {\r\n        this.sets = [];\r\n    };\r\n\r\n    function ContainerElement(contents) {\r\n        this.contents = contents;\r\n    }\r\n\r\n    ContainerElement.prototype.initFromNode = function (doc, parent, node, errorHandler) {\r\n        this.contents = [];\r\n    };\r\n\r\n    function TimedElement(explicit_begin, explicit_end, explicit_dur) {\r\n        this.explicit_begin = explicit_begin;\r\n        this.explicit_end = explicit_end;\r\n        this.explicit_dur = explicit_dur;\r\n    }\r\n\r\n    TimedElement.prototype.initFromNode = function (doc, parent, node, errorHandler) {\r\n        var t = processTiming(doc, parent, node, errorHandler);\r\n        this.explicit_begin = t.explicit_begin;\r\n        this.explicit_end = t.explicit_end;\r\n        this.explicit_dur = t.explicit_dur;\r\n\r\n        this.timeContainer = elementGetTimeContainer(node, errorHandler);\r\n    };\r\n\r\n\r\n    /*\r\n     * Represents a TTML body element\r\n     */\r\n\r\n\r\n\r\n    function Body() {\r\n        ContentElement.call(this, 'body');\r\n    }\r\n\r\n\r\n    Body.prototype.initFromNode = function (doc, node, xmllang, errorHandler) {\r\n        StyledElement.prototype.initFromNode.call(this, doc, null, node, errorHandler);\r\n        TimedElement.prototype.initFromNode.call(this, doc, null, node, errorHandler);\r\n        AnimatedElement.prototype.initFromNode.call(this, doc, null, node, errorHandler);\r\n        LayoutElement.prototype.initFromNode.call(this, doc, null, node, errorHandler);\r\n        ContainerElement.prototype.initFromNode.call(this, doc, null, node, errorHandler);\r\n\r\n        this.lang = xmllang;\r\n    };\r\n\r\n    /*\r\n     * Represents a TTML div element\r\n     */\r\n\r\n    function Div() {\r\n        ContentElement.call(this, 'div');\r\n    }\r\n\r\n    Div.prototype.initFromNode = function (doc, parent, node, xmllang, errorHandler) {\r\n        StyledElement.prototype.initFromNode.call(this, doc, parent, node, errorHandler);\r\n        TimedElement.prototype.initFromNode.call(this, doc, parent, node, errorHandler);\r\n        AnimatedElement.prototype.initFromNode.call(this, doc, parent, node, errorHandler);\r\n        LayoutElement.prototype.initFromNode.call(this, doc, parent, node, errorHandler);\r\n        ContainerElement.prototype.initFromNode.call(this, doc, parent, node, errorHandler);\r\n\r\n        this.lang = xmllang;\r\n    };\r\n\r\n    /*\r\n     * Represents a TTML p element\r\n     */\r\n\r\n    function P() {\r\n        ContentElement.call(this, 'p');\r\n    }\r\n\r\n    P.prototype.initFromNode = function (doc, parent, node, xmllang, errorHandler) {\r\n        StyledElement.prototype.initFromNode.call(this, doc, parent, node, errorHandler);\r\n        TimedElement.prototype.initFromNode.call(this, doc, parent, node, errorHandler);\r\n        AnimatedElement.prototype.initFromNode.call(this, doc, parent, node, errorHandler);\r\n        LayoutElement.prototype.initFromNode.call(this, doc, parent, node, errorHandler);\r\n        ContainerElement.prototype.initFromNode.call(this, doc, parent, node, errorHandler);\r\n\r\n        this.lang = xmllang;\r\n    };\r\n\r\n    /*\r\n     * Represents a TTML span element\r\n     */\r\n\r\n    function Span() {\r\n        ContentElement.call(this, 'span');\r\n    }\r\n\r\n    Span.prototype.initFromNode = function (doc, parent, node, xmllang, xmlspace, errorHandler) {\r\n        StyledElement.prototype.initFromNode.call(this, doc, parent, node, errorHandler);\r\n        TimedElement.prototype.initFromNode.call(this, doc, parent, node, errorHandler);\r\n        AnimatedElement.prototype.initFromNode.call(this, doc, parent, node, errorHandler);\r\n        LayoutElement.prototype.initFromNode.call(this, doc, parent, node, errorHandler);\r\n        ContainerElement.prototype.initFromNode.call(this, doc, parent, node, errorHandler);\r\n\r\n        this.space = xmlspace;\r\n        this.lang = xmllang;\r\n    };\r\n\r\n    /*\r\n     * Represents a TTML anonymous span element\r\n     */\r\n\r\n    function AnonymousSpan() {\r\n        ContentElement.call(this, 'span');\r\n    }\r\n\r\n    AnonymousSpan.prototype.initFromText = function (doc, parent, text, xmllang, xmlspace, errorHandler) {\r\n        TimedElement.prototype.initFromNode.call(this, doc, parent, null, errorHandler);\r\n\r\n        this.text = text;\r\n        this.space = xmlspace;\r\n        this.lang = xmllang;\r\n    };\r\n\r\n    /*\r\n     * Represents a TTML br element\r\n     */\r\n\r\n    function Br() {\r\n        ContentElement.call(this, 'br');\r\n    }\r\n\r\n    Br.prototype.initFromNode = function (doc, parent, node, xmllang, errorHandler) {\r\n        LayoutElement.prototype.initFromNode.call(this, doc, parent, node, errorHandler);\r\n        TimedElement.prototype.initFromNode.call(this, doc, parent, node, errorHandler);\r\n\r\n        this.lang = xmllang;\r\n    };\r\n\r\n    /*\r\n     * Represents a TTML Region element\r\n     * \r\n     */\r\n\r\n    function Region() {\r\n    }\r\n\r\n    Region.prototype.createDefaultRegion = function (xmllang) {\r\n        var r = new Region();\r\n\r\n        IdentifiedElement.call(r, '');\r\n        StyledElement.call(r, {});\r\n        AnimatedElement.call(r, []);\r\n        TimedElement.call(r, 0, Number.POSITIVE_INFINITY, null);\r\n\r\n        this.lang = xmllang;\r\n\r\n        return r;\r\n    };\r\n\r\n    Region.prototype.initFromNode = function (doc, node, xmllang, errorHandler) {\r\n        IdentifiedElement.prototype.initFromNode.call(this, doc, null, node, errorHandler);\r\n        TimedElement.prototype.initFromNode.call(this, doc, null, node, errorHandler);\r\n        AnimatedElement.prototype.initFromNode.call(this, doc, null, node, errorHandler);\r\n\r\n        /* add specified styles */\r\n\r\n        this.styleAttrs = elementGetStyles(node, errorHandler);\r\n\r\n        /* remember referential styles for merging after nested styling is processed*/\r\n\r\n        this.styleRefs = elementGetStyleRefs(node);\r\n\r\n        /* xml:lang */\r\n\r\n        this.lang = xmllang;\r\n    };\r\n\r\n    /*\r\n     * Represents a TTML Set element\r\n     * \r\n     */\r\n\r\n    function Set() {\r\n    }\r\n\r\n    Set.prototype.initFromNode = function (doc, parent, node, errorHandler) {\r\n\r\n        TimedElement.prototype.initFromNode.call(this, doc, parent, node, errorHandler);\r\n\r\n        var styles = elementGetStyles(node, errorHandler);\r\n\r\n        this.qname = null;\r\n        this.value = null;\r\n\r\n        for (var qname in styles) {\r\n\r\n            if (! styles.hasOwnProperty(qname)) continue;\r\n\r\n            if (this.qname) {\r\n\r\n                reportError(errorHandler, \"More than one style specified on set\");\r\n                break;\r\n\r\n            }\r\n\r\n            this.qname = qname;\r\n            this.value = styles[qname];\r\n\r\n        }\r\n\r\n    };\r\n\r\n    /*\r\n     * Utility functions\r\n     * \r\n     */\r\n\r\n\r\n    function elementGetXMLID(node) {\r\n        return node && 'xml:id' in node.attributes ? node.attributes['xml:id'].value || null : null;\r\n    }\r\n\r\n    function elementGetRegionID(node) {\r\n        return node && 'region' in node.attributes ? node.attributes.region.value : '';\r\n    }\r\n\r\n    function elementGetTimeContainer(node, errorHandler) {\r\n\r\n        var tc = node && 'timeContainer' in node.attributes ? node.attributes.timeContainer.value : null;\r\n\r\n        if ((!tc) || tc === \"par\") {\r\n\r\n            return \"par\";\r\n\r\n        } else if (tc === \"seq\") {\r\n\r\n            return \"seq\";\r\n\r\n        } else {\r\n\r\n            reportError(errorHandler, \"Illegal value of timeContainer (assuming 'par')\");\r\n\r\n            return \"par\";\r\n\r\n        }\r\n\r\n    }\r\n\r\n    function elementGetStyleRefs(node) {\r\n\r\n        return node && 'style' in node.attributes ? node.attributes.style.value.split(\" \") : [];\r\n\r\n    }\r\n\r\n    function elementGetStyles(node, errorHandler) {\r\n\r\n        var s = {};\r\n\r\n        if (node !== null) {\r\n\r\n            for (var i in node.attributes) {\r\n\r\n                var qname = node.attributes[i].uri + \" \" + node.attributes[i].local;\r\n\r\n                var sa = imscStyles.byQName[qname];\r\n\r\n                if (sa !== undefined) {\r\n\r\n                    var val = sa.parse(node.attributes[i].value);\r\n\r\n                    if (val !== null) {\r\n\r\n                        s[qname] = val;\r\n\r\n                        /* TODO: consider refactoring errorHandler into parse and compute routines */\r\n\r\n                        if (sa === imscStyles.byName.zIndex) {\r\n                            reportWarning(errorHandler, \"zIndex attribute present but not used by IMSC1 since regions do not overlap\");\r\n                        }\r\n\r\n                    } else {\r\n\r\n                        reportError(errorHandler, \"Cannot parse styling attribute \" + qname + \" --> \" + node.attributes[i].value);\r\n\r\n                    }\r\n\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n        return s;\r\n    }\r\n\r\n    function findAttribute(node, ns, name) {\r\n        for (var i in node.attributes) {\r\n\r\n            if (node.attributes[i].uri === ns &&\r\n                    node.attributes[i].local === name) {\r\n\r\n                return node.attributes[i].value;\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    function extractAspectRatio(node, errorHandler) {\r\n\r\n        var ar = findAttribute(node, imscNames.ns_ittp, \"aspectRatio\");\r\n\r\n        if (ar === null) {\r\n            \r\n            ar = findAttribute(node, imscNames.ns_ttp, \"displayAspectRatio\");\r\n            \r\n        }\r\n\r\n        var rslt = null;\r\n\r\n        if (ar !== null) {\r\n\r\n            var ASPECT_RATIO_RE = /(\\d+)\\s+(\\d+)/;\r\n\r\n            var m = ASPECT_RATIO_RE.exec(ar);\r\n\r\n            if (m !== null) {\r\n\r\n                var w = parseInt(m[1]);\r\n\r\n                var h = parseInt(m[2]);\r\n\r\n                if (w !== 0 && h !== 0) {\r\n\r\n                    rslt = w / h;\r\n\r\n                } else {\r\n\r\n                    reportError(errorHandler, \"Illegal aspectRatio values (ignoring)\");\r\n                }\r\n\r\n            } else {\r\n\r\n                reportError(errorHandler, \"Malformed aspectRatio attribute (ignoring)\");\r\n            }\r\n\r\n        }\r\n\r\n        return rslt;\r\n\r\n    }\r\n\r\n    /*\r\n     * Returns the cellResolution attribute from a node\r\n     * \r\n     */\r\n    function extractCellResolution(node, errorHandler) {\r\n\r\n        var cr = findAttribute(node, imscNames.ns_ttp, \"cellResolution\");\r\n\r\n        // initial value\r\n\r\n        var h = 15;\r\n        var w = 32;\r\n\r\n        if (cr !== null) {\r\n\r\n            var CELL_RESOLUTION_RE = /(\\d+) (\\d+)/;\r\n\r\n            var m = CELL_RESOLUTION_RE.exec(cr);\r\n\r\n            if (m !== null) {\r\n\r\n                w = parseInt(m[1]);\r\n\r\n                h = parseInt(m[2]);\r\n\r\n            } else {\r\n\r\n                reportWarning(errorHandler, \"Malformed cellResolution value (using initial value instead)\");\r\n\r\n            }\r\n\r\n        }\r\n\r\n        return {'w': w, 'h': h};\r\n\r\n    }\r\n\r\n\r\n    function extractFrameAndTickRate(node, errorHandler) {\r\n\r\n        // subFrameRate is ignored per IMSC1 specification\r\n\r\n        // extract frame rate\r\n\r\n        var fps_attr = findAttribute(node, imscNames.ns_ttp, \"frameRate\");\r\n\r\n        // initial value\r\n\r\n        var fps = 30;\r\n\r\n        // match variable\r\n\r\n        var m;\r\n\r\n        if (fps_attr !== null) {\r\n\r\n            var FRAME_RATE_RE = /(\\d+)/;\r\n\r\n            m = FRAME_RATE_RE.exec(fps_attr);\r\n\r\n            if (m !== null) {\r\n\r\n                fps = parseInt(m[1]);\r\n\r\n            } else {\r\n\r\n                reportWarning(errorHandler, \"Malformed frame rate attribute (using initial value instead)\");\r\n            }\r\n\r\n        }\r\n\r\n        // extract frame rate multiplier\r\n\r\n        var frm_attr = findAttribute(node, imscNames.ns_ttp, \"frameRateMultiplier\");\r\n\r\n        // initial value\r\n\r\n        var frm = 1;\r\n\r\n        if (frm_attr !== null) {\r\n\r\n            var FRAME_RATE_MULT_RE = /(\\d+) (\\d+)/;\r\n\r\n            m = FRAME_RATE_MULT_RE.exec(frm_attr);\r\n\r\n            if (m !== null) {\r\n\r\n                frm = parseInt(m[1]) / parseInt(m[2]);\r\n\r\n            } else {\r\n\r\n                reportWarning(errorHandler, \"Malformed frame rate multiplier attribute (using initial value instead)\");\r\n            }\r\n\r\n        }\r\n\r\n        var efps = frm * fps;\r\n\r\n        // extract tick rate\r\n\r\n        var tr = 1;\r\n\r\n        var trattr = findAttribute(node, imscNames.ns_ttp, \"tickRate\");\r\n\r\n        if (trattr === null) {\r\n\r\n            if (fps_attr !== null)\r\n                tr = efps;\r\n\r\n        } else {\r\n\r\n            var TICK_RATE_RE = /(\\d+)/;\r\n\r\n            m = TICK_RATE_RE.exec(trattr);\r\n\r\n            if (m !== null) {\r\n\r\n                tr = parseInt(m[1]);\r\n\r\n            } else {\r\n\r\n                reportWarning(errorHandler, \"Malformed tick rate attribute (using initial value instead)\");\r\n            }\r\n\r\n        }\r\n\r\n        return {effectiveFrameRate: efps, tickRate: tr};\r\n\r\n    }\r\n\r\n    function extractExtent(node, errorHandler) {\r\n\r\n        var attr = findAttribute(node, imscNames.ns_tts, \"extent\");\r\n\r\n        if (attr === null)\r\n            return null;\r\n\r\n        var s = attr.split(\" \");\r\n\r\n        if (s.length !== 2) {\r\n\r\n            reportWarning(errorHandler, \"Malformed extent (ignoring)\");\r\n\r\n            return null;\r\n        }\r\n\r\n        var w = imscUtils.parseLength(s[0]);\r\n\r\n        var h = imscUtils.parseLength(s[1]);\r\n\r\n        if (!h || !w) {\r\n\r\n            reportWarning(errorHandler, \"Malformed extent values (ignoring)\");\r\n\r\n            return null;\r\n        }\r\n\r\n        return {'h': h, 'w': w};\r\n\r\n    }\r\n\r\n    function parseTimeExpression(tickRate, effectiveFrameRate, str) {\r\n\r\n        var CLOCK_TIME_FRACTION_RE = /^(\\d{2,}):(\\d\\d):(\\d\\d(?:\\.\\d+)?)$/;\r\n        var CLOCK_TIME_FRAMES_RE = /^(\\d{2,}):(\\d\\d):(\\d\\d)\\:(\\d{2,})$/;\r\n        var OFFSET_FRAME_RE = /^(\\d+(?:\\.\\d+)?)f$/;\r\n        var OFFSET_TICK_RE = /^(\\d+(?:\\.\\d+)?)t$/;\r\n        var OFFSET_MS_RE = /^(\\d+(?:\\.\\d+)?)ms$/;\r\n        var OFFSET_S_RE = /^(\\d+(?:\\.\\d+)?)s$/;\r\n        var OFFSET_H_RE = /^(\\d+(?:\\.\\d+)?)h$/;\r\n        var OFFSET_M_RE = /^(\\d+(?:\\.\\d+)?)m$/;\r\n        var m;\r\n        var r = null;\r\n        if ((m = OFFSET_FRAME_RE.exec(str)) !== null) {\r\n\r\n            if (effectiveFrameRate !== null) {\r\n\r\n                r = parseFloat(m[1]) / effectiveFrameRate;\r\n            }\r\n\r\n        } else if ((m = OFFSET_TICK_RE.exec(str)) !== null) {\r\n\r\n            if (tickRate !== null) {\r\n\r\n                r = parseFloat(m[1]) / tickRate;\r\n            }\r\n\r\n        } else if ((m = OFFSET_MS_RE.exec(str)) !== null) {\r\n\r\n            r = parseFloat(m[1]) / 1000.0;\r\n\r\n        } else if ((m = OFFSET_S_RE.exec(str)) !== null) {\r\n\r\n            r = parseFloat(m[1]);\r\n\r\n        } else if ((m = OFFSET_H_RE.exec(str)) !== null) {\r\n\r\n            r = parseFloat(m[1]) * 3600.0;\r\n\r\n        } else if ((m = OFFSET_M_RE.exec(str)) !== null) {\r\n\r\n            r = parseFloat(m[1]) * 60.0;\r\n\r\n        } else if ((m = CLOCK_TIME_FRACTION_RE.exec(str)) !== null) {\r\n\r\n            r = parseInt(m[1]) * 3600 +\r\n                    parseInt(m[2]) * 60 +\r\n                    parseFloat(m[3]);\r\n\r\n        } else if ((m = CLOCK_TIME_FRAMES_RE.exec(str)) !== null) {\r\n\r\n            /* this assumes that HH:MM:SS is a clock-time-with-fraction */\r\n\r\n            if (effectiveFrameRate !== null) {\r\n\r\n                r = parseInt(m[1]) * 3600 +\r\n                        parseInt(m[2]) * 60 +\r\n                        parseInt(m[3]) +\r\n                        (m[4] === null ? 0 : parseInt(m[4]) / effectiveFrameRate);\r\n            }\r\n\r\n        }\r\n\r\n        return r;\r\n    }\r\n\r\n    function processTiming(doc, parent, node, errorHandler) {\r\n\r\n        /* determine explicit begin */\r\n\r\n        var explicit_begin = null;\r\n\r\n        if (node && 'begin' in node.attributes) {\r\n\r\n            explicit_begin = parseTimeExpression(doc.tickRate, doc.effectiveFrameRate, node.attributes.begin.value);\r\n\r\n            if (explicit_begin === null) {\r\n\r\n                reportWarning(errorHandler, \"Malformed begin value \" + node.attributes.begin.value + \" (using 0)\");\r\n\r\n            }\r\n\r\n        }\r\n\r\n        /* determine explicit duration */\r\n\r\n        var explicit_dur = null;\r\n\r\n        if (node && 'dur' in node.attributes) {\r\n\r\n            explicit_dur = parseTimeExpression(doc.tickRate, doc.effectiveFrameRate, node.attributes.dur.value);\r\n\r\n            if (explicit_dur === null) {\r\n\r\n                reportWarning(errorHandler, \"Malformed dur value \" + node.attributes.dur.value + \" (ignoring)\");\r\n\r\n            }\r\n\r\n        }\r\n\r\n        /* determine explicit end */\r\n\r\n        var explicit_end = null;\r\n\r\n        if (node && 'end' in node.attributes) {\r\n\r\n            explicit_end = parseTimeExpression(doc.tickRate, doc.effectiveFrameRate, node.attributes.end.value);\r\n\r\n            if (explicit_end === null) {\r\n\r\n                reportWarning(errorHandler, \"Malformed end value (ignoring)\");\r\n\r\n            }\r\n\r\n        }\r\n\r\n        return {explicit_begin: explicit_begin,\r\n            explicit_end: explicit_end,\r\n            explicit_dur: explicit_dur};\r\n\r\n    }\r\n\r\n\r\n\r\n    function mergeChainedStyles(styling, style, errorHandler) {\r\n\r\n        while (style.styleRefs.length > 0) {\r\n\r\n            var sref = style.styleRefs.pop();\r\n\r\n            if (!(sref in styling.styles)) {\r\n                reportError(errorHandler, \"Non-existant style id referenced\");\r\n                continue;\r\n            }\r\n\r\n            mergeChainedStyles(styling, styling.styles[sref], errorHandler);\r\n\r\n            mergeStylesIfNotPresent(styling.styles[sref].styleAttrs, style.styleAttrs);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    function mergeReferencedStyles(styling, stylerefs, styleattrs, errorHandler) {\r\n\r\n        for (var i = stylerefs.length - 1; i >= 0; i--) {\r\n\r\n            var sref = stylerefs[i];\r\n\r\n            if (!(sref in styling.styles)) {\r\n                reportError(errorHandler, \"Non-existant style id referenced\");\r\n                continue;\r\n            }\r\n\r\n            mergeStylesIfNotPresent(styling.styles[sref].styleAttrs, styleattrs);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    function mergeStylesIfNotPresent(from_styles, into_styles) {\r\n\r\n        for (var sname in from_styles) {\r\n\r\n            if (! from_styles.hasOwnProperty(sname)) continue;\r\n\r\n            if (sname in into_styles)\r\n                continue;\r\n\r\n            into_styles[sname] = from_styles[sname];\r\n\r\n        }\r\n\r\n    }\r\n\r\n    /* TODO: validate style format at parsing */\r\n\r\n\r\n    /*\r\n     * ERROR HANDLING UTILITY FUNCTIONS\r\n     * \r\n     */\r\n\r\n    function reportInfo(errorHandler, msg) {\r\n\r\n        if (errorHandler && errorHandler.info && errorHandler.info(msg))\r\n            throw msg;\r\n\r\n    }\r\n\r\n    function reportWarning(errorHandler, msg) {\r\n\r\n        if (errorHandler && errorHandler.warn && errorHandler.warn(msg))\r\n            throw msg;\r\n\r\n    }\r\n\r\n    function reportError(errorHandler, msg) {\r\n\r\n        if (errorHandler && errorHandler.error && errorHandler.error(msg))\r\n            throw msg;\r\n\r\n    }\r\n\r\n    function reportFatal(errorHandler, msg) {\r\n\r\n        if (errorHandler && errorHandler.fatal)\r\n            errorHandler.fatal(msg);\r\n\r\n        throw msg;\r\n\r\n    }\r\n\r\n    /*\r\n     * Binary search utility function\r\n     * \r\n     * @typedef {Object} BinarySearchResult\r\n     * @property {boolean} found Was an exact match found?\r\n     * @property {number} index Position of the exact match or insert position\r\n     * \r\n     * @returns {BinarySearchResult}\r\n     */\r\n\r\n    function indexOf(arr, searchval) {\r\n\r\n        var min = 0;\r\n        var max = arr.length - 1;\r\n        var cur;\r\n\r\n        while (min <= max) {\r\n\r\n            cur = Math.floor((min + max) / 2);\r\n\r\n            var curval = arr[cur];\r\n\r\n            if (curval < searchval) {\r\n\r\n                min = cur + 1;\r\n\r\n            } else if (curval > searchval) {\r\n\r\n                max = cur - 1;\r\n\r\n            } else {\r\n\r\n                return {found: true, index: cur};\r\n\r\n            }\r\n\r\n        }\r\n\r\n        return {found: false, index: min};\r\n    }\r\n\r\n\r\n})(typeof exports === 'undefined' ? this.imscDoc = {} : exports,\r\n        typeof sax === 'undefined' ? require(\"sax\") : sax,\r\n        typeof imscNames === 'undefined' ? require(\"./names\") : imscNames,\r\n        typeof imscStyles === 'undefined' ? require(\"./styles\") : imscStyles,\r\n        typeof imscUtils === 'undefined' ? require(\"./utils\") : imscUtils);\r\n","/* \r\n * Copyright (c) 2016, Pierre-Anthony Lemieux <pal@sandflow.com>\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are met:\r\n *\r\n * * Redistributions of source code must retain the above copyright notice, this\r\n *   list of conditions and the following disclaimer.\r\n * * Redistributions in binary form must reproduce the above copyright notice,\r\n *   this list of conditions and the following disclaimer in the documentation\r\n *   and/or other materials provided with the distribution.\r\n *\r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\r\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\r\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\r\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\r\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\r\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\r\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\r\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\r\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n * POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\n/**\r\n * @module imscHTML\r\n */\r\n\r\nvar browserIsFirefox = /firefox/i.test(navigator.userAgent);\r\n\r\n;\r\n(function (imscHTML, imscNames, imscStyles) {\r\n\r\n    /**\r\n     * Function that maps <pre>smpte:background</pre> URIs to URLs resolving to image resource\r\n     * @callback IMGResolver\r\n     * @param {string} <pre>smpte:background</pre> URI\r\n     * @return {string} PNG resource URL\r\n     */\r\n\r\n\r\n    /**\r\n     * Renders an ISD object (returned by <pre>generateISD()</pre>) into a \r\n     * parent element, that must be attached to the DOM. The ISD will be rendered\r\n     * into a child <pre>div</pre>\r\n     * with heigh and width equal to the clientHeight and clientWidth of the element,\r\n     * unless explicitly specified otherwise by the caller. Images URIs specified \r\n     * by <pre>smpte:background</pre> attributes are mapped to image resource URLs\r\n     * by an <pre>imgResolver</pre> function. The latter takes the value of <code>smpte:background</code>\r\n     * attribute and an <code>img</code> DOM element as input, and is expected to\r\n     * set the <code>src</code> attribute of the <code>img</code> to the absolute URI of the image.\r\n     * <pre>displayForcedOnlyMode</pre> sets the (boolean)\r\n     * value of the IMSC1 displayForcedOnlyMode parameter. The function returns\r\n     * an opaque object that should passed in <code>previousISDState</code> when this function\r\n     * is called for the next ISD, otherwise <code>previousISDState</code> should be set to \r\n     * <code>null</code>.\r\n     * \r\n     * @param {Object} isd ISD to be rendered\r\n     * @param {Object} element Element into which the ISD is rendered\r\n     * @param {?IMGResolver} imgResolver Resolve <pre>smpte:background</pre> URIs into URLs.\r\n     * @param {?number} eheight Height (in pixel) of the child <div>div</div> or null \r\n     *                  to use clientHeight of the parent element\r\n     * @param {?number} ewidth Width (in pixel) of the child <div>div</div> or null\r\n     *                  to use clientWidth of the parent element\r\n     * @param {?boolean} displayForcedOnlyMode Value of the IMSC1 displayForcedOnlyMode parameter,\r\n     *                   or false if null         \r\n     * @param {?module:imscUtils.ErrorHandler} errorHandler Error callback\r\n     * @param {Object} previousISDState State saved during processing of the previous ISD, or null if initial call\r\n     * @param {?boolean} enableRollUp Enables roll-up animations (see CEA 708)\r\n     * @return {Object} ISD state to be provided when this funtion is called for the next ISD\r\n     */\r\n\r\n    imscHTML.render = function (isd,\r\n            element,\r\n            imgResolver,\r\n            eheight,\r\n            ewidth,\r\n            displayForcedOnlyMode,\r\n            errorHandler,\r\n            previousISDState,\r\n            enableRollUp\r\n            ) {\r\n\r\n        /* maintain aspect ratio if specified */\r\n\r\n        var height = eheight || element.clientHeight;\r\n        var width = ewidth || element.clientWidth;\r\n\r\n        if (isd.aspectRatio !== null) {\r\n\r\n            var twidth = height * isd.aspectRatio;\r\n\r\n            if (twidth > width) {\r\n\r\n                height = Math.round(width / isd.aspectRatio);\r\n\r\n            } else {\r\n\r\n                width = twidth;\r\n\r\n            }\r\n\r\n        }\r\n\r\n        var rootcontainer = document.createElement(\"div\");\r\n\r\n        rootcontainer.style.position = \"relative\";\r\n        rootcontainer.style.width = width + \"px\";\r\n        rootcontainer.style.height = height + \"px\";\r\n        rootcontainer.style.margin = \"auto\";\r\n        rootcontainer.style.top = 0;\r\n        rootcontainer.style.bottom = 0;\r\n        rootcontainer.style.left = 0;\r\n        rootcontainer.style.right = 0;\r\n        rootcontainer.style.zIndex = 0;\r\n\r\n        var context = {\r\n            h: height,\r\n            w: width,\r\n            regionH: null,\r\n            regionW: null,\r\n            imgResolver: imgResolver,\r\n            displayForcedOnlyMode: displayForcedOnlyMode || false,\r\n            isd: isd,\r\n            errorHandler: errorHandler,\r\n            previousISDState: previousISDState,\r\n            enableRollUp: enableRollUp || false,\r\n            currentISDState: {},\r\n            flg: null, /* current fillLineGap value if active, null otherwise */\r\n            lp: null, /* current linePadding value if active, null otherwise */\r\n            mra: null, /* current multiRowAlign value if active, null otherwise */\r\n            ipd: null, /* inline progression direction (lr, rl, tb) */\r\n            bpd: null, /* block progression direction (lr, rl, tb) */\r\n            ruby: null, /* is ruby present in a <p> */\r\n            textEmphasis: null, /* is textEmphasis present in a <p> */\r\n            rubyReserve: null /* is rubyReserve applicable to a <p> */\r\n        };\r\n\r\n        element.appendChild(rootcontainer);\r\n\r\n        if (\"contents\" in isd) {\r\n\r\n            for (var i = 0; i < isd.contents.length; i++) {\r\n\r\n                processElement(context, rootcontainer, isd.contents[i], isd);\r\n\r\n            }\r\n\r\n        }\r\n\r\n        return context.currentISDState;\r\n\r\n    };\r\n\r\n    function processElement(context, dom_parent, isd_element, isd_parent) {\r\n\r\n        var e;\r\n\r\n        if (isd_element.kind === 'region') {\r\n\r\n            e = document.createElement(\"div\");\r\n            e.style.position = \"absolute\";\r\n\r\n        } else if (isd_element.kind === 'body') {\r\n\r\n            e = document.createElement(\"div\");\r\n\r\n        } else if (isd_element.kind === 'div') {\r\n\r\n            e = document.createElement(\"div\");\r\n\r\n        } else if (isd_element.kind === 'image') {\r\n\r\n            e = document.createElement(\"img\");\r\n\r\n            if (context.imgResolver !== null && isd_element.src !== null) {\r\n\r\n                var uri = context.imgResolver(isd_element.src, e);\r\n\r\n                if (uri)\r\n                    e.src = uri;\r\n\r\n                e.height = context.regionH;\r\n                e.width = context.regionW;\r\n\r\n            }\r\n\r\n        } else if (isd_element.kind === 'p') {\r\n\r\n            e = document.createElement(\"p\");\r\n\r\n        } else if (isd_element.kind === 'span') {\r\n\r\n            if (isd_element.styleAttrs[imscStyles.byName.ruby.qname] === \"container\") {\r\n\r\n                e = document.createElement(\"ruby\");\r\n\r\n                context.ruby = true;\r\n\r\n            } else if (isd_element.styleAttrs[imscStyles.byName.ruby.qname] === \"base\") {\r\n\r\n                e = document.createElement(\"span\"); // rb element is deprecated in HTML\r\n\r\n            } else if (isd_element.styleAttrs[imscStyles.byName.ruby.qname] === \"text\") {\r\n\r\n                e = document.createElement(\"rt\");\r\n\r\n\r\n            } else if (isd_element.styleAttrs[imscStyles.byName.ruby.qname] === \"baseContainer\") {\r\n\r\n                e = document.createElement(\"rbc\");\r\n\r\n\r\n            } else if (isd_element.styleAttrs[imscStyles.byName.ruby.qname] === \"textContainer\") {\r\n\r\n                e = document.createElement(\"rtc\");\r\n\r\n\r\n            } else if (isd_element.styleAttrs[imscStyles.byName.ruby.qname] === \"delimiter\") {\r\n\r\n                /* ignore rp */\r\n\r\n                return;\r\n\r\n            } else {\r\n\r\n                e = document.createElement(\"span\");\r\n\r\n            }\r\n\r\n            //e.textContent = isd_element.text;\r\n\r\n        } else if (isd_element.kind === 'br') {\r\n\r\n            e = document.createElement(\"br\");\r\n\r\n        }\r\n\r\n        if (!e) {\r\n\r\n            reportError(context.errorHandler, \"Error processing ISD element kind: \" + isd_element.kind);\r\n\r\n            return;\r\n\r\n        }\r\n\r\n        /* set language */\r\n\r\n        if (isd_element.lang) {\r\n\r\n            if (isd_element.kind === 'region' || isd_element.lang !== isd_parent.lang) {\r\n                e.lang = isd_element.lang;\r\n            }\r\n\r\n        }\r\n\r\n        /* add to parent */\r\n\r\n        dom_parent.appendChild(e);\r\n\r\n        /* override UA default margin */\r\n        /* TODO: should apply to <p> only */\r\n\r\n        e.style.margin = \"0\";\r\n\r\n        /* determine ipd and bpd */\r\n\r\n        if (isd_element.kind === \"region\") {\r\n\r\n            var wdir = isd_element.styleAttrs[imscStyles.byName.writingMode.qname];\r\n\r\n            if (wdir === \"lrtb\" || wdir === \"lr\") {\r\n\r\n                context.ipd = \"lr\";\r\n                context.bpd = \"tb\";\r\n\r\n            } else if (wdir === \"rltb\" || wdir === \"rl\") {\r\n\r\n                context.ipd = \"rl\";\r\n                context.bpd = \"tb\";\r\n\r\n            } else if (wdir === \"tblr\") {\r\n\r\n                context.ipd = \"tb\";\r\n                context.bpd = \"lr\";\r\n\r\n            } else if (wdir === \"tbrl\" || wdir === \"tb\") {\r\n\r\n                context.ipd = \"tb\";\r\n                context.bpd = \"rl\";\r\n\r\n            }\r\n \r\n        } else if (isd_element.kind === \"p\" && context.bpd === \"tb\") {\r\n\r\n            var pdir = isd_element.styleAttrs[imscStyles.byName.direction.qname];\r\n\r\n            context.ipd = pdir === \"ltr\" ? \"lr\" : \"rl\"; \r\n \r\n        }\r\n\r\n        /* tranform TTML styles to CSS styles */\r\n\r\n        for (var i = 0; i < STYLING_MAP_DEFS.length; i++) {\r\n\r\n            var sm = STYLING_MAP_DEFS[i];\r\n\r\n            var attr = isd_element.styleAttrs[sm.qname];\r\n\r\n            if (attr !== undefined && sm.map !== null) {\r\n\r\n                sm.map(context, e, isd_element, attr);\r\n\r\n            }\r\n\r\n        }\r\n\r\n        var proc_e = e;\r\n\r\n        /* do we have linePadding ? */\r\n\r\n        var lp = isd_element.styleAttrs[imscStyles.byName.linePadding.qname];\r\n\r\n        if (lp && (! lp.isZero())) {\r\n\r\n            var plength = lp.toUsedLength(context.w, context.h);\r\n\r\n\r\n            if (plength > 0) {\r\n                \r\n                /* apply padding to the <p> so that line padding does not cause line wraps */\r\n\r\n                var padmeasure = Math.ceil(plength) + \"px\";\r\n\r\n                if (context.bpd === \"tb\") {\r\n\r\n                    proc_e.style.paddingLeft = padmeasure;\r\n                    proc_e.style.paddingRight = padmeasure;\r\n\r\n                } else {\r\n\r\n                    proc_e.style.paddingTop = padmeasure;\r\n                    proc_e.style.paddingBottom = padmeasure;\r\n\r\n                }\r\n\r\n                context.lp = lp;\r\n            }\r\n        }\r\n\r\n        // do we have multiRowAlign?\r\n\r\n        var mra = isd_element.styleAttrs[imscStyles.byName.multiRowAlign.qname];\r\n\r\n        if (mra && mra !== \"auto\") {\r\n\r\n            /* create inline block to handle multirowAlign */\r\n\r\n            var s = document.createElement(\"span\");\r\n\r\n            s.style.display = \"inline-block\";\r\n\r\n            s.style.textAlign = mra;\r\n\r\n            e.appendChild(s);\r\n\r\n            proc_e = s;\r\n\r\n            context.mra = mra;\r\n\r\n        }\r\n\r\n        /* do we have rubyReserve? */\r\n\r\n        var rr = isd_element.styleAttrs[imscStyles.byName.rubyReserve.qname];\r\n\r\n        if (rr && rr[0] !== \"none\") {\r\n            context.rubyReserve = rr;\r\n        }\r\n\r\n\r\n        /* remember we are filling line gaps */\r\n\r\n        if (isd_element.styleAttrs[imscStyles.byName.fillLineGap.qname]) {\r\n            context.flg = true;\r\n        }\r\n\r\n\r\n        if (isd_element.kind === \"span\" && isd_element.text) {\r\n\r\n            var te = isd_element.styleAttrs[imscStyles.byName.textEmphasis.qname];\r\n\r\n            if (te && te.style !== \"none\") {\r\n\r\n                context.textEmphasis = true;\r\n\r\n            }\r\n\r\n            if (imscStyles.byName.textCombine.qname in isd_element.styleAttrs &&\r\n                    isd_element.styleAttrs[imscStyles.byName.textCombine.qname] === \"all\") {\r\n\r\n                /* ignore tate-chu-yoku since line break cannot happen within */\r\n                e.textContent = isd_element.text;\r\n                e._isd_element = isd_element;\r\n\r\n                if (te) {\r\n\r\n                    applyTextEmphasis(context, e, isd_element, te);\r\n\r\n                };\r\n\r\n            } else {\r\n\r\n                // wrap characters in spans to find the line wrap locations\r\n\r\n                var cbuf = '';\r\n\r\n                for (var j = 0; j < isd_element.text.length; j++) {\r\n\r\n                    cbuf += isd_element.text.charAt(j);\r\n\r\n                    var cc = isd_element.text.charCodeAt(j);\r\n\r\n                    if (cc < 0xD800 || cc > 0xDBFF || j === isd_element.text.length - 1) {\r\n\r\n                        /* wrap the character(s) in a span unless it is a high surrogate */\r\n\r\n                        var span = document.createElement(\"span\");\r\n\r\n                        span.textContent = cbuf;\r\n\r\n                        /* apply textEmphasis */\r\n                        \r\n                        if (te) {\r\n\r\n                            applyTextEmphasis(context, span, isd_element, te);\r\n\r\n                        };\r\n    \r\n                        e.appendChild(span);\r\n\r\n                        cbuf = '';\r\n\r\n                        //For the sake of merging these back together, record what isd element generated it.\r\n                        span._isd_element = isd_element;\r\n                    }\r\n\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        /* process the children of the ISD element */\r\n\r\n        if (\"contents\" in isd_element) {\r\n\r\n            for (var k = 0; k < isd_element.contents.length; k++) {\r\n\r\n                processElement(context, proc_e, isd_element.contents[k], isd_element);\r\n\r\n            }\r\n\r\n        }\r\n\r\n        /* list of lines */\r\n\r\n        var linelist = [];\r\n\r\n\r\n        /* paragraph processing */\r\n        /* TODO: linePadding only supported for horizontal scripts */\r\n\r\n        if (isd_element.kind === \"p\") {\r\n\r\n            constructLineList(context, proc_e, linelist, null);\r\n\r\n            /* apply rubyReserve */\r\n\r\n            if (context.rubyReserve) {\r\n\r\n                applyRubyReserve(linelist, context);\r\n\r\n                context.rubyReserve = null;\r\n\r\n            }\r\n\r\n            /* apply tts:rubyPosition=\"outside\" */\r\n\r\n            if (context.ruby || context.rubyReserve) {\r\n\r\n                applyRubyPosition(linelist, context);\r\n\r\n                context.ruby = null;\r\n\r\n            }\r\n\r\n            /* apply text emphasis \"outside\" position */\r\n\r\n            if (context.textEmphasis) {\r\n\r\n                applyTextEmphasisOutside(linelist, context);\r\n\r\n                context.textEmphasis = null;\r\n\r\n            }\r\n\r\n            /* insert line breaks for multirowalign */\r\n\r\n            if (context.mra) {\r\n\r\n                applyMultiRowAlign(linelist);\r\n\r\n                context.mra = null;\r\n\r\n            }\r\n\r\n            /* add linepadding */\r\n\r\n            if (context.lp) {\r\n\r\n                applyLinePadding(linelist, context.lp.toUsedLength(context.w, context.h), context);\r\n\r\n                context.lp = null;\r\n\r\n            }\r\n\r\n            mergeSpans(linelist, context); // The earlier we can do this the less processing there will be.\r\n\r\n            /* fill line gaps linepadding */\r\n\r\n            if (context.flg) {\r\n\r\n                var par_edges = rect2edges(proc_e.getBoundingClientRect(), context);\r\n\r\n                applyFillLineGap(linelist, par_edges.before, par_edges.after, context, proc_e);\r\n\r\n                context.flg = null;\r\n\r\n            }\r\n\r\n        }\r\n\r\n\r\n        /* region processing */\r\n\r\n        if (isd_element.kind === \"region\") {\r\n\r\n            /* perform roll up if needed */\r\n            if ((context.bpd === \"tb\") &&\r\n                    context.enableRollUp &&\r\n                    isd_element.contents.length > 0 &&\r\n                    isd_element.styleAttrs[imscStyles.byName.displayAlign.qname] === 'after') {\r\n\r\n                /* build line list */\r\n                constructLineList(context, proc_e, linelist, null);\r\n\r\n                /* horrible hack, perhaps default region id should be underscore everywhere? */\r\n\r\n                var rid = isd_element.id === '' ? '_' : isd_element.id;\r\n\r\n                var rb = new RegionPBuffer(rid, linelist);\r\n\r\n                context.currentISDState[rb.id] = rb;\r\n\r\n                if (context.previousISDState &&\r\n                        rb.id in context.previousISDState &&\r\n                        context.previousISDState[rb.id].plist.length > 0 &&\r\n                        rb.plist.length > 1 &&\r\n                        rb.plist[rb.plist.length - 2].text ===\r\n                        context.previousISDState[rb.id].plist[context.previousISDState[rb.id].plist.length - 1].text) {\r\n\r\n                    var body_elem = e.firstElementChild;\r\n\r\n                    var h = rb.plist[rb.plist.length - 1].after - rb.plist[rb.plist.length - 1].before;\r\n\r\n                    body_elem.style.bottom = \"-\" + h + \"px\";\r\n                    body_elem.style.transition = \"transform 0.4s\";\r\n                    body_elem.style.position = \"relative\";\r\n                    body_elem.style.transform = \"translateY(-\" + h + \"px)\";\r\n\r\n                }\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    function mergeSpans(lineList, context) {\r\n\r\n        for (var i = 0; i < lineList.length; i++) {\r\n\r\n            var line = lineList[i];\r\n\r\n            for (var j = 1; j < line.elements.length;) {\r\n\r\n                var previous = line.elements[j - 1];\r\n                var span = line.elements[j];\r\n\r\n                if (spanMerge(previous.node, span.node, context)) {\r\n\r\n                    //removed from DOM by spanMerge(), remove from the list too.\r\n                    line.elements.splice(j, 1);\r\n                    continue;\r\n\r\n                } else {\r\n\r\n                    j++;\r\n\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        // Copy backgroundColor to each span so that fillLineGap will apply padding to elements with the right background\r\n        var thisNode, ancestorBackgroundColor;\r\n        var clearTheseBackgrounds = [];\r\n\r\n        for (var l = 0; l < lineList.length; l++) {\r\n\r\n            for (var el = 0; el < lineList[l].elements.length; el++) {\r\n\r\n                thisNode = lineList[l].elements[el].node;\r\n                ancestorBackgroundColor = getSpanAncestorColor(thisNode, clearTheseBackgrounds, false);\r\n\r\n                if (ancestorBackgroundColor) {\r\n\r\n                    thisNode.style.backgroundColor = ancestorBackgroundColor;\r\n\r\n                }\r\n            }\r\n        }\r\n\r\n        for (var bi = 0; bi < clearTheseBackgrounds.length; bi++) {\r\n\r\n            clearTheseBackgrounds[bi].style.backgroundColor = \"\";\r\n\r\n        }\r\n    }\r\n\r\n    function getSpanAncestorColor(element, ancestorList, isAncestor) {\r\n\r\n        if (element.style.backgroundColor) {\r\n\r\n            if (isAncestor && !ancestorList.includes(element)) {\r\n\r\n                ancestorList.push(element);\r\n\r\n            }\r\n            return element.style.backgroundColor;\r\n\r\n        } else {\r\n\r\n            if (element.parentElement.nodeName === \"SPAN\" ||\r\n                element.parentElement.nodeName === \"RUBY\" ||\r\n                element.parentElement.nodeName === \"RBC\" ||\r\n                element.parentElement.nodeName === \"RTC\" ||\r\n                element.parentElement.nodeName === \"RT\") {\r\n\r\n                return getSpanAncestorColor(element.parentElement, ancestorList, true);\r\n\r\n            }\r\n\r\n        }\r\n\r\n        return undefined;\r\n    }\r\n\r\n    function spanMerge(first, second, context) {\r\n\r\n        if (first.tagName === \"SPAN\" &&\r\n            second.tagName === \"SPAN\" &&\r\n            first._isd_element === second._isd_element) {\r\n                if (! first._isd_element) {\r\n                    /* we should never get here since every span should have a source ISD element */\r\n                    reportError(context.errorHandler, \"Internal error: HTML span is not linked to a source element; cannot merge spans.\");\r\n                    return false;\r\n                }\r\n\r\n                first.textContent += second.textContent;\r\n\r\n                for (var i = 0; i < second.style.length; i++) {\r\n\r\n                    var styleName = second.style[i];\r\n                    if (styleName.indexOf(\"border\") >= 0 || \r\n                        styleName.indexOf(\"padding\") >= 0 ||\r\n                        styleName.indexOf(\"margin\") >= 0) {\r\n\r\n                        first.style[styleName] = second.style[styleName];\r\n\r\n                    }\r\n                }\r\n\r\n                second.parentElement.removeChild(second);\r\n\r\n                return true;\r\n            }\r\n\r\n        return false;\r\n    }\r\n\r\n    function applyLinePadding(lineList, lp, context) {\r\n\r\n        if (lineList === null) return;\r\n\r\n        for (var i = 0; i < lineList.length; i++) {\r\n\r\n            var l = lineList[i].elements.length;\r\n\r\n            var pospadpxlen = Math.ceil(lp) + \"px\";\r\n\r\n            var negpadpxlen = \"-\" + Math.ceil(lp) + \"px\";\r\n\r\n            if (l !== 0) {\r\n\r\n                var se = lineList[i].elements[lineList[i].start_elem];\r\n\r\n                var ee = lineList[i].elements[lineList[i].end_elem];\r\n\r\n                if (se === ee) {\r\n\r\n                    // Check to see if there's any background at all\r\n                    var elementBoundingRect = se.node.getBoundingClientRect();\r\n                    \r\n                    if (elementBoundingRect.width == 0 || elementBoundingRect.height == 0) {\r\n\r\n                        // There's no background on this line, move on.\r\n                        continue;\r\n\r\n                    }\r\n\r\n                }\r\n\r\n                // Start element\r\n                if (context.ipd === \"lr\") {\r\n\r\n                    se.node.style.marginLeft = negpadpxlen;\r\n                    se.node.style.paddingLeft = pospadpxlen;\r\n\r\n                } else if (context.ipd === \"rl\") {\r\n\r\n                    se.node.style.paddingRight = pospadpxlen;\r\n                    se.node.style.marginRight = negpadpxlen;\r\n\r\n                } else if (context.ipd === \"tb\") {\r\n\r\n                    se.node.style.paddingTop = pospadpxlen;\r\n                    se.node.style.marginTop = negpadpxlen;\r\n\r\n                }\r\n\r\n                // End element\r\n                if (context.ipd === \"lr\") {\r\n\r\n                    // Firefox has a problem with line-breaking when a negative margin is applied.\r\n                    // The positioning will be wrong but don't apply when on firefox.\r\n                    // https://bugzilla.mozilla.org/show_bug.cgi?id=1502610\r\n                    if (!browserIsFirefox) {\r\n                        ee.node.style.marginRight = negpadpxlen;\r\n                    }\r\n                    ee.node.style.paddingRight = pospadpxlen;\r\n\r\n                } else if (context.ipd === \"rl\") {\r\n\r\n                    ee.node.style.paddingLeft = pospadpxlen;\r\n                    if (!browserIsFirefox) {\r\n                        ee.node.style.marginLeft = negpadpxlen;\r\n                    }\r\n\r\n                } else if (context.ipd === \"tb\") {\r\n\r\n                    ee.node.style.paddingBottom = pospadpxlen;\r\n                    ee.node.style.marginBottom = negpadpxlen;\r\n\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    function applyMultiRowAlign(lineList) {\r\n\r\n        /* apply an explicit br to all but the last line */\r\n\r\n        for (var i = 0; i < lineList.length - 1; i++) {\r\n\r\n            var l = lineList[i].elements.length;\r\n\r\n            if (l !== 0 && lineList[i].br === false) {\r\n                var br = document.createElement(\"br\");\r\n\r\n                var lastnode = lineList[i].elements[l - 1].node;\r\n\r\n                lastnode.parentElement.insertBefore(br, lastnode.nextSibling);\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    function applyTextEmphasisOutside(lineList, context) {\r\n\r\n        /* supports \"outside\" only */\r\n\r\n        for (var i = 0; i < lineList.length; i++) {\r\n\r\n            for (var j = 0; j < lineList[i].te.length; j++) {\r\n\r\n                /* skip if position already set */\r\n\r\n                if (lineList[i].te[j].style[TEXTEMPHASISPOSITION_PROP] &&\r\n                    lineList[i].te[j].style[TEXTEMPHASISPOSITION_PROP] !== \"none\")\r\n                    continue;\r\n\r\n                var pos;\r\n\r\n                if (context.bpd === \"tb\") {\r\n\r\n                    pos = (i === 0) ? \"left over\" : \"left under\";\r\n\r\n\r\n                } else {\r\n\r\n                    if (context.bpd === \"rl\") {\r\n\r\n                        pos = (i === 0) ? \"right under\" : \"left under\";\r\n\r\n                    } else {\r\n\r\n                        pos = (i === 0) ? \"left under\" : \"right under\";\r\n\r\n                    }\r\n\r\n                }\r\n\r\n                lineList[i].te[j].style[TEXTEMPHASISPOSITION_PROP] = pos;\r\n\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    function applyRubyPosition(lineList, context) {\r\n\r\n        for (var i = 0; i < lineList.length; i++) {\r\n\r\n            for (var j = 0; j < lineList[i].rbc.length; j++) {\r\n\r\n                /* skip if ruby-position already set */\r\n\r\n                if (lineList[i].rbc[j].style[RUBYPOSITION_PROP])\r\n                    continue;\r\n\r\n                var pos;\r\n\r\n                if (RUBYPOSITION_ISWK) {\r\n\r\n                    /* WebKit exception */\r\n\r\n                    pos = (i === 0) ? \"before\" : \"after\";\r\n\r\n                } else if (context.bpd === \"tb\") {\r\n\r\n                    pos = (i === 0) ? \"over\" : \"under\";\r\n\r\n\r\n                } else {\r\n\r\n                    if (context.bpd === \"rl\") {\r\n\r\n                        pos = (i === 0) ? \"over\" : \"under\";\r\n\r\n                    } else {\r\n\r\n                        pos = (i === 0) ? \"under\" : \"over\";\r\n\r\n                    }\r\n\r\n                }\r\n\r\n                lineList[i].rbc[j].style[RUBYPOSITION_PROP] = pos;\r\n\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    function applyRubyReserve(lineList, context) {\r\n\r\n        for (var i = 0; i < lineList.length; i++) {\r\n\r\n            var ruby = document.createElement(\"ruby\");\r\n\r\n            var rb = document.createElement(\"span\");  // rb element is deprecated in HTML\r\n            rb.textContent = \"\\u200B\";\r\n\r\n            ruby.appendChild(rb);\r\n\r\n            var rt1;\r\n            var rt2;\r\n\r\n            var fs = context.rubyReserve[1].toUsedLength(context.w, context.h) + \"px\";\r\n\r\n            if (context.rubyReserve[0] === \"both\" || (context.rubyReserve[0] === \"outside\" && lineList.length == 1)) {\r\n\r\n                rt1 = document.createElement(\"rtc\");\r\n                rt1.style[RUBYPOSITION_PROP] = RUBYPOSITION_ISWK ? \"after\" : \"under\";\r\n                rt1.textContent = \"\\u200B\";\r\n                rt1.style.fontSize = fs;\r\n\r\n                rt2 = document.createElement(\"rtc\");\r\n                rt2.style[RUBYPOSITION_PROP] = RUBYPOSITION_ISWK ? \"before\" : \"over\";\r\n                rt2.textContent = \"\\u200B\";\r\n                rt2.style.fontSize = fs;\r\n\r\n                ruby.appendChild(rt1);\r\n                ruby.appendChild(rt2);\r\n\r\n            } else {\r\n\r\n                rt1 = document.createElement(\"rtc\");\r\n                rt1.textContent = \"\\u200B\";\r\n                rt1.style.fontSize = fs;\r\n\r\n                var pos;\r\n\r\n                if (context.rubyReserve[0] === \"after\" || (context.rubyReserve[0] === \"outside\" && i > 0)) {\r\n\r\n                    pos = RUBYPOSITION_ISWK ? \"after\" : ((context.bpd === \"tb\" || context.bpd === \"rl\") ? \"under\" : \"over\");\r\n\r\n                } else {\r\n\r\n                    pos = RUBYPOSITION_ISWK ? \"before\" : ((context.bpd === \"tb\" || context.bpd === \"rl\") ? \"over\" : \"under\");\r\n\r\n                }\r\n\r\n                rt1.style[RUBYPOSITION_PROP] = pos;\r\n\r\n                ruby.appendChild(rt1);\r\n\r\n            }\r\n\r\n            /* add in front of the first ruby element of the line, if it exists */\r\n\r\n            var sib = null;\r\n\r\n            for (var j = 0; j < lineList[i].rbc.length; j++) {\r\n\r\n                if (lineList[i].rbc[j].localName === 'ruby') {\r\n\r\n                    sib = lineList[i].rbc[j];\r\n\r\n                    /* copy specified style properties from the sibling ruby container */\r\n                    \r\n                    for (var k = 0; k < sib.style.length; k++) {\r\n\r\n                        ruby.style.setProperty(sib.style.item(k), sib.style.getPropertyValue(sib.style.item(k)));\r\n\r\n                    }\r\n\r\n                    break;\r\n                }\r\n\r\n            }\r\n\r\n            /* otherwise add before first span */\r\n\r\n            sib = sib || lineList[i].elements[0].node;\r\n\r\n            sib.parentElement.insertBefore(ruby, sib);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    function applyFillLineGap(lineList, par_before, par_after, context, element) {\r\n\r\n        /* positive for BPD = lr and tb, negative for BPD = rl */\r\n        var s = Math.sign(par_after - par_before);\r\n\r\n        for (var i = 0; i <= lineList.length; i++) {\r\n\r\n            /* compute frontier between lines */\r\n\r\n            var frontier;\r\n\r\n            if (i === 0) {\r\n\r\n                frontier = Math.round(par_before);\r\n\r\n            } else if (i === lineList.length) {\r\n\r\n                frontier = Math.round(par_after);\r\n\r\n            } else {\r\n\r\n                frontier = Math.round((lineList[i - 1].after + lineList[i].before) / 2);\r\n\r\n            }\r\n\r\n            var padding;\r\n            var l,thisNode;\r\n\r\n            /* before line */\r\n            if (i > 0) {\r\n\r\n                if (lineList[i-1]) {\r\n\r\n                    for (l = 0; l < lineList[i - 1].elements.length; l++) {\r\n\r\n                        thisNode=lineList[i - 1].elements[l];\r\n                        padding = s*(frontier-thisNode.after) + \"px\";\r\n\r\n                        if (context.bpd === \"lr\") {\r\n\r\n                            thisNode.node.style.paddingRight = padding;\r\n\r\n                        } else if (context.bpd === \"rl\") {\r\n\r\n                            thisNode.node.style.paddingLeft = padding;\r\n\r\n                        } else if (context.bpd === \"tb\") {\r\n\r\n                            thisNode.node.style.paddingBottom = padding;\r\n\r\n                        }\r\n\r\n                    }\r\n\r\n                }\r\n\r\n            }\r\n\r\n            /* after line */\r\n            if (i < lineList.length) {\r\n\r\n                for (l = 0; l < lineList[i].elements.length; l++) {\r\n\r\n                    thisNode = lineList[i].elements[l];\r\n                    padding = s * (thisNode.before - frontier) + \"px\";\r\n\r\n                    if (context.bpd === \"lr\") {\r\n\r\n                        thisNode.node.style.paddingLeft = padding;\r\n\r\n                    } else if (context.bpd === \"rl\") {\r\n\r\n                        thisNode.node.style.paddingRight = padding;\r\n\r\n                    } else if (context.bpd === \"tb\") {\r\n\r\n                        thisNode.node.style.paddingTop = padding;\r\n\r\n                    }\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    function RegionPBuffer(id, lineList) {\r\n\r\n        this.id = id;\r\n\r\n        this.plist = lineList;\r\n\r\n    }\r\n\r\n    function rect2edges(rect, context) {\r\n\r\n        var edges = {before: null, after: null, start: null, end: null};\r\n\r\n        if (context.bpd === \"tb\") {\r\n\r\n            edges.before = rect.top;\r\n            edges.after = rect.bottom;\r\n\r\n            if (context.ipd === \"lr\") {\r\n\r\n                edges.start = rect.left;\r\n                edges.end = rect.right;\r\n\r\n            } else {\r\n\r\n                edges.start = rect.right;\r\n                edges.end = rect.left;\r\n            }\r\n\r\n        } else if (context.bpd === \"lr\") {\r\n\r\n            edges.before = rect.left;\r\n            edges.after = rect.right;\r\n            edges.start = rect.top;\r\n            edges.end = rect.bottom;\r\n\r\n        } else if (context.bpd === \"rl\") {\r\n\r\n            edges.before = rect.right;\r\n            edges.after = rect.left;\r\n            edges.start = rect.top;\r\n            edges.end = rect.bottom;\r\n\r\n        }\r\n\r\n        return edges;\r\n\r\n    }\r\n\r\n    function constructLineList(context, element, llist, bgcolor) {\r\n\r\n        if (element.localName === \"rt\" || element.localName === \"rtc\") {\r\n\r\n            /* skip ruby annotations */\r\n\r\n            return;\r\n\r\n        }\r\n\r\n        var curbgcolor = element.style.backgroundColor || bgcolor;\r\n\r\n        if (element.childElementCount === 0) {\r\n\r\n            if (element.localName === 'span' || element.localName === 'rb') {\r\n\r\n                var r = element.getBoundingClientRect();\r\n\r\n                var edges = rect2edges(r, context);\r\n\r\n                if (llist.length === 0 ||\r\n                        (!isSameLine(edges.before, edges.after, llist[llist.length - 1].before, llist[llist.length - 1].after))\r\n                        ) {\r\n                    llist.push({\r\n                        before: edges.before,\r\n                        after: edges.after,\r\n                        start: edges.start,\r\n                        end: edges.end,\r\n                        start_elem: 0,\r\n                        end_elem: 0,\r\n                        elements: [],\r\n                        rbc: [],\r\n                        te: [],\r\n                        text: \"\",\r\n                        br: false\r\n                    });\r\n\r\n                } else {\r\n\r\n                    /* positive for BPD = lr and tb, negative for BPD = rl */\r\n                    var bpd_dir = Math.sign(edges.after - edges.before);\r\n\r\n                    /* positive for IPD = lr and tb, negative for IPD = rl */\r\n                    var ipd_dir = Math.sign(edges.end - edges.start);\r\n\r\n                    /* check if the line height has increased */\r\n\r\n                    if (bpd_dir * (edges.before - llist[llist.length - 1].before) < 0) {\r\n                        llist[llist.length - 1].before = edges.before;\r\n                    }\r\n\r\n                    if (bpd_dir * (edges.after - llist[llist.length - 1].after) > 0) {\r\n                        llist[llist.length - 1].after = edges.after;\r\n                    }\r\n\r\n                    if (ipd_dir * (edges.start - llist[llist.length - 1].start) < 0) {\r\n                        llist[llist.length - 1].start = edges.start;\r\n                        llist[llist.length - 1].start_elem = llist[llist.length - 1].elements.length;\r\n                    }\r\n\r\n                    if (ipd_dir * (edges.end - llist[llist.length - 1].end) > 0) {\r\n                        llist[llist.length - 1].end = edges.end;\r\n                        llist[llist.length - 1].end_elem = llist[llist.length - 1].elements.length;\r\n                    }\r\n\r\n                }\r\n\r\n                llist[llist.length - 1].text += element.textContent;\r\n\r\n                llist[llist.length - 1].elements.push(\r\n                        {\r\n                            node: element,\r\n                            bgcolor: curbgcolor,\r\n                            before: edges.before,\r\n                            after: edges.after\r\n                        }\r\n                );\r\n\r\n            } else if (element.localName === 'br' && llist.length !== 0) {\r\n\r\n                llist[llist.length - 1].br = true;\r\n\r\n            }\r\n\r\n        } else {\r\n\r\n            var child = element.firstChild;\r\n\r\n            while (child) {\r\n\r\n                if (child.nodeType === Node.ELEMENT_NODE) {\r\n\r\n                    constructLineList(context, child, llist, curbgcolor);\r\n\r\n                    if (child.localName === 'ruby' || child.localName === 'rtc') {\r\n\r\n                        /* remember non-empty ruby and rtc elements so that tts:rubyPosition can be applied */\r\n\r\n                        if (llist.length > 0) {\r\n\r\n                            llist[llist.length - 1].rbc.push(child);\r\n\r\n                        }\r\n\r\n                    } else if (child.localName === 'span' &&\r\n                            child.style[TEXTEMPHASISSTYLE_PROP] &&\r\n                            child.style[TEXTEMPHASISSTYLE_PROP] !== \"none\") {\r\n\r\n                        /* remember non-empty span elements with textEmphasis */\r\n\r\n                        if (llist.length > 0) {\r\n\r\n                            llist[llist.length - 1].te.push(child);\r\n\r\n                        }\r\n\r\n                    }\r\n                    \r\n\r\n                }\r\n\r\n                child = child.nextSibling;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    function isSameLine(before1, after1, before2, after2) {\r\n\r\n        return ((after1 < after2) && (before1 > before2)) || ((after2 <= after1) && (before2 >= before1));\r\n\r\n    }\r\n\r\n    function applyTextEmphasis(context, dom_element, isd_element, attr) {\r\n\r\n        /* ignore color (not used in IMSC 1.1) */\r\n\r\n        if (attr.style === \"none\") {\r\n\r\n            /* text-emphasis is not inherited and the default is none, so nothing to do */\r\n            \r\n            return;\r\n        \r\n        } else if (attr.style === \"auto\") {\r\n\r\n            dom_element.style[TEXTEMPHASISSTYLE_PROP] = \"filled\";\r\n        \r\n        } else {\r\n\r\n            dom_element.style[TEXTEMPHASISSTYLE_PROP] =  attr.style + \" \" + attr.symbol;\r\n        }\r\n\r\n        /* ignore \"outside\" position (set in postprocessing) */\r\n\r\n        if (attr.position === \"before\" || attr.position === \"after\") {\r\n\r\n            var pos;\r\n\r\n            if (context.bpd === \"tb\") {\r\n\r\n                pos = (attr.position === \"before\") ? \"left over\" : \"left under\";\r\n\r\n\r\n            } else {\r\n\r\n                if (context.bpd === \"rl\") {\r\n\r\n                    pos = (attr.position === \"before\") ? \"right under\" : \"left under\";\r\n\r\n                } else {\r\n\r\n                    pos = (attr.position === \"before\") ? \"left under\" : \"right under\";\r\n\r\n                }\r\n\r\n            }\r\n\r\n            dom_element.style[TEXTEMPHASISPOSITION_PROP] = pos;\r\n        }\r\n    }\r\n\r\n    function HTMLStylingMapDefinition(qName, mapFunc) {\r\n        this.qname = qName;\r\n        this.map = mapFunc;\r\n    }\r\n\r\n    var STYLING_MAP_DEFS = [\r\n\r\n        new HTMLStylingMapDefinition(\r\n                \"http://www.w3.org/ns/ttml#styling backgroundColor\",\r\n                function (context, dom_element, isd_element, attr) {\r\n\r\n                    /* skip if transparent */\r\n                    if (attr[3] === 0)\r\n                        return;\r\n\r\n                    dom_element.style.backgroundColor = \"rgba(\" +\r\n                            attr[0].toString() + \",\" +\r\n                            attr[1].toString() + \",\" +\r\n                            attr[2].toString() + \",\" +\r\n                            (attr[3] / 255).toString() +\r\n                            \")\";\r\n                }\r\n        ),\r\n        new HTMLStylingMapDefinition(\r\n                \"http://www.w3.org/ns/ttml#styling color\",\r\n                function (context, dom_element, isd_element, attr) {\r\n                    dom_element.style.color = \"rgba(\" +\r\n                            attr[0].toString() + \",\" +\r\n                            attr[1].toString() + \",\" +\r\n                            attr[2].toString() + \",\" +\r\n                            (attr[3] / 255).toString() +\r\n                            \")\";\r\n                }\r\n        ),\r\n        new HTMLStylingMapDefinition(\r\n                \"http://www.w3.org/ns/ttml#styling direction\",\r\n                function (context, dom_element, isd_element, attr) {\r\n\r\n                    dom_element.style.direction = attr;\r\n\r\n                }\r\n        ),\r\n        new HTMLStylingMapDefinition(\r\n                \"http://www.w3.org/ns/ttml#styling display\",\r\n                function (context, dom_element, isd_element, attr) {}\r\n        ),\r\n        new HTMLStylingMapDefinition(\r\n                \"http://www.w3.org/ns/ttml#styling displayAlign\",\r\n                function (context, dom_element, isd_element, attr) {\r\n\r\n                    /* see https://css-tricks.com/snippets/css/a-guide-to-flexbox/ */\r\n\r\n                    /* TODO: is this affected by writing direction? */\r\n\r\n                    dom_element.style.display = \"flex\";\r\n                    dom_element.style.flexDirection = \"column\";\r\n\r\n\r\n                    if (attr === \"before\") {\r\n\r\n                        dom_element.style.justifyContent = \"flex-start\";\r\n\r\n                    } else if (attr === \"center\") {\r\n\r\n                        dom_element.style.justifyContent = \"center\";\r\n\r\n                    } else if (attr === \"after\") {\r\n\r\n                        dom_element.style.justifyContent = \"flex-end\";\r\n                    }\r\n\r\n                }\r\n        ),\r\n        new HTMLStylingMapDefinition(\r\n                \"http://www.w3.org/ns/ttml#styling extent\",\r\n                function (context, dom_element, isd_element, attr) {\r\n                    /* TODO: this is super ugly */\r\n\r\n                    context.regionH = attr.h.toUsedLength(context.w, context.h);\r\n                    context.regionW = attr.w.toUsedLength(context.w, context.h);\r\n\r\n                    /* \r\n                     * CSS height/width are measured against the content rectangle,\r\n                     * whereas TTML height/width include padding\r\n                     */\r\n\r\n                    var hdelta = 0;\r\n                    var wdelta = 0;\r\n\r\n                    var p = isd_element.styleAttrs[\"http://www.w3.org/ns/ttml#styling padding\"];\r\n\r\n                    if (!p) {\r\n\r\n                        /* error */\r\n\r\n                    } else {\r\n\r\n                        hdelta = p[0].toUsedLength(context.w, context.h) + p[2].toUsedLength(context.w, context.h);\r\n                        wdelta = p[1].toUsedLength(context.w, context.h) + p[3].toUsedLength(context.w, context.h);\r\n\r\n                    }\r\n\r\n                    dom_element.style.height = (context.regionH - hdelta) + \"px\";\r\n                    dom_element.style.width = (context.regionW - wdelta) + \"px\";\r\n\r\n                }\r\n        ),\r\n        new HTMLStylingMapDefinition(\r\n                \"http://www.w3.org/ns/ttml#styling fontFamily\",\r\n                function (context, dom_element, isd_element, attr) {\r\n\r\n                    var rslt = [];\r\n\r\n                    /* per IMSC1 */\r\n\r\n                    for (var i = 0; i < attr.length; i++) {\r\n                        attr[i] = attr[i].trim();\r\n\r\n                        if (attr[i] === \"monospaceSerif\") {\r\n\r\n                            rslt.push(\"Courier New\");\r\n                            rslt.push('\"Liberation Mono\"');\r\n                            rslt.push(\"Courier\");\r\n                            rslt.push(\"monospace\");\r\n\r\n                        } else if (attr[i] === \"proportionalSansSerif\") {\r\n\r\n                            rslt.push(\"Arial\");\r\n                            rslt.push(\"Helvetica\");\r\n                            rslt.push('\"Liberation Sans\"');\r\n                            rslt.push(\"sans-serif\");\r\n\r\n                        } else if (attr[i] === \"monospace\") {\r\n\r\n                            rslt.push(\"monospace\");\r\n\r\n                        } else if (attr[i] === \"sansSerif\") {\r\n\r\n                            rslt.push(\"sans-serif\");\r\n\r\n                        } else if (attr[i] === \"serif\") {\r\n\r\n                            rslt.push(\"serif\");\r\n\r\n                        } else if (attr[i] === \"monospaceSansSerif\") {\r\n\r\n                            rslt.push(\"Consolas\");\r\n                            rslt.push(\"monospace\");\r\n\r\n                        } else if (attr[i] === \"proportionalSerif\") {\r\n\r\n                            rslt.push(\"serif\");\r\n\r\n                        } else {\r\n\r\n                            rslt.push(attr[i]);\r\n\r\n                        }\r\n\r\n                    }\r\n\r\n                    // prune later duplicates we may have inserted \r\n                    if (rslt.length > 0) {\r\n\r\n                        var unique=[rslt[0]];\r\n\r\n                        for (var fi = 1; fi < rslt.length; fi++) {\r\n\r\n                            if (unique.indexOf(rslt[fi]) == -1) {\r\n\r\n                                unique.push(rslt[fi]);\r\n\r\n                            }\r\n                        }\r\n\r\n                        rslt = unique;\r\n                    }\r\n\r\n                    dom_element.style.fontFamily = rslt.join(\",\");\r\n                }\r\n        ),\r\n\r\n        new HTMLStylingMapDefinition(\r\n                \"http://www.w3.org/ns/ttml#styling shear\",\r\n                function (context, dom_element, isd_element, attr) {\r\n\r\n                    /* return immediately if tts:shear is 0% since CSS transforms are not inherited*/\r\n\r\n                    if (attr === 0)\r\n                        return;\r\n\r\n                    var angle = attr * -0.9;\r\n\r\n                    /* context.bpd is needed since writing mode is not inherited and sets the inline progression */\r\n\r\n                    if (context.bpd === \"tb\") {\r\n\r\n                        dom_element.style.transform = \"skewX(\" + angle + \"deg)\";\r\n\r\n                    } else {\r\n\r\n                        dom_element.style.transform = \"skewY(\" + angle + \"deg)\";\r\n\r\n                    }\r\n\r\n                }\r\n        ),\r\n\r\n        new HTMLStylingMapDefinition(\r\n                \"http://www.w3.org/ns/ttml#styling fontSize\",\r\n                function (context, dom_element, isd_element, attr) {\r\n                    dom_element.style.fontSize = attr.toUsedLength(context.w, context.h) + \"px\";\r\n                }\r\n        ),\r\n\r\n        new HTMLStylingMapDefinition(\r\n                \"http://www.w3.org/ns/ttml#styling fontStyle\",\r\n                function (context, dom_element, isd_element, attr) {\r\n                    dom_element.style.fontStyle = attr;\r\n                }\r\n        ),\r\n        new HTMLStylingMapDefinition(\r\n                \"http://www.w3.org/ns/ttml#styling fontWeight\",\r\n                function (context, dom_element, isd_element, attr) {\r\n                    dom_element.style.fontWeight = attr;\r\n                }\r\n        ),\r\n        new HTMLStylingMapDefinition(\r\n                \"http://www.w3.org/ns/ttml#styling lineHeight\",\r\n                function (context, dom_element, isd_element, attr) {\r\n                    if (attr === \"normal\") {\r\n\r\n                        dom_element.style.lineHeight = \"normal\";\r\n\r\n                    } else {\r\n\r\n                        dom_element.style.lineHeight = attr.toUsedLength(context.w, context.h) + \"px\";\r\n                    }\r\n                }\r\n        ),\r\n        new HTMLStylingMapDefinition(\r\n                \"http://www.w3.org/ns/ttml#styling opacity\",\r\n                function (context, dom_element, isd_element, attr) {\r\n                    dom_element.style.opacity = attr;\r\n                }\r\n        ),\r\n        new HTMLStylingMapDefinition(\r\n                \"http://www.w3.org/ns/ttml#styling origin\",\r\n                function (context, dom_element, isd_element, attr) {\r\n                    dom_element.style.top = attr.h.toUsedLength(context.w, context.h) + \"px\";\r\n                    dom_element.style.left = attr.w.toUsedLength(context.w, context.h) + \"px\";\r\n                }\r\n        ),\r\n        new HTMLStylingMapDefinition(\r\n                \"http://www.w3.org/ns/ttml#styling overflow\",\r\n                function (context, dom_element, isd_element, attr) {\r\n                    dom_element.style.overflow = attr;\r\n                }\r\n        ),\r\n        new HTMLStylingMapDefinition(\r\n                \"http://www.w3.org/ns/ttml#styling padding\",\r\n                function (context, dom_element, isd_element, attr) {\r\n\r\n                    /* attr: top,left,bottom,right*/\r\n\r\n                    /* style: top right bottom left*/\r\n\r\n                    var rslt = [];\r\n\r\n                    rslt[0] = attr[0].toUsedLength(context.w, context.h) + \"px\";\r\n                    rslt[1] = attr[3].toUsedLength(context.w, context.h) + \"px\";\r\n                    rslt[2] = attr[2].toUsedLength(context.w, context.h) + \"px\";\r\n                    rslt[3] = attr[1].toUsedLength(context.w, context.h) + \"px\";\r\n\r\n                    dom_element.style.padding = rslt.join(\" \");\r\n                }\r\n        ),\r\n        new HTMLStylingMapDefinition(\r\n                \"http://www.w3.org/ns/ttml#styling position\",\r\n                function (context, dom_element, isd_element, attr) {\r\n                    dom_element.style.top = attr.h.toUsedLength(context.w, context.h) + \"px\";\r\n                    dom_element.style.left = attr.w.toUsedLength(context.w, context.h) + \"px\";\r\n                }\r\n        ),\r\n        new HTMLStylingMapDefinition(\r\n                \"http://www.w3.org/ns/ttml#styling rubyAlign\",\r\n                function (context, dom_element, isd_element, attr) {\r\n                    dom_element.style.rubyAlign = attr === \"spaceAround\" ? \"space-around\" : \"center\";\r\n                }\r\n        ),\r\n        new HTMLStylingMapDefinition(\r\n                \"http://www.w3.org/ns/ttml#styling rubyPosition\",\r\n                function (context, dom_element, isd_element, attr) {\r\n\r\n                    /* skip if \"outside\", which is handled by applyRubyPosition() */\r\n\r\n                    if (attr === \"before\" || attr === \"after\") {\r\n\r\n                        var pos;\r\n\r\n                        if (RUBYPOSITION_ISWK) {\r\n\r\n                            /* WebKit exception */\r\n        \r\n                            pos = attr;\r\n        \r\n                        } else if (context.bpd === \"tb\") {\r\n\r\n                            pos = (attr === \"before\") ? \"over\" : \"under\";\r\n\r\n\r\n                        } else {\r\n\r\n                            if (context.bpd === \"rl\") {\r\n\r\n                                pos = (attr === \"before\") ? \"over\" : \"under\";\r\n\r\n                            } else {\r\n\r\n                                pos = (attr === \"before\") ? \"under\" : \"over\";\r\n\r\n                            }\r\n\r\n                        }\r\n\r\n                        /* apply position to the parent dom_element, i.e. ruby or rtc */\r\n\r\n                        dom_element.parentElement.style[RUBYPOSITION_PROP] = pos;\r\n                    }\r\n                }\r\n        ),\r\n        new HTMLStylingMapDefinition(\r\n                \"http://www.w3.org/ns/ttml#styling showBackground\",\r\n                null\r\n                ),\r\n        new HTMLStylingMapDefinition(\r\n                \"http://www.w3.org/ns/ttml#styling textAlign\",\r\n                function (context, dom_element, isd_element, attr) {\r\n\r\n                    var ta;\r\n\r\n                    /* handle UAs that do not understand start or end */\r\n\r\n                    if (attr === \"start\") {\r\n\r\n                        ta = (context.ipd === \"rl\") ? \"right\" : \"left\";\r\n\r\n                    } else if (attr === \"end\") {\r\n\r\n                        ta = (context.ipd === \"rl\") ? \"left\" : \"right\";\r\n\r\n                    } else {\r\n\r\n                        ta = attr;\r\n\r\n                    }\r\n\r\n                    dom_element.style.textAlign = ta;\r\n\r\n                }\r\n        ),\r\n        new HTMLStylingMapDefinition(\r\n                \"http://www.w3.org/ns/ttml#styling textDecoration\",\r\n                function (context, dom_element, isd_element, attr) {\r\n                    dom_element.style.textDecoration = attr.join(\" \").replace(\"lineThrough\", \"line-through\");\r\n                }\r\n        ),\r\n        new HTMLStylingMapDefinition(\r\n                \"http://www.w3.org/ns/ttml#styling textOutline\",\r\n                function (context, dom_element, isd_element, attr) {\r\n\r\n                    /* defer to tts:textShadow */\r\n                }\r\n        ),\r\n        new HTMLStylingMapDefinition(\r\n                \"http://www.w3.org/ns/ttml#styling textShadow\",\r\n                function (context, dom_element, isd_element, attr) {\r\n\r\n                    var txto = isd_element.styleAttrs[imscStyles.byName.textOutline.qname];\r\n\r\n                    if (attr === \"none\" && txto === \"none\") {\r\n\r\n                        dom_element.style.textShadow = \"\";\r\n\r\n                    } else {\r\n\r\n                        var s = [];\r\n\r\n                        if (txto !== \"none\") {\r\n\r\n                            /* emulate text outline */\r\n\r\n                            var to_color = \"rgba(\" +\r\n                                                txto.color[0].toString() + \",\" +\r\n                                                txto.color[1].toString() + \",\" +\r\n                                                txto.color[2].toString() + \",\" +\r\n                                                (txto.color[3] / 255).toString() +\r\n                                                \")\";\r\n\r\n                            s.push(  \"1px 1px 1px \" + to_color);\r\n                            s.push(  \"-1px 1px 1px \" + to_color);\r\n                            s.push(  \"1px -1px 1px \" + to_color);\r\n                            s.push(  \"-1px -1px 1px \" + to_color);\r\n\r\n                        }\r\n\r\n                        /* add text shadow */\r\n\r\n                        if (attr !== \"none\") {\r\n\r\n                            for (var i = 0; i < attr.length; i++) {\r\n\r\n\r\n                                s.push(attr[i].x_off.toUsedLength(context.w, context.h) + \"px \" +\r\n                                        attr[i].y_off.toUsedLength(context.w, context.h) + \"px \" +\r\n                                        attr[i].b_radius.toUsedLength(context.w, context.h) + \"px \" +\r\n                                        \"rgba(\" +\r\n                                        attr[i].color[0].toString() + \",\" +\r\n                                        attr[i].color[1].toString() + \",\" +\r\n                                        attr[i].color[2].toString() + \",\" +\r\n                                        (attr[i].color[3] / 255).toString() +\r\n                                        \")\"\r\n                                        );\r\n\r\n                            }\r\n\r\n                        }\r\n\r\n                        dom_element.style.textShadow = s.join(\",\");\r\n\r\n                    }\r\n                }\r\n        ),\r\n        new HTMLStylingMapDefinition(\r\n                \"http://www.w3.org/ns/ttml#styling textCombine\",\r\n                function (context, dom_element, isd_element, attr) {\r\n\r\n                    dom_element.style.textCombineUpright = attr;\r\n\r\n                }\r\n        ),\r\n        new HTMLStylingMapDefinition(\r\n                \"http://www.w3.org/ns/ttml#styling textEmphasis\",\r\n                function (context, dom_element, isd_element, attr) {\r\n\r\n                    /* applied as part of HTML document construction */\r\n\r\n                }\r\n        ),\r\n        new HTMLStylingMapDefinition(\r\n                \"http://www.w3.org/ns/ttml#styling unicodeBidi\",\r\n                function (context, dom_element, isd_element, attr) {\r\n\r\n                    var ub;\r\n\r\n                    if (attr === 'bidiOverride') {\r\n                        ub = \"bidi-override\";\r\n                    } else {\r\n                        ub = attr;\r\n                    }\r\n\r\n                    dom_element.style.unicodeBidi = ub;\r\n                }\r\n        ),\r\n        new HTMLStylingMapDefinition(\r\n                \"http://www.w3.org/ns/ttml#styling visibility\",\r\n                function (context, dom_element, isd_element, attr) {\r\n                    dom_element.style.visibility = attr;\r\n                }\r\n        ),\r\n        new HTMLStylingMapDefinition(\r\n                \"http://www.w3.org/ns/ttml#styling wrapOption\",\r\n                function (context, dom_element, isd_element, attr) {\r\n\r\n                    if (attr === \"wrap\") {\r\n\r\n                        if (isd_element.space === \"preserve\") {\r\n                            dom_element.style.whiteSpace = \"pre-wrap\";\r\n                        } else {\r\n                            dom_element.style.whiteSpace = \"normal\";\r\n                        }\r\n\r\n                    } else {\r\n\r\n                        if (isd_element.space === \"preserve\") {\r\n\r\n                            dom_element.style.whiteSpace = \"pre\";\r\n\r\n                        } else {\r\n                            dom_element.style.whiteSpace = \"noWrap\";\r\n                        }\r\n\r\n                    }\r\n\r\n                }\r\n        ),\r\n        new HTMLStylingMapDefinition(\r\n                \"http://www.w3.org/ns/ttml#styling writingMode\",\r\n                function (context, dom_element, isd_element, attr) {\r\n\r\n                    var wm;\r\n\r\n                    if (attr === \"lrtb\" || attr === \"lr\") {\r\n\r\n                        dom_element.style.writingMode = \"horizontal-tb\";\r\n\r\n                    } else if (attr === \"rltb\" || attr === \"rl\") {\r\n\r\n                        dom_element.style.writingMode = \"horizontal-tb\";\r\n\r\n                    } else if (attr === \"tblr\") {\r\n\r\n                        dom_element.style.writingMode = \"vertical-lr\";\r\n\r\n                    } else if (attr === \"tbrl\" || attr === \"tb\") {\r\n\r\n                        dom_element.style.writingMode = \"vertical-rl\";\r\n\r\n                    }\r\n\r\n                }\r\n        ),\r\n        new HTMLStylingMapDefinition(\r\n                \"http://www.w3.org/ns/ttml#styling zIndex\",\r\n                function (context, dom_element, isd_element, attr) {\r\n                    dom_element.style.zIndex = attr;\r\n                }\r\n        ),\r\n        new HTMLStylingMapDefinition(\r\n                \"http://www.w3.org/ns/ttml/profile/imsc1#styling forcedDisplay\",\r\n                function (context, dom_element, isd_element, attr) {\r\n\r\n                    if (context.displayForcedOnlyMode && attr === false) {\r\n                        dom_element.style.visibility = \"hidden\";\r\n                    }\r\n\r\n                }\r\n        )\r\n    ];\r\n\r\n    var STYLMAP_BY_QNAME = {};\r\n\r\n    for (var i = 0; i < STYLING_MAP_DEFS.length; i++) {\r\n\r\n        STYLMAP_BY_QNAME[STYLING_MAP_DEFS[i].qname] = STYLING_MAP_DEFS[i];\r\n    }\r\n\r\n    /* CSS property names */\r\n\r\n    var RUBYPOSITION_ISWK = \"webkitRubyPosition\" in window.getComputedStyle(document.documentElement);\r\n\r\n    var RUBYPOSITION_PROP = RUBYPOSITION_ISWK ? \"webkitRubyPosition\" : \"rubyPosition\";\r\n\r\n    var TEXTEMPHASISSTYLE_PROP = \"webkitTextEmphasisStyle\" in window.getComputedStyle(document.documentElement) ? \"webkitTextEmphasisStyle\" : \"textEmphasisStyle\";\r\n\r\n    var TEXTEMPHASISPOSITION_PROP = \"webkitTextEmphasisPosition\" in window.getComputedStyle(document.documentElement) ? \"webkitTextEmphasisPosition\" : \"textEmphasisPosition\";\r\n\r\n    /* error utilities */\r\n\r\n    function reportError(errorHandler, msg) {\r\n\r\n        if (errorHandler && errorHandler.error && errorHandler.error(msg))\r\n            throw msg;\r\n\r\n    }\r\n\r\n})(typeof exports === 'undefined' ? this.imscHTML = {} : exports,\r\n        typeof imscNames === 'undefined' ? require(\"./names\") : imscNames,\r\n        typeof imscStyles === 'undefined' ? require(\"./styles\") : imscStyles,\r\n        typeof imscUtils === 'undefined' ? require(\"./utils\") : imscUtils);\r\n","/* \r\n * Copyright (c) 2016, Pierre-Anthony Lemieux <pal@sandflow.com>\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are met:\r\n *\r\n * * Redistributions of source code must retain the above copyright notice, this\r\n *   list of conditions and the following disclaimer.\r\n * * Redistributions in binary form must reproduce the above copyright notice,\r\n *   this list of conditions and the following disclaimer in the documentation\r\n *   and/or other materials provided with the distribution.\r\n *\r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\r\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\r\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\r\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\r\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\r\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\r\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\r\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\r\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n * POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\n/**\r\n * @module imscISD\r\n */\r\n\r\n\r\n;\r\n(function (imscISD, imscNames, imscStyles, imscUtils) { // wrapper for non-node envs\r\n\r\n    /** \r\n     * Creates a canonical representation of an IMSC1 document returned by <pre>imscDoc.fromXML()</pre>\r\n     * at a given absolute offset in seconds. This offset does not have to be one of the values returned\r\n     * by <pre>getMediaTimeEvents()</pre>.\r\n     * \r\n     * @param {Object} tt IMSC1 document\r\n     * @param {number} offset Absolute offset (in seconds)\r\n     * @param {?module:imscUtils.ErrorHandler} errorHandler Error callback\r\n     * @returns {Object} Opaque in-memory representation of an ISD\r\n     */\r\n\r\n    imscISD.generateISD = function (tt, offset, errorHandler) {\r\n\r\n        /* TODO check for tt and offset validity */\r\n\r\n        /* create the ISD object from the IMSC1 doc */\r\n\r\n        var isd = new ISD(tt);\r\n\r\n        /* context */\r\n\r\n        var context = {\r\n\r\n            /*rubyfs: []*/ /* font size of the nearest textContainer or container */\r\n\r\n        };\r\n\r\n        /* Filter body contents - Only process what we need within the offset and discard regions not applicable to the content */\r\n        var body = {};\r\n        var activeRegions = {};\r\n\r\n        /* gather any regions that might have showBackground=\"always\" and show a background */\r\n        var initialShowBackground = tt.head.styling.initials[imscStyles.byName.showBackground.qname];\r\n        var initialbackgroundColor = tt.head.styling.initials[imscStyles.byName.backgroundColor.qname];\r\n        for (var layout_child in tt.head.layout.regions)\r\n        {\r\n            if (tt.head.layout.regions.hasOwnProperty(layout_child)) {\r\n                var region = tt.head.layout.regions[layout_child];\r\n                var showBackground = region.styleAttrs[imscStyles.byName.showBackground.qname] || initialShowBackground;\r\n                var backgroundColor = region.styleAttrs[imscStyles.byName.backgroundColor.qname] || initialbackgroundColor;\r\n                activeRegions[region.id] = (\r\n                    (showBackground === 'always' || showBackground === undefined) &&\r\n                    backgroundColor !== undefined &&\r\n                    !(offset < region.begin || offset >= region.end)\r\n                    );\r\n            }\r\n        }\r\n\r\n        /* If the body specifies a region, catch it, since no filtered content will */\r\n        /* likely specify the region. */\r\n        if (tt.body && tt.body.regionID) {\r\n            activeRegions[tt.body.regionID] = true;\r\n        }\r\n\r\n        function filter(offset, element) {\r\n            function offsetFilter(element) {\r\n                return !(offset < element.begin || offset >= element.end);    \r\n            }    \r\n        \r\n            if (element.contents) {\r\n                var clone = {};\r\n                for (var prop in element) {\r\n                    if (element.hasOwnProperty(prop)) {\r\n                        clone[prop] = element[prop];\r\n                    }\r\n                }\r\n                clone.contents = [];\r\n\r\n                element.contents.filter(offsetFilter).forEach(function (el) {\r\n                    var filteredElement = filter(offset, el);\r\n                    if (filteredElement.regionID) {\r\n                        activeRegions[filteredElement.regionID] = true;\r\n                    }\r\n        \r\n                    if (filteredElement !== null) {\r\n                        clone.contents.push(filteredElement);\r\n                    }\r\n                });\r\n                return clone;\r\n            } else {\r\n                return element;\r\n            }\r\n        }\r\n\r\n        if (tt.body !== null) {\r\n            body = filter(offset, tt.body);\r\n        } else {\r\n            body = null;\r\n        }\r\n\r\n        /* rewritten TTML will always have a default - this covers it. because the region is defaulted to \"\" */\r\n        if (activeRegions[\"\"] !== undefined) {\r\n            activeRegions[\"\"] = true;\r\n        }\r\n\r\n        /* process regions */      \r\n        for (var regionID in activeRegions) {\r\n            if (activeRegions[regionID]) {\r\n                /* post-order traversal of the body tree per [construct intermediate document] */\r\n\r\n                var c = isdProcessContentElement(tt, offset, tt.head.layout.regions[regionID], body, null, '', tt.head.layout.regions[regionID], errorHandler, context);\r\n\r\n                if (c !== null) {\r\n\r\n                    /* add the region to the ISD */\r\n\r\n                    isd.contents.push(c.element);\r\n                }\r\n            }\r\n        }\r\n\r\n        return isd;\r\n    };\r\n\r\n    /* set of styles not applicable to ruby container spans */\r\n\r\n    var _rcs_na_styles = [\r\n        imscStyles.byName.color.qname,\r\n        imscStyles.byName.textCombine.qname,\r\n        imscStyles.byName.textDecoration.qname,\r\n        imscStyles.byName.textEmphasis.qname,\r\n        imscStyles.byName.textOutline.qname,\r\n        imscStyles.byName.textShadow.qname\r\n    ];\r\n\r\n    function isdProcessContentElement(doc, offset, region, body, parent, inherited_region_id, elem, errorHandler, context) {\r\n\r\n        /* prune if temporally inactive */\r\n\r\n        if (offset < elem.begin || offset >= elem.end) {\r\n            return null;\r\n        }\r\n\r\n        /* \r\n         * set the associated region as specified by the regionID attribute, or the \r\n         * inherited associated region otherwise\r\n         */\r\n\r\n        var associated_region_id = 'regionID' in elem && elem.regionID !== '' ? elem.regionID : inherited_region_id;\r\n\r\n        /* prune the element if either:\r\n         * - the element is not terminal and the associated region is neither the default\r\n         *   region nor the parent region (this allows children to be associated with a \r\n         *   region later on)\r\n         * - the element is terminal and the associated region is not the parent region\r\n         */\r\n\r\n        /* TODO: improve detection of terminal elements since <region> has no contents */\r\n\r\n        if (parent !== null /* are we in the region element */ &&\r\n            associated_region_id !== region.id &&\r\n            (\r\n                (!('contents' in elem)) ||\r\n                ('contents' in elem && elem.contents.length === 0) ||\r\n                associated_region_id !== ''\r\n                )\r\n            )\r\n            return null;\r\n\r\n        /* create an ISD element, including applying specified styles */\r\n\r\n        var isd_element = new ISDContentElement(elem);\r\n\r\n        /* apply set (animation) styling */\r\n\r\n        if (\"sets\" in elem) {\r\n            for (var i = 0; i < elem.sets.length; i++) {\r\n\r\n                if (offset < elem.sets[i].begin || offset >= elem.sets[i].end)\r\n                    continue;\r\n\r\n                isd_element.styleAttrs[elem.sets[i].qname] = elem.sets[i].value;\r\n\r\n            }\r\n        }\r\n\r\n        /* \r\n         * keep track of specified styling attributes so that we\r\n         * can compute them later\r\n         */\r\n\r\n        var spec_attr = {};\r\n\r\n        for (var qname in isd_element.styleAttrs) {\r\n\r\n            if (! isd_element.styleAttrs.hasOwnProperty(qname)) continue;\r\n\r\n            spec_attr[qname] = true;\r\n\r\n            /* special rule for tts:writingMode (section 7.29.1 of XSL)\r\n             * direction is set consistently with writingMode only\r\n             * if writingMode sets inline-direction to LTR or RTL  \r\n             */\r\n\r\n            if (isd_element.kind === 'region' &&\r\n                qname === imscStyles.byName.writingMode.qname &&\r\n                !(imscStyles.byName.direction.qname in isd_element.styleAttrs)) {\r\n\r\n                var wm = isd_element.styleAttrs[qname];\r\n\r\n                if (wm === \"lrtb\" || wm === \"lr\") {\r\n\r\n                    isd_element.styleAttrs[imscStyles.byName.direction.qname] = \"ltr\";\r\n\r\n                } else if (wm === \"rltb\" || wm === \"rl\") {\r\n\r\n                    isd_element.styleAttrs[imscStyles.byName.direction.qname] = \"rtl\";\r\n\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        /* inherited styling */\r\n\r\n        if (parent !== null) {\r\n\r\n            for (var j = 0; j < imscStyles.all.length; j++) {\r\n\r\n                var sa = imscStyles.all[j];\r\n\r\n                /* textDecoration has special inheritance rules */\r\n\r\n                if (sa.qname === imscStyles.byName.textDecoration.qname) {\r\n\r\n                    /* handle both textDecoration inheritance and specification */\r\n\r\n                    var ps = parent.styleAttrs[sa.qname];\r\n                    var es = isd_element.styleAttrs[sa.qname];\r\n                    var outs = [];\r\n\r\n                    if (es === undefined) {\r\n\r\n                        outs = ps;\r\n\r\n                    } else if (es.indexOf(\"none\") === -1) {\r\n\r\n                        if ((es.indexOf(\"noUnderline\") === -1 &&\r\n                            ps.indexOf(\"underline\") !== -1) ||\r\n                            es.indexOf(\"underline\") !== -1) {\r\n\r\n                            outs.push(\"underline\");\r\n\r\n                        }\r\n\r\n                        if ((es.indexOf(\"noLineThrough\") === -1 &&\r\n                            ps.indexOf(\"lineThrough\") !== -1) ||\r\n                            es.indexOf(\"lineThrough\") !== -1) {\r\n\r\n                            outs.push(\"lineThrough\");\r\n\r\n                        }\r\n\r\n                        if ((es.indexOf(\"noOverline\") === -1 &&\r\n                            ps.indexOf(\"overline\") !== -1) ||\r\n                            es.indexOf(\"overline\") !== -1) {\r\n\r\n                            outs.push(\"overline\");\r\n\r\n                        }\r\n\r\n                    } else {\r\n\r\n                        outs.push(\"none\");\r\n\r\n                    }\r\n\r\n                    isd_element.styleAttrs[sa.qname] = outs;\r\n\r\n                } else if (sa.qname === imscStyles.byName.fontSize.qname &&\r\n                    !(sa.qname in isd_element.styleAttrs) &&\r\n                    isd_element.kind === 'span' &&\r\n                    isd_element.styleAttrs[imscStyles.byName.ruby.qname] === \"textContainer\") {\r\n                    \r\n                    /* special inheritance rule for ruby text container font size */\r\n                    \r\n                    var ruby_fs = parent.styleAttrs[imscStyles.byName.fontSize.qname];\r\n\r\n                    isd_element.styleAttrs[sa.qname] = new imscUtils.ComputedLength(\r\n                        0.5 * ruby_fs.rw,\r\n                        0.5 * ruby_fs.rh);\r\n\r\n                } else if (sa.qname === imscStyles.byName.fontSize.qname &&\r\n                    !(sa.qname in isd_element.styleAttrs) &&\r\n                    isd_element.kind === 'span' &&\r\n                    isd_element.styleAttrs[imscStyles.byName.ruby.qname] === \"text\") {\r\n                    \r\n                    /* special inheritance rule for ruby text font size */\r\n                    \r\n                    var parent_fs = parent.styleAttrs[imscStyles.byName.fontSize.qname];\r\n                    \r\n                    if (parent.styleAttrs[imscStyles.byName.ruby.qname] === \"textContainer\") {\r\n                        \r\n                        isd_element.styleAttrs[sa.qname] = parent_fs;\r\n                        \r\n                    } else {\r\n                        \r\n                        isd_element.styleAttrs[sa.qname] = new imscUtils.ComputedLength(\r\n                            0.5 * parent_fs.rw,\r\n                            0.5 * parent_fs.rh);\r\n                    }\r\n                    \r\n                } else if (sa.inherit &&\r\n                    (sa.qname in parent.styleAttrs) &&\r\n                    !(sa.qname in isd_element.styleAttrs)) {\r\n\r\n                    isd_element.styleAttrs[sa.qname] = parent.styleAttrs[sa.qname];\r\n\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n        /* initial value styling */\r\n\r\n        for (var k = 0; k < imscStyles.all.length; k++) {\r\n            \r\n            var ivs = imscStyles.all[k];\r\n\r\n            /* skip if value is already specified */\r\n\r\n            if (ivs.qname in isd_element.styleAttrs) continue;\r\n\r\n            /* skip tts:position if tts:origin is specified */\r\n\r\n            if (ivs.qname === imscStyles.byName.position.qname &&\r\n                imscStyles.byName.origin.qname in isd_element.styleAttrs)\r\n                continue;\r\n\r\n            /* skip tts:origin if tts:position is specified */\r\n\r\n            if (ivs.qname === imscStyles.byName.origin.qname &&\r\n                imscStyles.byName.position.qname in isd_element.styleAttrs)\r\n                continue;\r\n            \r\n            /* determine initial value */\r\n            \r\n            var iv = doc.head.styling.initials[ivs.qname] || ivs.initial;\r\n\r\n            if (iv === null) {\r\n                /* skip processing if no initial value defined */\r\n\r\n                continue;\r\n            }\r\n\r\n            /* apply initial value to elements other than region only if non-inherited */\r\n\r\n            if (isd_element.kind === 'region' || (ivs.inherit === false && iv !== null)) {\r\n\r\n                var piv = ivs.parse(iv);\r\n\r\n                if (piv !== null) {\r\n\r\n                    isd_element.styleAttrs[ivs.qname] = piv;\r\n\r\n                    /* keep track of the style as specified */\r\n\r\n                    spec_attr[ivs.qname] = true;\r\n\r\n                } else {\r\n\r\n                    reportError(errorHandler, \"Invalid initial value for '\" + ivs.qname + \"' on element '\" + isd_element.kind);\r\n\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n        /* compute styles (only for non-inherited styles) */\r\n        /* TODO: get rid of spec_attr */\r\n\r\n        for (var z = 0; z < imscStyles.all.length; z++) {\r\n            \r\n            var cs = imscStyles.all[z];\r\n\r\n            if (!(cs.qname in spec_attr)) continue;\r\n\r\n            if (cs.compute !== null) {\r\n\r\n                var cstyle = cs.compute(\r\n                    /*doc, parent, element, attr, context*/\r\n                    doc,\r\n                    parent,\r\n                    isd_element,\r\n                    isd_element.styleAttrs[cs.qname],\r\n                    context\r\n                    );\r\n\r\n                if (cstyle !== null) {\r\n\r\n                    isd_element.styleAttrs[cs.qname] = cstyle;\r\n                    \r\n                } else {\r\n                    /* if the style cannot be computed, replace it by its initial value */\r\n\r\n                    isd_element.styleAttrs[cs.qname] = cs.compute(\r\n                        /*doc, parent, element, attr, context*/\r\n                        doc,\r\n                        parent,\r\n                        isd_element,\r\n                        cs.parse(cs.initial),\r\n                        context\r\n                    );\r\n\r\n                    reportError(errorHandler, \"Style '\" + cs.qname + \"' on element '\" + isd_element.kind + \"' cannot be computed\");\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        /* prune if tts:display is none */\r\n\r\n        if (isd_element.styleAttrs[imscStyles.byName.display.qname] === \"none\")\r\n            return null;\r\n\r\n        /* process contents of the element */\r\n\r\n        var contents = null;\r\n\r\n        if (parent === null) {\r\n\r\n            /* we are processing the region */\r\n\r\n            if (body === null) {\r\n\r\n                /* if there is no body, still process the region but with empty content */\r\n\r\n                contents = [];\r\n\r\n            } else {\r\n\r\n                /*use the body element as contents */\r\n\r\n                contents = [body];\r\n\r\n            }\r\n\r\n        } else if ('contents' in elem) {\r\n\r\n            contents = elem.contents;\r\n\r\n        }\r\n\r\n        for (var x = 0; contents !== null && x < contents.length; x++) {\r\n\r\n            var c = isdProcessContentElement(doc, offset, region, body, isd_element, associated_region_id, contents[x], errorHandler, context);\r\n\r\n            /* \r\n             * keep child element only if they are non-null and their region match \r\n             * the region of this element\r\n             */\r\n\r\n            if (c !== null) {\r\n\r\n                isd_element.contents.push(c.element);\r\n\r\n            }\r\n\r\n        }\r\n\r\n        /* remove styles that are not applicable */\r\n\r\n        for (var qnameb in isd_element.styleAttrs) {\r\n            if (!isd_element.styleAttrs.hasOwnProperty(qnameb)) continue;\r\n\r\n            /* true if not applicable */\r\n\r\n            var na = false;\r\n\r\n            /* special applicability of certain style properties to ruby container spans */\r\n            /* TODO: in the future ruby elements should be translated to elements instead of kept as spans */\r\n\r\n            if (isd_element.kind === 'span') {\r\n\r\n                var rsp = isd_element.styleAttrs[imscStyles.byName.ruby.qname];\r\n\r\n                na = ( rsp === 'container' || rsp === 'textContainer' || rsp === 'baseContainer' ) && \r\n                    _rcs_na_styles.indexOf(qnameb) !== -1;\r\n\r\n                if (! na) {\r\n\r\n                    na = rsp !== 'container' &&\r\n                        qnameb === imscStyles.byName.rubyAlign.qname;\r\n\r\n                }\r\n\r\n                if (! na) {\r\n\r\n                    na =  (! (rsp === 'textContainer' || rsp === 'text')) &&\r\n                        qnameb === imscStyles.byName.rubyPosition.qname;\r\n\r\n                }\r\n\r\n            }\r\n\r\n            /* normal applicability */\r\n            \r\n            if (! na) {\r\n\r\n                var da = imscStyles.byQName[qnameb];\r\n\r\n                if (\"applies\" in da){\r\n\r\n                    na = da.applies.indexOf(isd_element.kind) === -1;\r\n\r\n                }\r\n\r\n            }\r\n\r\n\r\n            if (na) {\r\n                delete isd_element.styleAttrs[qnameb];\r\n            }\r\n\r\n        }\r\n\r\n        /* trim whitespace around explicit line breaks */\r\n\r\n        var ruby = isd_element.styleAttrs[imscStyles.byName.ruby.qname];\r\n\r\n        if (isd_element.kind === 'p' ||\r\n            (isd_element.kind === 'span' && (ruby === \"textContainer\" || ruby === \"text\"))\r\n            ) {\r\n\r\n            var elist = [];\r\n\r\n            constructSpanList(isd_element, elist);\r\n\r\n            collapseLWSP(elist);\r\n\r\n            pruneEmptySpans(isd_element);\r\n\r\n        }\r\n\r\n        /* keep element if:\r\n         * * contains a background image\r\n         * * <br/>\r\n         * * if there are children\r\n         * * if it is an image\r\n         * * if <span> and has text\r\n         * * if region and showBackground = always\r\n         */\r\n\r\n        if ((isd_element.kind === 'div' && imscStyles.byName.backgroundImage.qname in isd_element.styleAttrs) ||\r\n            isd_element.kind === 'br' ||\r\n            isd_element.kind === 'image' ||\r\n            ('contents' in isd_element && isd_element.contents.length > 0) ||\r\n            (isd_element.kind === 'span' && isd_element.text !== null) ||\r\n            (isd_element.kind === 'region' &&\r\n                isd_element.styleAttrs[imscStyles.byName.showBackground.qname] === 'always')) {\r\n\r\n            return {\r\n                region_id: associated_region_id,\r\n                element: isd_element\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    function collapseLWSP(elist) {\r\n\r\n        function isPrevCharLWSP(prev_element) {\r\n            return prev_element.kind === 'br' || /[\\r\\n\\t ]$/.test(prev_element.text);\r\n        }\r\n\r\n        function isNextCharLWSP(next_element) {\r\n            return next_element.kind === 'br' || (next_element.space === \"preserve\" && /^[\\r\\n]/.test(next_element.text));\r\n        }\r\n\r\n        /* collapse spaces and remove leading LWSPs */\r\n\r\n        var element;\r\n\r\n        for (var i = 0; i < elist.length;) {\r\n\r\n            element = elist[i];\r\n\r\n            if (element.kind === \"br\" || element.space === \"preserve\") {\r\n                i++;\r\n                continue;\r\n            }\r\n\r\n            var trimmed_text = element.text.replace(/[\\t\\r\\n ]+/g, ' ');\r\n\r\n            if (/^[ ]/.test(trimmed_text)) {\r\n\r\n                if (i === 0 || isPrevCharLWSP(elist[i - 1])) {\r\n                    trimmed_text = trimmed_text.substring(1);\r\n                }\r\n\r\n            }\r\n\r\n            element.text = trimmed_text;\r\n\r\n            if (trimmed_text.length === 0) {\r\n                elist.splice(i, 1);\r\n            } else {\r\n                i++;\r\n            }\r\n\r\n        }\r\n\r\n        /* remove trailing LWSPs */\r\n\r\n        for (i = 0; i < elist.length; i++) {\r\n\r\n            element = elist[i];\r\n\r\n            if (element.kind === \"br\" || element.space === \"preserve\") {\r\n                i++;\r\n                continue;\r\n            }\r\n\r\n            if (/[ ]$/.test(element.text)) {\r\n\r\n                if (i === (elist.length - 1) || isNextCharLWSP(elist[i + 1])) {\r\n                    element.text = element.text.slice(0, -1);\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    function constructSpanList(element, elist) {\r\n\r\n        if (! (\"contents\" in element)) {\r\n            return;\r\n        }\r\n\r\n        for (var i = 0; i < element.contents.length; i++) {\r\n\r\n            var child = element.contents[i];\r\n            var ruby = child.styleAttrs[imscStyles.byName.ruby.qname];\r\n\r\n            if (child.kind === 'span' && (ruby === \"textContainer\" || ruby === \"text\")) {\r\n\r\n                /* skip ruby text and text containers, which are handled on their own */\r\n            \r\n                continue;\r\n\r\n            } else if ('contents' in child) {\r\n    \r\n                constructSpanList(child, elist);\r\n    \r\n            } else if ((child.kind === 'span' && child.text.length !== 0) || child.kind === 'br') {\r\n\r\n                /* skip empty spans */\r\n\r\n                elist.push(child);\r\n\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    function pruneEmptySpans(element) {\r\n\r\n        if (element.kind === 'br') {\r\n\r\n            return false;\r\n\r\n        } else if ('text' in element) {\r\n\r\n            return  element.text.length === 0;\r\n\r\n        } else if ('contents' in element) {\r\n\r\n            var i = element.contents.length;\r\n\r\n            while (i--) {\r\n\r\n                if (pruneEmptySpans(element.contents[i])) {\r\n                    element.contents.splice(i, 1);\r\n                }\r\n\r\n            }\r\n\r\n            return element.contents.length === 0;\r\n\r\n        }\r\n    }\r\n\r\n    function ISD(tt) {\r\n        this.contents = [];\r\n        this.aspectRatio = tt.aspectRatio;\r\n        this.lang = tt.lang;\r\n    }\r\n\r\n    function ISDContentElement(ttelem) {\r\n\r\n        /* assume the element is a region if it does not have a kind */\r\n\r\n        this.kind = ttelem.kind || 'region';\r\n\r\n        /* copy lang */\r\n\r\n        this.lang = ttelem.lang;\r\n\r\n        /* copy id */\r\n\r\n        if (ttelem.id) {\r\n            this.id = ttelem.id;\r\n        }\r\n\r\n        /* deep copy of style attributes */\r\n        this.styleAttrs = {};\r\n\r\n        for (var sname in ttelem.styleAttrs) {\r\n\r\n            if (! ttelem.styleAttrs.hasOwnProperty(sname)) continue;\r\n\r\n            this.styleAttrs[sname] =\r\n                ttelem.styleAttrs[sname];\r\n        }\r\n        \r\n        /* copy src and type if image */\r\n        \r\n        if ('src' in ttelem) {\r\n            \r\n            this.src = ttelem.src;\r\n            \r\n        }\r\n        \r\n         if ('type' in ttelem) {\r\n            \r\n            this.type = ttelem.type;\r\n            \r\n        }\r\n\r\n        /* TODO: clean this! \r\n         * TODO: ISDElement and document element should be better tied together */\r\n\r\n        if ('text' in ttelem) {\r\n\r\n            this.text = ttelem.text;\r\n\r\n        } else if (this.kind === 'region' || 'contents' in ttelem) {\r\n\r\n            this.contents = [];\r\n        }\r\n\r\n        if ('space' in ttelem) {\r\n\r\n            this.space = ttelem.space;\r\n        }\r\n    }\r\n\r\n\r\n    /*\r\n     * ERROR HANDLING UTILITY FUNCTIONS\r\n     * \r\n     */\r\n\r\n    function reportInfo(errorHandler, msg) {\r\n\r\n        if (errorHandler && errorHandler.info && errorHandler.info(msg))\r\n            throw msg;\r\n\r\n    }\r\n\r\n    function reportWarning(errorHandler, msg) {\r\n\r\n        if (errorHandler && errorHandler.warn && errorHandler.warn(msg))\r\n            throw msg;\r\n\r\n    }\r\n\r\n    function reportError(errorHandler, msg) {\r\n\r\n        if (errorHandler && errorHandler.error && errorHandler.error(msg))\r\n            throw msg;\r\n\r\n    }\r\n\r\n    function reportFatal(errorHandler, msg) {\r\n\r\n        if (errorHandler && errorHandler.fatal)\r\n            errorHandler.fatal(msg);\r\n\r\n        throw msg;\r\n\r\n    }\r\n\r\n\r\n})(typeof exports === 'undefined' ? this.imscISD = {} : exports,\r\n    typeof imscNames === 'undefined' ? require(\"./names\") : imscNames,\r\n    typeof imscStyles === 'undefined' ? require(\"./styles\") : imscStyles,\r\n    typeof imscUtils === 'undefined' ? require(\"./utils\") : imscUtils\r\n    );\r\n","/* \r\n * Copyright (c) 2016, Pierre-Anthony Lemieux <pal@sandflow.com>\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are met:\r\n *\r\n * * Redistributions of source code must retain the above copyright notice, this\r\n *   list of conditions and the following disclaimer.\r\n * * Redistributions in binary form must reproduce the above copyright notice,\r\n *   this list of conditions and the following disclaimer in the documentation\r\n *   and/or other materials provided with the distribution.\r\n *\r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\r\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\r\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\r\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\r\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\r\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\r\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\r\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\r\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n * POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\nexports.generateISD = require('./isd').generateISD;\r\nexports.fromXML = require('./doc').fromXML;\r\nexports.renderHTML = require('./html').render;","/* \r\n * Copyright (c) 2016, Pierre-Anthony Lemieux <pal@sandflow.com>\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are met:\r\n *\r\n * * Redistributions of source code must retain the above copyright notice, this\r\n *   list of conditions and the following disclaimer.\r\n * * Redistributions in binary form must reproduce the above copyright notice,\r\n *   this list of conditions and the following disclaimer in the documentation\r\n *   and/or other materials provided with the distribution.\r\n *\r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\r\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\r\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\r\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\r\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\r\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\r\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\r\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\r\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n * POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\n/**\r\n * @module imscNames\r\n */\r\n\r\n;\r\n(function (imscNames) { // wrapper for non-node envs\r\n\r\n    imscNames.ns_tt = \"http://www.w3.org/ns/ttml\";\r\n    imscNames.ns_tts = \"http://www.w3.org/ns/ttml#styling\";\r\n    imscNames.ns_ttp = \"http://www.w3.org/ns/ttml#parameter\";\r\n    imscNames.ns_xml = \"http://www.w3.org/XML/1998/namespace\";\r\n    imscNames.ns_itts = \"http://www.w3.org/ns/ttml/profile/imsc1#styling\";\r\n    imscNames.ns_ittp = \"http://www.w3.org/ns/ttml/profile/imsc1#parameter\";\r\n    imscNames.ns_smpte = \"http://www.smpte-ra.org/schemas/2052-1/2010/smpte-tt\";\r\n    imscNames.ns_ebutts = \"urn:ebu:tt:style\";\r\n    \r\n})(typeof exports === 'undefined' ? this.imscNames = {} : exports);\r\n\r\n\r\n\r\n\r\n","/* \r\n * Copyright (c) 2016, Pierre-Anthony Lemieux <pal@sandflow.com>\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are met:\r\n *\r\n * * Redistributions of source code must retain the above copyright notice, this\r\n *   list of conditions and the following disclaimer.\r\n * * Redistributions in binary form must reproduce the above copyright notice,\r\n *   this list of conditions and the following disclaimer in the documentation\r\n *   and/or other materials provided with the distribution.\r\n *\r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\r\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\r\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\r\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\r\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\r\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\r\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\r\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\r\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n * POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\n/**\r\n * @module imscStyles\r\n */\r\n\r\n;\r\n(function (imscStyles, imscNames, imscUtils) { // wrapper for non-node envs\r\n\r\n    function StylingAttributeDefinition(ns, name, initialValue, appliesTo, isInherit, isAnimatable, parseFunc, computeFunc) {\r\n        this.name = name;\r\n        this.ns = ns;\r\n        this.qname = ns + \" \" + name;\r\n        this.inherit = isInherit;\r\n        this.animatable = isAnimatable;\r\n        this.initial = initialValue;\r\n        this.applies = appliesTo;\r\n        this.parse = parseFunc;\r\n        this.compute = computeFunc;\r\n    }\r\n\r\n    imscStyles.all = [\r\n\r\n        new StylingAttributeDefinition(\r\n            imscNames.ns_tts,\r\n            \"backgroundColor\",\r\n            \"transparent\",\r\n            ['body', 'div', 'p', 'region', 'span'],\r\n            false,\r\n            true,\r\n            imscUtils.parseColor,\r\n            null\r\n            ),\r\n        new StylingAttributeDefinition(\r\n            imscNames.ns_tts,\r\n            \"color\",\r\n            \"white\",\r\n            ['span'],\r\n            true,\r\n            true,\r\n            imscUtils.parseColor,\r\n            null\r\n            ),\r\n        new StylingAttributeDefinition(\r\n            imscNames.ns_tts,\r\n            \"direction\",\r\n            \"ltr\",\r\n            ['p', 'span'],\r\n            true,\r\n            true,\r\n            function (str) {\r\n                return str;\r\n            },\r\n            null\r\n            ),\r\n        new StylingAttributeDefinition(\r\n            imscNames.ns_tts,\r\n            \"display\",\r\n            \"auto\",\r\n            ['body', 'div', 'p', 'region', 'span'],\r\n            false,\r\n            true,\r\n            function (str) {\r\n                return str;\r\n            },\r\n            null\r\n            ),\r\n        new StylingAttributeDefinition(\r\n            imscNames.ns_tts,\r\n            \"displayAlign\",\r\n            \"before\",\r\n            ['region'],\r\n            false,\r\n            true,\r\n            function (str) {\r\n                return str;\r\n            },\r\n            null\r\n            ),\r\n        new StylingAttributeDefinition(\r\n            imscNames.ns_tts,\r\n            \"extent\",\r\n            \"auto\",\r\n            ['tt', 'region'],\r\n            false,\r\n            true,\r\n            function (str) {\r\n\r\n                if (str === \"auto\") {\r\n\r\n                    return str;\r\n\r\n                } else {\r\n\r\n                    var s = str.split(\" \");\r\n                    if (s.length !== 2)\r\n                        return null;\r\n                    var w = imscUtils.parseLength(s[0]);\r\n                    var h = imscUtils.parseLength(s[1]);\r\n                    if (!h || !w)\r\n                        return null;\r\n                    return {'h': h, 'w': w};\r\n                }\r\n\r\n            },\r\n            function (doc, parent, element, attr, context) {\r\n\r\n                var h;\r\n                var w;\r\n\r\n                if (attr === \"auto\") {\r\n\r\n                    h = new imscUtils.ComputedLength(0, 1);\r\n\r\n                } else {\r\n\r\n                    h = imscUtils.toComputedLength(\r\n                        attr.h.value,\r\n                        attr.h.unit,\r\n                        null,\r\n                        doc.dimensions.h,\r\n                        null,\r\n                        doc.pxLength.h\r\n                        );\r\n\r\n\r\n                    if (h === null) {\r\n\r\n                        return null;\r\n\r\n                    }\r\n                }\r\n\r\n                if (attr === \"auto\") {\r\n\r\n                    w = new imscUtils.ComputedLength(1, 0);\r\n\r\n                } else {\r\n\r\n                    w = imscUtils.toComputedLength(\r\n                        attr.w.value,\r\n                        attr.w.unit,\r\n                        null,\r\n                        doc.dimensions.w,\r\n                        null,\r\n                        doc.pxLength.w\r\n                        );\r\n\r\n                    if (w === null) {\r\n\r\n                        return null;\r\n\r\n                    }\r\n\r\n                }\r\n\r\n                return {'h': h, 'w': w};\r\n            }\r\n        ),\r\n        new StylingAttributeDefinition(\r\n            imscNames.ns_tts,\r\n            \"fontFamily\",\r\n            \"default\",\r\n            ['span', 'p'],\r\n            true,\r\n            true,\r\n            function (str) {\r\n                var ffs = str.split(\",\");\r\n                var rslt = [];\r\n\r\n                for (var i = 0; i < ffs.length; i++) {\r\n                    ffs[i] = ffs[i].trim();\r\n\r\n                    if (ffs[i].charAt(0) !== \"'\" && ffs[i].charAt(0) !== '\"') {\r\n\r\n                        if (ffs[i] === \"default\") {\r\n\r\n                            /* per IMSC1 */\r\n\r\n                            rslt.push(\"monospaceSerif\");\r\n\r\n                        } else {\r\n\r\n                            rslt.push(ffs[i]);\r\n\r\n                        }\r\n\r\n                    } else {\r\n\r\n                        rslt.push(ffs[i]);\r\n\r\n                    }\r\n\r\n                }\r\n\r\n                return rslt;\r\n            },\r\n            null\r\n            ),\r\n        new StylingAttributeDefinition(\r\n            imscNames.ns_tts,\r\n            \"shear\",\r\n            \"0%\",\r\n            ['p'],\r\n            true,\r\n            true,\r\n            imscUtils.parseLength,\r\n            function (doc, parent, element, attr) {\r\n\r\n                var fs;\r\n\r\n                if (attr.unit === \"%\") {\r\n\r\n                    fs = Math.abs(attr.value) > 100 ? Math.sign(attr.value) * 100 : attr.value;\r\n\r\n                } else {\r\n\r\n                    return null;\r\n\r\n                }\r\n\r\n                return fs;\r\n            }\r\n        ),\r\n        new StylingAttributeDefinition(\r\n            imscNames.ns_tts,\r\n            \"fontSize\",\r\n            \"1c\",\r\n            ['span', 'p'],\r\n            true,\r\n            true,\r\n            imscUtils.parseLength,\r\n            function (doc, parent, element, attr, context) {\r\n\r\n                var fs;\r\n\r\n                fs = imscUtils.toComputedLength(\r\n                    attr.value,\r\n                    attr.unit,\r\n                    parent !== null ? parent.styleAttrs[imscStyles.byName.fontSize.qname] : doc.cellLength.h,\r\n                    parent !== null ? parent.styleAttrs[imscStyles.byName.fontSize.qname] : doc.cellLength.h,\r\n                    doc.cellLength.h,\r\n                    doc.pxLength.h\r\n                    );\r\n\r\n                return fs;\r\n            }\r\n        ),\r\n        new StylingAttributeDefinition(\r\n            imscNames.ns_tts,\r\n            \"fontStyle\",\r\n            \"normal\",\r\n            ['span', 'p'],\r\n            true,\r\n            true,\r\n            function (str) {\r\n                /* TODO: handle font style */\r\n\r\n                return str;\r\n            },\r\n            null\r\n            ),\r\n        new StylingAttributeDefinition(\r\n            imscNames.ns_tts,\r\n            \"fontWeight\",\r\n            \"normal\",\r\n            ['span', 'p'],\r\n            true,\r\n            true,\r\n            function (str) {\r\n                /* TODO: handle font weight */\r\n\r\n                return str;\r\n            },\r\n            null\r\n            ),\r\n        new StylingAttributeDefinition(\r\n            imscNames.ns_tts,\r\n            \"lineHeight\",\r\n            \"normal\",\r\n            ['p'],\r\n            true,\r\n            true,\r\n            function (str) {\r\n                if (str === \"normal\") {\r\n                    return str;\r\n                } else {\r\n                    return imscUtils.parseLength(str);\r\n                }\r\n            },\r\n            function (doc, parent, element, attr, context) {\r\n\r\n                var lh;\r\n\r\n                if (attr === \"normal\") {\r\n\r\n                    /* inherit normal per https://github.com/w3c/ttml1/issues/220 */\r\n\r\n                    lh = attr;\r\n\r\n                } else {\r\n\r\n                    lh = imscUtils.toComputedLength(\r\n                        attr.value,\r\n                        attr.unit,\r\n                        element.styleAttrs[imscStyles.byName.fontSize.qname],\r\n                        element.styleAttrs[imscStyles.byName.fontSize.qname],\r\n                        doc.cellLength.h,\r\n                        doc.pxLength.h\r\n                        );\r\n\r\n                    if (lh === null) {\r\n\r\n                        return null;\r\n\r\n                    }\r\n\r\n                }\r\n\r\n                /* TODO: create a Length constructor */\r\n\r\n                return lh;\r\n            }\r\n        ),\r\n        new StylingAttributeDefinition(\r\n            imscNames.ns_tts,\r\n            \"opacity\",\r\n            1.0,\r\n            ['region'],\r\n            false,\r\n            true,\r\n            parseFloat,\r\n            null\r\n            ),\r\n        new StylingAttributeDefinition(\r\n            imscNames.ns_tts,\r\n            \"origin\",\r\n            \"auto\",\r\n            ['region'],\r\n            false,\r\n            true,\r\n            function (str) {\r\n\r\n                if (str === \"auto\") {\r\n\r\n                    return str;\r\n\r\n                } else {\r\n\r\n                    var s = str.split(\" \");\r\n                    if (s.length !== 2)\r\n                        return null;\r\n                    var w = imscUtils.parseLength(s[0]);\r\n                    var h = imscUtils.parseLength(s[1]);\r\n                    if (!h || !w)\r\n                        return null;\r\n                    return {'h': h, 'w': w};\r\n                }\r\n\r\n            },\r\n            function (doc, parent, element, attr, context) {\r\n\r\n                var h;\r\n                var w;\r\n\r\n                if (attr === \"auto\") {\r\n\r\n                    h = new imscUtils.ComputedLength(0,0);\r\n\r\n                } else {\r\n\r\n                    h = imscUtils.toComputedLength(\r\n                        attr.h.value,\r\n                        attr.h.unit,\r\n                        null,\r\n                        doc.dimensions.h,\r\n                        null,\r\n                        doc.pxLength.h\r\n                        );\r\n\r\n                    if (h === null) {\r\n\r\n                        return null;\r\n\r\n                    }\r\n\r\n                }\r\n\r\n                if (attr === \"auto\") {\r\n\r\n                    w = new imscUtils.ComputedLength(0,0);\r\n\r\n                } else {\r\n\r\n                    w = imscUtils.toComputedLength(\r\n                        attr.w.value,\r\n                        attr.w.unit,\r\n                        null,\r\n                        doc.dimensions.w,\r\n                        null,\r\n                        doc.pxLength.w\r\n                        );\r\n\r\n                    if (w === null) {\r\n\r\n                        return null;\r\n\r\n                    }\r\n\r\n                }\r\n\r\n                return {'h': h, 'w': w};\r\n            }\r\n        ),\r\n        new StylingAttributeDefinition(\r\n            imscNames.ns_tts,\r\n            \"overflow\",\r\n            \"hidden\",\r\n            ['region'],\r\n            false,\r\n            true,\r\n            function (str) {\r\n                return str;\r\n            },\r\n            null\r\n            ),\r\n        new StylingAttributeDefinition(\r\n            imscNames.ns_tts,\r\n            \"padding\",\r\n            \"0px\",\r\n            ['region'],\r\n            false,\r\n            true,\r\n            function (str) {\r\n\r\n                var s = str.split(\" \");\r\n                if (s.length > 4)\r\n                    return null;\r\n                var r = [];\r\n                for (var i = 0; i < s.length; i++) {\r\n\r\n                    var l = imscUtils.parseLength(s[i]);\r\n                    if (!l)\r\n                        return null;\r\n                    r.push(l);\r\n                }\r\n\r\n                return r;\r\n            },\r\n            function (doc, parent, element, attr, context) {\r\n\r\n                var padding;\r\n\r\n                /* TODO: make sure we are in region */\r\n\r\n                /*\r\n                 * expand padding shortcuts to \r\n                 * [before, end, after, start]\r\n                 * \r\n                 */\r\n\r\n                if (attr.length === 1) {\r\n\r\n                    padding = [attr[0], attr[0], attr[0], attr[0]];\r\n\r\n                } else if (attr.length === 2) {\r\n\r\n                    padding = [attr[0], attr[1], attr[0], attr[1]];\r\n\r\n                } else if (attr.length === 3) {\r\n\r\n                    padding = [attr[0], attr[1], attr[2], attr[1]];\r\n\r\n                } else if (attr.length === 4) {\r\n\r\n                    padding = [attr[0], attr[1], attr[2], attr[3]];\r\n\r\n                } else {\r\n\r\n                    return null;\r\n\r\n                }\r\n\r\n                /* TODO: take into account tts:direction */\r\n\r\n                /* \r\n                 * transform [before, end, after, start] according to writingMode to \r\n                 * [top,left,bottom,right]\r\n                 * \r\n                 */\r\n\r\n                var dir = element.styleAttrs[imscStyles.byName.writingMode.qname];\r\n\r\n                if (dir === \"lrtb\" || dir === \"lr\") {\r\n\r\n                    padding = [padding[0], padding[3], padding[2], padding[1]];\r\n\r\n                } else if (dir === \"rltb\" || dir === \"rl\") {\r\n\r\n                    padding = [padding[0], padding[1], padding[2], padding[3]];\r\n\r\n                } else if (dir === \"tblr\") {\r\n\r\n                    padding = [padding[3], padding[0], padding[1], padding[2]];\r\n\r\n                } else if (dir === \"tbrl\" || dir === \"tb\") {\r\n\r\n                    padding = [padding[3], padding[2], padding[1], padding[0]];\r\n\r\n                } else {\r\n\r\n                    return null;\r\n\r\n                }\r\n\r\n                var out = [];\r\n\r\n                for (var i = 0 ; i < padding.length; i++) {\r\n\r\n                    if (padding[i].value === 0) {\r\n\r\n                        out[i] = new imscUtils.ComputedLength(0,0);\r\n\r\n                    } else {\r\n\r\n                        out[i] = imscUtils.toComputedLength(\r\n                            padding[i].value,\r\n                            padding[i].unit,\r\n                            element.styleAttrs[imscStyles.byName.fontSize.qname],\r\n                            i === 0 || i === 2 ? element.styleAttrs[imscStyles.byName.extent.qname].h : element.styleAttrs[imscStyles.byName.extent.qname].w,\r\n                            i === 0 || i === 2 ? doc.cellLength.h : doc.cellLength.w,\r\n                            i === 0 || i === 2 ? doc.pxLength.h: doc.pxLength.w\r\n                            );\r\n\r\n                        if (out[i] === null) return null;\r\n\r\n                    }\r\n                }\r\n\r\n\r\n                return out;\r\n            }\r\n        ),\r\n        new StylingAttributeDefinition(\r\n            imscNames.ns_tts,\r\n            \"position\",\r\n            \"top left\",\r\n            ['region'],\r\n            false,\r\n            true,\r\n            function (str) {\r\n\r\n                return imscUtils.parsePosition(str);\r\n\r\n            },\r\n            function (doc, parent, element, attr) {\r\n                var h;\r\n                var w;\r\n                \r\n                h = imscUtils.toComputedLength(\r\n                    attr.v.offset.value,\r\n                    attr.v.offset.unit,\r\n                    null,\r\n                    new imscUtils.ComputedLength(\r\n                        - element.styleAttrs[imscStyles.byName.extent.qname].h.rw,\r\n                        doc.dimensions.h.rh - element.styleAttrs[imscStyles.byName.extent.qname].h.rh \r\n                    ),\r\n                    null,\r\n                    doc.pxLength.h\r\n                    );\r\n\r\n                if (h === null) return null;\r\n\r\n\r\n                if (attr.v.edge === \"bottom\") {\r\n\r\n                    h = new imscUtils.ComputedLength(\r\n                        - h.rw - element.styleAttrs[imscStyles.byName.extent.qname].h.rw,\r\n                        doc.dimensions.h.rh - h.rh - element.styleAttrs[imscStyles.byName.extent.qname].h.rh\r\n                    );\r\n            \r\n                }\r\n\r\n                w = imscUtils.toComputedLength(\r\n                    attr.h.offset.value,\r\n                    attr.h.offset.unit,\r\n                    null,\r\n                    new imscUtils.ComputedLength(\r\n                        doc.dimensions.w.rw - element.styleAttrs[imscStyles.byName.extent.qname].w.rw,\r\n                        - element.styleAttrs[imscStyles.byName.extent.qname].w.rh\r\n                    ),\r\n                    null,\r\n                    doc.pxLength.w\r\n                    );\r\n\r\n                if (h === null) return null;\r\n\r\n                if (attr.h.edge === \"right\") {\r\n                    \r\n                    w = new imscUtils.ComputedLength(\r\n                        doc.dimensions.w.rw - w.rw - element.styleAttrs[imscStyles.byName.extent.qname].w.rw,\r\n                        - w.rh - element.styleAttrs[imscStyles.byName.extent.qname].w.rh\r\n                    );\r\n\r\n                }\r\n\r\n                return {'h': h, 'w': w};\r\n            }\r\n        ),\r\n        new StylingAttributeDefinition(\r\n            imscNames.ns_tts,\r\n            \"ruby\",\r\n            \"none\",\r\n            ['span'],\r\n            false,\r\n            true,\r\n            function (str) {\r\n                return str;\r\n            },\r\n            null\r\n            ),\r\n        new StylingAttributeDefinition(\r\n            imscNames.ns_tts,\r\n            \"rubyAlign\",\r\n            \"center\",\r\n            ['span'],\r\n            true,\r\n            true,\r\n            function (str) {\r\n                \r\n                if (! (str === \"center\" || str === \"spaceAround\")) {\r\n                    return null;\r\n                }\r\n                \r\n                return str;\r\n            },\r\n            null\r\n            ),\r\n        new StylingAttributeDefinition(\r\n            imscNames.ns_tts,\r\n            \"rubyPosition\",\r\n            \"outside\",\r\n            ['span'],\r\n            true,\r\n            true,\r\n            function (str) {\r\n                return str;\r\n            },\r\n            null\r\n            ),\r\n        new StylingAttributeDefinition(\r\n            imscNames.ns_tts,\r\n            \"rubyReserve\",\r\n            \"none\",\r\n            ['p'],\r\n            true,\r\n            true,\r\n            function (str) {\r\n                var s = str.split(\" \");\r\n\r\n                var r = [null, null];\r\n\r\n                if (s.length === 0 || s.length > 2)\r\n                    return null;\r\n\r\n                if (s[0] === \"none\" ||\r\n                    s[0] === \"both\" ||\r\n                    s[0] === \"after\" ||\r\n                    s[0] === \"before\" ||\r\n                    s[0] === \"outside\") {\r\n\r\n                    r[0] = s[0];\r\n\r\n                } else {\r\n\r\n                    return null;\r\n\r\n                }\r\n\r\n                if (s.length === 2 && s[0] !== \"none\") {\r\n\r\n                    var l = imscUtils.parseLength(s[1]);\r\n\r\n                    if (l) {\r\n\r\n                        r[1] = l;\r\n\r\n                    } else {\r\n\r\n                        return null;\r\n\r\n                    }\r\n\r\n                }\r\n\r\n\r\n                return r;\r\n            },\r\n            function (doc, parent, element, attr, context) {\r\n\r\n                if (attr[0] === \"none\") {\r\n\r\n                    return attr;\r\n\r\n                }\r\n\r\n                var fs = null;\r\n\r\n                if (attr[1] === null) {\r\n\r\n                    fs = new imscUtils.ComputedLength(\r\n                            element.styleAttrs[imscStyles.byName.fontSize.qname].rw * 0.5,\r\n                            element.styleAttrs[imscStyles.byName.fontSize.qname].rh * 0.5\r\n                    );\r\n\r\n                } else {\r\n\r\n                    fs = imscUtils.toComputedLength(attr[1].value,\r\n                        attr[1].unit,\r\n                        element.styleAttrs[imscStyles.byName.fontSize.qname],\r\n                        element.styleAttrs[imscStyles.byName.fontSize.qname],\r\n                        doc.cellLength.h,\r\n                        doc.pxLength.h\r\n                        );\r\n                \r\n                }\r\n\r\n                if (fs === null) return null;\r\n\r\n                return [attr[0], fs];\r\n            }\r\n        ),\r\n        new StylingAttributeDefinition(\r\n            imscNames.ns_tts,\r\n            \"showBackground\",\r\n            \"always\",\r\n            ['region'],\r\n            false,\r\n            true,\r\n            function (str) {\r\n                return str;\r\n            },\r\n            null\r\n            ),\r\n        new StylingAttributeDefinition(\r\n            imscNames.ns_tts,\r\n            \"textAlign\",\r\n            \"start\",\r\n            ['p'],\r\n            true,\r\n            true,\r\n            function (str) {\r\n                return str;\r\n            },\r\n            function (doc, parent, element, attr, context) {\r\n                /* Section 7.16.9 of XSL */\r\n\r\n                if (attr === \"left\") {\r\n\r\n                    return \"start\";\r\n\r\n                } else if (attr === \"right\") {\r\n\r\n                    return \"end\";\r\n\r\n                } else {\r\n\r\n                    return attr;\r\n\r\n                }\r\n            }\r\n        ),\r\n        new StylingAttributeDefinition(\r\n            imscNames.ns_tts,\r\n            \"textCombine\",\r\n            \"none\",\r\n            ['span'],\r\n            true,\r\n            true,\r\n            function (str) {\r\n                if (str === \"none\" || str === \"all\") {\r\n\r\n                    return str;\r\n                }\r\n\r\n                return null;\r\n            },\r\n            null\r\n            ),\r\n        new StylingAttributeDefinition(\r\n            imscNames.ns_tts,\r\n            \"textDecoration\",\r\n            \"none\",\r\n            ['span'],\r\n            true,\r\n            true,\r\n            function (str) {\r\n                return str.split(\" \");\r\n            },\r\n            null\r\n            ),\r\n        new StylingAttributeDefinition(\r\n            imscNames.ns_tts,\r\n            \"textEmphasis\",\r\n            \"none\",\r\n            ['span'],\r\n            true,\r\n            true,\r\n            function (str) {\r\n                var e = str.split(\" \");\r\n\r\n                var rslt = {style: null, symbol: null, color: null, position: null};\r\n\r\n                for (var i = 0; i < e.length; i++) {\r\n\r\n                    if (e[i] === \"none\" || e[i] === \"auto\") {\r\n\r\n                        rslt.style = e[i];\r\n\r\n                    } else if (e[i] === \"filled\" ||\r\n                        e[i] === \"open\") {\r\n\r\n                        rslt.style = e[i];\r\n\r\n                    } else if (e[i] === \"circle\" ||\r\n                        e[i] === \"dot\" ||\r\n                        e[i] === \"sesame\") {\r\n\r\n                        rslt.symbol = e[i];\r\n\r\n                    } else if (e[i] === \"current\") {\r\n\r\n                        rslt.color = e[i];\r\n\r\n                    } else if (e[i] === \"outside\" || e[i] === \"before\" || e[i] === \"after\") {\r\n\r\n                        rslt.position = e[i];\r\n\r\n                    } else {\r\n\r\n                        rslt.color = imscUtils.parseColor(e[i]);\r\n\r\n                        if (rslt.color === null)\r\n                            return null;\r\n\r\n                    }\r\n                }\r\n\r\n                if (rslt.style == null && rslt.symbol == null) {\r\n\r\n                    rslt.style = \"auto\";\r\n\r\n                } else {\r\n\r\n                    rslt.symbol = rslt.symbol || \"circle\";\r\n                    rslt.style = rslt.style || \"filled\";\r\n\r\n                }\r\n\r\n                rslt.position = rslt.position || \"outside\";\r\n                rslt.color = rslt.color || \"current\";\r\n\r\n                return rslt;\r\n            },\r\n            null\r\n            ),\r\n        new StylingAttributeDefinition(\r\n            imscNames.ns_tts,\r\n            \"textOutline\",\r\n            \"none\",\r\n            ['span'],\r\n            true,\r\n            true,\r\n            function (str) {\r\n\r\n                /*\r\n                 * returns {c: <color>?, thichness: <length>} | \"none\"\r\n                 * \r\n                 */\r\n\r\n                if (str === \"none\") {\r\n\r\n                    return str;\r\n\r\n                } else {\r\n\r\n                    var r = {};\r\n                    var s = str.split(\" \");\r\n                    if (s.length === 0 || s.length > 2)\r\n                        return null;\r\n                    var c = imscUtils.parseColor(s[0]);\r\n\r\n                    r.color = c;\r\n\r\n                    if (c !== null)\r\n                        s.shift();\r\n\r\n                    if (s.length !== 1)\r\n                        return null;\r\n\r\n                    var l = imscUtils.parseLength(s[0]);\r\n\r\n                    if (!l)\r\n                        return null;\r\n\r\n                    r.thickness = l;\r\n\r\n                    return r;\r\n                }\r\n\r\n            },\r\n            function (doc, parent, element, attr, context) {\r\n\r\n                /*\r\n                 * returns {color: <color>, thickness: <norm length>}\r\n                 * \r\n                 */\r\n\r\n                if (attr === \"none\")\r\n                    return attr;\r\n\r\n                var rslt = {};\r\n\r\n                if (attr.color === null) {\r\n\r\n                    rslt.color = element.styleAttrs[imscStyles.byName.color.qname];\r\n\r\n                } else {\r\n\r\n                    rslt.color = attr.color;\r\n\r\n                }\r\n\r\n                rslt.thickness = imscUtils.toComputedLength(\r\n                    attr.thickness.value,\r\n                    attr.thickness.unit,\r\n                    element.styleAttrs[imscStyles.byName.fontSize.qname],\r\n                    element.styleAttrs[imscStyles.byName.fontSize.qname],\r\n                    doc.cellLength.h,\r\n                    doc.pxLength.h\r\n                    );\r\n\r\n                if (rslt.thickness === null)\r\n                    return null;\r\n\r\n                return rslt;\r\n            }\r\n        ),\r\n        new StylingAttributeDefinition(\r\n            imscNames.ns_tts,\r\n            \"textShadow\",\r\n            \"none\",\r\n            ['span'],\r\n            true,\r\n            true,\r\n            imscUtils.parseTextShadow,\r\n            function (doc, parent, element, attr) {\r\n\r\n                /*\r\n                 * returns [{x_off: <length>, y_off: <length>, b_radius: <length>, color: <color>}*] or \"none\"\r\n                 * \r\n                 */\r\n\r\n                if (attr === \"none\")\r\n                    return attr;\r\n\r\n                var r = [];\r\n\r\n                for (var i = 0; i < attr.length; i++) {\r\n\r\n                    var shadow = {};\r\n\r\n                    shadow.x_off = imscUtils.toComputedLength(\r\n                        attr[i][0].value,\r\n                        attr[i][0].unit,\r\n                        null,\r\n                        element.styleAttrs[imscStyles.byName.fontSize.qname],\r\n                        null,\r\n                        doc.pxLength.w\r\n                        );\r\n\r\n                    if (shadow.x_off === null)\r\n                        return null;\r\n\r\n                    shadow.y_off = imscUtils.toComputedLength(\r\n                        attr[i][1].value,\r\n                        attr[i][1].unit,\r\n                        null,\r\n                        element.styleAttrs[imscStyles.byName.fontSize.qname],\r\n                        null,\r\n                        doc.pxLength.h\r\n                        );\r\n\r\n                    if (shadow.y_off === null)\r\n                        return null;\r\n\r\n                    if (attr[i][2] === null) {\r\n\r\n                        shadow.b_radius = 0;\r\n\r\n                    } else {\r\n\r\n                        shadow.b_radius = imscUtils.toComputedLength(\r\n                            attr[i][2].value,\r\n                            attr[i][2].unit,\r\n                            null,\r\n                            element.styleAttrs[imscStyles.byName.fontSize.qname],\r\n                            null,\r\n                            doc.pxLength.h\r\n                            );\r\n\r\n                        if (shadow.b_radius === null)\r\n                            return null;\r\n\r\n                    }\r\n\r\n                    if (attr[i][3] === null) {\r\n\r\n                        shadow.color = element.styleAttrs[imscStyles.byName.color.qname];\r\n\r\n                    } else {\r\n\r\n                        shadow.color = attr[i][3];\r\n\r\n                    }\r\n\r\n                    r.push(shadow);\r\n\r\n                }\r\n\r\n                return r;\r\n            }\r\n        ),\r\n        new StylingAttributeDefinition(\r\n            imscNames.ns_tts,\r\n            \"unicodeBidi\",\r\n            \"normal\",\r\n            ['span', 'p'],\r\n            false,\r\n            true,\r\n            function (str) {\r\n                return str;\r\n            },\r\n            null\r\n            ),\r\n        new StylingAttributeDefinition(\r\n            imscNames.ns_tts,\r\n            \"visibility\",\r\n            \"visible\",\r\n            ['body', 'div', 'p', 'region', 'span'],\r\n            true,\r\n            true,\r\n            function (str) {\r\n                return str;\r\n            },\r\n            null\r\n            ),\r\n        new StylingAttributeDefinition(\r\n            imscNames.ns_tts,\r\n            \"wrapOption\",\r\n            \"wrap\",\r\n            ['span'],\r\n            true,\r\n            true,\r\n            function (str) {\r\n                return str;\r\n            },\r\n            null\r\n            ),\r\n        new StylingAttributeDefinition(\r\n            imscNames.ns_tts,\r\n            \"writingMode\",\r\n            \"lrtb\",\r\n            ['region'],\r\n            false,\r\n            true,\r\n            function (str) {\r\n                return str;\r\n            },\r\n            null\r\n            ),\r\n        new StylingAttributeDefinition(\r\n            imscNames.ns_tts,\r\n            \"zIndex\",\r\n            \"auto\",\r\n            ['region'],\r\n            false,\r\n            true,\r\n            function (str) {\r\n\r\n                var rslt;\r\n\r\n                if (str === 'auto') {\r\n\r\n                    rslt = str;\r\n\r\n                } else {\r\n\r\n                    rslt = parseInt(str);\r\n\r\n                    if (isNaN(rslt)) {\r\n                        rslt = null;\r\n                    }\r\n\r\n                }\r\n\r\n                return rslt;\r\n            },\r\n            null\r\n            ),\r\n        new StylingAttributeDefinition(\r\n            imscNames.ns_ebutts,\r\n            \"linePadding\",\r\n            \"0c\",\r\n            ['p'],\r\n            true,\r\n            false,\r\n            imscUtils.parseLength,\r\n            function (doc, parent, element, attr, context) {\r\n\r\n                return imscUtils.toComputedLength(attr.value, attr.unit, null, null, doc.cellLength.w, null);\r\n\r\n            }\r\n        ),\r\n        new StylingAttributeDefinition(\r\n            imscNames.ns_ebutts,\r\n            \"multiRowAlign\",\r\n            \"auto\",\r\n            ['p'],\r\n            true,\r\n            false,\r\n            function (str) {\r\n                return str;\r\n            },\r\n            null\r\n            ),\r\n        new StylingAttributeDefinition(\r\n            imscNames.ns_smpte,\r\n            \"backgroundImage\",\r\n            null,\r\n            ['div'],\r\n            false,\r\n            false,\r\n            function (str) {\r\n                return str;\r\n            },\r\n            null\r\n            ),\r\n        new StylingAttributeDefinition(\r\n            imscNames.ns_itts,\r\n            \"forcedDisplay\",\r\n            \"false\",\r\n            ['body', 'div', 'p', 'region', 'span'],\r\n            true,\r\n            true,\r\n            function (str) {\r\n                return str === 'true' ? true : false;\r\n            },\r\n            null\r\n            ),\r\n        new StylingAttributeDefinition(\r\n            imscNames.ns_itts,\r\n            \"fillLineGap\",\r\n            \"false\",\r\n            ['p'],\r\n            true,\r\n            true,\r\n            function (str) {\r\n                return str === 'true' ? true : false;\r\n            },\r\n            null\r\n            )\r\n    ];\r\n\r\n    /* TODO: allow null parse function */\r\n\r\n    imscStyles.byQName = {};\r\n    for (var i in imscStyles.all) {\r\n\r\n        imscStyles.byQName[imscStyles.all[i].qname] = imscStyles.all[i];\r\n    }\r\n\r\n    imscStyles.byName = {};\r\n    for (var j in imscStyles.all) {\r\n\r\n        imscStyles.byName[imscStyles.all[j].name] = imscStyles.all[j];\r\n    }\r\n\r\n\r\n})(typeof exports === 'undefined' ? this.imscStyles = {} : exports,\r\n    typeof imscNames === 'undefined' ? require(\"./names\") : imscNames,\r\n    typeof imscUtils === 'undefined' ? require(\"./utils\") : imscUtils);\r\n","/* \r\n * Copyright (c) 2016, Pierre-Anthony Lemieux <pal@sandflow.com>\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are met:\r\n *\r\n * * Redistributions of source code must retain the above copyright notice, this\r\n *   list of conditions and the following disclaimer.\r\n * * Redistributions in binary form must reproduce the above copyright notice,\r\n *   this list of conditions and the following disclaimer in the documentation\r\n *   and/or other materials provided with the distribution.\r\n *\r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\r\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\r\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\r\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\r\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\r\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\r\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\r\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\r\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n * POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\n/**\r\n * @module imscUtils\r\n */\r\n\r\n;\r\n(function (imscUtils) { // wrapper for non-node envs\r\n\r\n    /* Documents the error handler interface */\r\n\r\n    /**\r\n     * @classdesc Generic interface for handling events. The interface exposes four\r\n     * methods:\r\n     * * <pre>info</pre>: unusual event that does not result in an inconsistent state\r\n     * * <pre>warn</pre>: unexpected event that should not result in an inconsistent state\r\n     * * <pre>error</pre>: unexpected event that may result in an inconsistent state\r\n     * * <pre>fatal</pre>: unexpected event that results in an inconsistent state\r\n     *   and termination of processing\r\n     * Each method takes a single <pre>string</pre> describing the event as argument,\r\n     * and returns a single <pre>boolean</pre>, which terminates processing if <pre>true</pre>.\r\n     *\r\n     * @name ErrorHandler\r\n     * @class\r\n     */\r\n\r\n\r\n    /*\r\n     * Parses a TTML color expression\r\n     * \r\n     */\r\n\r\n    var HEX_COLOR_RE = /#([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})?/;\r\n    var DEC_COLOR_RE = /rgb\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*\\)/;\r\n    var DEC_COLORA_RE = /rgba\\(\\s*(\\d+),\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*\\)/;\r\n    var NAMED_COLOR = {\r\n        transparent: [0, 0, 0, 0],\r\n        black: [0, 0, 0, 255],\r\n        silver: [192, 192, 192, 255],\r\n        gray: [128, 128, 128, 255],\r\n        white: [255, 255, 255, 255],\r\n        maroon: [128, 0, 0, 255],\r\n        red: [255, 0, 0, 255],\r\n        purple: [128, 0, 128, 255],\r\n        fuchsia: [255, 0, 255, 255],\r\n        magenta: [255, 0, 255, 255],\r\n        green: [0, 128, 0, 255],\r\n        lime: [0, 255, 0, 255],\r\n        olive: [128, 128, 0, 255],\r\n        yellow: [255, 255, 0, 255],\r\n        navy: [0, 0, 128, 255],\r\n        blue: [0, 0, 255, 255],\r\n        teal: [0, 128, 128, 255],\r\n        aqua: [0, 255, 255, 255],\r\n        cyan: [0, 255, 255, 255]\r\n    };\r\n\r\n    imscUtils.parseColor = function (str) {\r\n\r\n        var m;\r\n        \r\n        var r = null;\r\n        \r\n        var nc = NAMED_COLOR[str.toLowerCase()];\r\n        \r\n        if (nc !== undefined) {\r\n\r\n            r = nc;\r\n\r\n        } else if ((m = HEX_COLOR_RE.exec(str)) !== null) {\r\n\r\n            r = [parseInt(m[1], 16),\r\n                parseInt(m[2], 16),\r\n                parseInt(m[3], 16),\r\n                (m[4] !== undefined ? parseInt(m[4], 16) : 255)];\r\n            \r\n        } else if ((m = DEC_COLOR_RE.exec(str)) !== null) {\r\n\r\n            r = [parseInt(m[1]),\r\n                parseInt(m[2]),\r\n                parseInt(m[3]),\r\n                255];\r\n            \r\n        } else if ((m = DEC_COLORA_RE.exec(str)) !== null) {\r\n\r\n            r = [parseInt(m[1]),\r\n                parseInt(m[2]),\r\n                parseInt(m[3]),\r\n                parseInt(m[4])];\r\n            \r\n        }\r\n\r\n        return r;\r\n    };\r\n\r\n    var LENGTH_RE = /^((?:\\+|\\-)?\\d*(?:\\.\\d+)?)(px|em|c|%|rh|rw)$/;\r\n\r\n    imscUtils.parseLength = function (str) {\r\n\r\n        var m;\r\n\r\n        var r = null;\r\n\r\n        if ((m = LENGTH_RE.exec(str)) !== null) {\r\n\r\n            r = {value: parseFloat(m[1]), unit: m[2]};\r\n        }\r\n\r\n        return r;\r\n    };\r\n\r\n    imscUtils.parseTextShadow = function (str) {\r\n\r\n        var shadows = str.match(/([^\\(,\\)]|\\([^\\)]+\\))+/g);\r\n        \r\n        var r = [];\r\n\r\n        for (var i = 0; i < shadows.length; i++) {\r\n\r\n            var shadow = shadows[i].split(\" \");\r\n\r\n            if (shadow.length === 1 && shadow[0] === \"none\") {\r\n\r\n                return \"none\";\r\n\r\n            } else if (shadow.length > 1 && shadow.length < 5) {\r\n\r\n                var out_shadow = [null, null, null, null];\r\n\r\n                /* x offset */\r\n\r\n                var l = imscUtils.parseLength(shadow.shift());\r\n\r\n                if (l === null)\r\n                    return null;\r\n\r\n                out_shadow[0] = l;\r\n\r\n                /* y offset */\r\n\r\n                l = imscUtils.parseLength(shadow.shift());\r\n\r\n                if (l === null)\r\n                    return null;\r\n\r\n                out_shadow[1] = l;\r\n\r\n                /* is there a third component */\r\n\r\n                if (shadow.length === 0) {\r\n                    r.push(out_shadow);\r\n                    continue;\r\n                }\r\n\r\n                l = imscUtils.parseLength(shadow[0]);\r\n\r\n                if (l !== null) {\r\n\r\n                    out_shadow[2] = l;\r\n\r\n                    shadow.shift();\r\n\r\n                }\r\n\r\n                if (shadow.length === 0) {\r\n                    r.push(out_shadow);\r\n                    continue;\r\n                }\r\n\r\n                var c = imscUtils.parseColor(shadow[0]);\r\n\r\n                if (c === null)\r\n                    return null;\r\n\r\n                out_shadow[3] = c;\r\n\r\n                r.push(out_shadow);\r\n            }\r\n\r\n        }\r\n\r\n        return r;\r\n    };\r\n\r\n\r\n    imscUtils.parsePosition = function (str) {\r\n\r\n        /* see https://www.w3.org/TR/ttml2/#style-value-position */\r\n\r\n        var s = str.split(\" \");\r\n\r\n        var isKeyword = function (str) {\r\n\r\n            return str === \"center\" ||\r\n                    str === \"left\" ||\r\n                    str === \"top\" ||\r\n                    str === \"bottom\" ||\r\n                    str === \"right\";\r\n\r\n        };\r\n\r\n        if (s.length > 4) {\r\n\r\n            return null;\r\n\r\n        }\r\n\r\n        /* initial clean-up pass */\r\n\r\n        for (var j = 0 ; j < s.length; j++) {\r\n\r\n            if (!isKeyword(s[j])) {\r\n\r\n                var l = imscUtils.parseLength(s[j]);\r\n\r\n                if (l === null)\r\n                    return null;\r\n\r\n                s[j] = l;\r\n            }\r\n\r\n        }\r\n\r\n        /* position default */\r\n\r\n        var pos = {\r\n            h: {edge: \"left\", offset: {value: 50, unit: \"%\"}},\r\n            v: {edge: \"top\", offset: {value: 50, unit: \"%\"}}\r\n        };\r\n\r\n        /* update position */\r\n\r\n        for (var i = 0; i < s.length; ) {\r\n\r\n            /* extract the current component */\r\n\r\n            var comp = s[i++];\r\n\r\n            if (isKeyword(comp)) {\r\n\r\n                /* we have a keyword */\r\n\r\n                var offset = {value: 0, unit: \"%\"};\r\n\r\n                /* peek at the next component */\r\n\r\n                if (s.length !== 2 && i < s.length && (!isKeyword(s[i]))) {\r\n\r\n                    /* followed by an offset */\r\n\r\n                    offset = s[i++];\r\n\r\n                }\r\n\r\n                /* skip if center */\r\n\r\n                if (comp === \"right\") {\r\n\r\n                    pos.h.edge = comp;\r\n\r\n                    pos.h.offset = offset;\r\n\r\n                } else if (comp === \"bottom\") {\r\n\r\n                    pos.v.edge = comp;\r\n\r\n\r\n                    pos.v.offset = offset;\r\n\r\n\r\n                } else if (comp === \"left\") {\r\n\r\n                    pos.h.offset = offset;\r\n\r\n\r\n                } else if (comp === \"top\") {\r\n\r\n                    pos.v.offset = offset;\r\n\r\n\r\n                }\r\n\r\n            } else if (s.length === 1 || s.length === 2) {\r\n\r\n                /* we have a bare value */\r\n\r\n                if (i === 1) {\r\n\r\n                    /* assign it to left edge if first bare value */\r\n\r\n                    pos.h.offset = comp;\r\n\r\n                } else {\r\n\r\n                    /* assign it to top edge if second bare value */\r\n\r\n                    pos.v.offset = comp;\r\n\r\n                }\r\n\r\n            } else {\r\n\r\n                /* error condition */\r\n\r\n                return null;\r\n\r\n            }\r\n\r\n        }\r\n\r\n        return pos;\r\n    };\r\n\r\n\r\n    imscUtils.ComputedLength = function (rw, rh) {\r\n        this.rw = rw;\r\n        this.rh = rh;\r\n    };\r\n\r\n    imscUtils.ComputedLength.prototype.toUsedLength = function (width, height) {\r\n        return width * this.rw + height * this.rh;\r\n    };\r\n\r\n    imscUtils.ComputedLength.prototype.isZero = function () {\r\n        return this.rw === 0 && this.rh === 0;\r\n    };\r\n\r\n    /**\r\n     * Computes a specified length to a root container relative length\r\n     * \r\n     * @param {number} lengthVal Length value to be computed\r\n     * @param {string} lengthUnit Units of the length value\r\n     * @param {number} emScale length of 1em, or null if em is not allowed\r\n     * @param {number} percentScale length to which , or null if perecentage is not allowed\r\n     * @param {number} cellScale length of 1c, or null if c is not allowed\r\n     * @param {number} pxScale length of 1px, or null if px is not allowed\r\n     * @param {number} direction 0 if the length is computed in the horizontal direction, 1 if the length is computed in the vertical direction\r\n     * @return {number} Computed length\r\n     */\r\n    imscUtils.toComputedLength = function(lengthVal, lengthUnit, emLength, percentLength, cellLength, pxLength) {\r\n\r\n        if (lengthUnit === \"%\" && percentLength) {\r\n\r\n            return new imscUtils.ComputedLength(\r\n                    percentLength.rw * lengthVal / 100,\r\n                    percentLength.rh * lengthVal / 100\r\n                    );\r\n\r\n        } else if (lengthUnit === \"em\" && emLength) {\r\n\r\n            return new imscUtils.ComputedLength(\r\n                    emLength.rw * lengthVal,\r\n                    emLength.rh * lengthVal\r\n                    );\r\n\r\n        } else if (lengthUnit === \"c\" && cellLength) {\r\n\r\n            return new imscUtils.ComputedLength(\r\n                    lengthVal * cellLength.rw,\r\n                    lengthVal * cellLength.rh\r\n                    );\r\n\r\n        } else if (lengthUnit === \"px\" && pxLength) {\r\n\r\n            return new imscUtils.ComputedLength(\r\n                    lengthVal * pxLength.rw,\r\n                    lengthVal * pxLength.rh\r\n                    );\r\n\r\n        } else if (lengthUnit === \"rh\") {\r\n\r\n            return new imscUtils.ComputedLength(\r\n                    0,\r\n                    lengthVal / 100\r\n                    );\r\n\r\n        } else if (lengthUnit === \"rw\") {\r\n\r\n            return new imscUtils.ComputedLength(\r\n                    lengthVal / 100,\r\n                    0                    \r\n                    );\r\n\r\n        } else {\r\n\r\n            return null;\r\n\r\n        }\r\n\r\n    };\r\n\r\n\r\n\r\n})(typeof exports === 'undefined' ? this.imscUtils = {} : exports);\r\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n","// 'path' module extracted from Node.js v8.11.1 (only the posix part)\n// transplited with Babel\n\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError('Path must be a string. Received ' + JSON.stringify(path));\n  }\n}\n\n// Resolves . and .. elements in a path with directory names\nfunction normalizeStringPosix(path, allowAboveRoot) {\n  var res = '';\n  var lastSegmentLength = 0;\n  var lastSlash = -1;\n  var dots = 0;\n  var code;\n  for (var i = 0; i <= path.length; ++i) {\n    if (i < path.length)\n      code = path.charCodeAt(i);\n    else if (code === 47 /*/*/)\n      break;\n    else\n      code = 47 /*/*/;\n    if (code === 47 /*/*/) {\n      if (lastSlash === i - 1 || dots === 1) {\n        // NOOP\n      } else if (lastSlash !== i - 1 && dots === 2) {\n        if (res.length < 2 || lastSegmentLength !== 2 || res.charCodeAt(res.length - 1) !== 46 /*.*/ || res.charCodeAt(res.length - 2) !== 46 /*.*/) {\n          if (res.length > 2) {\n            var lastSlashIndex = res.lastIndexOf('/');\n            if (lastSlashIndex !== res.length - 1) {\n              if (lastSlashIndex === -1) {\n                res = '';\n                lastSegmentLength = 0;\n              } else {\n                res = res.slice(0, lastSlashIndex);\n                lastSegmentLength = res.length - 1 - res.lastIndexOf('/');\n              }\n              lastSlash = i;\n              dots = 0;\n              continue;\n            }\n          } else if (res.length === 2 || res.length === 1) {\n            res = '';\n            lastSegmentLength = 0;\n            lastSlash = i;\n            dots = 0;\n            continue;\n          }\n        }\n        if (allowAboveRoot) {\n          if (res.length > 0)\n            res += '/..';\n          else\n            res = '..';\n          lastSegmentLength = 2;\n        }\n      } else {\n        if (res.length > 0)\n          res += '/' + path.slice(lastSlash + 1, i);\n        else\n          res = path.slice(lastSlash + 1, i);\n        lastSegmentLength = i - lastSlash - 1;\n      }\n      lastSlash = i;\n      dots = 0;\n    } else if (code === 46 /*.*/ && dots !== -1) {\n      ++dots;\n    } else {\n      dots = -1;\n    }\n  }\n  return res;\n}\n\nfunction _format(sep, pathObject) {\n  var dir = pathObject.dir || pathObject.root;\n  var base = pathObject.base || (pathObject.name || '') + (pathObject.ext || '');\n  if (!dir) {\n    return base;\n  }\n  if (dir === pathObject.root) {\n    return dir + base;\n  }\n  return dir + sep + base;\n}\n\nvar posix = {\n  // path.resolve([from ...], to)\n  resolve: function resolve() {\n    var resolvedPath = '';\n    var resolvedAbsolute = false;\n    var cwd;\n\n    for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n      var path;\n      if (i >= 0)\n        path = arguments[i];\n      else {\n        if (cwd === undefined)\n          cwd = process.cwd();\n        path = cwd;\n      }\n\n      assertPath(path);\n\n      // Skip empty entries\n      if (path.length === 0) {\n        continue;\n      }\n\n      resolvedPath = path + '/' + resolvedPath;\n      resolvedAbsolute = path.charCodeAt(0) === 47 /*/*/;\n    }\n\n    // At this point the path should be resolved to a full absolute path, but\n    // handle relative paths to be safe (might happen when process.cwd() fails)\n\n    // Normalize the path\n    resolvedPath = normalizeStringPosix(resolvedPath, !resolvedAbsolute);\n\n    if (resolvedAbsolute) {\n      if (resolvedPath.length > 0)\n        return '/' + resolvedPath;\n      else\n        return '/';\n    } else if (resolvedPath.length > 0) {\n      return resolvedPath;\n    } else {\n      return '.';\n    }\n  },\n\n  normalize: function normalize(path) {\n    assertPath(path);\n\n    if (path.length === 0) return '.';\n\n    var isAbsolute = path.charCodeAt(0) === 47 /*/*/;\n    var trailingSeparator = path.charCodeAt(path.length - 1) === 47 /*/*/;\n\n    // Normalize the path\n    path = normalizeStringPosix(path, !isAbsolute);\n\n    if (path.length === 0 && !isAbsolute) path = '.';\n    if (path.length > 0 && trailingSeparator) path += '/';\n\n    if (isAbsolute) return '/' + path;\n    return path;\n  },\n\n  isAbsolute: function isAbsolute(path) {\n    assertPath(path);\n    return path.length > 0 && path.charCodeAt(0) === 47 /*/*/;\n  },\n\n  join: function join() {\n    if (arguments.length === 0)\n      return '.';\n    var joined;\n    for (var i = 0; i < arguments.length; ++i) {\n      var arg = arguments[i];\n      assertPath(arg);\n      if (arg.length > 0) {\n        if (joined === undefined)\n          joined = arg;\n        else\n          joined += '/' + arg;\n      }\n    }\n    if (joined === undefined)\n      return '.';\n    return posix.normalize(joined);\n  },\n\n  relative: function relative(from, to) {\n    assertPath(from);\n    assertPath(to);\n\n    if (from === to) return '';\n\n    from = posix.resolve(from);\n    to = posix.resolve(to);\n\n    if (from === to) return '';\n\n    // Trim any leading backslashes\n    var fromStart = 1;\n    for (; fromStart < from.length; ++fromStart) {\n      if (from.charCodeAt(fromStart) !== 47 /*/*/)\n        break;\n    }\n    var fromEnd = from.length;\n    var fromLen = fromEnd - fromStart;\n\n    // Trim any leading backslashes\n    var toStart = 1;\n    for (; toStart < to.length; ++toStart) {\n      if (to.charCodeAt(toStart) !== 47 /*/*/)\n        break;\n    }\n    var toEnd = to.length;\n    var toLen = toEnd - toStart;\n\n    // Compare paths to find the longest common path from root\n    var length = fromLen < toLen ? fromLen : toLen;\n    var lastCommonSep = -1;\n    var i = 0;\n    for (; i <= length; ++i) {\n      if (i === length) {\n        if (toLen > length) {\n          if (to.charCodeAt(toStart + i) === 47 /*/*/) {\n            // We get here if `from` is the exact base path for `to`.\n            // For example: from='/foo/bar'; to='/foo/bar/baz'\n            return to.slice(toStart + i + 1);\n          } else if (i === 0) {\n            // We get here if `from` is the root\n            // For example: from='/'; to='/foo'\n            return to.slice(toStart + i);\n          }\n        } else if (fromLen > length) {\n          if (from.charCodeAt(fromStart + i) === 47 /*/*/) {\n            // We get here if `to` is the exact base path for `from`.\n            // For example: from='/foo/bar/baz'; to='/foo/bar'\n            lastCommonSep = i;\n          } else if (i === 0) {\n            // We get here if `to` is the root.\n            // For example: from='/foo'; to='/'\n            lastCommonSep = 0;\n          }\n        }\n        break;\n      }\n      var fromCode = from.charCodeAt(fromStart + i);\n      var toCode = to.charCodeAt(toStart + i);\n      if (fromCode !== toCode)\n        break;\n      else if (fromCode === 47 /*/*/)\n        lastCommonSep = i;\n    }\n\n    var out = '';\n    // Generate the relative path based on the path difference between `to`\n    // and `from`\n    for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n      if (i === fromEnd || from.charCodeAt(i) === 47 /*/*/) {\n        if (out.length === 0)\n          out += '..';\n        else\n          out += '/..';\n      }\n    }\n\n    // Lastly, append the rest of the destination (`to`) path that comes after\n    // the common path parts\n    if (out.length > 0)\n      return out + to.slice(toStart + lastCommonSep);\n    else {\n      toStart += lastCommonSep;\n      if (to.charCodeAt(toStart) === 47 /*/*/)\n        ++toStart;\n      return to.slice(toStart);\n    }\n  },\n\n  _makeLong: function _makeLong(path) {\n    return path;\n  },\n\n  dirname: function dirname(path) {\n    assertPath(path);\n    if (path.length === 0) return '.';\n    var code = path.charCodeAt(0);\n    var hasRoot = code === 47 /*/*/;\n    var end = -1;\n    var matchedSlash = true;\n    for (var i = path.length - 1; i >= 1; --i) {\n      code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          if (!matchedSlash) {\n            end = i;\n            break;\n          }\n        } else {\n        // We saw the first non-path separator\n        matchedSlash = false;\n      }\n    }\n\n    if (end === -1) return hasRoot ? '/' : '.';\n    if (hasRoot && end === 1) return '//';\n    return path.slice(0, end);\n  },\n\n  basename: function basename(path, ext) {\n    if (ext !== undefined && typeof ext !== 'string') throw new TypeError('\"ext\" argument must be a string');\n    assertPath(path);\n\n    var start = 0;\n    var end = -1;\n    var matchedSlash = true;\n    var i;\n\n    if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n      if (ext.length === path.length && ext === path) return '';\n      var extIdx = ext.length - 1;\n      var firstNonSlashEnd = -1;\n      for (i = path.length - 1; i >= 0; --i) {\n        var code = path.charCodeAt(i);\n        if (code === 47 /*/*/) {\n            // If we reached a path separator that was not part of a set of path\n            // separators at the end of the string, stop now\n            if (!matchedSlash) {\n              start = i + 1;\n              break;\n            }\n          } else {\n          if (firstNonSlashEnd === -1) {\n            // We saw the first non-path separator, remember this index in case\n            // we need it if the extension ends up not matching\n            matchedSlash = false;\n            firstNonSlashEnd = i + 1;\n          }\n          if (extIdx >= 0) {\n            // Try to match the explicit extension\n            if (code === ext.charCodeAt(extIdx)) {\n              if (--extIdx === -1) {\n                // We matched the extension, so mark this as the end of our path\n                // component\n                end = i;\n              }\n            } else {\n              // Extension does not match, so our result is the entire path\n              // component\n              extIdx = -1;\n              end = firstNonSlashEnd;\n            }\n          }\n        }\n      }\n\n      if (start === end) end = firstNonSlashEnd;else if (end === -1) end = path.length;\n      return path.slice(start, end);\n    } else {\n      for (i = path.length - 1; i >= 0; --i) {\n        if (path.charCodeAt(i) === 47 /*/*/) {\n            // If we reached a path separator that was not part of a set of path\n            // separators at the end of the string, stop now\n            if (!matchedSlash) {\n              start = i + 1;\n              break;\n            }\n          } else if (end === -1) {\n          // We saw the first non-path separator, mark this as the end of our\n          // path component\n          matchedSlash = false;\n          end = i + 1;\n        }\n      }\n\n      if (end === -1) return '';\n      return path.slice(start, end);\n    }\n  },\n\n  extname: function extname(path) {\n    assertPath(path);\n    var startDot = -1;\n    var startPart = 0;\n    var end = -1;\n    var matchedSlash = true;\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    var preDotState = 0;\n    for (var i = path.length - 1; i >= 0; --i) {\n      var code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          // If we reached a path separator that was not part of a set of path\n          // separators at the end of the string, stop now\n          if (!matchedSlash) {\n            startPart = i + 1;\n            break;\n          }\n          continue;\n        }\n      if (end === -1) {\n        // We saw the first non-path separator, mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === 46 /*.*/) {\n          // If this is our first dot, mark it as the start of our extension\n          if (startDot === -1)\n            startDot = i;\n          else if (preDotState !== 1)\n            preDotState = 1;\n      } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot, so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (startDot === -1 || end === -1 ||\n        // We saw a non-dot character immediately before the dot\n        preDotState === 0 ||\n        // The (right-most) trimmed path component is exactly '..'\n        preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n      return '';\n    }\n    return path.slice(startDot, end);\n  },\n\n  format: function format(pathObject) {\n    if (pathObject === null || typeof pathObject !== 'object') {\n      throw new TypeError('The \"pathObject\" argument must be of type Object. Received type ' + typeof pathObject);\n    }\n    return _format('/', pathObject);\n  },\n\n  parse: function parse(path) {\n    assertPath(path);\n\n    var ret = { root: '', dir: '', base: '', ext: '', name: '' };\n    if (path.length === 0) return ret;\n    var code = path.charCodeAt(0);\n    var isAbsolute = code === 47 /*/*/;\n    var start;\n    if (isAbsolute) {\n      ret.root = '/';\n      start = 1;\n    } else {\n      start = 0;\n    }\n    var startDot = -1;\n    var startPart = 0;\n    var end = -1;\n    var matchedSlash = true;\n    var i = path.length - 1;\n\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    var preDotState = 0;\n\n    // Get non-dir info\n    for (; i >= start; --i) {\n      code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          // If we reached a path separator that was not part of a set of path\n          // separators at the end of the string, stop now\n          if (!matchedSlash) {\n            startPart = i + 1;\n            break;\n          }\n          continue;\n        }\n      if (end === -1) {\n        // We saw the first non-path separator, mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === 46 /*.*/) {\n          // If this is our first dot, mark it as the start of our extension\n          if (startDot === -1) startDot = i;else if (preDotState !== 1) preDotState = 1;\n        } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot, so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (startDot === -1 || end === -1 ||\n    // We saw a non-dot character immediately before the dot\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly '..'\n    preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n      if (end !== -1) {\n        if (startPart === 0 && isAbsolute) ret.base = ret.name = path.slice(1, end);else ret.base = ret.name = path.slice(startPart, end);\n      }\n    } else {\n      if (startPart === 0 && isAbsolute) {\n        ret.name = path.slice(1, startDot);\n        ret.base = path.slice(1, end);\n      } else {\n        ret.name = path.slice(startPart, startDot);\n        ret.base = path.slice(startPart, end);\n      }\n      ret.ext = path.slice(startDot, end);\n    }\n\n    if (startPart > 0) ret.dir = path.slice(0, startPart - 1);else if (isAbsolute) ret.dir = '/';\n\n    return ret;\n  },\n\n  sep: '/',\n  delimiter: ':',\n  win32: null,\n  posix: null\n};\n\nposix.posix = posix;\n\nmodule.exports = posix;\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nmodule.exports = Stream;\n\nvar EE = require('events').EventEmitter;\nvar inherits = require('inherits');\n\ninherits(Stream, EE);\nStream.Readable = require('readable-stream/lib/_stream_readable.js');\nStream.Writable = require('readable-stream/lib/_stream_writable.js');\nStream.Duplex = require('readable-stream/lib/_stream_duplex.js');\nStream.Transform = require('readable-stream/lib/_stream_transform.js');\nStream.PassThrough = require('readable-stream/lib/_stream_passthrough.js');\nStream.finished = require('readable-stream/lib/internal/streams/end-of-stream.js')\nStream.pipeline = require('readable-stream/lib/internal/streams/pipeline.js')\n\n// Backwards-compat with node 0.4.x\nStream.Stream = Stream;\n\n\n\n// old-style streams.  Note that the pipe method (the only relevant\n// part of this class) is overridden in the Readable class.\n\nfunction Stream() {\n  EE.call(this);\n}\n\nStream.prototype.pipe = function(dest, options) {\n  var source = this;\n\n  function ondata(chunk) {\n    if (dest.writable) {\n      if (false === dest.write(chunk) && source.pause) {\n        source.pause();\n      }\n    }\n  }\n\n  source.on('data', ondata);\n\n  function ondrain() {\n    if (source.readable && source.resume) {\n      source.resume();\n    }\n  }\n\n  dest.on('drain', ondrain);\n\n  // If the 'end' option is not supplied, dest.end() will be called when\n  // source gets the 'end' or 'close' events.  Only dest.end() once.\n  if (!dest._isStdio && (!options || options.end !== false)) {\n    source.on('end', onend);\n    source.on('close', onclose);\n  }\n\n  var didOnEnd = false;\n  function onend() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    dest.end();\n  }\n\n\n  function onclose() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    if (typeof dest.destroy === 'function') dest.destroy();\n  }\n\n  // don't leave dangling pipes when there are errors.\n  function onerror(er) {\n    cleanup();\n    if (EE.listenerCount(this, 'error') === 0) {\n      throw er; // Unhandled stream error in pipe.\n    }\n  }\n\n  source.on('error', onerror);\n  dest.on('error', onerror);\n\n  // remove all the event listeners that were added.\n  function cleanup() {\n    source.removeListener('data', ondata);\n    dest.removeListener('drain', ondrain);\n\n    source.removeListener('end', onend);\n    source.removeListener('close', onclose);\n\n    source.removeListener('error', onerror);\n    dest.removeListener('error', onerror);\n\n    source.removeListener('end', cleanup);\n    source.removeListener('close', cleanup);\n\n    dest.removeListener('close', cleanup);\n  }\n\n  source.on('end', cleanup);\n  source.on('close', cleanup);\n\n  dest.on('close', cleanup);\n\n  dest.emit('pipe', source);\n\n  // Allow for unix-like usage: A.pipe(B).pipe(C)\n  return dest;\n};\n","'use strict';\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\nvar codes = {};\n\nfunction createErrorType(code, message, Base) {\n  if (!Base) {\n    Base = Error;\n  }\n\n  function getMessage(arg1, arg2, arg3) {\n    if (typeof message === 'string') {\n      return message;\n    } else {\n      return message(arg1, arg2, arg3);\n    }\n  }\n\n  var NodeError =\n  /*#__PURE__*/\n  function (_Base) {\n    _inheritsLoose(NodeError, _Base);\n\n    function NodeError(arg1, arg2, arg3) {\n      return _Base.call(this, getMessage(arg1, arg2, arg3)) || this;\n    }\n\n    return NodeError;\n  }(Base);\n\n  NodeError.prototype.name = Base.name;\n  NodeError.prototype.code = code;\n  codes[code] = NodeError;\n} // https://github.com/nodejs/node/blob/v10.8.0/lib/internal/errors.js\n\n\nfunction oneOf(expected, thing) {\n  if (Array.isArray(expected)) {\n    var len = expected.length;\n    expected = expected.map(function (i) {\n      return String(i);\n    });\n\n    if (len > 2) {\n      return \"one of \".concat(thing, \" \").concat(expected.slice(0, len - 1).join(', '), \", or \") + expected[len - 1];\n    } else if (len === 2) {\n      return \"one of \".concat(thing, \" \").concat(expected[0], \" or \").concat(expected[1]);\n    } else {\n      return \"of \".concat(thing, \" \").concat(expected[0]);\n    }\n  } else {\n    return \"of \".concat(thing, \" \").concat(String(expected));\n  }\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/startsWith\n\n\nfunction startsWith(str, search, pos) {\n  return str.substr(!pos || pos < 0 ? 0 : +pos, search.length) === search;\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/endsWith\n\n\nfunction endsWith(str, search, this_len) {\n  if (this_len === undefined || this_len > str.length) {\n    this_len = str.length;\n  }\n\n  return str.substring(this_len - search.length, this_len) === search;\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/includes\n\n\nfunction includes(str, search, start) {\n  if (typeof start !== 'number') {\n    start = 0;\n  }\n\n  if (start + search.length > str.length) {\n    return false;\n  } else {\n    return str.indexOf(search, start) !== -1;\n  }\n}\n\ncreateErrorType('ERR_INVALID_OPT_VALUE', function (name, value) {\n  return 'The value \"' + value + '\" is invalid for option \"' + name + '\"';\n}, TypeError);\ncreateErrorType('ERR_INVALID_ARG_TYPE', function (name, expected, actual) {\n  // determiner: 'must be' or 'must not be'\n  var determiner;\n\n  if (typeof expected === 'string' && startsWith(expected, 'not ')) {\n    determiner = 'must not be';\n    expected = expected.replace(/^not /, '');\n  } else {\n    determiner = 'must be';\n  }\n\n  var msg;\n\n  if (endsWith(name, ' argument')) {\n    // For cases like 'first argument'\n    msg = \"The \".concat(name, \" \").concat(determiner, \" \").concat(oneOf(expected, 'type'));\n  } else {\n    var type = includes(name, '.') ? 'property' : 'argument';\n    msg = \"The \\\"\".concat(name, \"\\\" \").concat(type, \" \").concat(determiner, \" \").concat(oneOf(expected, 'type'));\n  }\n\n  msg += \". Received type \".concat(typeof actual);\n  return msg;\n}, TypeError);\ncreateErrorType('ERR_STREAM_PUSH_AFTER_EOF', 'stream.push() after EOF');\ncreateErrorType('ERR_METHOD_NOT_IMPLEMENTED', function (name) {\n  return 'The ' + name + ' method is not implemented';\n});\ncreateErrorType('ERR_STREAM_PREMATURE_CLOSE', 'Premature close');\ncreateErrorType('ERR_STREAM_DESTROYED', function (name) {\n  return 'Cannot call ' + name + ' after a stream was destroyed';\n});\ncreateErrorType('ERR_MULTIPLE_CALLBACK', 'Callback called multiple times');\ncreateErrorType('ERR_STREAM_CANNOT_PIPE', 'Cannot pipe, not readable');\ncreateErrorType('ERR_STREAM_WRITE_AFTER_END', 'write after end');\ncreateErrorType('ERR_STREAM_NULL_VALUES', 'May not write null values to stream', TypeError);\ncreateErrorType('ERR_UNKNOWN_ENCODING', function (arg) {\n  return 'Unknown encoding: ' + arg;\n}, TypeError);\ncreateErrorType('ERR_STREAM_UNSHIFT_AFTER_END_EVENT', 'stream.unshift() after end event');\nmodule.exports.codes = codes;\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototypal inheritance, this class\n// prototypally inherits from Readable, and then parasitically from\n// Writable.\n\n'use strict';\n\n/*<replacement>*/\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) keys.push(key);\n  return keys;\n};\n/*</replacement>*/\n\nmodule.exports = Duplex;\nvar Readable = require('./_stream_readable');\nvar Writable = require('./_stream_writable');\nrequire('inherits')(Duplex, Readable);\n{\n  // Allow the keys array to be GC'ed.\n  var keys = objectKeys(Writable.prototype);\n  for (var v = 0; v < keys.length; v++) {\n    var method = keys[v];\n    if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];\n  }\n}\nfunction Duplex(options) {\n  if (!(this instanceof Duplex)) return new Duplex(options);\n  Readable.call(this, options);\n  Writable.call(this, options);\n  this.allowHalfOpen = true;\n  if (options) {\n    if (options.readable === false) this.readable = false;\n    if (options.writable === false) this.writable = false;\n    if (options.allowHalfOpen === false) {\n      this.allowHalfOpen = false;\n      this.once('end', onend);\n    }\n  }\n}\nObject.defineProperty(Duplex.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.highWaterMark;\n  }\n});\nObject.defineProperty(Duplex.prototype, 'writableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState && this._writableState.getBuffer();\n  }\n});\nObject.defineProperty(Duplex.prototype, 'writableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.length;\n  }\n});\n\n// the no-half-open enforcer\nfunction onend() {\n  // If the writable side ended, then we're ok.\n  if (this._writableState.ended) return;\n\n  // no more data can be written.\n  // But allow more writes to happen in this tick.\n  process.nextTick(onEndNT, this);\n}\nfunction onEndNT(self) {\n  self.end();\n}\nObject.defineProperty(Duplex.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed && this._writableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n    this._writableState.destroyed = value;\n  }\n});","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a passthrough stream.\n// basically just the most minimal sort of Transform stream.\n// Every written chunk gets output as-is.\n\n'use strict';\n\nmodule.exports = PassThrough;\nvar Transform = require('./_stream_transform');\nrequire('inherits')(PassThrough, Transform);\nfunction PassThrough(options) {\n  if (!(this instanceof PassThrough)) return new PassThrough(options);\n  Transform.call(this, options);\n}\nPassThrough.prototype._transform = function (chunk, encoding, cb) {\n  cb(null, chunk);\n};","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nmodule.exports = Readable;\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nReadable.ReadableState = ReadableState;\n\n/*<replacement>*/\nvar EE = require('events').EventEmitter;\nvar EElistenerCount = function EElistenerCount(emitter, type) {\n  return emitter.listeners(type).length;\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\nvar Buffer = require('buffer').Buffer;\nvar OurUint8Array = (typeof global !== 'undefined' ? global : typeof window !== 'undefined' ? window : typeof self !== 'undefined' ? self : {}).Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\n/*<replacement>*/\nvar debugUtil = require('util');\nvar debug;\nif (debugUtil && debugUtil.debuglog) {\n  debug = debugUtil.debuglog('stream');\n} else {\n  debug = function debug() {};\n}\n/*</replacement>*/\n\nvar BufferList = require('./internal/streams/buffer_list');\nvar destroyImpl = require('./internal/streams/destroy');\nvar _require = require('./internal/streams/state'),\n  getHighWaterMark = _require.getHighWaterMark;\nvar _require$codes = require('../errors').codes,\n  ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,\n  ERR_STREAM_PUSH_AFTER_EOF = _require$codes.ERR_STREAM_PUSH_AFTER_EOF,\n  ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n  ERR_STREAM_UNSHIFT_AFTER_END_EVENT = _require$codes.ERR_STREAM_UNSHIFT_AFTER_END_EVENT;\n\n// Lazy loaded to improve the startup performance.\nvar StringDecoder;\nvar createReadableStreamAsyncIterator;\nvar from;\nrequire('inherits')(Readable, Stream);\nvar errorOrDestroy = destroyImpl.errorOrDestroy;\nvar kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];\nfunction prependListener(emitter, event, fn) {\n  // Sadly this is not cacheable as some libraries bundle their own\n  // event emitter implementation with them.\n  if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn);\n\n  // This is a hack to make sure that our error handler is attached before any\n  // userland ones.  NEVER DO THIS. This is here only because this code needs\n  // to continue to work with older versions of Node.js that do not include\n  // the prependListener() method. The goal is to eventually remove this hack.\n  if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (Array.isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];\n}\nfunction ReadableState(options, stream, isDuplex) {\n  Duplex = Duplex || require('./_stream_duplex');\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n  if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof Duplex;\n\n  // object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away\n  this.objectMode = !!options.objectMode;\n  if (isDuplex) this.objectMode = this.objectMode || !!options.readableObjectMode;\n\n  // the point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n  this.highWaterMark = getHighWaterMark(this, options, 'readableHighWaterMark', isDuplex);\n\n  // A linked list is used to store data chunks instead of an array because the\n  // linked list can remove elements from the beginning faster than\n  // array.shift()\n  this.buffer = new BufferList();\n  this.length = 0;\n  this.pipes = null;\n  this.pipesCount = 0;\n  this.flowing = null;\n  this.ended = false;\n  this.endEmitted = false;\n  this.reading = false;\n\n  // a flag to be able to tell if the event 'readable'/'data' is emitted\n  // immediately, or on a later tick.  We set this to true at first, because\n  // any actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first read call.\n  this.sync = true;\n\n  // whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n  this.needReadable = false;\n  this.emittedReadable = false;\n  this.readableListening = false;\n  this.resumeScheduled = false;\n  this.paused = true;\n\n  // Should close be emitted on destroy. Defaults to true.\n  this.emitClose = options.emitClose !== false;\n\n  // Should .destroy() be called after 'end' (and potentially 'finish')\n  this.autoDestroy = !!options.autoDestroy;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // the number of writers that are awaiting a drain event in .pipe()s\n  this.awaitDrain = 0;\n\n  // if true, a maybeReadMore has been scheduled\n  this.readingMore = false;\n  this.decoder = null;\n  this.encoding = null;\n  if (options.encoding) {\n    if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\nfunction Readable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n  if (!(this instanceof Readable)) return new Readable(options);\n\n  // Checking for a Stream.Duplex instance is faster here instead of inside\n  // the ReadableState constructor, at least with V8 6.5\n  var isDuplex = this instanceof Duplex;\n  this._readableState = new ReadableState(options, this, isDuplex);\n\n  // legacy\n  this.readable = true;\n  if (options) {\n    if (typeof options.read === 'function') this._read = options.read;\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n  }\n  Stream.call(this);\n}\nObject.defineProperty(Readable.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._readableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._readableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n  }\n});\nReadable.prototype.destroy = destroyImpl.destroy;\nReadable.prototype._undestroy = destroyImpl.undestroy;\nReadable.prototype._destroy = function (err, cb) {\n  cb(err);\n};\n\n// Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\nReadable.prototype.push = function (chunk, encoding) {\n  var state = this._readableState;\n  var skipChunkCheck;\n  if (!state.objectMode) {\n    if (typeof chunk === 'string') {\n      encoding = encoding || state.defaultEncoding;\n      if (encoding !== state.encoding) {\n        chunk = Buffer.from(chunk, encoding);\n        encoding = '';\n      }\n      skipChunkCheck = true;\n    }\n  } else {\n    skipChunkCheck = true;\n  }\n  return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);\n};\n\n// Unshift should *always* be something directly out of read()\nReadable.prototype.unshift = function (chunk) {\n  return readableAddChunk(this, chunk, null, true, false);\n};\nfunction readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {\n  debug('readableAddChunk', chunk);\n  var state = stream._readableState;\n  if (chunk === null) {\n    state.reading = false;\n    onEofChunk(stream, state);\n  } else {\n    var er;\n    if (!skipChunkCheck) er = chunkInvalid(state, chunk);\n    if (er) {\n      errorOrDestroy(stream, er);\n    } else if (state.objectMode || chunk && chunk.length > 0) {\n      if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {\n        chunk = _uint8ArrayToBuffer(chunk);\n      }\n      if (addToFront) {\n        if (state.endEmitted) errorOrDestroy(stream, new ERR_STREAM_UNSHIFT_AFTER_END_EVENT());else addChunk(stream, state, chunk, true);\n      } else if (state.ended) {\n        errorOrDestroy(stream, new ERR_STREAM_PUSH_AFTER_EOF());\n      } else if (state.destroyed) {\n        return false;\n      } else {\n        state.reading = false;\n        if (state.decoder && !encoding) {\n          chunk = state.decoder.write(chunk);\n          if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);\n        } else {\n          addChunk(stream, state, chunk, false);\n        }\n      }\n    } else if (!addToFront) {\n      state.reading = false;\n      maybeReadMore(stream, state);\n    }\n  }\n\n  // We can push more data if we are below the highWaterMark.\n  // Also, if we have no data yet, we can stand some more bytes.\n  // This is to work around cases where hwm=0, such as the repl.\n  return !state.ended && (state.length < state.highWaterMark || state.length === 0);\n}\nfunction addChunk(stream, state, chunk, addToFront) {\n  if (state.flowing && state.length === 0 && !state.sync) {\n    state.awaitDrain = 0;\n    stream.emit('data', chunk);\n  } else {\n    // update the buffer info.\n    state.length += state.objectMode ? 1 : chunk.length;\n    if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);\n    if (state.needReadable) emitReadable(stream);\n  }\n  maybeReadMore(stream, state);\n}\nfunction chunkInvalid(state, chunk) {\n  var er;\n  if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer', 'Uint8Array'], chunk);\n  }\n  return er;\n}\nReadable.prototype.isPaused = function () {\n  return this._readableState.flowing === false;\n};\n\n// backwards compatibility.\nReadable.prototype.setEncoding = function (enc) {\n  if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n  var decoder = new StringDecoder(enc);\n  this._readableState.decoder = decoder;\n  // If setEncoding(null), decoder.encoding equals utf8\n  this._readableState.encoding = this._readableState.decoder.encoding;\n\n  // Iterate over current buffer to convert already stored Buffers:\n  var p = this._readableState.buffer.head;\n  var content = '';\n  while (p !== null) {\n    content += decoder.write(p.data);\n    p = p.next;\n  }\n  this._readableState.buffer.clear();\n  if (content !== '') this._readableState.buffer.push(content);\n  this._readableState.length = content.length;\n  return this;\n};\n\n// Don't raise the hwm > 1GB\nvar MAX_HWM = 0x40000000;\nfunction computeNewHighWaterMark(n) {\n  if (n >= MAX_HWM) {\n    // TODO(ronag): Throw ERR_VALUE_OUT_OF_RANGE.\n    n = MAX_HWM;\n  } else {\n    // Get the next highest power of 2 to prevent increasing hwm excessively in\n    // tiny amounts\n    n--;\n    n |= n >>> 1;\n    n |= n >>> 2;\n    n |= n >>> 4;\n    n |= n >>> 8;\n    n |= n >>> 16;\n    n++;\n  }\n  return n;\n}\n\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction howMuchToRead(n, state) {\n  if (n <= 0 || state.length === 0 && state.ended) return 0;\n  if (state.objectMode) return 1;\n  if (n !== n) {\n    // Only flow one buffer at a time\n    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;\n  }\n  // If we're asking for more than the current hwm, then raise the hwm.\n  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);\n  if (n <= state.length) return n;\n  // Don't have enough\n  if (!state.ended) {\n    state.needReadable = true;\n    return 0;\n  }\n  return state.length;\n}\n\n// you can override either this method, or the async _read(n) below.\nReadable.prototype.read = function (n) {\n  debug('read', n);\n  n = parseInt(n, 10);\n  var state = this._readableState;\n  var nOrig = n;\n  if (n !== 0) state.emittedReadable = false;\n\n  // if we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n  if (n === 0 && state.needReadable && ((state.highWaterMark !== 0 ? state.length >= state.highWaterMark : state.length > 0) || state.ended)) {\n    debug('read: emitReadable', state.length, state.ended);\n    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);\n    return null;\n  }\n  n = howMuchToRead(n, state);\n\n  // if we've ended, and we're now clear, then finish it up.\n  if (n === 0 && state.ended) {\n    if (state.length === 0) endReadable(this);\n    return null;\n  }\n\n  // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n\n  // if we need a readable event, then we need to do some reading.\n  var doRead = state.needReadable;\n  debug('need readable', doRead);\n\n  // if we currently have less than the highWaterMark, then also read some\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\n    doRead = true;\n    debug('length less than watermark', doRead);\n  }\n\n  // however, if we've ended, then there's no point, and if we're already\n  // reading, then it's unnecessary.\n  if (state.ended || state.reading) {\n    doRead = false;\n    debug('reading or ended', doRead);\n  } else if (doRead) {\n    debug('do read');\n    state.reading = true;\n    state.sync = true;\n    // if the length is currently zero, then we *need* a readable event.\n    if (state.length === 0) state.needReadable = true;\n    // call internal read method\n    this._read(state.highWaterMark);\n    state.sync = false;\n    // If _read pushed data synchronously, then `reading` will be false,\n    // and we need to re-evaluate how much data we can return to the user.\n    if (!state.reading) n = howMuchToRead(nOrig, state);\n  }\n  var ret;\n  if (n > 0) ret = fromList(n, state);else ret = null;\n  if (ret === null) {\n    state.needReadable = state.length <= state.highWaterMark;\n    n = 0;\n  } else {\n    state.length -= n;\n    state.awaitDrain = 0;\n  }\n  if (state.length === 0) {\n    // If we have nothing in the buffer, then we want to know\n    // as soon as we *do* get something into the buffer.\n    if (!state.ended) state.needReadable = true;\n\n    // If we tried to read() past the EOF, then emit end on the next tick.\n    if (nOrig !== n && state.ended) endReadable(this);\n  }\n  if (ret !== null) this.emit('data', ret);\n  return ret;\n};\nfunction onEofChunk(stream, state) {\n  debug('onEofChunk');\n  if (state.ended) return;\n  if (state.decoder) {\n    var chunk = state.decoder.end();\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk);\n      state.length += state.objectMode ? 1 : chunk.length;\n    }\n  }\n  state.ended = true;\n  if (state.sync) {\n    // if we are sync, wait until next tick to emit the data.\n    // Otherwise we risk emitting data in the flow()\n    // the readable code triggers during a read() call\n    emitReadable(stream);\n  } else {\n    // emit 'readable' now to make sure it gets picked up.\n    state.needReadable = false;\n    if (!state.emittedReadable) {\n      state.emittedReadable = true;\n      emitReadable_(stream);\n    }\n  }\n}\n\n// Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\nfunction emitReadable(stream) {\n  var state = stream._readableState;\n  debug('emitReadable', state.needReadable, state.emittedReadable);\n  state.needReadable = false;\n  if (!state.emittedReadable) {\n    debug('emitReadable', state.flowing);\n    state.emittedReadable = true;\n    process.nextTick(emitReadable_, stream);\n  }\n}\nfunction emitReadable_(stream) {\n  var state = stream._readableState;\n  debug('emitReadable_', state.destroyed, state.length, state.ended);\n  if (!state.destroyed && (state.length || state.ended)) {\n    stream.emit('readable');\n    state.emittedReadable = false;\n  }\n\n  // The stream needs another readable event if\n  // 1. It is not flowing, as the flow mechanism will take\n  //    care of it.\n  // 2. It is not ended.\n  // 3. It is below the highWaterMark, so we can schedule\n  //    another readable later.\n  state.needReadable = !state.flowing && !state.ended && state.length <= state.highWaterMark;\n  flow(stream);\n}\n\n// at this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore) {\n    state.readingMore = true;\n    process.nextTick(maybeReadMore_, stream, state);\n  }\n}\nfunction maybeReadMore_(stream, state) {\n  // Attempt to read more data if we should.\n  //\n  // The conditions for reading more data are (one of):\n  // - Not enough data buffered (state.length < state.highWaterMark). The loop\n  //   is responsible for filling the buffer with enough data if such data\n  //   is available. If highWaterMark is 0 and we are not in the flowing mode\n  //   we should _not_ attempt to buffer any extra data. We'll get more data\n  //   when the stream consumer calls read() instead.\n  // - No data in the buffer, and the stream is in flowing mode. In this mode\n  //   the loop below is responsible for ensuring read() is called. Failing to\n  //   call read here would abort the flow and there's no other mechanism for\n  //   continuing the flow if the stream consumer has just subscribed to the\n  //   'data' event.\n  //\n  // In addition to the above conditions to keep reading data, the following\n  // conditions prevent the data from being read:\n  // - The stream has ended (state.ended).\n  // - There is already a pending 'read' operation (state.reading). This is a\n  //   case where the the stream has called the implementation defined _read()\n  //   method, but they are processing the call asynchronously and have _not_\n  //   called push() with new data. In this case we skip performing more\n  //   read()s. The execution ends in this method again after the _read() ends\n  //   up calling push() with more data.\n  while (!state.reading && !state.ended && (state.length < state.highWaterMark || state.flowing && state.length === 0)) {\n    var len = state.length;\n    debug('maybeReadMore read 0');\n    stream.read(0);\n    if (len === state.length)\n      // didn't get any data, stop spinning.\n      break;\n  }\n  state.readingMore = false;\n}\n\n// abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\nReadable.prototype._read = function (n) {\n  errorOrDestroy(this, new ERR_METHOD_NOT_IMPLEMENTED('_read()'));\n};\nReadable.prototype.pipe = function (dest, pipeOpts) {\n  var src = this;\n  var state = this._readableState;\n  switch (state.pipesCount) {\n    case 0:\n      state.pipes = dest;\n      break;\n    case 1:\n      state.pipes = [state.pipes, dest];\n      break;\n    default:\n      state.pipes.push(dest);\n      break;\n  }\n  state.pipesCount += 1;\n  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\n  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;\n  var endFn = doEnd ? onend : unpipe;\n  if (state.endEmitted) process.nextTick(endFn);else src.once('end', endFn);\n  dest.on('unpipe', onunpipe);\n  function onunpipe(readable, unpipeInfo) {\n    debug('onunpipe');\n    if (readable === src) {\n      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {\n        unpipeInfo.hasUnpiped = true;\n        cleanup();\n      }\n    }\n  }\n  function onend() {\n    debug('onend');\n    dest.end();\n  }\n\n  // when the dest drains, it reduces the awaitDrain counter\n  // on the source.  This would be more elegant with a .once()\n  // handler in flow(), but adding and removing repeatedly is\n  // too slow.\n  var ondrain = pipeOnDrain(src);\n  dest.on('drain', ondrain);\n  var cleanedUp = false;\n  function cleanup() {\n    debug('cleanup');\n    // cleanup event handlers once the pipe is broken\n    dest.removeListener('close', onclose);\n    dest.removeListener('finish', onfinish);\n    dest.removeListener('drain', ondrain);\n    dest.removeListener('error', onerror);\n    dest.removeListener('unpipe', onunpipe);\n    src.removeListener('end', onend);\n    src.removeListener('end', unpipe);\n    src.removeListener('data', ondata);\n    cleanedUp = true;\n\n    // if the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();\n  }\n  src.on('data', ondata);\n  function ondata(chunk) {\n    debug('ondata');\n    var ret = dest.write(chunk);\n    debug('dest.write', ret);\n    if (ret === false) {\n      // If the user unpiped during `dest.write()`, it is possible\n      // to get stuck in a permanently paused state if that write\n      // also returned false.\n      // => Check whether `dest` is still a piping destination.\n      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {\n        debug('false write response, pause', state.awaitDrain);\n        state.awaitDrain++;\n      }\n      src.pause();\n    }\n  }\n\n  // if the dest has an error, then stop piping into it.\n  // however, don't suppress the throwing behavior for this.\n  function onerror(er) {\n    debug('onerror', er);\n    unpipe();\n    dest.removeListener('error', onerror);\n    if (EElistenerCount(dest, 'error') === 0) errorOrDestroy(dest, er);\n  }\n\n  // Make sure our error handler is attached before userland ones.\n  prependListener(dest, 'error', onerror);\n\n  // Both close and finish should trigger unpipe, but only once.\n  function onclose() {\n    dest.removeListener('finish', onfinish);\n    unpipe();\n  }\n  dest.once('close', onclose);\n  function onfinish() {\n    debug('onfinish');\n    dest.removeListener('close', onclose);\n    unpipe();\n  }\n  dest.once('finish', onfinish);\n  function unpipe() {\n    debug('unpipe');\n    src.unpipe(dest);\n  }\n\n  // tell the dest that it's being piped to\n  dest.emit('pipe', src);\n\n  // start the flow if it hasn't been started already.\n  if (!state.flowing) {\n    debug('pipe resume');\n    src.resume();\n  }\n  return dest;\n};\nfunction pipeOnDrain(src) {\n  return function pipeOnDrainFunctionResult() {\n    var state = src._readableState;\n    debug('pipeOnDrain', state.awaitDrain);\n    if (state.awaitDrain) state.awaitDrain--;\n    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {\n      state.flowing = true;\n      flow(src);\n    }\n  };\n}\nReadable.prototype.unpipe = function (dest) {\n  var state = this._readableState;\n  var unpipeInfo = {\n    hasUnpiped: false\n  };\n\n  // if we're not piping anywhere, then do nothing.\n  if (state.pipesCount === 0) return this;\n\n  // just one destination.  most common case.\n  if (state.pipesCount === 1) {\n    // passed in one, but it's not the right one.\n    if (dest && dest !== state.pipes) return this;\n    if (!dest) dest = state.pipes;\n\n    // got a match.\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    if (dest) dest.emit('unpipe', this, unpipeInfo);\n    return this;\n  }\n\n  // slow case. multiple pipe destinations.\n\n  if (!dest) {\n    // remove all.\n    var dests = state.pipes;\n    var len = state.pipesCount;\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    for (var i = 0; i < len; i++) dests[i].emit('unpipe', this, {\n      hasUnpiped: false\n    });\n    return this;\n  }\n\n  // try to find the right one.\n  var index = indexOf(state.pipes, dest);\n  if (index === -1) return this;\n  state.pipes.splice(index, 1);\n  state.pipesCount -= 1;\n  if (state.pipesCount === 1) state.pipes = state.pipes[0];\n  dest.emit('unpipe', this, unpipeInfo);\n  return this;\n};\n\n// set up data events if they are asked for\n// Ensure readable listeners eventually get something\nReadable.prototype.on = function (ev, fn) {\n  var res = Stream.prototype.on.call(this, ev, fn);\n  var state = this._readableState;\n  if (ev === 'data') {\n    // update readableListening so that resume() may be a no-op\n    // a few lines down. This is needed to support once('readable').\n    state.readableListening = this.listenerCount('readable') > 0;\n\n    // Try start flowing on next tick if stream isn't explicitly paused\n    if (state.flowing !== false) this.resume();\n  } else if (ev === 'readable') {\n    if (!state.endEmitted && !state.readableListening) {\n      state.readableListening = state.needReadable = true;\n      state.flowing = false;\n      state.emittedReadable = false;\n      debug('on readable', state.length, state.reading);\n      if (state.length) {\n        emitReadable(this);\n      } else if (!state.reading) {\n        process.nextTick(nReadingNextTick, this);\n      }\n    }\n  }\n  return res;\n};\nReadable.prototype.addListener = Readable.prototype.on;\nReadable.prototype.removeListener = function (ev, fn) {\n  var res = Stream.prototype.removeListener.call(this, ev, fn);\n  if (ev === 'readable') {\n    // We need to check if there is someone still listening to\n    // readable and reset the state. However this needs to happen\n    // after readable has been emitted but before I/O (nextTick) to\n    // support once('readable', fn) cycles. This means that calling\n    // resume within the same tick will have no\n    // effect.\n    process.nextTick(updateReadableListening, this);\n  }\n  return res;\n};\nReadable.prototype.removeAllListeners = function (ev) {\n  var res = Stream.prototype.removeAllListeners.apply(this, arguments);\n  if (ev === 'readable' || ev === undefined) {\n    // We need to check if there is someone still listening to\n    // readable and reset the state. However this needs to happen\n    // after readable has been emitted but before I/O (nextTick) to\n    // support once('readable', fn) cycles. This means that calling\n    // resume within the same tick will have no\n    // effect.\n    process.nextTick(updateReadableListening, this);\n  }\n  return res;\n};\nfunction updateReadableListening(self) {\n  var state = self._readableState;\n  state.readableListening = self.listenerCount('readable') > 0;\n  if (state.resumeScheduled && !state.paused) {\n    // flowing needs to be set to true now, otherwise\n    // the upcoming resume will not flow.\n    state.flowing = true;\n\n    // crude way to check if we should resume\n  } else if (self.listenerCount('data') > 0) {\n    self.resume();\n  }\n}\nfunction nReadingNextTick(self) {\n  debug('readable nexttick read 0');\n  self.read(0);\n}\n\n// pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\nReadable.prototype.resume = function () {\n  var state = this._readableState;\n  if (!state.flowing) {\n    debug('resume');\n    // we flow only if there is no one listening\n    // for readable, but we still have to call\n    // resume()\n    state.flowing = !state.readableListening;\n    resume(this, state);\n  }\n  state.paused = false;\n  return this;\n};\nfunction resume(stream, state) {\n  if (!state.resumeScheduled) {\n    state.resumeScheduled = true;\n    process.nextTick(resume_, stream, state);\n  }\n}\nfunction resume_(stream, state) {\n  debug('resume', state.reading);\n  if (!state.reading) {\n    stream.read(0);\n  }\n  state.resumeScheduled = false;\n  stream.emit('resume');\n  flow(stream);\n  if (state.flowing && !state.reading) stream.read(0);\n}\nReadable.prototype.pause = function () {\n  debug('call pause flowing=%j', this._readableState.flowing);\n  if (this._readableState.flowing !== false) {\n    debug('pause');\n    this._readableState.flowing = false;\n    this.emit('pause');\n  }\n  this._readableState.paused = true;\n  return this;\n};\nfunction flow(stream) {\n  var state = stream._readableState;\n  debug('flow', state.flowing);\n  while (state.flowing && stream.read() !== null);\n}\n\n// wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\nReadable.prototype.wrap = function (stream) {\n  var _this = this;\n  var state = this._readableState;\n  var paused = false;\n  stream.on('end', function () {\n    debug('wrapped end');\n    if (state.decoder && !state.ended) {\n      var chunk = state.decoder.end();\n      if (chunk && chunk.length) _this.push(chunk);\n    }\n    _this.push(null);\n  });\n  stream.on('data', function (chunk) {\n    debug('wrapped data');\n    if (state.decoder) chunk = state.decoder.write(chunk);\n\n    // don't skip over falsy values in objectMode\n    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;\n    var ret = _this.push(chunk);\n    if (!ret) {\n      paused = true;\n      stream.pause();\n    }\n  });\n\n  // proxy all the other methods.\n  // important when wrapping filters and duplexes.\n  for (var i in stream) {\n    if (this[i] === undefined && typeof stream[i] === 'function') {\n      this[i] = function methodWrap(method) {\n        return function methodWrapReturnFunction() {\n          return stream[method].apply(stream, arguments);\n        };\n      }(i);\n    }\n  }\n\n  // proxy certain important events.\n  for (var n = 0; n < kProxyEvents.length; n++) {\n    stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));\n  }\n\n  // when we try to consume some more bytes, simply unpause the\n  // underlying stream.\n  this._read = function (n) {\n    debug('wrapped _read', n);\n    if (paused) {\n      paused = false;\n      stream.resume();\n    }\n  };\n  return this;\n};\nif (typeof Symbol === 'function') {\n  Readable.prototype[Symbol.asyncIterator] = function () {\n    if (createReadableStreamAsyncIterator === undefined) {\n      createReadableStreamAsyncIterator = require('./internal/streams/async_iterator');\n    }\n    return createReadableStreamAsyncIterator(this);\n  };\n}\nObject.defineProperty(Readable.prototype, 'readableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.highWaterMark;\n  }\n});\nObject.defineProperty(Readable.prototype, 'readableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState && this._readableState.buffer;\n  }\n});\nObject.defineProperty(Readable.prototype, 'readableFlowing', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.flowing;\n  },\n  set: function set(state) {\n    if (this._readableState) {\n      this._readableState.flowing = state;\n    }\n  }\n});\n\n// exposed for testing purposes only.\nReadable._fromList = fromList;\nObject.defineProperty(Readable.prototype, 'readableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.length;\n  }\n});\n\n// Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromList(n, state) {\n  // nothing buffered\n  if (state.length === 0) return null;\n  var ret;\n  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {\n    // read it all, truncate the list\n    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.first();else ret = state.buffer.concat(state.length);\n    state.buffer.clear();\n  } else {\n    // read part of list\n    ret = state.buffer.consume(n, state.decoder);\n  }\n  return ret;\n}\nfunction endReadable(stream) {\n  var state = stream._readableState;\n  debug('endReadable', state.endEmitted);\n  if (!state.endEmitted) {\n    state.ended = true;\n    process.nextTick(endReadableNT, state, stream);\n  }\n}\nfunction endReadableNT(state, stream) {\n  debug('endReadableNT', state.endEmitted, state.length);\n\n  // Check that we didn't get one last unshift.\n  if (!state.endEmitted && state.length === 0) {\n    state.endEmitted = true;\n    stream.readable = false;\n    stream.emit('end');\n    if (state.autoDestroy) {\n      // In case of duplex streams we need a way to detect\n      // if the writable side is ready for autoDestroy as well\n      var wState = stream._writableState;\n      if (!wState || wState.autoDestroy && wState.finished) {\n        stream.destroy();\n      }\n    }\n  }\n}\nif (typeof Symbol === 'function') {\n  Readable.from = function (iterable, opts) {\n    if (from === undefined) {\n      from = require('./internal/streams/from');\n    }\n    return from(Readable, iterable, opts);\n  };\n}\nfunction indexOf(xs, x) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    if (xs[i] === x) return i;\n  }\n  return -1;\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a transform stream is a readable/writable stream where you do\n// something with the data.  Sometimes it's called a \"filter\",\n// but that's not a great name for it, since that implies a thing where\n// some bits pass through, and others are simply ignored.  (That would\n// be a valid example of a transform, of course.)\n//\n// While the output is causally related to the input, it's not a\n// necessarily symmetric or synchronous transformation.  For example,\n// a zlib stream might take multiple plain-text writes(), and then\n// emit a single compressed chunk some time in the future.\n//\n// Here's how this works:\n//\n// The Transform stream has all the aspects of the readable and writable\n// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n// internally, and returns false if there's a lot of pending writes\n// buffered up.  When you call read(), that calls _read(n) until\n// there's enough pending readable data buffered up.\n//\n// In a transform stream, the written data is placed in a buffer.  When\n// _read(n) is called, it transforms the queued up data, calling the\n// buffered _write cb's as it consumes chunks.  If consuming a single\n// written chunk would result in multiple output chunks, then the first\n// outputted bit calls the readcb, and subsequent chunks just go into\n// the read buffer, and will cause it to emit 'readable' if necessary.\n//\n// This way, back-pressure is actually determined by the reading side,\n// since _read has to be called to start processing a new chunk.  However,\n// a pathological inflate type of transform can cause excessive buffering\n// here.  For example, imagine a stream where every byte of input is\n// interpreted as an integer from 0-255, and then results in that many\n// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n// 1kb of data being output.  In this case, you could write a very small\n// amount of input, and end up with a very large amount of output.  In\n// such a pathological inflating mechanism, there'd be no way to tell\n// the system to stop doing the transform.  A single 4MB write could\n// cause the system to run out of memory.\n//\n// However, even in such a pathological case, only a single written chunk\n// would be consumed, and then the rest would wait (un-transformed) until\n// the results of the previous transformed chunk were consumed.\n\n'use strict';\n\nmodule.exports = Transform;\nvar _require$codes = require('../errors').codes,\n  ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n  ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK,\n  ERR_TRANSFORM_ALREADY_TRANSFORMING = _require$codes.ERR_TRANSFORM_ALREADY_TRANSFORMING,\n  ERR_TRANSFORM_WITH_LENGTH_0 = _require$codes.ERR_TRANSFORM_WITH_LENGTH_0;\nvar Duplex = require('./_stream_duplex');\nrequire('inherits')(Transform, Duplex);\nfunction afterTransform(er, data) {\n  var ts = this._transformState;\n  ts.transforming = false;\n  var cb = ts.writecb;\n  if (cb === null) {\n    return this.emit('error', new ERR_MULTIPLE_CALLBACK());\n  }\n  ts.writechunk = null;\n  ts.writecb = null;\n  if (data != null)\n    // single equals check for both `null` and `undefined`\n    this.push(data);\n  cb(er);\n  var rs = this._readableState;\n  rs.reading = false;\n  if (rs.needReadable || rs.length < rs.highWaterMark) {\n    this._read(rs.highWaterMark);\n  }\n}\nfunction Transform(options) {\n  if (!(this instanceof Transform)) return new Transform(options);\n  Duplex.call(this, options);\n  this._transformState = {\n    afterTransform: afterTransform.bind(this),\n    needTransform: false,\n    transforming: false,\n    writecb: null,\n    writechunk: null,\n    writeencoding: null\n  };\n\n  // start out asking for a readable event once data is transformed.\n  this._readableState.needReadable = true;\n\n  // we have implemented the _read method, and done the other things\n  // that Readable wants before the first _read call, so unset the\n  // sync guard flag.\n  this._readableState.sync = false;\n  if (options) {\n    if (typeof options.transform === 'function') this._transform = options.transform;\n    if (typeof options.flush === 'function') this._flush = options.flush;\n  }\n\n  // When the writable side finishes, then flush out anything remaining.\n  this.on('prefinish', prefinish);\n}\nfunction prefinish() {\n  var _this = this;\n  if (typeof this._flush === 'function' && !this._readableState.destroyed) {\n    this._flush(function (er, data) {\n      done(_this, er, data);\n    });\n  } else {\n    done(this, null, null);\n  }\n}\nTransform.prototype.push = function (chunk, encoding) {\n  this._transformState.needTransform = false;\n  return Duplex.prototype.push.call(this, chunk, encoding);\n};\n\n// This is the part where you do stuff!\n// override this function in implementation classes.\n// 'chunk' is an input chunk.\n//\n// Call `push(newChunk)` to pass along transformed output\n// to the readable side.  You may call 'push' zero or more times.\n//\n// Call `cb(err)` when you are done with this chunk.  If you pass\n// an error, then that'll put the hurt on the whole operation.  If you\n// never call cb(), then you'll never get another chunk.\nTransform.prototype._transform = function (chunk, encoding, cb) {\n  cb(new ERR_METHOD_NOT_IMPLEMENTED('_transform()'));\n};\nTransform.prototype._write = function (chunk, encoding, cb) {\n  var ts = this._transformState;\n  ts.writecb = cb;\n  ts.writechunk = chunk;\n  ts.writeencoding = encoding;\n  if (!ts.transforming) {\n    var rs = this._readableState;\n    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);\n  }\n};\n\n// Doesn't matter what the args are here.\n// _transform does all the work.\n// That we got here means that the readable side wants more data.\nTransform.prototype._read = function (n) {\n  var ts = this._transformState;\n  if (ts.writechunk !== null && !ts.transforming) {\n    ts.transforming = true;\n    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\n  } else {\n    // mark that we need a transform, so that any data that comes in\n    // will get processed, now that we've asked for it.\n    ts.needTransform = true;\n  }\n};\nTransform.prototype._destroy = function (err, cb) {\n  Duplex.prototype._destroy.call(this, err, function (err2) {\n    cb(err2);\n  });\n};\nfunction done(stream, er, data) {\n  if (er) return stream.emit('error', er);\n  if (data != null)\n    // single equals check for both `null` and `undefined`\n    stream.push(data);\n\n  // TODO(BridgeAR): Write a test for these two error cases\n  // if there's nothing in the write buffer, then that means\n  // that nothing more will ever be provided\n  if (stream._writableState.length) throw new ERR_TRANSFORM_WITH_LENGTH_0();\n  if (stream._transformState.transforming) throw new ERR_TRANSFORM_ALREADY_TRANSFORMING();\n  return stream.push(null);\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// A bit simpler than readable streams.\n// Implement an async ._write(chunk, encoding, cb), and it'll handle all\n// the drain event emission and buffering.\n\n'use strict';\n\nmodule.exports = Writable;\n\n/* <replacement> */\nfunction WriteReq(chunk, encoding, cb) {\n  this.chunk = chunk;\n  this.encoding = encoding;\n  this.callback = cb;\n  this.next = null;\n}\n\n// It seems a linked list but it is not\n// there will be only 2 of these for each stream\nfunction CorkedRequest(state) {\n  var _this = this;\n  this.next = null;\n  this.entry = null;\n  this.finish = function () {\n    onCorkedFinish(_this, state);\n  };\n}\n/* </replacement> */\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nWritable.WritableState = WritableState;\n\n/*<replacement>*/\nvar internalUtil = {\n  deprecate: require('util-deprecate')\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\nvar Buffer = require('buffer').Buffer;\nvar OurUint8Array = (typeof global !== 'undefined' ? global : typeof window !== 'undefined' ? window : typeof self !== 'undefined' ? self : {}).Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\nvar destroyImpl = require('./internal/streams/destroy');\nvar _require = require('./internal/streams/state'),\n  getHighWaterMark = _require.getHighWaterMark;\nvar _require$codes = require('../errors').codes,\n  ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,\n  ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n  ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK,\n  ERR_STREAM_CANNOT_PIPE = _require$codes.ERR_STREAM_CANNOT_PIPE,\n  ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED,\n  ERR_STREAM_NULL_VALUES = _require$codes.ERR_STREAM_NULL_VALUES,\n  ERR_STREAM_WRITE_AFTER_END = _require$codes.ERR_STREAM_WRITE_AFTER_END,\n  ERR_UNKNOWN_ENCODING = _require$codes.ERR_UNKNOWN_ENCODING;\nvar errorOrDestroy = destroyImpl.errorOrDestroy;\nrequire('inherits')(Writable, Stream);\nfunction nop() {}\nfunction WritableState(options, stream, isDuplex) {\n  Duplex = Duplex || require('./_stream_duplex');\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream,\n  // e.g. options.readableObjectMode vs. options.writableObjectMode, etc.\n  if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof Duplex;\n\n  // object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n  this.objectMode = !!options.objectMode;\n  if (isDuplex) this.objectMode = this.objectMode || !!options.writableObjectMode;\n\n  // the point at which write() starts returning false\n  // Note: 0 is a valid value, means that we always return false if\n  // the entire buffer is not flushed immediately on write()\n  this.highWaterMark = getHighWaterMark(this, options, 'writableHighWaterMark', isDuplex);\n\n  // if _final has been called\n  this.finalCalled = false;\n\n  // drain event flag.\n  this.needDrain = false;\n  // at the start of calling end()\n  this.ending = false;\n  // when end() has been called, and returned\n  this.ended = false;\n  // when 'finish' is emitted\n  this.finished = false;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n  var noDecode = options.decodeStrings === false;\n  this.decodeStrings = !noDecode;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // not an actual buffer we keep track of, but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n  this.length = 0;\n\n  // a flag to see when we're in the middle of a write.\n  this.writing = false;\n\n  // when true all writes will be buffered until .uncork() call\n  this.corked = 0;\n\n  // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // a flag to know if we're processing previously buffered items, which\n  // may call the _write() callback in the same tick, so that we don't\n  // end up in an overlapped onwrite situation.\n  this.bufferProcessing = false;\n\n  // the callback that's passed to _write(chunk,cb)\n  this.onwrite = function (er) {\n    onwrite(stream, er);\n  };\n\n  // the callback that the user supplies to write(chunk,encoding,cb)\n  this.writecb = null;\n\n  // the amount that is being written when _write is called.\n  this.writelen = 0;\n  this.bufferedRequest = null;\n  this.lastBufferedRequest = null;\n\n  // number of pending user-supplied write callbacks\n  // this must be 0 before 'finish' can be emitted\n  this.pendingcb = 0;\n\n  // emit prefinish if the only thing we're waiting for is _write cbs\n  // This is relevant for synchronous Transform streams\n  this.prefinished = false;\n\n  // True if the error was already emitted and should not be thrown again\n  this.errorEmitted = false;\n\n  // Should close be emitted on destroy. Defaults to true.\n  this.emitClose = options.emitClose !== false;\n\n  // Should .destroy() be called after 'finish' (and potentially 'end')\n  this.autoDestroy = !!options.autoDestroy;\n\n  // count buffered requests\n  this.bufferedRequestCount = 0;\n\n  // allocate the first CorkedRequest, there is always\n  // one allocated and free to use, and we maintain at most two\n  this.corkedRequestsFree = new CorkedRequest(this);\n}\nWritableState.prototype.getBuffer = function getBuffer() {\n  var current = this.bufferedRequest;\n  var out = [];\n  while (current) {\n    out.push(current);\n    current = current.next;\n  }\n  return out;\n};\n(function () {\n  try {\n    Object.defineProperty(WritableState.prototype, 'buffer', {\n      get: internalUtil.deprecate(function writableStateBufferGetter() {\n        return this.getBuffer();\n      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')\n    });\n  } catch (_) {}\n})();\n\n// Test _writableState for inheritance to account for Duplex streams,\n// whose prototype chain only points to Readable.\nvar realHasInstance;\nif (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {\n  realHasInstance = Function.prototype[Symbol.hasInstance];\n  Object.defineProperty(Writable, Symbol.hasInstance, {\n    value: function value(object) {\n      if (realHasInstance.call(this, object)) return true;\n      if (this !== Writable) return false;\n      return object && object._writableState instanceof WritableState;\n    }\n  });\n} else {\n  realHasInstance = function realHasInstance(object) {\n    return object instanceof this;\n  };\n}\nfunction Writable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  // Writable ctor is applied to Duplexes, too.\n  // `realHasInstance` is necessary because using plain `instanceof`\n  // would return false, as no `_writableState` property is attached.\n\n  // Trying to use the custom `instanceof` for Writable here will also break the\n  // Node.js LazyTransform implementation, which has a non-trivial getter for\n  // `_writableState` that would lead to infinite recursion.\n\n  // Checking for a Stream.Duplex instance is faster here instead of inside\n  // the WritableState constructor, at least with V8 6.5\n  var isDuplex = this instanceof Duplex;\n  if (!isDuplex && !realHasInstance.call(Writable, this)) return new Writable(options);\n  this._writableState = new WritableState(options, this, isDuplex);\n\n  // legacy.\n  this.writable = true;\n  if (options) {\n    if (typeof options.write === 'function') this._write = options.write;\n    if (typeof options.writev === 'function') this._writev = options.writev;\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n    if (typeof options.final === 'function') this._final = options.final;\n  }\n  Stream.call(this);\n}\n\n// Otherwise people can pipe Writable streams, which is just wrong.\nWritable.prototype.pipe = function () {\n  errorOrDestroy(this, new ERR_STREAM_CANNOT_PIPE());\n};\nfunction writeAfterEnd(stream, cb) {\n  var er = new ERR_STREAM_WRITE_AFTER_END();\n  // TODO: defer error events consistently everywhere, not just the cb\n  errorOrDestroy(stream, er);\n  process.nextTick(cb, er);\n}\n\n// Checks that a user-supplied chunk is valid, especially for the particular\n// mode the stream is in. Currently this means that `null` is never accepted\n// and undefined/non-string values are only allowed in object mode.\nfunction validChunk(stream, state, chunk, cb) {\n  var er;\n  if (chunk === null) {\n    er = new ERR_STREAM_NULL_VALUES();\n  } else if (typeof chunk !== 'string' && !state.objectMode) {\n    er = new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer'], chunk);\n  }\n  if (er) {\n    errorOrDestroy(stream, er);\n    process.nextTick(cb, er);\n    return false;\n  }\n  return true;\n}\nWritable.prototype.write = function (chunk, encoding, cb) {\n  var state = this._writableState;\n  var ret = false;\n  var isBuf = !state.objectMode && _isUint8Array(chunk);\n  if (isBuf && !Buffer.isBuffer(chunk)) {\n    chunk = _uint8ArrayToBuffer(chunk);\n  }\n  if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n  if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;\n  if (typeof cb !== 'function') cb = nop;\n  if (state.ending) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {\n    state.pendingcb++;\n    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);\n  }\n  return ret;\n};\nWritable.prototype.cork = function () {\n  this._writableState.corked++;\n};\nWritable.prototype.uncork = function () {\n  var state = this._writableState;\n  if (state.corked) {\n    state.corked--;\n    if (!state.writing && !state.corked && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);\n  }\n};\nWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\n  // node::ParseEncoding() requires lower case.\n  if (typeof encoding === 'string') encoding = encoding.toLowerCase();\n  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new ERR_UNKNOWN_ENCODING(encoding);\n  this._writableState.defaultEncoding = encoding;\n  return this;\n};\nObject.defineProperty(Writable.prototype, 'writableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState && this._writableState.getBuffer();\n  }\n});\nfunction decodeChunk(state, chunk, encoding) {\n  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {\n    chunk = Buffer.from(chunk, encoding);\n  }\n  return chunk;\n}\nObject.defineProperty(Writable.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.highWaterMark;\n  }\n});\n\n// if we're already writing something, then just put this\n// in the queue, and wait our turn.  Otherwise, call _write\n// If we return false, then we need a drain event, so set that flag.\nfunction writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {\n  if (!isBuf) {\n    var newChunk = decodeChunk(state, chunk, encoding);\n    if (chunk !== newChunk) {\n      isBuf = true;\n      encoding = 'buffer';\n      chunk = newChunk;\n    }\n  }\n  var len = state.objectMode ? 1 : chunk.length;\n  state.length += len;\n  var ret = state.length < state.highWaterMark;\n  // we must ensure that previous needDrain will not be reset to false.\n  if (!ret) state.needDrain = true;\n  if (state.writing || state.corked) {\n    var last = state.lastBufferedRequest;\n    state.lastBufferedRequest = {\n      chunk: chunk,\n      encoding: encoding,\n      isBuf: isBuf,\n      callback: cb,\n      next: null\n    };\n    if (last) {\n      last.next = state.lastBufferedRequest;\n    } else {\n      state.bufferedRequest = state.lastBufferedRequest;\n    }\n    state.bufferedRequestCount += 1;\n  } else {\n    doWrite(stream, state, false, len, chunk, encoding, cb);\n  }\n  return ret;\n}\nfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\n  state.writelen = len;\n  state.writecb = cb;\n  state.writing = true;\n  state.sync = true;\n  if (state.destroyed) state.onwrite(new ERR_STREAM_DESTROYED('write'));else if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);\n  state.sync = false;\n}\nfunction onwriteError(stream, state, sync, er, cb) {\n  --state.pendingcb;\n  if (sync) {\n    // defer the callback if we are being called synchronously\n    // to avoid piling up things on the stack\n    process.nextTick(cb, er);\n    // this can emit finish, and it will always happen\n    // after error\n    process.nextTick(finishMaybe, stream, state);\n    stream._writableState.errorEmitted = true;\n    errorOrDestroy(stream, er);\n  } else {\n    // the caller expect this to happen before if\n    // it is async\n    cb(er);\n    stream._writableState.errorEmitted = true;\n    errorOrDestroy(stream, er);\n    // this can emit finish, but finish must\n    // always follow error\n    finishMaybe(stream, state);\n  }\n}\nfunction onwriteStateUpdate(state) {\n  state.writing = false;\n  state.writecb = null;\n  state.length -= state.writelen;\n  state.writelen = 0;\n}\nfunction onwrite(stream, er) {\n  var state = stream._writableState;\n  var sync = state.sync;\n  var cb = state.writecb;\n  if (typeof cb !== 'function') throw new ERR_MULTIPLE_CALLBACK();\n  onwriteStateUpdate(state);\n  if (er) onwriteError(stream, state, sync, er, cb);else {\n    // Check if we're actually ready to finish, but don't emit yet\n    var finished = needFinish(state) || stream.destroyed;\n    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {\n      clearBuffer(stream, state);\n    }\n    if (sync) {\n      process.nextTick(afterWrite, stream, state, finished, cb);\n    } else {\n      afterWrite(stream, state, finished, cb);\n    }\n  }\n}\nfunction afterWrite(stream, state, finished, cb) {\n  if (!finished) onwriteDrain(stream, state);\n  state.pendingcb--;\n  cb();\n  finishMaybe(stream, state);\n}\n\n// Must force callback to be called on nextTick, so that we don't\n// emit 'drain' before the write() consumer gets the 'false' return\n// value, and has a chance to attach a 'drain' listener.\nfunction onwriteDrain(stream, state) {\n  if (state.length === 0 && state.needDrain) {\n    state.needDrain = false;\n    stream.emit('drain');\n  }\n}\n\n// if there's something in the buffer waiting, then process it\nfunction clearBuffer(stream, state) {\n  state.bufferProcessing = true;\n  var entry = state.bufferedRequest;\n  if (stream._writev && entry && entry.next) {\n    // Fast case, write everything using _writev()\n    var l = state.bufferedRequestCount;\n    var buffer = new Array(l);\n    var holder = state.corkedRequestsFree;\n    holder.entry = entry;\n    var count = 0;\n    var allBuffers = true;\n    while (entry) {\n      buffer[count] = entry;\n      if (!entry.isBuf) allBuffers = false;\n      entry = entry.next;\n      count += 1;\n    }\n    buffer.allBuffers = allBuffers;\n    doWrite(stream, state, true, state.length, buffer, '', holder.finish);\n\n    // doWrite is almost always async, defer these to save a bit of time\n    // as the hot path ends with doWrite\n    state.pendingcb++;\n    state.lastBufferedRequest = null;\n    if (holder.next) {\n      state.corkedRequestsFree = holder.next;\n      holder.next = null;\n    } else {\n      state.corkedRequestsFree = new CorkedRequest(state);\n    }\n    state.bufferedRequestCount = 0;\n  } else {\n    // Slow case, write chunks one-by-one\n    while (entry) {\n      var chunk = entry.chunk;\n      var encoding = entry.encoding;\n      var cb = entry.callback;\n      var len = state.objectMode ? 1 : chunk.length;\n      doWrite(stream, state, false, len, chunk, encoding, cb);\n      entry = entry.next;\n      state.bufferedRequestCount--;\n      // if we didn't call the onwrite immediately, then\n      // it means that we need to wait until it does.\n      // also, that means that the chunk and cb are currently\n      // being processed, so move the buffer counter past them.\n      if (state.writing) {\n        break;\n      }\n    }\n    if (entry === null) state.lastBufferedRequest = null;\n  }\n  state.bufferedRequest = entry;\n  state.bufferProcessing = false;\n}\nWritable.prototype._write = function (chunk, encoding, cb) {\n  cb(new ERR_METHOD_NOT_IMPLEMENTED('_write()'));\n};\nWritable.prototype._writev = null;\nWritable.prototype.end = function (chunk, encoding, cb) {\n  var state = this._writableState;\n  if (typeof chunk === 'function') {\n    cb = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding);\n\n  // .end() fully uncorks\n  if (state.corked) {\n    state.corked = 1;\n    this.uncork();\n  }\n\n  // ignore unnecessary end() calls.\n  if (!state.ending) endWritable(this, state, cb);\n  return this;\n};\nObject.defineProperty(Writable.prototype, 'writableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.length;\n  }\n});\nfunction needFinish(state) {\n  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;\n}\nfunction callFinal(stream, state) {\n  stream._final(function (err) {\n    state.pendingcb--;\n    if (err) {\n      errorOrDestroy(stream, err);\n    }\n    state.prefinished = true;\n    stream.emit('prefinish');\n    finishMaybe(stream, state);\n  });\n}\nfunction prefinish(stream, state) {\n  if (!state.prefinished && !state.finalCalled) {\n    if (typeof stream._final === 'function' && !state.destroyed) {\n      state.pendingcb++;\n      state.finalCalled = true;\n      process.nextTick(callFinal, stream, state);\n    } else {\n      state.prefinished = true;\n      stream.emit('prefinish');\n    }\n  }\n}\nfunction finishMaybe(stream, state) {\n  var need = needFinish(state);\n  if (need) {\n    prefinish(stream, state);\n    if (state.pendingcb === 0) {\n      state.finished = true;\n      stream.emit('finish');\n      if (state.autoDestroy) {\n        // In case of duplex streams we need a way to detect\n        // if the readable side is ready for autoDestroy as well\n        var rState = stream._readableState;\n        if (!rState || rState.autoDestroy && rState.endEmitted) {\n          stream.destroy();\n        }\n      }\n    }\n  }\n  return need;\n}\nfunction endWritable(stream, state, cb) {\n  state.ending = true;\n  finishMaybe(stream, state);\n  if (cb) {\n    if (state.finished) process.nextTick(cb);else stream.once('finish', cb);\n  }\n  state.ended = true;\n  stream.writable = false;\n}\nfunction onCorkedFinish(corkReq, state, err) {\n  var entry = corkReq.entry;\n  corkReq.entry = null;\n  while (entry) {\n    var cb = entry.callback;\n    state.pendingcb--;\n    cb(err);\n    entry = entry.next;\n  }\n\n  // reuse the free corkReq.\n  state.corkedRequestsFree.next = corkReq;\n}\nObject.defineProperty(Writable.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._writableState === undefined) {\n      return false;\n    }\n    return this._writableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._writableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._writableState.destroyed = value;\n  }\n});\nWritable.prototype.destroy = destroyImpl.destroy;\nWritable.prototype._undestroy = destroyImpl.undestroy;\nWritable.prototype._destroy = function (err, cb) {\n  cb(err);\n};","'use strict';\n\nvar _Object$setPrototypeO;\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nvar finished = require('./end-of-stream');\nvar kLastResolve = Symbol('lastResolve');\nvar kLastReject = Symbol('lastReject');\nvar kError = Symbol('error');\nvar kEnded = Symbol('ended');\nvar kLastPromise = Symbol('lastPromise');\nvar kHandlePromise = Symbol('handlePromise');\nvar kStream = Symbol('stream');\nfunction createIterResult(value, done) {\n  return {\n    value: value,\n    done: done\n  };\n}\nfunction readAndResolve(iter) {\n  var resolve = iter[kLastResolve];\n  if (resolve !== null) {\n    var data = iter[kStream].read();\n    // we defer if data is null\n    // we can be expecting either 'end' or\n    // 'error'\n    if (data !== null) {\n      iter[kLastPromise] = null;\n      iter[kLastResolve] = null;\n      iter[kLastReject] = null;\n      resolve(createIterResult(data, false));\n    }\n  }\n}\nfunction onReadable(iter) {\n  // we wait for the next tick, because it might\n  // emit an error with process.nextTick\n  process.nextTick(readAndResolve, iter);\n}\nfunction wrapForNext(lastPromise, iter) {\n  return function (resolve, reject) {\n    lastPromise.then(function () {\n      if (iter[kEnded]) {\n        resolve(createIterResult(undefined, true));\n        return;\n      }\n      iter[kHandlePromise](resolve, reject);\n    }, reject);\n  };\n}\nvar AsyncIteratorPrototype = Object.getPrototypeOf(function () {});\nvar ReadableStreamAsyncIteratorPrototype = Object.setPrototypeOf((_Object$setPrototypeO = {\n  get stream() {\n    return this[kStream];\n  },\n  next: function next() {\n    var _this = this;\n    // if we have detected an error in the meanwhile\n    // reject straight away\n    var error = this[kError];\n    if (error !== null) {\n      return Promise.reject(error);\n    }\n    if (this[kEnded]) {\n      return Promise.resolve(createIterResult(undefined, true));\n    }\n    if (this[kStream].destroyed) {\n      // We need to defer via nextTick because if .destroy(err) is\n      // called, the error will be emitted via nextTick, and\n      // we cannot guarantee that there is no error lingering around\n      // waiting to be emitted.\n      return new Promise(function (resolve, reject) {\n        process.nextTick(function () {\n          if (_this[kError]) {\n            reject(_this[kError]);\n          } else {\n            resolve(createIterResult(undefined, true));\n          }\n        });\n      });\n    }\n\n    // if we have multiple next() calls\n    // we will wait for the previous Promise to finish\n    // this logic is optimized to support for await loops,\n    // where next() is only called once at a time\n    var lastPromise = this[kLastPromise];\n    var promise;\n    if (lastPromise) {\n      promise = new Promise(wrapForNext(lastPromise, this));\n    } else {\n      // fast path needed to support multiple this.push()\n      // without triggering the next() queue\n      var data = this[kStream].read();\n      if (data !== null) {\n        return Promise.resolve(createIterResult(data, false));\n      }\n      promise = new Promise(this[kHandlePromise]);\n    }\n    this[kLastPromise] = promise;\n    return promise;\n  }\n}, _defineProperty(_Object$setPrototypeO, Symbol.asyncIterator, function () {\n  return this;\n}), _defineProperty(_Object$setPrototypeO, \"return\", function _return() {\n  var _this2 = this;\n  // destroy(err, cb) is a private API\n  // we can guarantee we have that here, because we control the\n  // Readable class this is attached to\n  return new Promise(function (resolve, reject) {\n    _this2[kStream].destroy(null, function (err) {\n      if (err) {\n        reject(err);\n        return;\n      }\n      resolve(createIterResult(undefined, true));\n    });\n  });\n}), _Object$setPrototypeO), AsyncIteratorPrototype);\nvar createReadableStreamAsyncIterator = function createReadableStreamAsyncIterator(stream) {\n  var _Object$create;\n  var iterator = Object.create(ReadableStreamAsyncIteratorPrototype, (_Object$create = {}, _defineProperty(_Object$create, kStream, {\n    value: stream,\n    writable: true\n  }), _defineProperty(_Object$create, kLastResolve, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kLastReject, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kError, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kEnded, {\n    value: stream._readableState.endEmitted,\n    writable: true\n  }), _defineProperty(_Object$create, kHandlePromise, {\n    value: function value(resolve, reject) {\n      var data = iterator[kStream].read();\n      if (data) {\n        iterator[kLastPromise] = null;\n        iterator[kLastResolve] = null;\n        iterator[kLastReject] = null;\n        resolve(createIterResult(data, false));\n      } else {\n        iterator[kLastResolve] = resolve;\n        iterator[kLastReject] = reject;\n      }\n    },\n    writable: true\n  }), _Object$create));\n  iterator[kLastPromise] = null;\n  finished(stream, function (err) {\n    if (err && err.code !== 'ERR_STREAM_PREMATURE_CLOSE') {\n      var reject = iterator[kLastReject];\n      // reject if we are waiting for data in the Promise\n      // returned by next() and store the error\n      if (reject !== null) {\n        iterator[kLastPromise] = null;\n        iterator[kLastResolve] = null;\n        iterator[kLastReject] = null;\n        reject(err);\n      }\n      iterator[kError] = err;\n      return;\n    }\n    var resolve = iterator[kLastResolve];\n    if (resolve !== null) {\n      iterator[kLastPromise] = null;\n      iterator[kLastResolve] = null;\n      iterator[kLastReject] = null;\n      resolve(createIterResult(undefined, true));\n    }\n    iterator[kEnded] = true;\n  });\n  stream.on('readable', onReadable.bind(null, iterator));\n  return iterator;\n};\nmodule.exports = createReadableStreamAsyncIterator;","'use strict';\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nvar _require = require('buffer'),\n  Buffer = _require.Buffer;\nvar _require2 = require('util'),\n  inspect = _require2.inspect;\nvar custom = inspect && inspect.custom || 'inspect';\nfunction copyBuffer(src, target, offset) {\n  Buffer.prototype.copy.call(src, target, offset);\n}\nmodule.exports = /*#__PURE__*/function () {\n  function BufferList() {\n    _classCallCheck(this, BufferList);\n    this.head = null;\n    this.tail = null;\n    this.length = 0;\n  }\n  _createClass(BufferList, [{\n    key: \"push\",\n    value: function push(v) {\n      var entry = {\n        data: v,\n        next: null\n      };\n      if (this.length > 0) this.tail.next = entry;else this.head = entry;\n      this.tail = entry;\n      ++this.length;\n    }\n  }, {\n    key: \"unshift\",\n    value: function unshift(v) {\n      var entry = {\n        data: v,\n        next: this.head\n      };\n      if (this.length === 0) this.tail = entry;\n      this.head = entry;\n      ++this.length;\n    }\n  }, {\n    key: \"shift\",\n    value: function shift() {\n      if (this.length === 0) return;\n      var ret = this.head.data;\n      if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;\n      --this.length;\n      return ret;\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.head = this.tail = null;\n      this.length = 0;\n    }\n  }, {\n    key: \"join\",\n    value: function join(s) {\n      if (this.length === 0) return '';\n      var p = this.head;\n      var ret = '' + p.data;\n      while (p = p.next) ret += s + p.data;\n      return ret;\n    }\n  }, {\n    key: \"concat\",\n    value: function concat(n) {\n      if (this.length === 0) return Buffer.alloc(0);\n      var ret = Buffer.allocUnsafe(n >>> 0);\n      var p = this.head;\n      var i = 0;\n      while (p) {\n        copyBuffer(p.data, ret, i);\n        i += p.data.length;\n        p = p.next;\n      }\n      return ret;\n    }\n\n    // Consumes a specified amount of bytes or characters from the buffered data.\n  }, {\n    key: \"consume\",\n    value: function consume(n, hasStrings) {\n      var ret;\n      if (n < this.head.data.length) {\n        // `slice` is the same for buffers and strings.\n        ret = this.head.data.slice(0, n);\n        this.head.data = this.head.data.slice(n);\n      } else if (n === this.head.data.length) {\n        // First chunk is a perfect match.\n        ret = this.shift();\n      } else {\n        // Result spans more than one buffer.\n        ret = hasStrings ? this._getString(n) : this._getBuffer(n);\n      }\n      return ret;\n    }\n  }, {\n    key: \"first\",\n    value: function first() {\n      return this.head.data;\n    }\n\n    // Consumes a specified amount of characters from the buffered data.\n  }, {\n    key: \"_getString\",\n    value: function _getString(n) {\n      var p = this.head;\n      var c = 1;\n      var ret = p.data;\n      n -= ret.length;\n      while (p = p.next) {\n        var str = p.data;\n        var nb = n > str.length ? str.length : n;\n        if (nb === str.length) ret += str;else ret += str.slice(0, n);\n        n -= nb;\n        if (n === 0) {\n          if (nb === str.length) {\n            ++c;\n            if (p.next) this.head = p.next;else this.head = this.tail = null;\n          } else {\n            this.head = p;\n            p.data = str.slice(nb);\n          }\n          break;\n        }\n        ++c;\n      }\n      this.length -= c;\n      return ret;\n    }\n\n    // Consumes a specified amount of bytes from the buffered data.\n  }, {\n    key: \"_getBuffer\",\n    value: function _getBuffer(n) {\n      var ret = Buffer.allocUnsafe(n);\n      var p = this.head;\n      var c = 1;\n      p.data.copy(ret);\n      n -= p.data.length;\n      while (p = p.next) {\n        var buf = p.data;\n        var nb = n > buf.length ? buf.length : n;\n        buf.copy(ret, ret.length - n, 0, nb);\n        n -= nb;\n        if (n === 0) {\n          if (nb === buf.length) {\n            ++c;\n            if (p.next) this.head = p.next;else this.head = this.tail = null;\n          } else {\n            this.head = p;\n            p.data = buf.slice(nb);\n          }\n          break;\n        }\n        ++c;\n      }\n      this.length -= c;\n      return ret;\n    }\n\n    // Make sure the linked list only shows the minimal necessary information.\n  }, {\n    key: custom,\n    value: function value(_, options) {\n      return inspect(this, _objectSpread(_objectSpread({}, options), {}, {\n        // Only inspect one level.\n        depth: 0,\n        // It should not recurse.\n        customInspect: false\n      }));\n    }\n  }]);\n  return BufferList;\n}();","'use strict';\n\n// undocumented cb() API, needed for core, not for public API\nfunction destroy(err, cb) {\n  var _this = this;\n  var readableDestroyed = this._readableState && this._readableState.destroyed;\n  var writableDestroyed = this._writableState && this._writableState.destroyed;\n  if (readableDestroyed || writableDestroyed) {\n    if (cb) {\n      cb(err);\n    } else if (err) {\n      if (!this._writableState) {\n        process.nextTick(emitErrorNT, this, err);\n      } else if (!this._writableState.errorEmitted) {\n        this._writableState.errorEmitted = true;\n        process.nextTick(emitErrorNT, this, err);\n      }\n    }\n    return this;\n  }\n\n  // we set destroyed to true before firing error callbacks in order\n  // to make it re-entrance safe in case destroy() is called within callbacks\n\n  if (this._readableState) {\n    this._readableState.destroyed = true;\n  }\n\n  // if this is a duplex stream mark the writable part as destroyed as well\n  if (this._writableState) {\n    this._writableState.destroyed = true;\n  }\n  this._destroy(err || null, function (err) {\n    if (!cb && err) {\n      if (!_this._writableState) {\n        process.nextTick(emitErrorAndCloseNT, _this, err);\n      } else if (!_this._writableState.errorEmitted) {\n        _this._writableState.errorEmitted = true;\n        process.nextTick(emitErrorAndCloseNT, _this, err);\n      } else {\n        process.nextTick(emitCloseNT, _this);\n      }\n    } else if (cb) {\n      process.nextTick(emitCloseNT, _this);\n      cb(err);\n    } else {\n      process.nextTick(emitCloseNT, _this);\n    }\n  });\n  return this;\n}\nfunction emitErrorAndCloseNT(self, err) {\n  emitErrorNT(self, err);\n  emitCloseNT(self);\n}\nfunction emitCloseNT(self) {\n  if (self._writableState && !self._writableState.emitClose) return;\n  if (self._readableState && !self._readableState.emitClose) return;\n  self.emit('close');\n}\nfunction undestroy() {\n  if (this._readableState) {\n    this._readableState.destroyed = false;\n    this._readableState.reading = false;\n    this._readableState.ended = false;\n    this._readableState.endEmitted = false;\n  }\n  if (this._writableState) {\n    this._writableState.destroyed = false;\n    this._writableState.ended = false;\n    this._writableState.ending = false;\n    this._writableState.finalCalled = false;\n    this._writableState.prefinished = false;\n    this._writableState.finished = false;\n    this._writableState.errorEmitted = false;\n  }\n}\nfunction emitErrorNT(self, err) {\n  self.emit('error', err);\n}\nfunction errorOrDestroy(stream, err) {\n  // We have tests that rely on errors being emitted\n  // in the same tick, so changing this is semver major.\n  // For now when you opt-in to autoDestroy we allow\n  // the error to be emitted nextTick. In a future\n  // semver major update we should change the default to this.\n\n  var rState = stream._readableState;\n  var wState = stream._writableState;\n  if (rState && rState.autoDestroy || wState && wState.autoDestroy) stream.destroy(err);else stream.emit('error', err);\n}\nmodule.exports = {\n  destroy: destroy,\n  undestroy: undestroy,\n  errorOrDestroy: errorOrDestroy\n};","// Ported from https://github.com/mafintosh/end-of-stream with\n// permission from the author, Mathias Buus (@mafintosh).\n\n'use strict';\n\nvar ERR_STREAM_PREMATURE_CLOSE = require('../../../errors').codes.ERR_STREAM_PREMATURE_CLOSE;\nfunction once(callback) {\n  var called = false;\n  return function () {\n    if (called) return;\n    called = true;\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    callback.apply(this, args);\n  };\n}\nfunction noop() {}\nfunction isRequest(stream) {\n  return stream.setHeader && typeof stream.abort === 'function';\n}\nfunction eos(stream, opts, callback) {\n  if (typeof opts === 'function') return eos(stream, null, opts);\n  if (!opts) opts = {};\n  callback = once(callback || noop);\n  var readable = opts.readable || opts.readable !== false && stream.readable;\n  var writable = opts.writable || opts.writable !== false && stream.writable;\n  var onlegacyfinish = function onlegacyfinish() {\n    if (!stream.writable) onfinish();\n  };\n  var writableEnded = stream._writableState && stream._writableState.finished;\n  var onfinish = function onfinish() {\n    writable = false;\n    writableEnded = true;\n    if (!readable) callback.call(stream);\n  };\n  var readableEnded = stream._readableState && stream._readableState.endEmitted;\n  var onend = function onend() {\n    readable = false;\n    readableEnded = true;\n    if (!writable) callback.call(stream);\n  };\n  var onerror = function onerror(err) {\n    callback.call(stream, err);\n  };\n  var onclose = function onclose() {\n    var err;\n    if (readable && !readableEnded) {\n      if (!stream._readableState || !stream._readableState.ended) err = new ERR_STREAM_PREMATURE_CLOSE();\n      return callback.call(stream, err);\n    }\n    if (writable && !writableEnded) {\n      if (!stream._writableState || !stream._writableState.ended) err = new ERR_STREAM_PREMATURE_CLOSE();\n      return callback.call(stream, err);\n    }\n  };\n  var onrequest = function onrequest() {\n    stream.req.on('finish', onfinish);\n  };\n  if (isRequest(stream)) {\n    stream.on('complete', onfinish);\n    stream.on('abort', onclose);\n    if (stream.req) onrequest();else stream.on('request', onrequest);\n  } else if (writable && !stream._writableState) {\n    // legacy streams\n    stream.on('end', onlegacyfinish);\n    stream.on('close', onlegacyfinish);\n  }\n  stream.on('end', onend);\n  stream.on('finish', onfinish);\n  if (opts.error !== false) stream.on('error', onerror);\n  stream.on('close', onclose);\n  return function () {\n    stream.removeListener('complete', onfinish);\n    stream.removeListener('abort', onclose);\n    stream.removeListener('request', onrequest);\n    if (stream.req) stream.req.removeListener('finish', onfinish);\n    stream.removeListener('end', onlegacyfinish);\n    stream.removeListener('close', onlegacyfinish);\n    stream.removeListener('finish', onfinish);\n    stream.removeListener('end', onend);\n    stream.removeListener('error', onerror);\n    stream.removeListener('close', onclose);\n  };\n}\nmodule.exports = eos;","module.exports = function () {\n  throw new Error('Readable.from is not available in the browser')\n};\n","// Ported from https://github.com/mafintosh/pump with\n// permission from the author, Mathias Buus (@mafintosh).\n\n'use strict';\n\nvar eos;\nfunction once(callback) {\n  var called = false;\n  return function () {\n    if (called) return;\n    called = true;\n    callback.apply(void 0, arguments);\n  };\n}\nvar _require$codes = require('../../../errors').codes,\n  ERR_MISSING_ARGS = _require$codes.ERR_MISSING_ARGS,\n  ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED;\nfunction noop(err) {\n  // Rethrow the error if it exists to avoid swallowing it\n  if (err) throw err;\n}\nfunction isRequest(stream) {\n  return stream.setHeader && typeof stream.abort === 'function';\n}\nfunction destroyer(stream, reading, writing, callback) {\n  callback = once(callback);\n  var closed = false;\n  stream.on('close', function () {\n    closed = true;\n  });\n  if (eos === undefined) eos = require('./end-of-stream');\n  eos(stream, {\n    readable: reading,\n    writable: writing\n  }, function (err) {\n    if (err) return callback(err);\n    closed = true;\n    callback();\n  });\n  var destroyed = false;\n  return function (err) {\n    if (closed) return;\n    if (destroyed) return;\n    destroyed = true;\n\n    // request.destroy just do .end - .abort is what we want\n    if (isRequest(stream)) return stream.abort();\n    if (typeof stream.destroy === 'function') return stream.destroy();\n    callback(err || new ERR_STREAM_DESTROYED('pipe'));\n  };\n}\nfunction call(fn) {\n  fn();\n}\nfunction pipe(from, to) {\n  return from.pipe(to);\n}\nfunction popCallback(streams) {\n  if (!streams.length) return noop;\n  if (typeof streams[streams.length - 1] !== 'function') return noop;\n  return streams.pop();\n}\nfunction pipeline() {\n  for (var _len = arguments.length, streams = new Array(_len), _key = 0; _key < _len; _key++) {\n    streams[_key] = arguments[_key];\n  }\n  var callback = popCallback(streams);\n  if (Array.isArray(streams[0])) streams = streams[0];\n  if (streams.length < 2) {\n    throw new ERR_MISSING_ARGS('streams');\n  }\n  var error;\n  var destroys = streams.map(function (stream, i) {\n    var reading = i < streams.length - 1;\n    var writing = i > 0;\n    return destroyer(stream, reading, writing, function (err) {\n      if (!error) error = err;\n      if (err) destroys.forEach(call);\n      if (reading) return;\n      destroys.forEach(call);\n      callback(error);\n    });\n  });\n  return streams.reduce(pipe);\n}\nmodule.exports = pipeline;","'use strict';\n\nvar ERR_INVALID_OPT_VALUE = require('../../../errors').codes.ERR_INVALID_OPT_VALUE;\nfunction highWaterMarkFrom(options, isDuplex, duplexKey) {\n  return options.highWaterMark != null ? options.highWaterMark : isDuplex ? options[duplexKey] : null;\n}\nfunction getHighWaterMark(state, options, duplexKey, isDuplex) {\n  var hwm = highWaterMarkFrom(options, isDuplex, duplexKey);\n  if (hwm != null) {\n    if (!(isFinite(hwm) && Math.floor(hwm) === hwm) || hwm < 0) {\n      var name = isDuplex ? duplexKey : 'highWaterMark';\n      throw new ERR_INVALID_OPT_VALUE(name, hwm);\n    }\n    return Math.floor(hwm);\n  }\n\n  // Default value\n  return state.objectMode ? 16 : 16 * 1024;\n}\nmodule.exports = {\n  getHighWaterMark: getHighWaterMark\n};","module.exports = require('events').EventEmitter;\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\n/*</replacement>*/\n\nvar isEncoding = Buffer.isEncoding || function (encoding) {\n  encoding = '' + encoding;\n  switch (encoding && encoding.toLowerCase()) {\n    case 'hex':case 'utf8':case 'utf-8':case 'ascii':case 'binary':case 'base64':case 'ucs2':case 'ucs-2':case 'utf16le':case 'utf-16le':case 'raw':\n      return true;\n    default:\n      return false;\n  }\n};\n\nfunction _normalizeEncoding(enc) {\n  if (!enc) return 'utf8';\n  var retried;\n  while (true) {\n    switch (enc) {\n      case 'utf8':\n      case 'utf-8':\n        return 'utf8';\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return 'utf16le';\n      case 'latin1':\n      case 'binary':\n        return 'latin1';\n      case 'base64':\n      case 'ascii':\n      case 'hex':\n        return enc;\n      default:\n        if (retried) return; // undefined\n        enc = ('' + enc).toLowerCase();\n        retried = true;\n    }\n  }\n};\n\n// Do not cache `Buffer.isEncoding` when checking encoding names as some\n// modules monkey-patch it to support additional encodings\nfunction normalizeEncoding(enc) {\n  var nenc = _normalizeEncoding(enc);\n  if (typeof nenc !== 'string' && (Buffer.isEncoding === isEncoding || !isEncoding(enc))) throw new Error('Unknown encoding: ' + enc);\n  return nenc || enc;\n}\n\n// StringDecoder provides an interface for efficiently splitting a series of\n// buffers into a series of JS strings without breaking apart multi-byte\n// characters.\nexports.StringDecoder = StringDecoder;\nfunction StringDecoder(encoding) {\n  this.encoding = normalizeEncoding(encoding);\n  var nb;\n  switch (this.encoding) {\n    case 'utf16le':\n      this.text = utf16Text;\n      this.end = utf16End;\n      nb = 4;\n      break;\n    case 'utf8':\n      this.fillLast = utf8FillLast;\n      nb = 4;\n      break;\n    case 'base64':\n      this.text = base64Text;\n      this.end = base64End;\n      nb = 3;\n      break;\n    default:\n      this.write = simpleWrite;\n      this.end = simpleEnd;\n      return;\n  }\n  this.lastNeed = 0;\n  this.lastTotal = 0;\n  this.lastChar = Buffer.allocUnsafe(nb);\n}\n\nStringDecoder.prototype.write = function (buf) {\n  if (buf.length === 0) return '';\n  var r;\n  var i;\n  if (this.lastNeed) {\n    r = this.fillLast(buf);\n    if (r === undefined) return '';\n    i = this.lastNeed;\n    this.lastNeed = 0;\n  } else {\n    i = 0;\n  }\n  if (i < buf.length) return r ? r + this.text(buf, i) : this.text(buf, i);\n  return r || '';\n};\n\nStringDecoder.prototype.end = utf8End;\n\n// Returns only complete characters in a Buffer\nStringDecoder.prototype.text = utf8Text;\n\n// Attempts to complete a partial non-UTF-8 character using bytes from a Buffer\nStringDecoder.prototype.fillLast = function (buf) {\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length);\n  this.lastNeed -= buf.length;\n};\n\n// Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a\n// continuation byte. If an invalid byte is detected, -2 is returned.\nfunction utf8CheckByte(byte) {\n  if (byte <= 0x7F) return 0;else if (byte >> 5 === 0x06) return 2;else if (byte >> 4 === 0x0E) return 3;else if (byte >> 3 === 0x1E) return 4;\n  return byte >> 6 === 0x02 ? -1 : -2;\n}\n\n// Checks at most 3 bytes at the end of a Buffer in order to detect an\n// incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)\n// needed to complete the UTF-8 character (if applicable) are returned.\nfunction utf8CheckIncomplete(self, buf, i) {\n  var j = buf.length - 1;\n  if (j < i) return 0;\n  var nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 1;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 2;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) {\n      if (nb === 2) nb = 0;else self.lastNeed = nb - 3;\n    }\n    return nb;\n  }\n  return 0;\n}\n\n// Validates as many continuation bytes for a multi-byte UTF-8 character as\n// needed or are available. If we see a non-continuation byte where we expect\n// one, we \"replace\" the validated continuation bytes we've seen so far with\n// a single UTF-8 replacement character ('\\ufffd'), to match v8's UTF-8 decoding\n// behavior. The continuation byte check is included three times in the case\n// where all of the continuation bytes for a character exist in the same buffer.\n// It is also done this way as a slight performance increase instead of using a\n// loop.\nfunction utf8CheckExtraBytes(self, buf, p) {\n  if ((buf[0] & 0xC0) !== 0x80) {\n    self.lastNeed = 0;\n    return '\\ufffd';\n  }\n  if (self.lastNeed > 1 && buf.length > 1) {\n    if ((buf[1] & 0xC0) !== 0x80) {\n      self.lastNeed = 1;\n      return '\\ufffd';\n    }\n    if (self.lastNeed > 2 && buf.length > 2) {\n      if ((buf[2] & 0xC0) !== 0x80) {\n        self.lastNeed = 2;\n        return '\\ufffd';\n      }\n    }\n  }\n}\n\n// Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.\nfunction utf8FillLast(buf) {\n  var p = this.lastTotal - this.lastNeed;\n  var r = utf8CheckExtraBytes(this, buf, p);\n  if (r !== undefined) return r;\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, p, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, p, 0, buf.length);\n  this.lastNeed -= buf.length;\n}\n\n// Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a\n// partial character, the character's bytes are buffered until the required\n// number of bytes are available.\nfunction utf8Text(buf, i) {\n  var total = utf8CheckIncomplete(this, buf, i);\n  if (!this.lastNeed) return buf.toString('utf8', i);\n  this.lastTotal = total;\n  var end = buf.length - (total - this.lastNeed);\n  buf.copy(this.lastChar, 0, end);\n  return buf.toString('utf8', i, end);\n}\n\n// For UTF-8, a replacement character is added when ending on a partial\n// character.\nfunction utf8End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + '\\ufffd';\n  return r;\n}\n\n// UTF-16LE typically needs two bytes per character, but even if we have an even\n// number of bytes available, we need to check if we end on a leading/high\n// surrogate. In that case, we need to wait for the next two bytes in order to\n// decode the last character properly.\nfunction utf16Text(buf, i) {\n  if ((buf.length - i) % 2 === 0) {\n    var r = buf.toString('utf16le', i);\n    if (r) {\n      var c = r.charCodeAt(r.length - 1);\n      if (c >= 0xD800 && c <= 0xDBFF) {\n        this.lastNeed = 2;\n        this.lastTotal = 4;\n        this.lastChar[0] = buf[buf.length - 2];\n        this.lastChar[1] = buf[buf.length - 1];\n        return r.slice(0, -1);\n      }\n    }\n    return r;\n  }\n  this.lastNeed = 1;\n  this.lastTotal = 2;\n  this.lastChar[0] = buf[buf.length - 1];\n  return buf.toString('utf16le', i, buf.length - 1);\n}\n\n// For UTF-16LE we do not explicitly append special replacement characters if we\n// end on a partial character, we simply let v8 handle that.\nfunction utf16End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) {\n    var end = this.lastTotal - this.lastNeed;\n    return r + this.lastChar.toString('utf16le', 0, end);\n  }\n  return r;\n}\n\nfunction base64Text(buf, i) {\n  var n = (buf.length - i) % 3;\n  if (n === 0) return buf.toString('base64', i);\n  this.lastNeed = 3 - n;\n  this.lastTotal = 3;\n  if (n === 1) {\n    this.lastChar[0] = buf[buf.length - 1];\n  } else {\n    this.lastChar[0] = buf[buf.length - 2];\n    this.lastChar[1] = buf[buf.length - 1];\n  }\n  return buf.toString('base64', i, buf.length - n);\n}\n\nfunction base64End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + this.lastChar.toString('base64', 0, 3 - this.lastNeed);\n  return r;\n}\n\n// Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)\nfunction simpleWrite(buf) {\n  return buf.toString(this.encoding);\n}\n\nfunction simpleEnd(buf) {\n  return buf && buf.length ? this.write(buf) : '';\n}","/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n","/////////////////////////////////////////////////////////////////////////////////\n/* UAParser.js v1.0.38\n   Copyright © 2012-2021 Faisal Salman <f@faisalman.com>\n   MIT License *//*\n   Detect Browser, Engine, OS, CPU, and Device type/model from User-Agent data.\n   Supports browser & node.js environment. \n   Demo   : https://faisalman.github.io/ua-parser-js\n   Source : https://github.com/faisalman/ua-parser-js */\n/////////////////////////////////////////////////////////////////////////////////\n\n(function (window, undefined) {\n\n    'use strict';\n\n    //////////////\n    // Constants\n    /////////////\n\n\n    var LIBVERSION  = '1.0.38',\n        EMPTY       = '',\n        UNKNOWN     = '?',\n        FUNC_TYPE   = 'function',\n        UNDEF_TYPE  = 'undefined',\n        OBJ_TYPE    = 'object',\n        STR_TYPE    = 'string',\n        MAJOR       = 'major',\n        MODEL       = 'model',\n        NAME        = 'name',\n        TYPE        = 'type',\n        VENDOR      = 'vendor',\n        VERSION     = 'version',\n        ARCHITECTURE= 'architecture',\n        CONSOLE     = 'console',\n        MOBILE      = 'mobile',\n        TABLET      = 'tablet',\n        SMARTTV     = 'smarttv',\n        WEARABLE    = 'wearable',\n        EMBEDDED    = 'embedded',\n        UA_MAX_LENGTH = 500;\n\n    var AMAZON  = 'Amazon',\n        APPLE   = 'Apple',\n        ASUS    = 'ASUS',\n        BLACKBERRY = 'BlackBerry',\n        BROWSER = 'Browser',\n        CHROME  = 'Chrome',\n        EDGE    = 'Edge',\n        FIREFOX = 'Firefox',\n        GOOGLE  = 'Google',\n        HUAWEI  = 'Huawei',\n        LG      = 'LG',\n        MICROSOFT = 'Microsoft',\n        MOTOROLA  = 'Motorola',\n        OPERA   = 'Opera',\n        SAMSUNG = 'Samsung',\n        SHARP   = 'Sharp',\n        SONY    = 'Sony',\n        XIAOMI  = 'Xiaomi',\n        ZEBRA   = 'Zebra',\n        FACEBOOK    = 'Facebook',\n        CHROMIUM_OS = 'Chromium OS',\n        MAC_OS  = 'Mac OS';\n\n    ///////////\n    // Helper\n    //////////\n\n    var extend = function (regexes, extensions) {\n            var mergedRegexes = {};\n            for (var i in regexes) {\n                if (extensions[i] && extensions[i].length % 2 === 0) {\n                    mergedRegexes[i] = extensions[i].concat(regexes[i]);\n                } else {\n                    mergedRegexes[i] = regexes[i];\n                }\n            }\n            return mergedRegexes;\n        },\n        enumerize = function (arr) {\n            var enums = {};\n            for (var i=0; i<arr.length; i++) {\n                enums[arr[i].toUpperCase()] = arr[i];\n            }\n            return enums;\n        },\n        has = function (str1, str2) {\n            return typeof str1 === STR_TYPE ? lowerize(str2).indexOf(lowerize(str1)) !== -1 : false;\n        },\n        lowerize = function (str) {\n            return str.toLowerCase();\n        },\n        majorize = function (version) {\n            return typeof(version) === STR_TYPE ? version.replace(/[^\\d\\.]/g, EMPTY).split('.')[0] : undefined;\n        },\n        trim = function (str, len) {\n            if (typeof(str) === STR_TYPE) {\n                str = str.replace(/^\\s\\s*/, EMPTY);\n                return typeof(len) === UNDEF_TYPE ? str : str.substring(0, UA_MAX_LENGTH);\n            }\n    };\n\n    ///////////////\n    // Map helper\n    //////////////\n\n    var rgxMapper = function (ua, arrays) {\n\n            var i = 0, j, k, p, q, matches, match;\n\n            // loop through all regexes maps\n            while (i < arrays.length && !matches) {\n\n                var regex = arrays[i],       // even sequence (0,2,4,..)\n                    props = arrays[i + 1];   // odd sequence (1,3,5,..)\n                j = k = 0;\n\n                // try matching uastring with regexes\n                while (j < regex.length && !matches) {\n\n                    if (!regex[j]) { break; }\n                    matches = regex[j++].exec(ua);\n\n                    if (!!matches) {\n                        for (p = 0; p < props.length; p++) {\n                            match = matches[++k];\n                            q = props[p];\n                            // check if given property is actually array\n                            if (typeof q === OBJ_TYPE && q.length > 0) {\n                                if (q.length === 2) {\n                                    if (typeof q[1] == FUNC_TYPE) {\n                                        // assign modified match\n                                        this[q[0]] = q[1].call(this, match);\n                                    } else {\n                                        // assign given value, ignore regex match\n                                        this[q[0]] = q[1];\n                                    }\n                                } else if (q.length === 3) {\n                                    // check whether function or regex\n                                    if (typeof q[1] === FUNC_TYPE && !(q[1].exec && q[1].test)) {\n                                        // call function (usually string mapper)\n                                        this[q[0]] = match ? q[1].call(this, match, q[2]) : undefined;\n                                    } else {\n                                        // sanitize match using given regex\n                                        this[q[0]] = match ? match.replace(q[1], q[2]) : undefined;\n                                    }\n                                } else if (q.length === 4) {\n                                        this[q[0]] = match ? q[3].call(this, match.replace(q[1], q[2])) : undefined;\n                                }\n                            } else {\n                                this[q] = match ? match : undefined;\n                            }\n                        }\n                    }\n                }\n                i += 2;\n            }\n        },\n\n        strMapper = function (str, map) {\n\n            for (var i in map) {\n                // check if current value is array\n                if (typeof map[i] === OBJ_TYPE && map[i].length > 0) {\n                    for (var j = 0; j < map[i].length; j++) {\n                        if (has(map[i][j], str)) {\n                            return (i === UNKNOWN) ? undefined : i;\n                        }\n                    }\n                } else if (has(map[i], str)) {\n                    return (i === UNKNOWN) ? undefined : i;\n                }\n            }\n            return str;\n    };\n\n    ///////////////\n    // String map\n    //////////////\n\n    // Safari < 3.0\n    var oldSafariMap = {\n            '1.0'   : '/8',\n            '1.2'   : '/1',\n            '1.3'   : '/3',\n            '2.0'   : '/412',\n            '2.0.2' : '/416',\n            '2.0.3' : '/417',\n            '2.0.4' : '/419',\n            '?'     : '/'\n        },\n        windowsVersionMap = {\n            'ME'        : '4.90',\n            'NT 3.11'   : 'NT3.51',\n            'NT 4.0'    : 'NT4.0',\n            '2000'      : 'NT 5.0',\n            'XP'        : ['NT 5.1', 'NT 5.2'],\n            'Vista'     : 'NT 6.0',\n            '7'         : 'NT 6.1',\n            '8'         : 'NT 6.2',\n            '8.1'       : 'NT 6.3',\n            '10'        : ['NT 6.4', 'NT 10.0'],\n            'RT'        : 'ARM'\n    };\n\n    //////////////\n    // Regex map\n    /////////////\n\n    var regexes = {\n\n        browser : [[\n\n            /\\b(?:crmo|crios)\\/([\\w\\.]+)/i                                      // Chrome for Android/iOS\n            ], [VERSION, [NAME, 'Chrome']], [\n            /edg(?:e|ios|a)?\\/([\\w\\.]+)/i                                       // Microsoft Edge\n            ], [VERSION, [NAME, 'Edge']], [\n\n            // Presto based\n            /(opera mini)\\/([-\\w\\.]+)/i,                                        // Opera Mini\n            /(opera [mobiletab]{3,6})\\b.+version\\/([-\\w\\.]+)/i,                 // Opera Mobi/Tablet\n            /(opera)(?:.+version\\/|[\\/ ]+)([\\w\\.]+)/i                           // Opera\n            ], [NAME, VERSION], [\n            /opios[\\/ ]+([\\w\\.]+)/i                                             // Opera mini on iphone >= 8.0\n            ], [VERSION, [NAME, OPERA+' Mini']], [\n            /\\bop(?:rg)?x\\/([\\w\\.]+)/i                                          // Opera GX\n            ], [VERSION, [NAME, OPERA+' GX']], [\n            /\\bopr\\/([\\w\\.]+)/i                                                 // Opera Webkit\n            ], [VERSION, [NAME, OPERA]], [\n\n            // Mixed\n            /\\bb[ai]*d(?:uhd|[ub]*[aekoprswx]{5,6})[\\/ ]?([\\w\\.]+)/i            // Baidu\n            ], [VERSION, [NAME, 'Baidu']], [\n            /(kindle)\\/([\\w\\.]+)/i,                                             // Kindle\n            /(lunascape|maxthon|netfront|jasmine|blazer)[\\/ ]?([\\w\\.]*)/i,      // Lunascape/Maxthon/Netfront/Jasmine/Blazer\n            // Trident based\n            /(avant|iemobile|slim)\\s?(?:browser)?[\\/ ]?([\\w\\.]*)/i,             // Avant/IEMobile/SlimBrowser\n            /(?:ms|\\()(ie) ([\\w\\.]+)/i,                                         // Internet Explorer\n\n            // Webkit/KHTML based                                               // Flock/RockMelt/Midori/Epiphany/Silk/Skyfire/Bolt/Iron/Iridium/PhantomJS/Bowser/QupZilla/Falkon\n            /(flock|rockmelt|midori|epiphany|silk|skyfire|bolt|iron|vivaldi|iridium|phantomjs|bowser|quark|qupzilla|falkon|rekonq|puffin|brave|whale(?!.+naver)|qqbrowserlite|qq|duckduckgo)\\/([-\\w\\.]+)/i,\n                                                                                // Rekonq/Puffin/Brave/Whale/QQBrowserLite/QQ, aka ShouQ\n            /(heytap|ovi)browser\\/([\\d\\.]+)/i,                                  // Heytap/Ovi\n            /(weibo)__([\\d\\.]+)/i                                               // Weibo\n            ], [NAME, VERSION], [\n            /\\bddg\\/([\\w\\.]+)/i                                                 // DuckDuckGo\n            ], [VERSION, [NAME, 'DuckDuckGo']], [\n            /(?:\\buc? ?browser|(?:juc.+)ucweb)[\\/ ]?([\\w\\.]+)/i                 // UCBrowser\n            ], [VERSION, [NAME, 'UC'+BROWSER]], [\n            /microm.+\\bqbcore\\/([\\w\\.]+)/i,                                     // WeChat Desktop for Windows Built-in Browser\n            /\\bqbcore\\/([\\w\\.]+).+microm/i,\n            /micromessenger\\/([\\w\\.]+)/i                                        // WeChat\n            ], [VERSION, [NAME, 'WeChat']], [\n            /konqueror\\/([\\w\\.]+)/i                                             // Konqueror\n            ], [VERSION, [NAME, 'Konqueror']], [\n            /trident.+rv[: ]([\\w\\.]{1,9})\\b.+like gecko/i                       // IE11\n            ], [VERSION, [NAME, 'IE']], [\n            /ya(?:search)?browser\\/([\\w\\.]+)/i                                  // Yandex\n            ], [VERSION, [NAME, 'Yandex']], [\n            /slbrowser\\/([\\w\\.]+)/i                                             // Smart Lenovo Browser\n            ], [VERSION, [NAME, 'Smart Lenovo '+BROWSER]], [\n            /(avast|avg)\\/([\\w\\.]+)/i                                           // Avast/AVG Secure Browser\n            ], [[NAME, /(.+)/, '$1 Secure '+BROWSER], VERSION], [\n            /\\bfocus\\/([\\w\\.]+)/i                                               // Firefox Focus\n            ], [VERSION, [NAME, FIREFOX+' Focus']], [\n            /\\bopt\\/([\\w\\.]+)/i                                                 // Opera Touch\n            ], [VERSION, [NAME, OPERA+' Touch']], [\n            /coc_coc\\w+\\/([\\w\\.]+)/i                                            // Coc Coc Browser\n            ], [VERSION, [NAME, 'Coc Coc']], [\n            /dolfin\\/([\\w\\.]+)/i                                                // Dolphin\n            ], [VERSION, [NAME, 'Dolphin']], [\n            /coast\\/([\\w\\.]+)/i                                                 // Opera Coast\n            ], [VERSION, [NAME, OPERA+' Coast']], [\n            /miuibrowser\\/([\\w\\.]+)/i                                           // MIUI Browser\n            ], [VERSION, [NAME, 'MIUI '+BROWSER]], [\n            /fxios\\/([-\\w\\.]+)/i                                                // Firefox for iOS\n            ], [VERSION, [NAME, FIREFOX]], [\n            /\\bqihu|(qi?ho?o?|360)browser/i                                     // 360\n            ], [[NAME, '360 ' + BROWSER]], [\n            /(oculus|sailfish|huawei|vivo)browser\\/([\\w\\.]+)/i\n            ], [[NAME, /(.+)/, '$1 ' + BROWSER], VERSION], [                    // Oculus/Sailfish/HuaweiBrowser/VivoBrowser\n            /samsungbrowser\\/([\\w\\.]+)/i                                        // Samsung Internet\n            ], [VERSION, [NAME, SAMSUNG + ' Internet']], [\n            /(comodo_dragon)\\/([\\w\\.]+)/i                                       // Comodo Dragon\n            ], [[NAME, /_/g, ' '], VERSION], [\n            /metasr[\\/ ]?([\\d\\.]+)/i                                            // Sogou Explorer\n            ], [VERSION, [NAME, 'Sogou Explorer']], [\n            /(sogou)mo\\w+\\/([\\d\\.]+)/i                                          // Sogou Mobile\n            ], [[NAME, 'Sogou Mobile'], VERSION], [\n            /(electron)\\/([\\w\\.]+) safari/i,                                    // Electron-based App\n            /(tesla)(?: qtcarbrowser|\\/(20\\d\\d\\.[-\\w\\.]+))/i,                   // Tesla\n            /m?(qqbrowser|2345Explorer)[\\/ ]?([\\w\\.]+)/i                        // QQBrowser/2345 Browser\n            ], [NAME, VERSION], [\n            /(lbbrowser)/i,                                                     // LieBao Browser\n            /\\[(linkedin)app\\]/i                                                // LinkedIn App for iOS & Android\n            ], [NAME], [\n\n            // WebView\n            /((?:fban\\/fbios|fb_iab\\/fb4a)(?!.+fbav)|;fbav\\/([\\w\\.]+);)/i       // Facebook App for iOS & Android\n            ], [[NAME, FACEBOOK], VERSION], [\n            /(Klarna)\\/([\\w\\.]+)/i,                                             // Klarna Shopping Browser for iOS & Android\n            /(kakao(?:talk|story))[\\/ ]([\\w\\.]+)/i,                             // Kakao App\n            /(naver)\\(.*?(\\d+\\.[\\w\\.]+).*\\)/i,                                  // Naver InApp\n            /safari (line)\\/([\\w\\.]+)/i,                                        // Line App for iOS\n            /\\b(line)\\/([\\w\\.]+)\\/iab/i,                                        // Line App for Android\n            /(alipay)client\\/([\\w\\.]+)/i,                                       // Alipay\n            /(twitter)(?:and| f.+e\\/([\\w\\.]+))/i,                               // Twitter\n            /(chromium|instagram|snapchat)[\\/ ]([-\\w\\.]+)/i                     // Chromium/Instagram/Snapchat\n            ], [NAME, VERSION], [\n            /\\bgsa\\/([\\w\\.]+) .*safari\\//i                                      // Google Search Appliance on iOS\n            ], [VERSION, [NAME, 'GSA']], [\n            /musical_ly(?:.+app_?version\\/|_)([\\w\\.]+)/i                        // TikTok\n            ], [VERSION, [NAME, 'TikTok']], [\n\n            /headlesschrome(?:\\/([\\w\\.]+)| )/i                                  // Chrome Headless\n            ], [VERSION, [NAME, CHROME+' Headless']], [\n\n            / wv\\).+(chrome)\\/([\\w\\.]+)/i                                       // Chrome WebView\n            ], [[NAME, CHROME+' WebView'], VERSION], [\n\n            /droid.+ version\\/([\\w\\.]+)\\b.+(?:mobile safari|safari)/i           // Android Browser\n            ], [VERSION, [NAME, 'Android '+BROWSER]], [\n\n            /(chrome|omniweb|arora|[tizenoka]{5} ?browser)\\/v?([\\w\\.]+)/i       // Chrome/OmniWeb/Arora/Tizen/Nokia\n            ], [NAME, VERSION], [\n\n            /version\\/([\\w\\.\\,]+) .*mobile\\/\\w+ (safari)/i                      // Mobile Safari\n            ], [VERSION, [NAME, 'Mobile Safari']], [\n            /version\\/([\\w(\\.|\\,)]+) .*(mobile ?safari|safari)/i                // Safari & Safari Mobile\n            ], [VERSION, NAME], [\n            /webkit.+?(mobile ?safari|safari)(\\/[\\w\\.]+)/i                      // Safari < 3.0\n            ], [NAME, [VERSION, strMapper, oldSafariMap]], [\n\n            /(webkit|khtml)\\/([\\w\\.]+)/i\n            ], [NAME, VERSION], [\n\n            // Gecko based\n            /(navigator|netscape\\d?)\\/([-\\w\\.]+)/i                              // Netscape\n            ], [[NAME, 'Netscape'], VERSION], [\n            /mobile vr; rv:([\\w\\.]+)\\).+firefox/i                               // Firefox Reality\n            ], [VERSION, [NAME, FIREFOX+' Reality']], [\n            /ekiohf.+(flow)\\/([\\w\\.]+)/i,                                       // Flow\n            /(swiftfox)/i,                                                      // Swiftfox\n            /(icedragon|iceweasel|camino|chimera|fennec|maemo browser|minimo|conkeror|klar)[\\/ ]?([\\w\\.\\+]+)/i,\n                                                                                // IceDragon/Iceweasel/Camino/Chimera/Fennec/Maemo/Minimo/Conkeror/Klar\n            /(seamonkey|k-meleon|icecat|iceape|firebird|phoenix|palemoon|basilisk|waterfox)\\/([-\\w\\.]+)$/i,\n                                                                                // Firefox/SeaMonkey/K-Meleon/IceCat/IceApe/Firebird/Phoenix\n            /(firefox)\\/([\\w\\.]+)/i,                                            // Other Firefox-based\n            /(mozilla)\\/([\\w\\.]+) .+rv\\:.+gecko\\/\\d+/i,                         // Mozilla\n\n            // Other\n            /(polaris|lynx|dillo|icab|doris|amaya|w3m|netsurf|sleipnir|obigo|mosaic|(?:go|ice|up)[\\. ]?browser)[-\\/ ]?v?([\\w\\.]+)/i,\n                                                                                // Polaris/Lynx/Dillo/iCab/Doris/Amaya/w3m/NetSurf/Sleipnir/Obigo/Mosaic/Go/ICE/UP.Browser\n            /(links) \\(([\\w\\.]+)/i,                                             // Links\n            /panasonic;(viera)/i                                                // Panasonic Viera\n            ], [NAME, VERSION], [\n            \n            /(cobalt)\\/([\\w\\.]+)/i                                              // Cobalt\n            ], [NAME, [VERSION, /master.|lts./, \"\"]]\n        ],\n\n        cpu : [[\n\n            /(?:(amd|x(?:(?:86|64)[-_])?|wow|win)64)[;\\)]/i                     // AMD64 (x64)\n            ], [[ARCHITECTURE, 'amd64']], [\n\n            /(ia32(?=;))/i                                                      // IA32 (quicktime)\n            ], [[ARCHITECTURE, lowerize]], [\n\n            /((?:i[346]|x)86)[;\\)]/i                                            // IA32 (x86)\n            ], [[ARCHITECTURE, 'ia32']], [\n\n            /\\b(aarch64|arm(v?8e?l?|_?64))\\b/i                                 // ARM64\n            ], [[ARCHITECTURE, 'arm64']], [\n\n            /\\b(arm(?:v[67])?ht?n?[fl]p?)\\b/i                                   // ARMHF\n            ], [[ARCHITECTURE, 'armhf']], [\n\n            // PocketPC mistakenly identified as PowerPC\n            /windows (ce|mobile); ppc;/i\n            ], [[ARCHITECTURE, 'arm']], [\n\n            /((?:ppc|powerpc)(?:64)?)(?: mac|;|\\))/i                            // PowerPC\n            ], [[ARCHITECTURE, /ower/, EMPTY, lowerize]], [\n\n            /(sun4\\w)[;\\)]/i                                                    // SPARC\n            ], [[ARCHITECTURE, 'sparc']], [\n\n            /((?:avr32|ia64(?=;))|68k(?=\\))|\\barm(?=v(?:[1-7]|[5-7]1)l?|;|eabi)|(?=atmel )avr|(?:irix|mips|sparc)(?:64)?\\b|pa-risc)/i\n                                                                                // IA64, 68K, ARM/64, AVR/32, IRIX/64, MIPS/64, SPARC/64, PA-RISC\n            ], [[ARCHITECTURE, lowerize]]\n        ],\n\n        device : [[\n\n            //////////////////////////\n            // MOBILES & TABLETS\n            /////////////////////////\n\n            // Samsung\n            /\\b(sch-i[89]0\\d|shw-m380s|sm-[ptx]\\w{2,4}|gt-[pn]\\d{2,4}|sgh-t8[56]9|nexus 10)/i\n            ], [MODEL, [VENDOR, SAMSUNG], [TYPE, TABLET]], [\n            /\\b((?:s[cgp]h|gt|sm)-\\w+|sc[g-]?[\\d]+a?|galaxy nexus)/i,\n            /samsung[- ]([-\\w]+)/i,\n            /sec-(sgh\\w+)/i\n            ], [MODEL, [VENDOR, SAMSUNG], [TYPE, MOBILE]], [\n\n            // Apple\n            /(?:\\/|\\()(ip(?:hone|od)[\\w, ]*)(?:\\/|;)/i                          // iPod/iPhone\n            ], [MODEL, [VENDOR, APPLE], [TYPE, MOBILE]], [\n            /\\((ipad);[-\\w\\),; ]+apple/i,                                       // iPad\n            /applecoremedia\\/[\\w\\.]+ \\((ipad)/i,\n            /\\b(ipad)\\d\\d?,\\d\\d?[;\\]].+ios/i\n            ], [MODEL, [VENDOR, APPLE], [TYPE, TABLET]], [\n            /(macintosh);/i\n            ], [MODEL, [VENDOR, APPLE]], [\n\n            // Sharp\n            /\\b(sh-?[altvz]?\\d\\d[a-ekm]?)/i\n            ], [MODEL, [VENDOR, SHARP], [TYPE, MOBILE]], [\n\n            // Huawei\n            /\\b((?:ag[rs][23]?|bah2?|sht?|btv)-a?[lw]\\d{2})\\b(?!.+d\\/s)/i\n            ], [MODEL, [VENDOR, HUAWEI], [TYPE, TABLET]], [\n            /(?:huawei|honor)([-\\w ]+)[;\\)]/i,\n            /\\b(nexus 6p|\\w{2,4}e?-[atu]?[ln][\\dx][012359c][adn]?)\\b(?!.+d\\/s)/i\n            ], [MODEL, [VENDOR, HUAWEI], [TYPE, MOBILE]], [\n\n            // Xiaomi\n            /\\b(poco[\\w ]+|m2\\d{3}j\\d\\d[a-z]{2})(?: bui|\\))/i,                  // Xiaomi POCO\n            /\\b; (\\w+) build\\/hm\\1/i,                                           // Xiaomi Hongmi 'numeric' models\n            /\\b(hm[-_ ]?note?[_ ]?(?:\\d\\w)?) bui/i,                             // Xiaomi Hongmi\n            /\\b(redmi[\\-_ ]?(?:note|k)?[\\w_ ]+)(?: bui|\\))/i,                   // Xiaomi Redmi\n            /oid[^\\)]+; (m?[12][0-389][01]\\w{3,6}[c-y])( bui|; wv|\\))/i,        // Xiaomi Redmi 'numeric' models\n            /\\b(mi[-_ ]?(?:a\\d|one|one[_ ]plus|note lte|max|cc)?[_ ]?(?:\\d?\\w?)[_ ]?(?:plus|se|lite)?)(?: bui|\\))/i // Xiaomi Mi\n            ], [[MODEL, /_/g, ' '], [VENDOR, XIAOMI], [TYPE, MOBILE]], [\n            /oid[^\\)]+; (2\\d{4}(283|rpbf)[cgl])( bui|\\))/i,                     // Redmi Pad\n            /\\b(mi[-_ ]?(?:pad)(?:[\\w_ ]+))(?: bui|\\))/i                        // Mi Pad tablets\n            ],[[MODEL, /_/g, ' '], [VENDOR, XIAOMI], [TYPE, TABLET]], [\n\n            // OPPO\n            /; (\\w+) bui.+ oppo/i,\n            /\\b(cph[12]\\d{3}|p(?:af|c[al]|d\\w|e[ar])[mt]\\d0|x9007|a101op)\\b/i\n            ], [MODEL, [VENDOR, 'OPPO'], [TYPE, MOBILE]], [\n            /\\b(opd2\\d{3}a?) bui/i\n            ], [MODEL, [VENDOR, 'OPPO'], [TYPE, TABLET]], [\n\n            // Vivo\n            /vivo (\\w+)(?: bui|\\))/i,\n            /\\b(v[12]\\d{3}\\w?[at])(?: bui|;)/i\n            ], [MODEL, [VENDOR, 'Vivo'], [TYPE, MOBILE]], [\n\n            // Realme\n            /\\b(rmx[1-3]\\d{3})(?: bui|;|\\))/i\n            ], [MODEL, [VENDOR, 'Realme'], [TYPE, MOBILE]], [\n\n            // Motorola\n            /\\b(milestone|droid(?:[2-4x]| (?:bionic|x2|pro|razr))?:?( 4g)?)\\b[\\w ]+build\\//i,\n            /\\bmot(?:orola)?[- ](\\w*)/i,\n            /((?:moto[\\w\\(\\) ]+|xt\\d{3,4}|nexus 6)(?= bui|\\)))/i\n            ], [MODEL, [VENDOR, MOTOROLA], [TYPE, MOBILE]], [\n            /\\b(mz60\\d|xoom[2 ]{0,2}) build\\//i\n            ], [MODEL, [VENDOR, MOTOROLA], [TYPE, TABLET]], [\n\n            // LG\n            /((?=lg)?[vl]k\\-?\\d{3}) bui| 3\\.[-\\w; ]{10}lg?-([06cv9]{3,4})/i\n            ], [MODEL, [VENDOR, LG], [TYPE, TABLET]], [\n            /(lm(?:-?f100[nv]?|-[\\w\\.]+)(?= bui|\\))|nexus [45])/i,\n            /\\blg[-e;\\/ ]+((?!browser|netcast|android tv)\\w+)/i,\n            /\\blg-?([\\d\\w]+) bui/i\n            ], [MODEL, [VENDOR, LG], [TYPE, MOBILE]], [\n\n            // Lenovo\n            /(ideatab[-\\w ]+)/i,\n            /lenovo ?(s[56]000[-\\w]+|tab(?:[\\w ]+)|yt[-\\d\\w]{6}|tb[-\\d\\w]{6})/i\n            ], [MODEL, [VENDOR, 'Lenovo'], [TYPE, TABLET]], [\n\n            // Nokia\n            /(?:maemo|nokia).*(n900|lumia \\d+)/i,\n            /nokia[-_ ]?([-\\w\\.]*)/i\n            ], [[MODEL, /_/g, ' '], [VENDOR, 'Nokia'], [TYPE, MOBILE]], [\n\n            // Google\n            /(pixel c)\\b/i                                                      // Google Pixel C\n            ], [MODEL, [VENDOR, GOOGLE], [TYPE, TABLET]], [\n            /droid.+; (pixel[\\daxl ]{0,6})(?: bui|\\))/i                         // Google Pixel\n            ], [MODEL, [VENDOR, GOOGLE], [TYPE, MOBILE]], [\n\n            // Sony\n            /droid.+ (a?\\d[0-2]{2}so|[c-g]\\d{4}|so[-gl]\\w+|xq-a\\w[4-7][12])(?= bui|\\).+chrome\\/(?![1-6]{0,1}\\d\\.))/i\n            ], [MODEL, [VENDOR, SONY], [TYPE, MOBILE]], [\n            /sony tablet [ps]/i,\n            /\\b(?:sony)?sgp\\w+(?: bui|\\))/i\n            ], [[MODEL, 'Xperia Tablet'], [VENDOR, SONY], [TYPE, TABLET]], [\n\n            // OnePlus\n            / (kb2005|in20[12]5|be20[12][59])\\b/i,\n            /(?:one)?(?:plus)? (a\\d0\\d\\d)(?: b|\\))/i\n            ], [MODEL, [VENDOR, 'OnePlus'], [TYPE, MOBILE]], [\n\n            // Amazon\n            /(alexa)webm/i,\n            /(kf[a-z]{2}wi|aeo[c-r]{2})( bui|\\))/i,                             // Kindle Fire without Silk / Echo Show\n            /(kf[a-z]+)( bui|\\)).+silk\\//i                                      // Kindle Fire HD\n            ], [MODEL, [VENDOR, AMAZON], [TYPE, TABLET]], [\n            /((?:sd|kf)[0349hijorstuw]+)( bui|\\)).+silk\\//i                     // Fire Phone\n            ], [[MODEL, /(.+)/g, 'Fire Phone $1'], [VENDOR, AMAZON], [TYPE, MOBILE]], [\n\n            // BlackBerry\n            /(playbook);[-\\w\\),; ]+(rim)/i                                      // BlackBerry PlayBook\n            ], [MODEL, VENDOR, [TYPE, TABLET]], [\n            /\\b((?:bb[a-f]|st[hv])100-\\d)/i,\n            /\\(bb10; (\\w+)/i                                                    // BlackBerry 10\n            ], [MODEL, [VENDOR, BLACKBERRY], [TYPE, MOBILE]], [\n\n            // Asus\n            /(?:\\b|asus_)(transfo[prime ]{4,10} \\w+|eeepc|slider \\w+|nexus 7|padfone|p00[cj])/i\n            ], [MODEL, [VENDOR, ASUS], [TYPE, TABLET]], [\n            / (z[bes]6[027][012][km][ls]|zenfone \\d\\w?)\\b/i\n            ], [MODEL, [VENDOR, ASUS], [TYPE, MOBILE]], [\n\n            // HTC\n            /(nexus 9)/i                                                        // HTC Nexus 9\n            ], [MODEL, [VENDOR, 'HTC'], [TYPE, TABLET]], [\n            /(htc)[-;_ ]{1,2}([\\w ]+(?=\\)| bui)|\\w+)/i,                         // HTC\n\n            // ZTE\n            /(zte)[- ]([\\w ]+?)(?: bui|\\/|\\))/i,\n            /(alcatel|geeksphone|nexian|panasonic(?!(?:;|\\.))|sony(?!-bra))[-_ ]?([-\\w]*)/i         // Alcatel/GeeksPhone/Nexian/Panasonic/Sony\n            ], [VENDOR, [MODEL, /_/g, ' '], [TYPE, MOBILE]], [\n\n            // Acer\n            /droid.+; ([ab][1-7]-?[0178a]\\d\\d?)/i\n            ], [MODEL, [VENDOR, 'Acer'], [TYPE, TABLET]], [\n\n            // Meizu\n            /droid.+; (m[1-5] note) bui/i,\n            /\\bmz-([-\\w]{2,})/i\n            ], [MODEL, [VENDOR, 'Meizu'], [TYPE, MOBILE]], [\n                \n            // Ulefone\n            /; ((?:power )?armor(?:[\\w ]{0,8}))(?: bui|\\))/i\n            ], [MODEL, [VENDOR, 'Ulefone'], [TYPE, MOBILE]], [\n\n            // MIXED\n            /(blackberry|benq|palm(?=\\-)|sonyericsson|acer|asus|dell|meizu|motorola|polytron|infinix|tecno)[-_ ]?([-\\w]*)/i,\n                                                                                // BlackBerry/BenQ/Palm/Sony-Ericsson/Acer/Asus/Dell/Meizu/Motorola/Polytron\n            /(hp) ([\\w ]+\\w)/i,                                                 // HP iPAQ\n            /(asus)-?(\\w+)/i,                                                   // Asus\n            /(microsoft); (lumia[\\w ]+)/i,                                      // Microsoft Lumia\n            /(lenovo)[-_ ]?([-\\w]+)/i,                                          // Lenovo\n            /(jolla)/i,                                                         // Jolla\n            /(oppo) ?([\\w ]+) bui/i                                             // OPPO\n            ], [VENDOR, MODEL, [TYPE, MOBILE]], [\n\n            /(kobo)\\s(ereader|touch)/i,                                         // Kobo\n            /(archos) (gamepad2?)/i,                                            // Archos\n            /(hp).+(touchpad(?!.+tablet)|tablet)/i,                             // HP TouchPad\n            /(kindle)\\/([\\w\\.]+)/i,                                             // Kindle\n            /(nook)[\\w ]+build\\/(\\w+)/i,                                        // Nook\n            /(dell) (strea[kpr\\d ]*[\\dko])/i,                                   // Dell Streak\n            /(le[- ]+pan)[- ]+(\\w{1,9}) bui/i,                                  // Le Pan Tablets\n            /(trinity)[- ]*(t\\d{3}) bui/i,                                      // Trinity Tablets\n            /(gigaset)[- ]+(q\\w{1,9}) bui/i,                                    // Gigaset Tablets\n            /(vodafone) ([\\w ]+)(?:\\)| bui)/i                                   // Vodafone\n            ], [VENDOR, MODEL, [TYPE, TABLET]], [\n\n            /(surface duo)/i                                                    // Surface Duo\n            ], [MODEL, [VENDOR, MICROSOFT], [TYPE, TABLET]], [\n            /droid [\\d\\.]+; (fp\\du?)(?: b|\\))/i                                 // Fairphone\n            ], [MODEL, [VENDOR, 'Fairphone'], [TYPE, MOBILE]], [\n            /(u304aa)/i                                                         // AT&T\n            ], [MODEL, [VENDOR, 'AT&T'], [TYPE, MOBILE]], [\n            /\\bsie-(\\w*)/i                                                      // Siemens\n            ], [MODEL, [VENDOR, 'Siemens'], [TYPE, MOBILE]], [\n            /\\b(rct\\w+) b/i                                                     // RCA Tablets\n            ], [MODEL, [VENDOR, 'RCA'], [TYPE, TABLET]], [\n            /\\b(venue[\\d ]{2,7}) b/i                                            // Dell Venue Tablets\n            ], [MODEL, [VENDOR, 'Dell'], [TYPE, TABLET]], [\n            /\\b(q(?:mv|ta)\\w+) b/i                                              // Verizon Tablet\n            ], [MODEL, [VENDOR, 'Verizon'], [TYPE, TABLET]], [\n            /\\b(?:barnes[& ]+noble |bn[rt])([\\w\\+ ]*) b/i                       // Barnes & Noble Tablet\n            ], [MODEL, [VENDOR, 'Barnes & Noble'], [TYPE, TABLET]], [\n            /\\b(tm\\d{3}\\w+) b/i\n            ], [MODEL, [VENDOR, 'NuVision'], [TYPE, TABLET]], [\n            /\\b(k88) b/i                                                        // ZTE K Series Tablet\n            ], [MODEL, [VENDOR, 'ZTE'], [TYPE, TABLET]], [\n            /\\b(nx\\d{3}j) b/i                                                   // ZTE Nubia\n            ], [MODEL, [VENDOR, 'ZTE'], [TYPE, MOBILE]], [\n            /\\b(gen\\d{3}) b.+49h/i                                              // Swiss GEN Mobile\n            ], [MODEL, [VENDOR, 'Swiss'], [TYPE, MOBILE]], [\n            /\\b(zur\\d{3}) b/i                                                   // Swiss ZUR Tablet\n            ], [MODEL, [VENDOR, 'Swiss'], [TYPE, TABLET]], [\n            /\\b((zeki)?tb.*\\b) b/i                                              // Zeki Tablets\n            ], [MODEL, [VENDOR, 'Zeki'], [TYPE, TABLET]], [\n            /\\b([yr]\\d{2}) b/i,\n            /\\b(dragon[- ]+touch |dt)(\\w{5}) b/i                                // Dragon Touch Tablet\n            ], [[VENDOR, 'Dragon Touch'], MODEL, [TYPE, TABLET]], [\n            /\\b(ns-?\\w{0,9}) b/i                                                // Insignia Tablets\n            ], [MODEL, [VENDOR, 'Insignia'], [TYPE, TABLET]], [\n            /\\b((nxa|next)-?\\w{0,9}) b/i                                        // NextBook Tablets\n            ], [MODEL, [VENDOR, 'NextBook'], [TYPE, TABLET]], [\n            /\\b(xtreme\\_)?(v(1[045]|2[015]|[3469]0|7[05])) b/i                  // Voice Xtreme Phones\n            ], [[VENDOR, 'Voice'], MODEL, [TYPE, MOBILE]], [\n            /\\b(lvtel\\-)?(v1[12]) b/i                                           // LvTel Phones\n            ], [[VENDOR, 'LvTel'], MODEL, [TYPE, MOBILE]], [\n            /\\b(ph-1) /i                                                        // Essential PH-1\n            ], [MODEL, [VENDOR, 'Essential'], [TYPE, MOBILE]], [\n            /\\b(v(100md|700na|7011|917g).*\\b) b/i                               // Envizen Tablets\n            ], [MODEL, [VENDOR, 'Envizen'], [TYPE, TABLET]], [\n            /\\b(trio[-\\w\\. ]+) b/i                                              // MachSpeed Tablets\n            ], [MODEL, [VENDOR, 'MachSpeed'], [TYPE, TABLET]], [\n            /\\btu_(1491) b/i                                                    // Rotor Tablets\n            ], [MODEL, [VENDOR, 'Rotor'], [TYPE, TABLET]], [\n            /(shield[\\w ]+) b/i                                                 // Nvidia Shield Tablets\n            ], [MODEL, [VENDOR, 'Nvidia'], [TYPE, TABLET]], [\n            /(sprint) (\\w+)/i                                                   // Sprint Phones\n            ], [VENDOR, MODEL, [TYPE, MOBILE]], [\n            /(kin\\.[onetw]{3})/i                                                // Microsoft Kin\n            ], [[MODEL, /\\./g, ' '], [VENDOR, MICROSOFT], [TYPE, MOBILE]], [\n            /droid.+; (cc6666?|et5[16]|mc[239][23]x?|vc8[03]x?)\\)/i             // Zebra\n            ], [MODEL, [VENDOR, ZEBRA], [TYPE, TABLET]], [\n            /droid.+; (ec30|ps20|tc[2-8]\\d[kx])\\)/i\n            ], [MODEL, [VENDOR, ZEBRA], [TYPE, MOBILE]], [\n\n            ///////////////////\n            // SMARTTVS\n            ///////////////////\n\n            /smart-tv.+(samsung)/i                                              // Samsung\n            ], [VENDOR, [TYPE, SMARTTV]], [\n            /hbbtv.+maple;(\\d+)/i\n            ], [[MODEL, /^/, 'SmartTV'], [VENDOR, SAMSUNG], [TYPE, SMARTTV]], [\n            /(nux; netcast.+smarttv|lg (netcast\\.tv-201\\d|android tv))/i        // LG SmartTV\n            ], [[VENDOR, LG], [TYPE, SMARTTV]], [\n            /(apple) ?tv/i                                                      // Apple TV\n            ], [VENDOR, [MODEL, APPLE+' TV'], [TYPE, SMARTTV]], [\n            /crkey/i                                                            // Google Chromecast\n            ], [[MODEL, CHROME+'cast'], [VENDOR, GOOGLE], [TYPE, SMARTTV]], [\n            /droid.+aft(\\w+)( bui|\\))/i                                         // Fire TV\n            ], [MODEL, [VENDOR, AMAZON], [TYPE, SMARTTV]], [\n            /\\(dtv[\\);].+(aquos)/i,\n            /(aquos-tv[\\w ]+)\\)/i                                               // Sharp\n            ], [MODEL, [VENDOR, SHARP], [TYPE, SMARTTV]],[\n            /(bravia[\\w ]+)( bui|\\))/i                                              // Sony\n            ], [MODEL, [VENDOR, SONY], [TYPE, SMARTTV]], [\n            /(mitv-\\w{5}) bui/i                                                 // Xiaomi\n            ], [MODEL, [VENDOR, XIAOMI], [TYPE, SMARTTV]], [\n            /Hbbtv.*(technisat) (.*);/i                                         // TechniSAT\n            ], [VENDOR, MODEL, [TYPE, SMARTTV]], [\n            /\\b(roku)[\\dx]*[\\)\\/]((?:dvp-)?[\\d\\.]*)/i,                          // Roku\n            /hbbtv\\/\\d+\\.\\d+\\.\\d+ +\\([\\w\\+ ]*; *([\\w\\d][^;]*);([^;]*)/i         // HbbTV devices\n            ], [[VENDOR, trim], [MODEL, trim], [TYPE, SMARTTV]], [\n            /\\b(android tv|smart[- ]?tv|opera tv|tv; rv:)\\b/i                   // SmartTV from Unidentified Vendors\n            ], [[TYPE, SMARTTV]], [\n\n            ///////////////////\n            // CONSOLES\n            ///////////////////\n\n            /(ouya)/i,                                                          // Ouya\n            /(nintendo) ([wids3utch]+)/i                                        // Nintendo\n            ], [VENDOR, MODEL, [TYPE, CONSOLE]], [\n            /droid.+; (shield) bui/i                                            // Nvidia\n            ], [MODEL, [VENDOR, 'Nvidia'], [TYPE, CONSOLE]], [\n            /(playstation [345portablevi]+)/i                                   // Playstation\n            ], [MODEL, [VENDOR, SONY], [TYPE, CONSOLE]], [\n            /\\b(xbox(?: one)?(?!; xbox))[\\); ]/i                                // Microsoft Xbox\n            ], [MODEL, [VENDOR, MICROSOFT], [TYPE, CONSOLE]], [\n\n            ///////////////////\n            // WEARABLES\n            ///////////////////\n\n            /((pebble))app/i                                                    // Pebble\n            ], [VENDOR, MODEL, [TYPE, WEARABLE]], [\n            /(watch)(?: ?os[,\\/]|\\d,\\d\\/)[\\d\\.]+/i                              // Apple Watch\n            ], [MODEL, [VENDOR, APPLE], [TYPE, WEARABLE]], [\n            /droid.+; (glass) \\d/i                                              // Google Glass\n            ], [MODEL, [VENDOR, GOOGLE], [TYPE, WEARABLE]], [\n            /droid.+; (wt63?0{2,3})\\)/i\n            ], [MODEL, [VENDOR, ZEBRA], [TYPE, WEARABLE]], [\n            /(quest( \\d| pro)?)/i                                               // Oculus Quest\n            ], [MODEL, [VENDOR, FACEBOOK], [TYPE, WEARABLE]], [\n\n            ///////////////////\n            // EMBEDDED\n            ///////////////////\n\n            /(tesla)(?: qtcarbrowser|\\/[-\\w\\.]+)/i                              // Tesla\n            ], [VENDOR, [TYPE, EMBEDDED]], [\n            /(aeobc)\\b/i                                                        // Echo Dot\n            ], [MODEL, [VENDOR, AMAZON], [TYPE, EMBEDDED]], [\n\n            ////////////////////\n            // MIXED (GENERIC)\n            ///////////////////\n\n            /droid .+?; ([^;]+?)(?: bui|; wv\\)|\\) applew).+? mobile safari/i    // Android Phones from Unidentified Vendors\n            ], [MODEL, [TYPE, MOBILE]], [\n            /droid .+?; ([^;]+?)(?: bui|\\) applew).+?(?! mobile) safari/i       // Android Tablets from Unidentified Vendors\n            ], [MODEL, [TYPE, TABLET]], [\n            /\\b((tablet|tab)[;\\/]|focus\\/\\d(?!.+mobile))/i                      // Unidentifiable Tablet\n            ], [[TYPE, TABLET]], [\n            /(phone|mobile(?:[;\\/]| [ \\w\\/\\.]*safari)|pda(?=.+windows ce))/i    // Unidentifiable Mobile\n            ], [[TYPE, MOBILE]], [\n            /(android[-\\w\\. ]{0,9});.+buil/i                                    // Generic Android Device\n            ], [MODEL, [VENDOR, 'Generic']]\n        ],\n\n        engine : [[\n\n            /windows.+ edge\\/([\\w\\.]+)/i                                       // EdgeHTML\n            ], [VERSION, [NAME, EDGE+'HTML']], [\n\n            /webkit\\/537\\.36.+chrome\\/(?!27)([\\w\\.]+)/i                         // Blink\n            ], [VERSION, [NAME, 'Blink']], [\n\n            /(presto)\\/([\\w\\.]+)/i,                                             // Presto\n            /(webkit|trident|netfront|netsurf|amaya|lynx|w3m|goanna)\\/([\\w\\.]+)/i, // WebKit/Trident/NetFront/NetSurf/Amaya/Lynx/w3m/Goanna\n            /ekioh(flow)\\/([\\w\\.]+)/i,                                          // Flow\n            /(khtml|tasman|links)[\\/ ]\\(?([\\w\\.]+)/i,                           // KHTML/Tasman/Links\n            /(icab)[\\/ ]([23]\\.[\\d\\.]+)/i,                                      // iCab\n            /\\b(libweb)/i\n            ], [NAME, VERSION], [\n\n            /rv\\:([\\w\\.]{1,9})\\b.+(gecko)/i                                     // Gecko\n            ], [VERSION, NAME]\n        ],\n\n        os : [[\n\n            // Windows\n            /microsoft (windows) (vista|xp)/i                                   // Windows (iTunes)\n            ], [NAME, VERSION], [\n            /(windows (?:phone(?: os)?|mobile))[\\/ ]?([\\d\\.\\w ]*)/i             // Windows Phone\n            ], [NAME, [VERSION, strMapper, windowsVersionMap]], [\n            /windows nt 6\\.2; (arm)/i,                                        // Windows RT\n            /windows[\\/ ]?([ntce\\d\\. ]+\\w)(?!.+xbox)/i,\n            /(?:win(?=3|9|n)|win 9x )([nt\\d\\.]+)/i\n            ], [[VERSION, strMapper, windowsVersionMap], [NAME, 'Windows']], [\n\n            // iOS/macOS\n            /ip[honead]{2,4}\\b(?:.*os ([\\w]+) like mac|; opera)/i,              // iOS\n            /(?:ios;fbsv\\/|iphone.+ios[\\/ ])([\\d\\.]+)/i,\n            /cfnetwork\\/.+darwin/i\n            ], [[VERSION, /_/g, '.'], [NAME, 'iOS']], [\n            /(mac os x) ?([\\w\\. ]*)/i,\n            /(macintosh|mac_powerpc\\b)(?!.+haiku)/i                             // Mac OS\n            ], [[NAME, MAC_OS], [VERSION, /_/g, '.']], [\n\n            // Mobile OSes\n            /droid ([\\w\\.]+)\\b.+(android[- ]x86|harmonyos)/i                    // Android-x86/HarmonyOS\n            ], [VERSION, NAME], [                                               // Android/WebOS/QNX/Bada/RIM/Maemo/MeeGo/Sailfish OS\n            /(android|webos|qnx|bada|rim tablet os|maemo|meego|sailfish)[-\\/ ]?([\\w\\.]*)/i,\n            /(blackberry)\\w*\\/([\\w\\.]*)/i,                                      // Blackberry\n            /(tizen|kaios)[\\/ ]([\\w\\.]+)/i,                                     // Tizen/KaiOS\n            /\\((series40);/i                                                    // Series 40\n            ], [NAME, VERSION], [\n            /\\(bb(10);/i                                                        // BlackBerry 10\n            ], [VERSION, [NAME, BLACKBERRY]], [\n            /(?:symbian ?os|symbos|s60(?=;)|series60)[-\\/ ]?([\\w\\.]*)/i         // Symbian\n            ], [VERSION, [NAME, 'Symbian']], [\n            /mozilla\\/[\\d\\.]+ \\((?:mobile|tablet|tv|mobile; [\\w ]+); rv:.+ gecko\\/([\\w\\.]+)/i // Firefox OS\n            ], [VERSION, [NAME, FIREFOX+' OS']], [\n            /web0s;.+rt(tv)/i,\n            /\\b(?:hp)?wos(?:browser)?\\/([\\w\\.]+)/i                              // WebOS\n            ], [VERSION, [NAME, 'webOS']], [\n            /watch(?: ?os[,\\/]|\\d,\\d\\/)([\\d\\.]+)/i                              // watchOS\n            ], [VERSION, [NAME, 'watchOS']], [\n\n            // Google Chromecast\n            /crkey\\/([\\d\\.]+)/i                                                 // Google Chromecast\n            ], [VERSION, [NAME, CHROME+'cast']], [\n            /(cros) [\\w]+(?:\\)| ([\\w\\.]+)\\b)/i                                  // Chromium OS\n            ], [[NAME, CHROMIUM_OS], VERSION],[\n\n            // Smart TVs\n            /panasonic;(viera)/i,                                               // Panasonic Viera\n            /(netrange)mmh/i,                                                   // Netrange\n            /(nettv)\\/(\\d+\\.[\\w\\.]+)/i,                                         // NetTV\n\n            // Console\n            /(nintendo|playstation) ([wids345portablevuch]+)/i,                 // Nintendo/Playstation\n            /(xbox); +xbox ([^\\);]+)/i,                                         // Microsoft Xbox (360, One, X, S, Series X, Series S)\n\n            // Other\n            /\\b(joli|palm)\\b ?(?:os)?\\/?([\\w\\.]*)/i,                            // Joli/Palm\n            /(mint)[\\/\\(\\) ]?(\\w*)/i,                                           // Mint\n            /(mageia|vectorlinux)[; ]/i,                                        // Mageia/VectorLinux\n            /([kxln]?ubuntu|debian|suse|opensuse|gentoo|arch(?= linux)|slackware|fedora|mandriva|centos|pclinuxos|red ?hat|zenwalk|linpus|raspbian|plan 9|minix|risc os|contiki|deepin|manjaro|elementary os|sabayon|linspire)(?: gnu\\/linux)?(?: enterprise)?(?:[- ]linux)?(?:-gnu)?[-\\/ ]?(?!chrom|package)([-\\w\\.]*)/i,\n                                                                                // Ubuntu/Debian/SUSE/Gentoo/Arch/Slackware/Fedora/Mandriva/CentOS/PCLinuxOS/RedHat/Zenwalk/Linpus/Raspbian/Plan9/Minix/RISCOS/Contiki/Deepin/Manjaro/elementary/Sabayon/Linspire\n            /(hurd|linux) ?([\\w\\.]*)/i,                                         // Hurd/Linux\n            /(gnu) ?([\\w\\.]*)/i,                                                // GNU\n            /\\b([-frentopcghs]{0,5}bsd|dragonfly)[\\/ ]?(?!amd|[ix346]{1,2}86)([\\w\\.]*)/i, // FreeBSD/NetBSD/OpenBSD/PC-BSD/GhostBSD/DragonFly\n            /(haiku) (\\w+)/i                                                    // Haiku\n            ], [NAME, VERSION], [\n            /(sunos) ?([\\w\\.\\d]*)/i                                             // Solaris\n            ], [[NAME, 'Solaris'], VERSION], [\n            /((?:open)?solaris)[-\\/ ]?([\\w\\.]*)/i,                              // Solaris\n            /(aix) ((\\d)(?=\\.|\\)| )[\\w\\.])*/i,                                  // AIX\n            /\\b(beos|os\\/2|amigaos|morphos|openvms|fuchsia|hp-ux|serenityos)/i, // BeOS/OS2/AmigaOS/MorphOS/OpenVMS/Fuchsia/HP-UX/SerenityOS\n            /(unix) ?([\\w\\.]*)/i                                                // UNIX\n            ], [NAME, VERSION]\n        ]\n    };\n\n    /////////////////\n    // Constructor\n    ////////////////\n\n    var UAParser = function (ua, extensions) {\n\n        if (typeof ua === OBJ_TYPE) {\n            extensions = ua;\n            ua = undefined;\n        }\n\n        if (!(this instanceof UAParser)) {\n            return new UAParser(ua, extensions).getResult();\n        }\n\n        var _navigator = (typeof window !== UNDEF_TYPE && window.navigator) ? window.navigator : undefined;\n        var _ua = ua || ((_navigator && _navigator.userAgent) ? _navigator.userAgent : EMPTY);\n        var _uach = (_navigator && _navigator.userAgentData) ? _navigator.userAgentData : undefined;\n        var _rgxmap = extensions ? extend(regexes, extensions) : regexes;\n        var _isSelfNav = _navigator && _navigator.userAgent == _ua;\n\n        this.getBrowser = function () {\n            var _browser = {};\n            _browser[NAME] = undefined;\n            _browser[VERSION] = undefined;\n            rgxMapper.call(_browser, _ua, _rgxmap.browser);\n            _browser[MAJOR] = majorize(_browser[VERSION]);\n            // Brave-specific detection\n            if (_isSelfNav && _navigator && _navigator.brave && typeof _navigator.brave.isBrave == FUNC_TYPE) {\n                _browser[NAME] = 'Brave';\n            }\n            return _browser;\n        };\n        this.getCPU = function () {\n            var _cpu = {};\n            _cpu[ARCHITECTURE] = undefined;\n            rgxMapper.call(_cpu, _ua, _rgxmap.cpu);\n            return _cpu;\n        };\n        this.getDevice = function () {\n            var _device = {};\n            _device[VENDOR] = undefined;\n            _device[MODEL] = undefined;\n            _device[TYPE] = undefined;\n            rgxMapper.call(_device, _ua, _rgxmap.device);\n            if (_isSelfNav && !_device[TYPE] && _uach && _uach.mobile) {\n                _device[TYPE] = MOBILE;\n            }\n            // iPadOS-specific detection: identified as Mac, but has some iOS-only properties\n            if (_isSelfNav && _device[MODEL] == 'Macintosh' && _navigator && typeof _navigator.standalone !== UNDEF_TYPE && _navigator.maxTouchPoints && _navigator.maxTouchPoints > 2) {\n                _device[MODEL] = 'iPad';\n                _device[TYPE] = TABLET;\n            }\n            return _device;\n        };\n        this.getEngine = function () {\n            var _engine = {};\n            _engine[NAME] = undefined;\n            _engine[VERSION] = undefined;\n            rgxMapper.call(_engine, _ua, _rgxmap.engine);\n            return _engine;\n        };\n        this.getOS = function () {\n            var _os = {};\n            _os[NAME] = undefined;\n            _os[VERSION] = undefined;\n            rgxMapper.call(_os, _ua, _rgxmap.os);\n            if (_isSelfNav && !_os[NAME] && _uach && _uach.platform && _uach.platform != 'Unknown') {\n                _os[NAME] = _uach.platform  \n                                    .replace(/chrome os/i, CHROMIUM_OS)\n                                    .replace(/macos/i, MAC_OS);           // backward compatibility\n            }\n            return _os;\n        };\n        this.getResult = function () {\n            return {\n                ua      : this.getUA(),\n                browser : this.getBrowser(),\n                engine  : this.getEngine(),\n                os      : this.getOS(),\n                device  : this.getDevice(),\n                cpu     : this.getCPU()\n            };\n        };\n        this.getUA = function () {\n            return _ua;\n        };\n        this.setUA = function (ua) {\n            _ua = (typeof ua === STR_TYPE && ua.length > UA_MAX_LENGTH) ? trim(ua, UA_MAX_LENGTH) : ua;\n            return this;\n        };\n        this.setUA(_ua);\n        return this;\n    };\n\n    UAParser.VERSION = LIBVERSION;\n    UAParser.BROWSER =  enumerize([NAME, VERSION, MAJOR]);\n    UAParser.CPU = enumerize([ARCHITECTURE]);\n    UAParser.DEVICE = enumerize([MODEL, VENDOR, TYPE, CONSOLE, MOBILE, SMARTTV, TABLET, WEARABLE, EMBEDDED]);\n    UAParser.ENGINE = UAParser.OS = enumerize([NAME, VERSION]);\n\n    ///////////\n    // Export\n    //////////\n\n    // check js environment\n    if (typeof(exports) !== UNDEF_TYPE) {\n        // nodejs env\n        if (typeof module !== UNDEF_TYPE && module.exports) {\n            exports = module.exports = UAParser;\n        }\n        exports.UAParser = UAParser;\n    } else {\n        // requirejs env (optional)\n        if (typeof(define) === FUNC_TYPE && define.amd) {\n            define(function () {\n                return UAParser;\n            });\n        } else if (typeof window !== UNDEF_TYPE) {\n            // browser env\n            window.UAParser = UAParser;\n        }\n    }\n\n    // jQuery/Zepto specific (optional)\n    // Note:\n    //   In AMD env the global scope should be kept clean, but jQuery is an exception.\n    //   jQuery always exports to global scope, unless jQuery.noConflict(true) is used,\n    //   and we should catch that.\n    var $ = typeof window !== UNDEF_TYPE && (window.jQuery || window.Zepto);\n    if ($ && !$.ua) {\n        var parser = new UAParser();\n        $.ua = parser.getResult();\n        $.ua.get = function () {\n            return parser.getUA();\n        };\n        $.ua.set = function (ua) {\n            parser.setUA(ua);\n            var result = parser.getResult();\n            for (var prop in result) {\n                $.ua[prop] = result[prop];\n            }\n        };\n    }\n\n})(typeof window === 'object' ? window : this);\n","\n/**\n * Module exports.\n */\n\nmodule.exports = deprecate;\n\n/**\n * Mark that a method should not be used.\n * Returns a modified function which warns once by default.\n *\n * If `localStorage.noDeprecation = true` is set, then it is a no-op.\n *\n * If `localStorage.throwDeprecation = true` is set, then deprecated functions\n * will throw an Error when invoked.\n *\n * If `localStorage.traceDeprecation = true` is set, then deprecated functions\n * will invoke `console.trace()` instead of `console.error()`.\n *\n * @param {Function} fn - the function to deprecate\n * @param {String} msg - the string to print to the console when `fn` is invoked\n * @returns {Function} a new \"deprecated\" version of `fn`\n * @api public\n */\n\nfunction deprecate (fn, msg) {\n  if (config('noDeprecation')) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (config('throwDeprecation')) {\n        throw new Error(msg);\n      } else if (config('traceDeprecation')) {\n        console.trace(msg);\n      } else {\n        console.warn(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n}\n\n/**\n * Checks `localStorage` for boolean values for the given `name`.\n *\n * @param {String} name\n * @returns {Boolean}\n * @api private\n */\n\nfunction config (name) {\n  // accessing global.localStorage can trigger a DOMException in sandboxed iframes\n  try {\n    if (!global.localStorage) return false;\n  } catch (_) {\n    return false;\n  }\n  var val = global.localStorage[name];\n  if (null == val) return false;\n  return String(val).toLowerCase() === 'true';\n}\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport EventBus from './EventBus.js';\nimport Events from './events/Events.js';\nimport FactoryMaker from './FactoryMaker.js';\n\nconst LOG_LEVEL_NONE = 0;\nconst LOG_LEVEL_FATAL = 1;\nconst LOG_LEVEL_ERROR = 2;\nconst LOG_LEVEL_WARNING = 3;\nconst LOG_LEVEL_INFO = 4;\nconst LOG_LEVEL_DEBUG = 5;\n\n/**\n * @module Debug\n * @param {object} config\n * @ignore\n */\nfunction Debug(config) {\n\n    config = config || {};\n    const context = this.context;\n    const eventBus = EventBus(context).getInstance();\n    const settings = config.settings;\n\n    const logFn = [];\n\n    let instance,\n        showLogTimestamp,\n        showCalleeName,\n        startTime;\n\n    function setup() {\n        showLogTimestamp = true;\n        showCalleeName = true;\n        startTime = new Date().getTime();\n\n        if (typeof window !== 'undefined' && window.console) {\n            logFn[LOG_LEVEL_FATAL] = getLogFn(window.console.error);\n            logFn[LOG_LEVEL_ERROR] = getLogFn(window.console.error);\n            logFn[LOG_LEVEL_WARNING] = getLogFn(window.console.warn);\n            logFn[LOG_LEVEL_INFO] = getLogFn(window.console.info);\n            logFn[LOG_LEVEL_DEBUG] = getLogFn(window.console.debug);\n        }\n    }\n\n    function getLogFn(fn) {\n        if (fn && fn.bind) {\n            return fn.bind(window.console);\n        }\n        // if not define, return the default function for reporting logs\n        return window.console.log.bind(window.console);\n    }\n\n    /**\n     * Retrieves a logger which can be used to write logging information in browser console.\n     * @param {object} instance Object for which the logger is created. It is used\n     * to include calle object information in log messages.\n     * @memberof module:Debug\n     * @returns {Logger}\n     * @instance\n     */\n    function getLogger(instance) {\n        return {\n            fatal: fatal.bind(instance),\n            error: error.bind(instance),\n            warn: warn.bind(instance),\n            info: info.bind(instance),\n            debug: debug.bind(instance)\n        };\n    }\n\n    /**\n     * Prepends a timestamp in milliseconds to each log message.\n     * @param {boolean} value Set to true if you want to see a timestamp in each log message.\n     * @default LOG_LEVEL_WARNING\n     * @memberof module:Debug\n     * @instance\n     */\n    function setLogTimestampVisible(value) {\n        showLogTimestamp = value;\n    }\n\n    /**\n     * Prepends the callee object name, and media type if available, to each log message.\n     * @param {boolean} value Set to true if you want to see the callee object name and media type in each log message.\n     * @default true\n     * @memberof module:Debug\n     * @instance\n     */\n    function setCalleeNameVisible(value) {\n        showCalleeName = value;\n    }\n\n    function fatal(...params) {\n        doLog(LOG_LEVEL_FATAL, this, ...params);\n    }\n\n    function error(...params) {\n        doLog(LOG_LEVEL_ERROR, this, ...params);\n    }\n\n    function warn(...params) {\n        doLog(LOG_LEVEL_WARNING, this, ...params);\n    }\n\n    function info(...params) {\n        doLog(LOG_LEVEL_INFO, this, ...params);\n    }\n\n    function debug(...params) {\n        doLog(LOG_LEVEL_DEBUG, this, ...params);\n    }\n\n    function doLog(level, _this, ...params) {\n        let message = '';\n        let logTime = null;\n\n        if (showLogTimestamp) {\n            logTime = new Date().getTime();\n            message += '[' + (logTime - startTime) + ']';\n        }\n\n        if (showCalleeName && _this && _this.getClassName) {\n            message += '[' + _this.getClassName() + ']';\n            if (_this.getType) {\n                message += '[' + _this.getType() + ']';\n            }\n        }\n\n        if (message.length > 0) {\n            message += ' ';\n        }\n\n        Array.apply(null, params).forEach(function (item) {\n            message += item + ' ';\n        });\n\n        // log to console if the log level is high enough\n        if (logFn[level] && settings && settings.get().debug.logLevel >= level) {\n            logFn[level](message);\n        }\n\n        // send log event regardless of log level\n        if (settings && settings.get().debug.dispatchEvent) {\n            eventBus.trigger(Events.LOG, { message: message, level: level });\n        }\n    }\n\n    instance = {\n        getLogger: getLogger,\n        setLogTimestampVisible: setLogTimestampVisible,\n        setCalleeNameVisible: setCalleeNameVisible\n    };\n\n    setup();\n\n    return instance;\n}\n\nDebug.__dashjs_factory_name = 'Debug';\n\nconst factory = FactoryMaker.getSingletonFactory(Debug);\nfactory.LOG_LEVEL_NONE = LOG_LEVEL_NONE;\nfactory.LOG_LEVEL_FATAL = LOG_LEVEL_FATAL;\nfactory.LOG_LEVEL_ERROR = LOG_LEVEL_ERROR;\nfactory.LOG_LEVEL_WARNING = LOG_LEVEL_WARNING;\nfactory.LOG_LEVEL_INFO = LOG_LEVEL_INFO;\nfactory.LOG_LEVEL_DEBUG = LOG_LEVEL_DEBUG;\nFactoryMaker.updateSingletonFactory(Debug.__dashjs_factory_name, factory);\nexport default factory;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport FactoryMaker from './FactoryMaker.js';\nimport MediaPlayerEvents from '../streaming/MediaPlayerEvents.js';\n\nconst EVENT_PRIORITY_LOW = 0;\nconst EVENT_PRIORITY_HIGH = 5000;\n\nfunction EventBus() {\n\n    let handlers = {};\n\n    function _commonOn(type, listener, scope, options = {}, executeOnlyOnce = false) {\n\n        if (!type) {\n            throw new Error('event type cannot be null or undefined');\n        }\n        if (!listener || typeof (listener) !== 'function') {\n            throw new Error('listener must be a function: ' + listener);\n        }\n\n        let priority = options.priority || EVENT_PRIORITY_LOW;\n\n        if (getHandlerIdx(type, listener, scope) >= 0) {\n            return;\n        }\n\n        handlers[type] = handlers[type] || [];\n\n        const handler = {\n            callback: listener,\n            scope,\n            priority,\n            executeOnlyOnce\n        };\n\n        if (scope && scope.getStreamId) {\n            handler.streamId = scope.getStreamId();\n        }\n        if (scope && scope.getType) {\n            handler.mediaType = scope.getType();\n        }\n        if (options && options.mode) {\n            handler.mode = options.mode;\n        }\n\n        const inserted = handlers[type].some((item, idx) => {\n            if (item && priority > item.priority) {\n                handlers[type].splice(idx, 0, handler);\n                return true;\n            }\n        });\n\n        if (!inserted) {\n            handlers[type].push(handler);\n        }\n    }\n\n    function on(type, listener, scope, options = {}) {\n        _commonOn(type, listener, scope, options);\n    }\n\n    function once(type, listener, scope, options = {}) {\n        _commonOn(type, listener, scope, options, true)\n    }\n\n    function off(type, listener, scope) {\n        if (!type || !listener || !handlers[type]) {\n            return;\n        }\n        const idx = getHandlerIdx(type, listener, scope);\n        if (idx < 0) {\n            return;\n        }\n        handlers[type][idx] = null;\n    }\n\n    function trigger(type, payload = {}, filters = {}) {\n        if (!type || !handlers[type]) {\n            return;\n        }\n\n        payload = payload || {};\n\n        if (payload.hasOwnProperty('type')) {\n            throw new Error('\\'type\\' is a reserved word for event dispatching');\n        }\n\n        payload.type = type;\n\n        if (filters.streamId) {\n            payload.streamId = filters.streamId;\n        }\n        if (filters.mediaType) {\n            payload.mediaType = filters.mediaType;\n        }\n\n        const handlersToRemove = [];\n        handlers[type]\n            .filter((handler) => {\n                if (!handler) {\n                    return false;\n                }\n                if (filters.streamId && handler.streamId && handler.streamId !== filters.streamId) {\n                    return false;\n                }\n                if (filters.mediaType && handler.mediaType && handler.mediaType !== filters.mediaType) {\n                    return false;\n                }\n                // This is used for dispatching DASH events. By default we use the onStart mode. Consequently we filter everything that has a non matching mode and the onReceive events for handlers that did not specify a mode.\n                if ((filters.mode && handler.mode && handler.mode !== filters.mode) || (!handler.mode && filters.mode && filters.mode === MediaPlayerEvents.EVENT_MODE_ON_RECEIVE)) {\n                    return false;\n                }\n                return true;\n            })\n            .forEach((handler) => {\n                handler && handler.callback.call(handler.scope, payload);\n                if (handler.executeOnlyOnce) {\n                    handlersToRemove.push(handler);\n                }\n            });\n\n        handlersToRemove.forEach((handler) => {\n            off(type, handler.callback, handler.scope);\n        })\n    }\n\n    function getHandlerIdx(type, listener, scope) {\n\n        let idx = -1;\n\n        if (!handlers[type]) {\n            return idx;\n        }\n\n        handlers[type].some((item, index) => {\n            if (item && item.callback === listener && (!scope || scope === item.scope)) {\n                idx = index;\n                return true;\n            }\n        });\n        return idx;\n    }\n\n    function reset() {\n        handlers = {};\n    }\n\n    const instance = {\n        on,\n        once,\n        off,\n        trigger,\n        reset\n    };\n\n    return instance;\n}\n\nEventBus.__dashjs_factory_name = 'EventBus';\nconst factory = FactoryMaker.getSingletonFactory(EventBus);\nfactory.EVENT_PRIORITY_LOW = EVENT_PRIORITY_LOW;\nfactory.EVENT_PRIORITY_HIGH = EVENT_PRIORITY_HIGH;\nFactoryMaker.updateSingletonFactory(EventBus.__dashjs_factory_name, factory);\nexport default factory;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @module FactoryMaker\n * @ignore\n */\nconst FactoryMaker = (function () {\n\n    let instance;\n    let singletonContexts = [];\n    const singletonFactories = {};\n    const classFactories = {};\n\n    function extend(name, childInstance, override, context) {\n        if (!context[name] && childInstance) {\n            context[name] = {\n                instance: childInstance,\n                override: override\n            };\n        }\n    }\n\n    /**\n     * Use this method from your extended object.  this.factory is injected into your object.\n     * this.factory.getSingletonInstance(this.context, 'VideoModel')\n     * will return the video model for use in the extended object.\n     *\n     * @param {Object} context - injected into extended object as this.context\n     * @param {string} className - string name found in all dash.js objects\n     * with name __dashjs_factory_name Will be at the bottom. Will be the same as the object's name.\n     * @returns {*} Context aware instance of specified singleton name.\n     * @memberof module:FactoryMaker\n     * @instance\n     */\n    function getSingletonInstance(context, className) {\n        for (const i in singletonContexts) {\n            const obj = singletonContexts[i];\n            if (obj.context === context && obj.name === className) {\n                return obj.instance;\n            }\n        }\n        return null;\n    }\n\n    /**\n     * Use this method to add an singleton instance to the system.  Useful for unit testing to mock objects etc.\n     *\n     * @param {Object} context\n     * @param {string} className\n     * @param {Object} instance\n     * @memberof module:FactoryMaker\n     * @instance\n     */\n    function setSingletonInstance(context, className, instance) {\n        for (const i in singletonContexts) {\n            const obj = singletonContexts[i];\n            if (obj.context === context && obj.name === className) {\n                singletonContexts[i].instance = instance;\n                return;\n            }\n        }\n        singletonContexts.push({\n            name: className,\n            context: context,\n            instance: instance\n        });\n    }\n\n    /**\n     * Use this method to remove all singleton instances associated with a particular context.\n     *\n     * @param {Object} context\n     * @memberof module:FactoryMaker\n     * @instance\n     */\n    function deleteSingletonInstances(context) {\n        singletonContexts = singletonContexts.filter(x => x.context !== context);\n    }\n\n    /*------------------------------------------------------------------------------------------*/\n\n    // Factories storage Management\n\n    /*------------------------------------------------------------------------------------------*/\n\n    function getFactoryByName(name, factoriesArray) {\n        return factoriesArray[name];\n    }\n\n    function updateFactory(name, factory, factoriesArray) {\n        if (name in factoriesArray) {\n            factoriesArray[name] = factory;\n        }\n    }\n\n    /*------------------------------------------------------------------------------------------*/\n\n    // Class Factories Management\n\n    /*------------------------------------------------------------------------------------------*/\n\n    function updateClassFactory(name, factory) {\n        updateFactory(name, factory, classFactories);\n    }\n\n    function getClassFactoryByName(name) {\n        return getFactoryByName(name, classFactories);\n    }\n\n    function getClassFactory(classConstructor) {\n        let factory = getFactoryByName(classConstructor.__dashjs_factory_name, classFactories);\n\n        if (!factory) {\n            factory = function (context) {\n                if (context === undefined) {\n                    context = {};\n                }\n                return {\n                    create: function () {\n                        return merge(classConstructor, context, arguments);\n                    }\n                };\n            };\n\n            classFactories[classConstructor.__dashjs_factory_name] = factory; // store factory\n        }\n        return factory;\n    }\n\n    /*------------------------------------------------------------------------------------------*/\n\n    // Singleton Factory MAangement\n\n    /*------------------------------------------------------------------------------------------*/\n\n    function updateSingletonFactory(name, factory) {\n        updateFactory(name, factory, singletonFactories);\n    }\n\n    function getSingletonFactoryByName(name) {\n        return getFactoryByName(name, singletonFactories);\n    }\n\n    function getSingletonFactory(classConstructor) {\n        let factory = getFactoryByName(classConstructor.__dashjs_factory_name, singletonFactories);\n        if (!factory) {\n            factory = function (context) {\n                let instance;\n                if (context === undefined) {\n                    context = {};\n                }\n                return {\n                    getInstance: function () {\n                        // If we don't have an instance yet check for one on the context\n                        if (!instance) {\n                            instance = getSingletonInstance(context, classConstructor.__dashjs_factory_name);\n                        }\n                        // If there's no instance on the context then create one\n                        if (!instance) {\n                            instance = merge(classConstructor, context, arguments);\n                            singletonContexts.push({\n                                name: classConstructor.__dashjs_factory_name,\n                                context: context,\n                                instance: instance\n                            });\n                        }\n                        return instance;\n                    }\n                };\n            };\n            singletonFactories[classConstructor.__dashjs_factory_name] = factory; // store factory\n        }\n\n        return factory;\n    }\n\n    function merge(classConstructor, context, args) {\n\n        let classInstance;\n        const className = classConstructor.__dashjs_factory_name;\n        const extensionObject = context[className];\n\n        if (extensionObject) {\n\n            let extension = extensionObject.instance;\n\n            if (extensionObject.override) { //Override public methods in parent but keep parent.\n\n                classInstance = classConstructor.apply({context}, args);\n                extension = extension.apply({\n                    context,\n                    factory: instance,\n                    parent: classInstance\n                }, args);\n\n                for (const prop in extension) {\n                    if (classInstance.hasOwnProperty(prop)) {\n                        classInstance[prop] = extension[prop];\n                    }\n                }\n\n            } else { //replace parent object completely with new object. Same as dijon.\n\n                return extension.apply({\n                    context,\n                    factory: instance\n                }, args);\n\n            }\n        } else {\n            // Create new instance of the class\n            classInstance = classConstructor.apply({context}, args);\n        }\n\n        // Add getClassName function to class instance prototype (used by Debug)\n        classInstance.getClassName = function () {return className;};\n\n        return classInstance;\n    }\n\n    instance = {\n        extend: extend,\n        getSingletonInstance: getSingletonInstance,\n        setSingletonInstance: setSingletonInstance,\n        deleteSingletonInstances: deleteSingletonInstances,\n        getSingletonFactory: getSingletonFactory,\n        getSingletonFactoryByName: getSingletonFactoryByName,\n        updateSingletonFactory: updateSingletonFactory,\n        getClassFactory: getClassFactory,\n        getClassFactoryByName: getClassFactoryByName,\n        updateClassFactory: updateClassFactory\n    };\n\n    return instance;\n\n}());\n\nexport default FactoryMaker;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport FactoryMaker from './FactoryMaker.js';\nimport Utils from './Utils.js';\nimport Debug from '../core/Debug.js';\nimport Constants from '../streaming/constants/Constants.js';\nimport {HTTPRequest} from '../streaming/vo/metrics/HTTPRequest.js';\nimport EventBus from './EventBus.js';\nimport Events from './events/Events.js';\n\n/** @module Settings\n * @description Define the configuration parameters of Dash.js MediaPlayer.\n * @see {@link module:Settings~PlayerSettings PlayerSettings} for further information about the supported configuration properties.\n */\n\n\n/**\n * @typedef {Object} PlayerSettings\n * @property {module:Settings~DebugSettings} [debug]\n * Debug related settings.\n * @property {module:Settings~ErrorSettings} [errors]\n * Error related settings\n * @property {module:Settings~StreamingSettings} [streaming]\n * Streaming related settings.\n * @example\n *\n * // Full settings object\n * settings = {\n *        debug: {\n *            logLevel: Debug.LOG_LEVEL_WARNING,\n *            dispatchEvent: false\n *        },\n *        streaming: {\n *            abandonLoadTimeout: 10000,\n *            wallclockTimeUpdateInterval: 100,\n *            manifestUpdateRetryInterval: 100,\n *            liveUpdateTimeThresholdInMilliseconds: 0,\n *            cacheInitSegments: false,\n *            applyServiceDescription: true,\n *            applyProducerReferenceTime: true,\n *            applyContentSteering: true,\n *            enableManifestDurationMismatchFix: true,\n *            parseInbandPrft: false,\n *            enableManifestTimescaleMismatchFix: false,\n *            capabilities: {\n *               filterUnsupportedEssentialProperties: true,\n *               supportedEssentialProperties: [\n *                   { schemeIdUri: Constants.FONT_DOWNLOAD_DVB_SCHEME },\n *                   { schemeIdUri: Constants.COLOUR_PRIMARIES_SCHEME_ID_URI, value: /1|5|6|7/ },\n *                   { schemeIdUri: Constants.URL_QUERY_INFO_SCHEME },\n *                   { schemeIdUri: Constants.EXT_URL_QUERY_INFO_SCHEME },\n *                   { schemeIdUri: Constants.MATRIX_COEFFICIENTS_SCHEME_ID_URI, value: /0|1|5|6/ },\n *                   { schemeIdUri: Constants.TRANSFER_CHARACTERISTICS_SCHEME_ID_URI, value: /1|6|13|14|15/ },\n *                   ...Constants.THUMBNAILS_SCHEME_ID_URIS.map(ep => { return { 'schemeIdUri': ep }; })\n *               ],\n *               useMediaCapabilitiesApi: true,\n *               filterVideoColorimetryEssentialProperties: false,\n *               filterHDRMetadataFormatEssentialProperties: false\n *            },\n *            events: {\n *              eventControllerRefreshDelay: 100,\n *              deleteEventMessageDataAfterEventStarted: true\n *            }\n *            timeShiftBuffer: {\n *                calcFromSegmentTimeline: false,\n *                fallbackToSegmentTimeline: true\n *            },\n *            metrics: {\n *              maxListDepth: 100\n *            },\n *            delay: {\n *                liveDelayFragmentCount: NaN,\n *                liveDelay: NaN,\n *                useSuggestedPresentationDelay: true\n *            },\n *            protection: {\n *                keepProtectionMediaKeys: false,\n *                ignoreEmeEncryptedEvent: false,\n *                detectPlayreadyMessageFormat: true,\n *                ignoreKeyStatuses: false\n *            },\n *            buffer: {\n *                enableSeekDecorrelationFix: false,\n *                fastSwitchEnabled: true,\n *                flushBufferAtTrackSwitch: false,\n *                reuseExistingSourceBuffers: true,\n *                bufferPruningInterval: 10,\n *                bufferToKeep: 20,\n *                bufferTimeAtTopQuality: 30,\n *                bufferTimeAtTopQualityLongForm: 60,\n *                initialBufferLevel: NaN,\n *                bufferTimeDefault: 18,\n *                longFormContentDurationThreshold: 600,\n *                stallThreshold: 0.3,\n *                useAppendWindow: true,\n *                setStallState: true,\n *                avoidCurrentTimeRangePruning: false,\n *                useChangeType: true,\n *                mediaSourceDurationInfinity: true,\n *                resetSourceBuffersForTrackSwitch: false,\n *                syntheticStallEvents: {\n *                    enabled: false,\n *                    ignoreReadyState: false\n *                }\n *            },\n *            gaps: {\n *                jumpGaps: true,\n *                jumpLargeGaps: true,\n *                smallGapLimit: 1.5,\n *                threshold: 0.3,\n *                enableSeekFix: true,\n *                enableStallFix: false,\n *                stallSeek: 0.1\n *            },\n *            utcSynchronization: {\n *                enabled: true,\n *                useManifestDateHeaderTimeSource: true,\n *                backgroundAttempts: 2,\n *                timeBetweenSyncAttempts: 30,\n *                maximumTimeBetweenSyncAttempts: 600,\n *                minimumTimeBetweenSyncAttempts: 2,\n *                timeBetweenSyncAttemptsAdjustmentFactor: 2,\n *                maximumAllowedDrift: 100,\n *                enableBackgroundSyncAfterSegmentDownloadError: true,\n *                defaultTimingSource: {\n *                    scheme: 'urn:mpeg:dash:utc:http-xsdate:2014',\n *                    value: 'http://time.akamai.com/?iso&ms'\n *                }\n *            },\n *            scheduling: {\n *                defaultTimeout: 500,\n *                lowLatencyTimeout: 0,\n *                scheduleWhilePaused: true\n *            },\n *            text: {\n *                defaultEnabled: true,\n *                dispatchForManualRendering: false,\n *                extendSegmentedCues: true,\n *                imsc: {\n *                    displayForcedOnlyMode: false,\n *                    enableRollUp: true\n *                },\n *                webvtt: {\n *                    customRenderingEnabled: false\n *                }\n *            },\n *            liveCatchup: {\n *                maxDrift: NaN,\n *                playbackRate: {min: NaN, max: NaN},\n *                playbackBufferMin: 0.5,\n *                enabled: null,\n *                mode: Constants.LIVE_CATCHUP_MODE_DEFAULT\n *            },\n *            lastBitrateCachingInfo: { enabled: true, ttl: 360000 },\n *            lastMediaSettingsCachingInfo: { enabled: true, ttl: 360000 },\n *            saveLastMediaSettingsForCurrentStreamingSession: true,\n *            cacheLoadThresholds: { video: 10, audio: 5 },\n *            trackSwitchMode: {\n *                audio: Constants.TRACK_SWITCH_MODE_ALWAYS_REPLACE,\n *                video: Constants.TRACK_SWITCH_MODE_NEVER_REPLACE\n *            },\n *            selectionModeForInitialTrack: Constants.TRACK_SELECTION_MODE_HIGHEST_SELECTION_PRIORITY,\n *            fragmentRequestTimeout: 20000,\n *            fragmentRequestProgressTimeout: -1,\n *            manifestRequestTimeout: 10000,\n *            retryIntervals: {\n *                [HTTPRequest.MPD_TYPE]: 500,\n *                [HTTPRequest.XLINK_EXPANSION_TYPE]: 500,\n *                [HTTPRequest.MEDIA_SEGMENT_TYPE]: 1000,\n *                [HTTPRequest.INIT_SEGMENT_TYPE]: 1000,\n *                [HTTPRequest.BITSTREAM_SWITCHING_SEGMENT_TYPE]: 1000,\n *                [HTTPRequest.INDEX_SEGMENT_TYPE]: 1000,\n *                [HTTPRequest.MSS_FRAGMENT_INFO_SEGMENT_TYPE]: 1000,\n *                [HTTPRequest.LICENSE]: 1000,\n *                [HTTPRequest.OTHER_TYPE]: 1000,\n *                lowLatencyReductionFactor: 10\n *            },\n *            retryAttempts: {\n *                [HTTPRequest.MPD_TYPE]: 3,\n *                [HTTPRequest.XLINK_EXPANSION_TYPE]: 1,\n *                [HTTPRequest.MEDIA_SEGMENT_TYPE]: 3,\n *                [HTTPRequest.INIT_SEGMENT_TYPE]: 3,\n *                [HTTPRequest.BITSTREAM_SWITCHING_SEGMENT_TYPE]: 3,\n *                [HTTPRequest.INDEX_SEGMENT_TYPE]: 3,\n *                [HTTPRequest.MSS_FRAGMENT_INFO_SEGMENT_TYPE]: 3,\n *                [HTTPRequest.LICENSE]: 3,\n *                [HTTPRequest.OTHER_TYPE]: 3,\n *                lowLatencyMultiplyFactor: 5\n *            },\n *             abr: {\n *                 limitBitrateByPortal: false,\n *                 usePixelRatioInLimitBitrateByPortal: false,\n *                rules: {\n *                     throughputRule: {\n *                         active: true\n *                     },\n *                     bolaRule: {\n *                         active: true\n *                     },\n *                     insufficientBufferRule: {\n *                         active: true,\n *                         parameters: {\n *                             throughputSafetyFactor: 0.7,\n *                             segmentIgnoreCount: 2\n *                         }\n *                     },\n *                     switchHistoryRule: {\n *                         active: true,\n *                         parameters: {\n *                             sampleSize: 8,\n *                             switchPercentageThreshold: 0.075\n *                         }\n *                     },\n *                     droppedFramesRule: {\n *                         active: true,\n *                         parameters: {\n *                             minimumSampleSize: 375,\n *                             droppedFramesPercentageThreshold: 0.15\n *                         }\n *                     },\n *                     abandonRequestsRule: {\n *                         active: true,\n *                         parameters: {\n *                             abandonDurationMultiplier: 1.8,\n *                             minSegmentDownloadTimeThresholdInMs: 500,\n *                             minThroughputSamplesThreshold: 6\n *                         }\n *                     },\n *                     l2ARule: {\n *                         active: false\n *                     },\n *                     loLPRule: {\n *                         active: false\n *                     }\n *                 },\n *                 throughput: {\n *                     averageCalculationMode: Constants.THROUGHPUT_CALCULATION_MODES.EWMA,\n *                     lowLatencyDownloadTimeCalculationMode: Constants.LOW_LATENCY_DOWNLOAD_TIME_CALCULATION_MODE.MOOF_PARSING,\n *                     useResourceTimingApi: true,\n *                     useNetworkInformationApi: {\n *                         xhr: false,\n *                         fetch: false\n *                     },\n *                     useDeadTimeLatency: true,\n *                     bandwidthSafetyFactor: 0.9,\n *                     sampleSettings: {\n *                         live: 3,\n *                         vod: 4,\n *                         enableSampleSizeAdjustment: true,\n *                         decreaseScale: 0.7,\n *                         increaseScale: 1.3,\n *                         maxMeasurementsToKeep: 20,\n *                         averageLatencySampleAmount: 4,\n *                     },\n *                     ewma: {\n *                         throughputSlowHalfLifeSeconds: 8,\n *                         throughputFastHalfLifeSeconds: 3,\n *                         latencySlowHalfLifeCount: 2,\n *                         latencyFastHalfLifeCount: 1,\n *                         weightDownloadTimeMultiplicationFactor: 0.0015\n *                     }\n *                 },\n *                 maxBitrate: {\n *                     audio: -1,\n *                     video: -1\n *                 },\n *                 minBitrate: {\n *                     audio: -1,\n *                     video: -1\n *                 },\n *                 initialBitrate: {\n *                     audio: -1,\n *                     video: -1\n *                 },\n *                 autoSwitchBitrate: {\n *                     audio: true,\n *                     video: true\n *                 }\n *             },\n *            cmcd: {\n *                enabled: false,\n *                sid: null,\n *                cid: null,\n *                rtp: null,\n *                rtpSafetyFactor: 5,\n *                mode: Constants.CMCD_MODE_QUERY,\n *                enabledKeys: ['br', 'd', 'ot', 'tb' , 'bl', 'dl', 'mtp', 'nor', 'nrr', 'su' , 'bs', 'rtp' , 'cid', 'pr', 'sf', 'sid', 'st', 'v']\n *                includeInRequests: ['segment', 'mpd'],\n *                version: 1\n *            },\n *            cmsd: {\n *                enabled: false,\n *                abr: {\n *                    applyMb: false,\n *                    etpWeightRatio: 0\n *                }\n *            },\n *            defaultSchemeIdUri: {\n *                viewpoint: '',\n *                audioChannelConfiguration: 'urn:mpeg:mpegB:cicp:ChannelConfiguration',\n *                role: 'urn:mpeg:dash:role:2011',\n *                accessibility: 'urn:mpeg:dash:role:2011'\n *            }\n *          },\n *          errors: {\n *            recoverAttempts: {\n *                mediaErrorDecode: 5\n *             }\n *          }\n * }\n */\n\n/**\n * @typedef {Object} TimeShiftBuffer\n * @property {boolean} [calcFromSegmentTimeline=false]\n * Enable calculation of the DVR window for SegmentTimeline manifests based on the entries in \\<SegmentTimeline\\>.\n *  * @property {boolean} [fallbackToSegmentTimeline=true]\n * In case the MPD uses \\<SegmentTimeline\\ and no segment is found within the DVR window the DVR window is calculated based on the entries in \\<SegmentTimeline\\>.\n */\n\n/**\n * @typedef {Object} EventSettings\n * @property {number} [eventControllerRefreshDelay=100]\n * Interval timer used by the EventController to check if events need to be triggered or removed.\n * @property {boolean} [deleteEventMessageDataAfterEventStarted=true]\n * If this flag is enabled the EventController will delete the message data of events after they have been started. This is to save memory in case events have a long duration and need to be persisted in the EventController.\n * Note: Applications will receive a copy of the original event data when they subscribe to an event. This copy contains the original message data and is not affected by this setting.\n * Only if an event is dispatched for the second time (e.g. when the user seeks back) the message data will not be included in the dispatched event.\n */\n\n/**\n * @typedef {Object} LiveDelay\n * @property {number} [liveDelayFragmentCount=NaN]\n * Changing this value will lower or increase live stream latency.\n *\n * The detected segment duration will be multiplied by this value to define a time in seconds to delay a live stream from the live edge.\n *\n * Lowering this value will lower latency but may decrease the player's ability to build a stable buffer.\n * @property {number} [liveDelay=NaN]\n * Equivalent in seconds of setLiveDelayFragmentCount.\n *\n * Lowering this value will lower latency but may decrease the player's ability to build a stable buffer.\n *\n * This value should be less than the manifest duration by a couple of segment durations to avoid playback issues.\n *\n * If set, this parameter will take precedence over setLiveDelayFragmentCount and manifest info.\n * @property {boolean} [useSuggestedPresentationDelay=true]\n * Set to true if you would like to overwrite the default live delay and honor the SuggestedPresentationDelay attribute in by the manifest.\n */\n\n/**\n * @typedef {Object} Buffer\n * @property {boolean} [enableSeekDecorrelationFix=false]\n * Enables a workaround for playback start on some devices, e.g. WebOS 4.9.\n * It is necessary because some browsers do not support setting currentTime on video element to a value that is outside of current buffer.\n *\n * If you experience unexpected seeking triggered by BufferController, you can try setting this value to false.\n\n * @property {boolean} [fastSwitchEnabled=true]\n * When enabled, after an ABR up-switch in quality, instead of requesting and appending the next fragment at the end of the current buffer range it is requested and appended closer to the current time.\n *\n * When enabled, The maximum time to render a higher quality is current time + (1.5 * fragment duration).\n *\n * Note, When ABR down-switch is detected, we appended the lower quality at the end of the buffer range to preserve the\n * higher quality media for as long as possible.\n *\n * If enabled, it should be noted there are a few cases when the client will not replace inside buffer range but rather just append at the end.\n * 1. When the buffer level is less than one fragment duration.\n * 2. The client is in an Abandonment State due to recent fragment abandonment event.\n *\n * Known issues:\n * 1. In IE11 with auto switching off, if a user switches to a quality they can not download in time the fragment may be appended in the same range as the playhead or even in the past, in IE11 it may cause a stutter or stall in playback.\n * @property {boolean} [flushBufferAtTrackSwitch=false]\n * When enabled, after a track switch and in case buffer is being replaced, the video element is flushed (seek at current playback time) once a segment of the new track is appended in buffer in order to force video decoder to play new track.\n *\n * This can be required on some devices like GoogleCast devices to make track switching functional.\n *\n * Otherwise, track switching will be effective only once after previous buffered track is fully consumed.\n * @property {boolean} [reuseExistingSourceBuffers=true]\n * Enable reuse of existing MediaSource Sourcebuffers during period transition.\n * @property {number} [bufferPruningInterval=10]\n * The interval of pruning buffer in seconds.\n * @property {number} [bufferToKeep=20]\n * This value influences the buffer pruning logic.\n *\n * Allows you to modify the buffer that is kept in source buffer in seconds.\n * 0|-----------bufferToPrune-----------|-----bufferToKeep-----|currentTime|\n * @property {number} [bufferTimeDefault=18]\n * The time that the internal buffer target will be set to when not playing at the top quality.\n * @property {number} [bufferTimeAtTopQuality=30]\n * The time that the internal buffer target will be set to once playing the top quality.\n *\n * If there are multiple bitrates in your adaptation, and the media is playing at the highest bitrate, then we try to build a larger buffer at the top quality to increase stability and to maintain media quality.\n * @property {number} [bufferTimeAtTopQualityLongForm=60]\n * The time that the internal buffer target will be set to once playing the top quality for long form content.\n * @property {number} [longFormContentDurationThreshold=600]\n * The threshold which defines if the media is considered long form content.\n *\n * This will directly affect the buffer targets when playing back at the top quality.\n * @property {number} [initialBufferLevel=NaN]\n * Initial buffer level before playback starts\n * @property {number} [stallThreshold=0.3]\n * Stall threshold used in BufferController.js to determine whether a track should still be changed and which buffer range to prune.\n * @property {boolean} [useAppendWindow=true]\n * Specifies if the appendWindow attributes of the MSE SourceBuffers should be set according to content duration from manifest.\n * @property {boolean} [setStallState=true]\n * Specifies if we fire manual waiting events once the stall threshold is reached.\n * @property {module:Settings~SyntheticStallSettings} [syntheticStallEvents]\n * Specifies if manual stall events are to be fired once the stall threshold is reached.\n * @property {boolean} [avoidCurrentTimeRangePruning=false]\n * Avoids pruning of the buffered range that contains the current playback time.\n *\n * That buffered range is likely to have been enqueued for playback. Pruning it causes a flush and reenqueue in WPE and WebKitGTK based browsers. This stresses the video decoder and can cause stuttering on embedded platforms.\n * @property {boolean} [useChangeType=true]\n * If this flag is set to true then dash.js will use the MSE v.2 API call \"changeType()\" before switching to a different codec family.\n * Note that some platforms might not implement the changeType function. dash.js is checking for the availability before trying to call it.\n * @property {boolean} [mediaSourceDurationInfinity=true]\n * If this flag is set to true then dash.js will allow `Infinity` to be set as the MediaSource duration otherwise the duration will be set to `Math.pow(2,32)` instead of `Infinity` to allow appending segments indefinitely.\n * Some platforms such as WebOS 4.x have issues with seeking when duration is set to `Infinity`, setting this flag to false resolve this.\n * @property {boolean} [resetSourceBuffersForTrackSwitch=false]\n * When switching to a track that is not compatible with the currently active MSE SourceBuffers, MSE will be reset. This happens when we switch codecs on a system\n * that does not properly implement \"changeType()\", such as webOS 4.0 and before.\n */\n\n/**\n * @typedef {Object} module:Settings~AudioVideoSettings\n * @property {number|boolean|string} [audio]\n * Configuration for audio media type of tracks.\n * @property {number|boolean|string} [video]\n * Configuration for video media type of tracks.\n */\n\n/**\n * @typedef {Object} module:Settings~SyntheticStallSettings\n * @property {boolean} [enabled]\n * Enables manual stall events and sets the playback rate to 0 once the stall threshold is reached.\n * @property {boolean} [ignoreReadyState]\n * Ignore the media element's ready state when entering or exiting a stall.\n * Enable this when either of these scenarios still occur with synthetic stalls enabled:\n * - If the buffer is empty, but playback is not stalled.\n * - If playback resumes, but a playing event isn't reported.\n */\n\n/**\n * @typedef {Object} DebugSettings\n * @property {number} [logLevel=dashjs.Debug.LOG_LEVEL_WARNING]\n * Sets up the log level. The levels are cumulative.\n *\n * For example, if you set the log level to dashjs.Debug.LOG_LEVEL_WARNING all warnings, errors and fatals will be logged.\n *\n * Possible values.\n *\n * - dashjs.Debug.LOG_LEVEL_NONE\n * No message is written in the browser console.\n *\n * - dashjs.Debug.LOG_LEVEL_FATAL\n * Log fatal errors.\n * An error is considered fatal when it causes playback to fail completely.\n *\n * - dashjs.Debug.LOG_LEVEL_ERROR\n * Log error messages.\n *\n * - dashjs.Debug.LOG_LEVEL_WARNING\n * Log warning messages.\n *\n * - dashjs.Debug.LOG_LEVEL_INFO\n * Log info messages.\n *\n * - dashjs.Debug.LOG_LEVEL_DEBUG\n * Log debug messages.\n * @property {boolean} [dispatchEvent=false]\n * Enable to trigger a Events.LOG event whenever log output is generated.\n *\n * Note this will be dispatched regardless of log level.\n */\n\n/**\n * @typedef {Object} module:Settings~ErrorSettings\n * @property {object} [recoverAttempts={mediaErrorDecode: 5}]\n * Defines the maximum number of recover attempts for specific media errors.\n *\n * For mediaErrorDecode the player will reset the MSE and skip the blacklisted segment that caused the decode error. The resulting gap will be handled by the GapController.\n */\n\n/**\n * @typedef {Object} CachingInfoSettings\n * @property {boolean} [enable]\n * Enable or disable the caching feature.\n * @property {number} [ttl]\n * Time to live.\n *\n * A value defined in milliseconds representing how log to cache the settings for.\n */\n\n/**\n * @typedef {Object} Gaps\n * @property {boolean} [jumpGaps=true]\n * Sets whether player should jump small gaps (discontinuities) in the buffer.\n * @property {boolean} [jumpLargeGaps=true]\n * Sets whether player should jump large gaps (discontinuities) in the buffer.\n * @property {number} [smallGapLimit=1.5]\n * Time in seconds for a gap to be considered small.\n * @property {number} [threshold=0.3]\n * Threshold at which the gap handling is executed. If currentRangeEnd - currentTime < threshold the gap jump will be triggered.\n * For live stream the jump might be delayed to keep a consistent live edge.\n * Note that the amount of buffer at which platforms automatically stall might differ.\n * @property {boolean} [enableSeekFix=true]\n * Enables the adjustment of the seek target once no valid segment request could be generated for a specific seek time. This can happen if the user seeks to a position for which there is a gap in the timeline.\n * @property {boolean} [enableStallFix=false]\n * If playback stalled in a buffered range this fix will perform a seek by the value defined in stallSeek to trigger playback again.\n * @property {number} [stallSeek=0.1]\n * Value to be used in case enableStallFix is set to true\n */\n\n/**\n * @typedef {Object} UtcSynchronizationSettings\n * @property {boolean} [enabled=true]\n * Enables or disables the UTC clock synchronization\n * @property {boolean} [useManifestDateHeaderTimeSource=true]\n * Allows you to enable the use of the Date Header, if exposed with CORS, as a timing source for live edge detection.\n *\n * The use of the date header will happen only after the other timing source that take precedence fail or are omitted as described.\n * @property {number} [backgroundAttempts=2]\n * Number of synchronization attempts to perform in the background after an initial synchronization request has been done. This is used to verify that the derived client-server offset is correct.\n *\n * The background requests are async and done in parallel to the start of the playback.\n *\n * This value is also used to perform a resync after 404 errors on segments.\n * @property {number} [timeBetweenSyncAttempts=30]\n * The time in seconds between two consecutive sync attempts.\n *\n * Note: This value is used as an initial starting value. The internal value of the TimeSyncController is adjusted during playback based on the drift between two consecutive synchronization attempts.\n *\n * Note: A sync is only performed after an MPD update. In case the @minimumUpdatePeriod is larger than this value the sync will be delayed until the next MPD update.\n * @property {number} [maximumTimeBetweenSyncAttempts=600]\n * The maximum time in seconds between two consecutive sync attempts.\n *\n * @property {number} [minimumTimeBetweenSyncAttempts=2]\n * The minimum time in seconds between two consecutive sync attempts.\n *\n * @property {number} [timeBetweenSyncAttemptsAdjustmentFactor=2]\n * The factor used to multiply or divide the timeBetweenSyncAttempts parameter after a sync. The maximumAllowedDrift defines whether this value is used as a factor or a dividend.\n *\n * @property {number} [maximumAllowedDrift=100]\n * The maximum allowed drift specified in milliseconds between two consecutive synchronization attempts.\n *\n * @property {boolean} [enableBackgroundSyncAfterSegmentDownloadError=true]\n * Enables or disables the background sync after the player ran into a segment download error.\n *\n * @property {object} [defaultTimingSource={scheme:'urn:mpeg:dash:utc:http-xsdate:2014',value: 'http://time.akamai.com/?iso&ms'}]\n * The default timing source to be used. The timing sources in the MPD take precedence over this one.\n */\n\n/**\n * @typedef {Object} Scheduling\n * @property {number} [defaultTimeout=500]\n * Default timeout between two consecutive segment scheduling attempts\n * @property {number} [lowLatencyTimeout=0]\n * Default timeout between two consecutive low-latency segment scheduling attempts\n * @property {boolean} [scheduleWhilePaused=true]\n * Set to true if you would like dash.js to keep downloading fragments in the background when the video element is paused.\n */\n\n/**\n * @typedef {Object} Text\n * @property {boolean} [defaultEnabled=true]\n * Enable/disable subtitle rendering by default.\n * @property {boolean} [dispatchForManualRendering=false]\n * Enable/disable firing of CueEnter/CueExt events. This will disable the display of subtitles and should be used when you want to have full control about rendering them.\n * @property {boolean} [extendSegmentedCues=true]\n * Enable/disable patching of segmented cues in order to merge as a single cue by extending cue end time.\n * @property {boolean} [imsc.displayForcedOnlyMode=false]\n * Enable/disable forced only mode in IMSC captions.\n * When true, only those captions where itts:forcedDisplay=\"true\" will be displayed.\n * @property {boolean} [imsc.enableRollUp=true]\n * Enable/disable rollUp style display of IMSC captions.\n * @property {object} [webvtt.customRenderingEnabled=false]\n * Enables the custom rendering for WebVTT captions. For details refer to the \"Subtitles and Captions\" sample section of dash.js.\n * Custom WebVTT rendering requires the external library vtt.js that can be found in the contrib folder.\n */\n\n/**\n * @typedef {Object} LiveCatchupSettings\n * @property {number} [maxDrift=NaN]\n * Use this method to set the maximum latency deviation allowed before dash.js to do a seeking to live position.\n *\n * In low latency mode, when the difference between the measured latency and the target one, as an absolute number, is higher than the one sets with this method, then dash.js does a seek to live edge position minus the target live delay.\n *\n * LowLatencyMaxDriftBeforeSeeking should be provided in seconds.\n *\n * If 0, then seeking operations won't be used for fixing latency deviations.\n *\n * Note: Catch-up mechanism is only applied when playing low latency live streams.\n * @property {number} [playbackRate={min: NaN, max: NaN}]\n * Use this parameter to set the minimum and maximum catch up rates, as percentages, for low latency live streams.\n *\n * In low latency mode, when measured latency is higher/lower than the target one, dash.js increases/decreases playback rate respectively up to (+/-) the percentage defined with this method until target is reached.\n *\n * Valid values for min catch up rate are in the range -0.5 to 0 (-50% to 0% playback rate decrease)\n *\n * Valid values for max catch up rate are in the range 0 to 1 (0% to 100% playback rate increase).\n *\n * Set min and max to NaN to turn off live catch up feature.\n *\n * These playback rate limits take precedence over any PlaybackRate values in ServiceDescription elements in an MPD. If only one of the min/max properties is given a value, the property without a value will not fall back to a ServiceDescription value. Its default value of NaN will be used.\n *\n * Note: Catch-up mechanism is only applied when playing low latency live streams.\n * @property {number} [playbackBufferMin=0.5]\n * Use this parameter to specify the minimum buffer which is used for LoL+ based playback rate reduction.\n *\n *\n * @property {boolean} [enabled=null]\n * Use this parameter to enable the catchup mode for non low-latency streams.\n *\n * @property {string} [mode=\"liveCatchupModeDefault\"]\n * Use this parameter to switch between different catchup modes.\n *\n * Options: \"liveCatchupModeDefault\" or \"liveCatchupModeLOLP\".\n *\n * Note: Catch-up mechanism is automatically applied when playing low latency live streams.\n */\n\n/**\n * @typedef {Object} RequestTypeSettings\n * @property {number} [MPD]\n * Manifest type of requests.\n * @property {number} [XLinkExpansion]\n * XLink expansion type of requests.\n * @property {number} [InitializationSegment]\n * Request to retrieve an initialization segment.\n * @property {number} [IndexSegment]\n * Request to retrieve an index segment (SegmentBase).\n * @property {number} [MediaSegment]\n * Request to retrieve a media segment (video/audio/image/text chunk).\n * @property {number} [BitstreamSwitchingSegment]\n * Bitrate stream switching type of request.\n * @property {number} [FragmentInfoSegment]\n * Request to retrieve a FragmentInfo segment (specific to Smooth Streaming live streams).\n * @property {number} [other]\n * Other type of request.\n * @property {number} [lowLatencyReductionFactor]\n * For low latency mode, values of type of request are divided by lowLatencyReductionFactor.\n *\n * Note: It's not type of request.\n * @property {number} [lowLatencyMultiplyFactor]\n * For low latency mode, values of type of request are multiplied by lowLatencyMultiplyFactor.\n *\n * Note: It's not type of request.\n */\n\n\n/**\n * @typedef {Object} Protection\n * @property {boolean} [keepProtectionMediaKeys=false]\n * Set the value for the ProtectionController and MediaKeys life cycle.\n *\n * If true, the ProtectionController and then created MediaKeys and MediaKeySessions will be preserved during the MediaPlayer lifetime.\n * @property {boolean} [ignoreEmeEncryptedEvent=false]\n * If set to true the player will ignore \"encrypted\" and \"needkey\" events thrown by the EME.\n *\n * @property {boolean} [detectPlayreadyMessageFormat=true]\n * If set to true the player will use the raw unwrapped message from the Playready CDM\n *\n * @property {boolean} [ignoreKeyStatusest=false]\n * If set to true the player will ignore the status of a key and try to play the corresponding track regardless whether the key is usable or not.\n */\n\n/**\n * @typedef {Object} Capabilities\n * @property {boolean} [filterUnsupportedEssentialProperties=true]\n * Enable to filter all the AdaptationSets and Representations which contain an unsupported \\<EssentialProperty\\> element.\n * @property {Array.<string>} [supportedEssentialProperties]\n * List of supported \\<EssentialProperty\\> elements\n * @property {boolean} [useMediaCapabilitiesApi=true]\n * Enable to use the MediaCapabilities API to check whether codecs are supported. If disabled MSE.isTypeSupported will be used instead.\n * @property {boolean} [filterVideoColorimetryEssentialProperties=false]\n * Enable dash.js to query MediaCapabilities API for signalled Colorimetry EssentialProperties (per schemeIdUris: 'urn:mpeg:mpegB:cicp:ColourPrimaries', 'urn:mpeg:mpegB:cicp:TransferCharacteristics').\n * If disabled, registered properties per supportedEssentialProperties will be allowed without any further checking (including 'urn:mpeg:mpegB:cicp:MatrixCoefficients').\n * @property {boolean} [filterHDRMetadataFormatEssentialProperties=false]\n * Enable dash.js to query MediaCapabilities API for signalled HDR-MetadataFormat EssentialProperty (per schemeIdUri:'urn:dvb:dash:hdr-dmi').\n */\n\n/**\n * @typedef {Object} AbrSettings\n * @property {boolean} [limitBitrateByPortal=false]\n * If true, the size of the video portal will limit the max chosen video resolution.\n * @property {boolean} [usePixelRatioInLimitBitrateByPortal=false]\n * Sets whether to take into account the device's pixel ratio when defining the portal dimensions.\n *\n * Useful on, for example, retina displays.\n * @property {module:Settings~AbrRules} [rules]\n * Enable/Disable individual ABR rules. Note that if the throughputRule and the bolaRule are activated at the same time we switch to a dynamic mode.\n * In the dynamic mode either ThroughputRule or BolaRule are active but not both at the same time.\n *\n * l2ARule and loLPRule are ABR rules that are designed for low latency streams. They are tested as standalone rules meaning the other rules should be deactivated when choosing these rules.\n * @property {module:Settings~ThroughputSettings} [throughput]\n * Settings related to throughput calculation\n * @property {module:Settings~AudioVideoSettings} [maxBitrate={audio: -1, video: -1}]\n * The maximum bitrate that the ABR algorithms will choose. This value is specified in kbps.\n *\n * Use -1 for no limit.\n * @property {module:Settings~AudioVideoSettings} [minBitrate={audio: -1, video: -1}]\n * The minimum bitrate that the ABR algorithms will choose. This value is specified in kbps.\n *\n * Use -1 for no limit.\n * @property {module:Settings~AudioVideoSettings} [initialBitrate={audio: -1, video: -1}]\n * Explicitly set the starting bitrate for audio or video. This value is specified in kbps.\n *\n * Use -1 to let the player decide.\n * @property {module:Settings~AudioVideoSettings} [autoSwitchBitrate={audio: true, video: true}]\n * Indicates whether the player should enable ABR algorithms to switch the bitrate.\n */\n\n/**\n * @typedef {Object} AbrRules\n * @property {module:Settings~ThroughputRule} [throughputRule]\n * Configuration of the Throughput rule\n * @property {module:Settings~BolaRule} [bolaRule]\n * Configuration of the BOLA rule\n * @property {module:Settings~InsufficientBufferRule} [insufficientBufferRule]\n * Configuration of the Insufficient Buffer rule\n * @property {module:Settings~SwitchHistoryRule} [switchHistoryRule]\n * Configuration of the Switch History rule\n * @property {module:Settings~DroppedFramesRule} [droppedFramesRule]\n * Configuration of the Dropped Frames rule\n * @property {module:Settings~AbandonRequestsRule} [abandonRequestsRule]\n * Configuration of the Abandon Requests rule\n * @property {module:Settings~L2ARule} [l2ARule]\n * Configuration of the L2A rule\n * @property {module:Settings~LoLPRule} [loLPRule]\n * Configuration of the LoLP rule\n */\n\n/**\n * @typedef {Object} ThroughputRule\n * @property {boolean} [active=true]\n * Enable or disable the rule\n */\n\n/**\n * @typedef {Object} BolaRule\n * @property {boolean} [active=true]\n * Enable or disable the rule\n */\n\n/**\n * @typedef {Object} InsufficientBufferRule\n * @property {boolean} [active=true]\n * Enable or disable the rule\n * @property {object} [parameters={throughputSafetyFactor=0.7, segmentIgnoreCount=2}]\n * Configures the rule specific parameters.\n *\n * - `throughputSafetyFactor`: The safety factor that is applied to the derived throughput, see example in the Description.\n * - `segmentIgnoreCount`: This rule is not taken into account until the first segmentIgnoreCount media segments have been appended to the buffer.\n */\n\n/**\n * @typedef {Object} SwitchHistoryRule\n * @property {boolean} [active=true]\n * Enable or disable the rule\n * @property {object} [parameters={sampleSize=8, switchPercentageThreshold=0.075}]\n * Configures the rule specific parameters.\n *\n * - `sampleSize`: Number of switch requests (\"no switch\", because of the selected Representation is already playing or \"actual switches\") required before the rule is applied\n * - `switchPercentageThreshold`: Ratio of actual quality drops compared to no drops before a quality down-switch is triggered\n */\n\n/**\n * @typedef {Object} DroppedFramesRule\n * @property {boolean} [active=true]\n * Enable or disable the rule\n * @property {object} [parameters={minimumSampleSize=375, droppedFramesPercentageThreshold=0.15}]\n * Configures the rule specific parameters.\n *\n * - `minimumSampleSize`: Sum of rendered and dropped frames required for each Representation before the rule kicks in.\n * - `droppedFramesPercentageThreshold`: Minimum percentage of dropped frames to trigger a quality down switch. Values are defined in the range of 0 - 1.\n */\n\n/**\n * @typedef {Object} AbandonRequestsRule\n * @property {boolean} [active=true]\n * Enable or disable the rule\n * @property {object} [parameters={abandonDurationMultiplier=1.8, minSegmentDownloadTimeThresholdInMs=500, minThroughputSamplesThreshold=6}]\n * Configures the rule specific parameters.\n *\n * - `abandonDurationMultiplier`: Factor to multiply with the segment duration to compare against the estimated remaining download time of the current segment. See code example above.\n * - `minSegmentDownloadTimeThresholdInMs`: The AbandonRequestRule only kicks if the download time of the current segment exceeds this value.\n * - `minThroughputSamplesThreshold`: Minimum throughput samples (equivalent to number of progress events) required before the AbandonRequestRule kicks in.\n */\n\n/**\n * @typedef {Object} L2ARule\n * @property {boolean} [active=true]\n * Enable or disable the rule\n */\n\n/**\n * @typedef {Object} LoLPRule\n * @property {boolean} [active=true]\n * Enable or disable the rule\n */\n\n/**\n * @typedef {Object} ThroughputSettings\n * @property {string} [averageCalculationMode=Constants.THROUGHPUT_CALCULATION_MODES.EWMA]\n * Defines the default mode for calculating the throughput based on the samples collected during playback.\n *\n * For arithmetic and harmonic mean calculations we use a sliding window with the values defined in \"sampleSettings\"\n *\n * For exponential weighted moving average calculation the default values can be changed in \"ewma\"\n * @property {string} [lowLatencyDownloadTimeCalculationMode=Constants.LOW_LATENCY_DOWNLOAD_TIME_CALCULATION_MODE.MOOF_PARSING]\n * Defines the effective download time estimation method we use for low latency streams that utilize the Fetch API and chunked transfer coding\n * @property {boolean} [useResourceTimingApi=true]\n * If set to true the ResourceTimingApi is used to derive the download time and the number of downloaded bytes.\n * This option has no effect for low latency streaming as the download time equals the segment duration in most of the cases and therefor does not provide reliable values\n * @property {object} [useNetworkInformationApi = { xhr=false, fetch=false}]\n * If set to true the NetworkInformationApi is used to derive the current throughput. Browser support is limited, only available in Chrome and Edge.\n * Applies to standard (XHR requests) and/or low latency streaming (Fetch API requests).\n * @property {boolean} [useDeadTimeLatency=true]\n * If true, only the download portion will be considered part of the download bitrate and latency will be regarded as static.\n *\n * If false, the reciprocal of the whole transfer time will be used.\n * @property {number} [bandwidthSafetyFactor=0.9]\n * Standard ABR throughput rules multiply the throughput by this value.\n *\n * It should be between 0 and 1, with lower values giving less rebuffering (but also lower quality)\n * @property {object} [sampleSettings = {live=3,vod=4,enableSampleSizeAdjustment=true,decreaseScale=0.7,increaseScale=1.3,maxMeasurementsToKeep=20,averageLatencySampleAmount=4}]\n * When deriving the throughput based on the arithmetic or harmonic mean these settings define:\n * - `live`: Number of throughput samples to use (sample size) for live streams\n * - `vod`: Number of throughput samples to use (sample size) for VoD streams\n * - `enableSampleSizeAdjustment`: Adjust the sample sizes if throughput samples vary a lot\n * - `decreaseScale`: Increase sample size by one if the ratio of current and previous sample is below or equal this value\n * - `increaseScale`: Increase sample size by one if the ratio of current and previous sample is higher or equal this value\n * - `maxMeasurementsToKeep`: Number of samples to keep before sliding samples out of the window\n * - `averageLatencySampleAmount`: Number of latency samples to use (sample size)\n * @property {object} [ewma={throughputSlowHalfLifeSeconds=8,throughputFastHalfLifeSeconds=3,latencySlowHalfLifeCount=2,latencyFastHalfLifeCount=1, weightDownloadTimeMultiplicationFactor=0.0015}]\n * When deriving the throughput based on the exponential weighted moving average these settings define:\n * - `throughputSlowHalfLifeSeconds`: Number by which the weight of the current throughput measurement is divided, see ThroughputModel._updateEwmaValues\n * - `throughputFastHalfLifeSeconds`: Number by which the weight of the current throughput measurement is divided, see ThroughputModel._updateEwmaValues\n * - `latencySlowHalfLifeCount`: Number by which the weight of the current latency is divided, see ThroughputModel._updateEwmaValues\n * - `latencyFastHalfLifeCount`: Number by which the weight of the current latency is divided, see ThroughputModel._updateEwmaValues\n * - `weightDownloadTimeMultiplicationFactor`: This value is multiplied with the download time in milliseconds to derive the weight for the EWMA calculation.\n */\n\n/**\n * @typedef {Object} CmcdSettings\n * @property {boolean} [applyParametersFromMpd=true]\n * Set to true if dash.js should use the CMCD parameters defined in the MPD.\n * @property {boolean} [enable=false]\n * Enable or disable the CMCD reporting.\n * @property {string} [sid]\n * GUID identifying the current playback session.\n *\n * Should be in UUID format.\n *\n * If not specified a UUID will be automatically generated.\n * @property {string} [cid]\n * A unique string to identify the current content.\n *\n * If not specified it will be a hash of the MPD url.\n * @property {number} [rtp]\n * The requested maximum throughput that the client considers sufficient for delivery of the asset.\n *\n * If not specified this value will be dynamically calculated in the CMCDModel based on the current buffer level.\n * @property {number} [rtpSafetyFactor=5]\n * This value is used as a factor for the rtp value calculation: rtp = minBandwidth * rtpSafetyFactor\n *\n * If not specified this value defaults to 5. Note that this value is only used when no static rtp value is defined.\n * @property {number} [mode=\"query\"]\n * The method to use to attach cmcd metrics to the requests. 'query' to use query parameters, 'header' to use http headers.\n *\n * If not specified this value defaults to 'query'.\n * @property {Array.<string>} [enabledKeys]\n * This value is used to specify the desired CMCD parameters. Parameters not included in this list are not reported.\n * @property {Array.<string>} [includeInRequests]\n * Specifies which HTTP GET requests shall carry parameters.\n *\n * If not specified this value defaults to ['segment', 'mpd].\n * @property {number} [version=1]\n * The version of the CMCD to use.\n *\n * If not specified this value defaults to 1.\n */\n\n/**\n * @typedef {Object} module:Settings~CmsdSettings\n * @property {boolean} [enabled=false]\n * Enable or disable the CMSD response headers parsing.\n * @property {module:Settings~CmsdAbrSettings} [abr]\n * Sets additional ABR rules based on CMSD response headers.\n */\n\n/**\n * @typedef {Object} CmsdAbrSettings\n * @property {boolean} [applyMb=false]\n * Set to true if dash.js should apply CMSD maximum suggested bitrate in ABR logic.\n * @property {number} [etpWeightRatio=0]\n * Sets the weight ratio (between 0 and 1) that shall be applied on CMSD estimated throuhgput compared to measured throughput when calculating throughput.\n */\n\n/**\n * @typedef {Object} Metrics\n * @property {number} [metricsMaxListDepth=100]\n * Maximum number of metrics that are persisted per type.\n */\n\n/**\n * @typedef {Object} StreamingSettings\n * @property {number} [abandonLoadTimeout=10000]\n * A timeout value in seconds, which during the ABRController will block switch-up events.\n *\n * This will only take effect after an abandoned fragment event occurs.\n * @property {number} [wallclockTimeUpdateInterval=100]\n * How frequently the wallclockTimeUpdated internal event is triggered (in milliseconds).\n * @property {number} [manifestUpdateRetryInterval=100]\n * For live streams, set the interval-frequency in milliseconds at which dash.js will check if the current manifest is still processed before downloading the next manifest once the minimumUpdatePeriod time has.\n * @property {number} [liveUpdateTimeThresholdInMilliseconds=0]\n * For live streams, postpone syncing time updates until the threshold is passed. Increase if problems occurs during live streams on low end devices.\n * @property {boolean} [cacheInitSegments=false]\n * Enables the caching of init segments to avoid requesting the init segments before each representation switch.\n * @property {boolean} [applyServiceDescription=true]\n * Set to true if dash.js should use the parameters defined in ServiceDescription elements\n * @property {boolean} [applyProducerReferenceTime=true]\n * Set to true if dash.js should use the parameters defined in ProducerReferenceTime elements in combination with ServiceDescription elements.\n * @property {boolean} [applyContentSteering=true]\n * Set to true if dash.js should apply content steering during playback.\n * @property {boolean} [enableManifestDurationMismatchFix=true]\n * Overwrite the manifest segments base information timescale attributes with the timescale set in initialization segments\n * @property {boolean} [enableManifestTimescaleMismatchFix=false]\n * Defines the delay in milliseconds between two consecutive checks for events to be fired.\n * @property {boolean} [parseInbandPrft=false]\n * Set to true if dash.js should parse inband prft boxes (ProducerReferenceTime) and trigger events.\n * @property {module:Settings~Metrics} metrics Metric settings\n * @property {module:Settings~LiveDelay} delay Live Delay settings\n * @property {module:Settings~EventSettings} events Event settings\n * @property {module:Settings~TimeShiftBuffer} timeShiftBuffer TimeShiftBuffer settings\n * @property {module:Settings~Protection} protection DRM related settings\n * @property {module:Settings~Capabilities} capabilities Capability related settings\n * @property {module:Settings~Buffer}  buffer Buffer related settings\n * @property {module:Settings~Gaps}  gaps Gap related settings\n * @property {module:Settings~UtcSynchronizationSettings} utcSynchronization Settings related to UTC clock synchronization\n * @property {module:Settings~Scheduling} scheduling Settings related to segment scheduling\n * @property {module:Settings~Text} text Settings related to Subtitles and captions\n * @property {module:Settings~LiveCatchupSettings} liveCatchup  Settings related to live catchup.\n * @property {module:Settings~CachingInfoSettings} [lastBitrateCachingInfo={enabled: true, ttl: 360000}]\n * Set to false if you would like to disable the last known bit rate from being stored during playback and used to set the initial bit rate for subsequent playback within the expiration window.\n *\n * The default expiration is one hour, defined in milliseconds.\n *\n * If expired, the default initial bit rate (closest to 1000 kbps) will be used for that session and a new bit rate will be stored during that session.\n * @property {module:Settings~CachingInfoSettings} [lastMediaSettingsCachingInfo={enabled: true, ttl: 360000}]\n * Set to false if you would like to disable the last media settings from being stored to localStorage during playback and used to set the initial track for subsequent playback within the expiration window.\n *\n * The default expiration is one hour, defined in milliseconds.\n * @property {boolean} [saveLastMediaSettingsForCurrentStreamingSession=true]\n * Set to true if dash.js should save media settings from last selected track for incoming track selection during current streaming session.\n * @property {module:Settings~AudioVideoSettings} [cacheLoadThresholds={video: 10, audio: 5}]\n * For a given media type, the threshold which defines if the response to a fragment request is coming from browser cache or not.\n * @property {module:Settings~AudioVideoSettings} [trackSwitchMode={video: \"neverReplace\", audio: \"alwaysReplace\"}]\n * For a given media type defines if existing segments in the buffer should be overwritten once the track is switched. For instance if the user switches the audio language the existing segments in the audio buffer will be replaced when setting this value to \"alwaysReplace\".\n *\n * Possible values\n *\n * - Constants.TRACK_SWITCH_MODE_ALWAYS_REPLACE\n * Replace existing segments in the buffer\n *\n * - Constants.TRACK_SWITCH_MODE_NEVER_REPLACE\n * Do not replace existing segments in the buffer\n *\n * @property {string} [selectionModeForInitialTrack=\"highestSelectionPriority\"]\n * Sets the selection mode for the initial track. This mode defines how the initial track will be selected if no initial media settings are set. If initial media settings are set this parameter will be ignored. Available options are:\n *\n * Possible values\n *\n * - Constants.TRACK_SELECTION_MODE_HIGHEST_SELECTION_PRIORITY\n * This mode makes the player select the track with the highest selectionPriority as defined in the manifest. If not selectionPriority is given we fallback to TRACK_SELECTION_MODE_HIGHEST_BITRATE. This mode is a default mode.\n *\n * - Constants.TRACK_SELECTION_MODE_HIGHEST_BITRATE\n * This mode makes the player select the track with a highest bitrate.\n *\n * - Constants.TRACK_SELECTION_MODE_FIRST_TRACK\n * This mode makes the player select the first track found in the manifest.\n *\n * - Constants.TRACK_SELECTION_MODE_HIGHEST_EFFICIENCY\n * This mode makes the player select the track with the lowest bitrate per pixel average.\n *\n * - Constants.TRACK_SELECTION_MODE_WIDEST_RANGE\n * This mode makes the player select the track with a widest range of bitrates.\n *\n *\n * @property {number} [fragmentRequestTimeout=20000]\n * Time in milliseconds before timing out on loading a media fragment.\n *\n * @property {number} [fragmentRequestProgressTimeout=-1]\n * Time in milliseconds before timing out on loading progress of a media fragment.\n *\n * @property {number} [manifestRequestTimeout=10000]\n * Time in milliseconds before timing out on loading a manifest.\n *\n * Fragments that timeout are retried as if they failed.\n * @property {module:Settings~RequestTypeSettings} [retryIntervals]\n * Time in milliseconds of which to reload a failed file load attempt.\n *\n * For low latency mode these values are divided by lowLatencyReductionFactor.\n * @property {module:Settings~RequestTypeSettings} [retryAttempts]\n * Total number of retry attempts that will occur on a file load before it fails.\n *\n * For low latency mode these values are multiplied by lowLatencyMultiplyFactor.\n * @property {module:Settings~AbrSettings} abr\n * Adaptive Bitrate algorithm related settings.\n * @property {module:Settings~CmcdSettings} cmcd\n * Settings related to Common Media Client Data reporting.\n * @property {module:Settings~CmsdSettings} cmsd\n * Settings related to Common Media Server Data parsing.\n * @property {module:Settings~defaultSchemeIdUri} defaultSchemeIdUri\n * Default schemeIdUri for descriptor type elements\n * These strings are used when not provided with setInitialMediaSettingsFor()\n */\n\n\n/**\n * @class\n * @ignore\n */\nfunction Settings() {\n    let instance;\n    const context = this.context;\n    const eventBus = EventBus(context).getInstance();\n    const DISPATCH_KEY_MAP = {\n        'streaming.delay.liveDelay': Events.SETTING_UPDATED_LIVE_DELAY,\n        'streaming.delay.liveDelayFragmentCount': Events.SETTING_UPDATED_LIVE_DELAY_FRAGMENT_COUNT,\n        'streaming.liveCatchup.enabled': Events.SETTING_UPDATED_CATCHUP_ENABLED,\n        'streaming.liveCatchup.playbackRate.min': Events.SETTING_UPDATED_PLAYBACK_RATE_MIN,\n        'streaming.liveCatchup.playbackRate.max': Events.SETTING_UPDATED_PLAYBACK_RATE_MAX,\n        'streaming.abr.rules.throughputRule.active': Events.SETTING_UPDATED_ABR_ACTIVE_RULES,\n        'streaming.abr.rules.bolaRule.active': Events.SETTING_UPDATED_ABR_ACTIVE_RULES,\n        'streaming.abr.rules.insufficientBufferRule.active': Events.SETTING_UPDATED_ABR_ACTIVE_RULES,\n        'streaming.abr.rules.switchHistoryRule.active': Events.SETTING_UPDATED_ABR_ACTIVE_RULES,\n        'streaming.abr.rules.droppedFramesRule.active': Events.SETTING_UPDATED_ABR_ACTIVE_RULES,\n        'streaming.abr.rules.abandonRequestsRule.active': Events.SETTING_UPDATED_ABR_ACTIVE_RULES,\n        'streaming.abr.rules.l2ARule.active': Events.SETTING_UPDATED_ABR_ACTIVE_RULES,\n        'streaming.abr.rules.loLPRule.active': Events.SETTING_UPDATED_ABR_ACTIVE_RULES,\n        'streaming.abr.maxBitrate.video': Events.SETTING_UPDATED_MAX_BITRATE,\n        'streaming.abr.maxBitrate.audio': Events.SETTING_UPDATED_MAX_BITRATE,\n        'streaming.abr.minBitrate.video': Events.SETTING_UPDATED_MIN_BITRATE,\n        'streaming.abr.minBitrate.audio': Events.SETTING_UPDATED_MIN_BITRATE,\n    };\n\n    /**\n     * @const {PlayerSettings} defaultSettings\n     * @ignore\n     */\n    const defaultSettings = {\n        debug: {\n            logLevel: Debug.LOG_LEVEL_WARNING,\n            dispatchEvent: false\n        },\n        streaming: {\n            abandonLoadTimeout: 10000,\n            wallclockTimeUpdateInterval: 100,\n            manifestUpdateRetryInterval: 100,\n            liveUpdateTimeThresholdInMilliseconds: 0,\n            cacheInitSegments: false,\n            applyServiceDescription: true,\n            applyProducerReferenceTime: true,\n            applyContentSteering: true,\n            enableManifestDurationMismatchFix: true,\n            parseInbandPrft: false,\n            enableManifestTimescaleMismatchFix: false,\n            capabilities: {\n                filterUnsupportedEssentialProperties: true,\n                supportedEssentialProperties: [\n                    { schemeIdUri: Constants.FONT_DOWNLOAD_DVB_SCHEME },\n                    { schemeIdUri: Constants.COLOUR_PRIMARIES_SCHEME_ID_URI, value: /1|5|6|7/ },\n                    { schemeIdUri: Constants.URL_QUERY_INFO_SCHEME },\n                    { schemeIdUri: Constants.EXT_URL_QUERY_INFO_SCHEME },\n                    { schemeIdUri: Constants.MATRIX_COEFFICIENTS_SCHEME_ID_URI, value: /0|1|5|6/ },\n                    { schemeIdUri: Constants.TRANSFER_CHARACTERISTICS_SCHEME_ID_URI, value: /1|6|13|14|15/ },\n                    ...Constants.THUMBNAILS_SCHEME_ID_URIS.map(ep => {\n                        return { 'schemeIdUri': ep };\n                    })\n                ],\n                useMediaCapabilitiesApi: true,\n                filterVideoColorimetryEssentialProperties: false,\n                filterHDRMetadataFormatEssentialProperties: false\n            },\n            events: {\n                eventControllerRefreshDelay: 100,\n                deleteEventMessageDataAfterEventStarted: true\n            },\n            timeShiftBuffer: {\n                calcFromSegmentTimeline: false,\n                fallbackToSegmentTimeline: true\n            },\n            metrics: {\n                maxListDepth: 100\n            },\n            delay: {\n                liveDelayFragmentCount: NaN,\n                liveDelay: NaN,\n                useSuggestedPresentationDelay: true\n            },\n            protection: {\n                keepProtectionMediaKeys: false,\n                ignoreEmeEncryptedEvent: false,\n                detectPlayreadyMessageFormat: true,\n                ignoreKeyStatuses: false\n            },\n            buffer: {\n                enableSeekDecorrelationFix: false,\n                fastSwitchEnabled: null,\n                flushBufferAtTrackSwitch: false,\n                reuseExistingSourceBuffers: true,\n                bufferPruningInterval: 10,\n                bufferToKeep: 20,\n                bufferTimeAtTopQuality: 30,\n                bufferTimeAtTopQualityLongForm: 60,\n                initialBufferLevel: NaN,\n                bufferTimeDefault: 18,\n                longFormContentDurationThreshold: 600,\n                stallThreshold: 0.3,\n                useAppendWindow: true,\n                setStallState: true,\n                avoidCurrentTimeRangePruning: false,\n                useChangeType: true,\n                mediaSourceDurationInfinity: true,\n                resetSourceBuffersForTrackSwitch: false,\n                syntheticStallEvents: {\n                    enabled: false,\n                    ignoreReadyState: false\n                }\n            },\n            gaps: {\n                jumpGaps: true,\n                jumpLargeGaps: true,\n                smallGapLimit: 1.5,\n                threshold: 0.3,\n                enableSeekFix: true,\n                enableStallFix: false,\n                stallSeek: 0.1\n            },\n            utcSynchronization: {\n                enabled: true,\n                useManifestDateHeaderTimeSource: true,\n                backgroundAttempts: 2,\n                timeBetweenSyncAttempts: 30,\n                maximumTimeBetweenSyncAttempts: 600,\n                minimumTimeBetweenSyncAttempts: 2,\n                timeBetweenSyncAttemptsAdjustmentFactor: 2,\n                maximumAllowedDrift: 100,\n                enableBackgroundSyncAfterSegmentDownloadError: true,\n                defaultTimingSource: {\n                    scheme: 'urn:mpeg:dash:utc:http-xsdate:2014',\n                    value: 'https://time.akamai.com/?iso&ms'\n                }\n            },\n            scheduling: {\n                defaultTimeout: 500,\n                lowLatencyTimeout: 0,\n                scheduleWhilePaused: true\n            },\n            text: {\n                defaultEnabled: true,\n                dispatchForManualRendering: false,\n                extendSegmentedCues: true,\n                imsc: {\n                    displayForcedOnlyMode: false,\n                    enableRollUp: true\n                },\n                webvtt: {\n                    customRenderingEnabled: false\n                }\n            },\n            liveCatchup: {\n                maxDrift: NaN,\n                playbackRate: {\n                    min: NaN,\n                    max: NaN\n                },\n                playbackBufferMin: 0.5,\n                enabled: null,\n                mode: Constants.LIVE_CATCHUP_MODE_DEFAULT\n            },\n            lastBitrateCachingInfo: {\n                enabled: true,\n                ttl: 360000\n            },\n            lastMediaSettingsCachingInfo: {\n                enabled: true,\n                ttl: 360000\n            },\n            saveLastMediaSettingsForCurrentStreamingSession: true,\n            cacheLoadThresholds: {\n                video: 10,\n                audio: 5\n            },\n            trackSwitchMode: {\n                audio: Constants.TRACK_SWITCH_MODE_ALWAYS_REPLACE,\n                video: Constants.TRACK_SWITCH_MODE_NEVER_REPLACE\n            },\n            selectionModeForInitialTrack: Constants.TRACK_SELECTION_MODE_HIGHEST_SELECTION_PRIORITY,\n            fragmentRequestTimeout: 20000,\n            fragmentRequestProgressTimeout: -1,\n            manifestRequestTimeout: 10000,\n            retryIntervals: {\n                [HTTPRequest.MPD_TYPE]: 500,\n                [HTTPRequest.XLINK_EXPANSION_TYPE]: 500,\n                [HTTPRequest.MEDIA_SEGMENT_TYPE]: 1000,\n                [HTTPRequest.INIT_SEGMENT_TYPE]: 1000,\n                [HTTPRequest.BITSTREAM_SWITCHING_SEGMENT_TYPE]: 1000,\n                [HTTPRequest.INDEX_SEGMENT_TYPE]: 1000,\n                [HTTPRequest.MSS_FRAGMENT_INFO_SEGMENT_TYPE]: 1000,\n                [HTTPRequest.LICENSE]: 1000,\n                [HTTPRequest.OTHER_TYPE]: 1000,\n                lowLatencyReductionFactor: 10\n            },\n            retryAttempts: {\n                [HTTPRequest.MPD_TYPE]: 3,\n                [HTTPRequest.XLINK_EXPANSION_TYPE]: 1,\n                [HTTPRequest.MEDIA_SEGMENT_TYPE]: 3,\n                [HTTPRequest.INIT_SEGMENT_TYPE]: 3,\n                [HTTPRequest.BITSTREAM_SWITCHING_SEGMENT_TYPE]: 3,\n                [HTTPRequest.INDEX_SEGMENT_TYPE]: 3,\n                [HTTPRequest.MSS_FRAGMENT_INFO_SEGMENT_TYPE]: 3,\n                [HTTPRequest.LICENSE]: 3,\n                [HTTPRequest.OTHER_TYPE]: 3,\n                lowLatencyMultiplyFactor: 5\n            },\n            abr: {\n                limitBitrateByPortal: false,\n                usePixelRatioInLimitBitrateByPortal: false,\n                enableSupplementalPropertyAdaptationSetSwitching: true,\n                rules: {\n                    throughputRule: {\n                        active: true\n                    },\n                    bolaRule: {\n                        active: true\n                    },\n                    insufficientBufferRule: {\n                        active: true,\n                        parameters: {\n                            throughputSafetyFactor: 0.7,\n                            segmentIgnoreCount: 2\n                        }\n                    },\n                    switchHistoryRule: {\n                        active: true,\n                        parameters: {\n                            sampleSize: 8,\n                            switchPercentageThreshold: 0.075\n                        }\n                    },\n                    droppedFramesRule: {\n                        active: false,\n                        parameters: {\n                            minimumSampleSize: 375,\n                            droppedFramesPercentageThreshold: 0.15\n                        }\n                    },\n                    abandonRequestsRule: {\n                        active: true,\n                        parameters: {\n                            abandonDurationMultiplier: 1.8,\n                            minSegmentDownloadTimeThresholdInMs: 500,\n                            minThroughputSamplesThreshold: 6\n                        }\n                    },\n                    l2ARule: {\n                        active: false\n                    },\n                    loLPRule: {\n                        active: false\n                    }\n                },\n                throughput: {\n                    averageCalculationMode: Constants.THROUGHPUT_CALCULATION_MODES.EWMA,\n                    lowLatencyDownloadTimeCalculationMode: Constants.LOW_LATENCY_DOWNLOAD_TIME_CALCULATION_MODE.MOOF_PARSING,\n                    useResourceTimingApi: true,\n                    useNetworkInformationApi: {\n                        xhr: false,\n                        fetch: false\n                    },\n                    useDeadTimeLatency: true,\n                    bandwidthSafetyFactor: 0.9,\n                    sampleSettings: {\n                        live: 3,\n                        vod: 4,\n                        enableSampleSizeAdjustment: true,\n                        decreaseScale: 0.7,\n                        increaseScale: 1.3,\n                        maxMeasurementsToKeep: 20,\n                        averageLatencySampleAmount: 4,\n                    },\n                    ewma: {\n                        throughputSlowHalfLifeSeconds: 8,\n                        throughputFastHalfLifeSeconds: 3,\n                        latencySlowHalfLifeCount: 2,\n                        latencyFastHalfLifeCount: 1,\n                        weightDownloadTimeMultiplicationFactor: 0.0015\n                    }\n                },\n                maxBitrate: {\n                    audio: -1,\n                    video: -1\n                },\n                minBitrate: {\n                    audio: -1,\n                    video: -1\n                },\n                initialBitrate: {\n                    audio: -1,\n                    video: -1\n                },\n                autoSwitchBitrate: {\n                    audio: true,\n                    video: true\n                }\n            },\n            cmcd: {\n                applyParametersFromMpd: true,\n                enabled: false,\n                sid: null,\n                cid: null,\n                rtp: null,\n                rtpSafetyFactor: 5,\n                mode: Constants.CMCD_MODE_QUERY,\n                enabledKeys: Constants.CMCD_AVAILABLE_KEYS,\n                includeInRequests: ['segment', 'mpd'],\n                version: 1\n            },\n            cmsd: {\n                enabled: false,\n                abr: {\n                    applyMb: false,\n                    etpWeightRatio: 0\n                }\n            },\n            defaultSchemeIdUri: {\n                viewpoint: '',\n                audioChannelConfiguration: 'urn:mpeg:mpegB:cicp:ChannelConfiguration',\n                role: 'urn:mpeg:dash:role:2011',\n                accessibility: 'urn:mpeg:dash:role:2011'\n            }\n        },\n        errors: {\n            recoverAttempts: {\n                mediaErrorDecode: 5\n            }\n        }\n    };\n\n    let settings = Utils.clone(defaultSettings);\n\n    //Merge in the settings. If something exists in the new config that doesn't match the schema of the default config,\n    //regard it as an error and log it.\n    function mixinSettings(source, dest, path) {\n        for (let n in source) {\n            if (source.hasOwnProperty(n)) {\n                if (dest.hasOwnProperty(n)) {\n                    if (typeof source[n] === 'object' && !(source[n] instanceof RegExp) && !(source[n] instanceof Array) && source[n] !== null) {\n                        mixinSettings(source[n], dest[n], path.slice() + n + '.');\n                    } else {\n                        dest[n] = Utils.clone(source[n]);\n                        if (DISPATCH_KEY_MAP[path + n]) {\n                            eventBus.trigger(DISPATCH_KEY_MAP[path + n]);\n                        }\n                    }\n                } else {\n                    console.error('Settings parameter ' + path + n + ' is not supported');\n                }\n            }\n        }\n    }\n\n    /**\n     * Return the settings object. Don't copy/store this object, you won't get updates.\n     * @func\n     * @instance\n     */\n    function get() {\n        return settings;\n    }\n\n    /**\n     * @func\n     * @instance\n     * @param {object} settingsObj - This should be a partial object of the Settings.Schema type. That is, fields defined should match the path (e.g.\n     * settingsObj.streaming.abr.autoSwitchBitrate.audio -> defaultSettings.streaming.abr.autoSwitchBitrate.audio). Where an element's path does\n     * not match it is ignored, and a warning is logged.\n     *\n     * Use to change the settings object. Any new values defined will overwrite the settings and anything undefined will not change.\n     * Implementers of new settings should add it in an approriate namespace to the defaultSettings object and give it a default value (that is not undefined).\n     *\n     */\n    function update(settingsObj) {\n        if (typeof settingsObj === 'object') {\n            mixinSettings(settingsObj, settings, '');\n        }\n    }\n\n    /**\n     * Resets the settings object. Everything is set to its default value.\n     * @func\n     * @instance\n     *\n     */\n    function reset() {\n        settings = Utils.clone(defaultSettings);\n    }\n\n    instance = {\n        get,\n        update,\n        reset\n    };\n\n    return instance;\n}\n\n\nSettings.__dashjs_factory_name = 'Settings';\nlet factory = FactoryMaker.getSingletonFactory(Settings);\nexport default factory;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * @class\n * @ignore\n */\n\nimport path from 'path-browserify'\nimport {UAParser} from 'ua-parser-js'\nimport Constants from '../streaming/constants/Constants.js';\n\nclass Utils {\n    static mixin(dest, source, copy) {\n        let s;\n        let empty = {};\n        if (dest) {\n            for (let name in source) {\n                if (source.hasOwnProperty(name)) {\n                    s = source[name];\n                    if (!(name in dest) || (dest[name] !== s && (!(name in empty) || empty[name] !== s))) {\n                        if (typeof dest[name] === 'object' && dest[name] !== null) {\n                            dest[name] = Utils.mixin(dest[name], s, copy);\n                        } else {\n                            dest[name] = copy(s);\n                        }\n                    }\n                }\n            }\n        }\n        return dest;\n    }\n\n    static clone(src) {\n        if (!src || typeof src !== 'object') {\n            return src; // anything\n        }\n        if (src instanceof RegExp) {\n            return new RegExp(src);\n        }\n        let r;\n        if (src instanceof Array) {\n            // array\n            r = [];\n            for (let i = 0, l = src.length; i < l; ++i) {\n                if (i in src) {\n                    r.push(Utils.clone(src[i]));\n                }\n            }\n        } else {\n            r = {};\n        }\n        return Utils.mixin(r, src, Utils.clone);\n    }\n\n    static addAdditionalQueryParameterToUrl(url, params) {\n        try {\n            if (!params || params.length === 0) {\n                return url;\n            }\n\n            let updatedUrl = url;\n            params.forEach(({ key, value }) => {\n                const separator = updatedUrl.includes('?') ? '&' : '?';\n                updatedUrl += `${separator}${(encodeURIComponent(key))}=${(encodeURIComponent(value))}`;\n            });\n            return updatedUrl;\n        } catch (e) {\n            return url;\n        }\n    }\n\n    static removeQueryParameterFromUrl(url, queryParameter) {\n        if (!url || !queryParameter) {\n            return url;\n        }\n        // Parse the URL\n        const parsedUrl = new URL(url);\n\n        // Get the search parameters\n        const params = new URLSearchParams(parsedUrl.search);\n\n        if (!params || params.size === 0) {\n            return url;\n        }\n\n        // Remove the CMCD parameter\n        params.delete(queryParameter);\n\n        // Reconstruct the URL without the CMCD parameter\n        parsedUrl.search = params.toString();\n\n        return parsedUrl.toString();\n    }\n\n    static parseHttpHeaders(headerStr) {\n        let headers = {};\n        if (!headerStr) {\n            return headers;\n        }\n\n        // Trim headerStr to fix a MS Edge bug with xhr.getAllResponseHeaders method\n        // which send a string starting with a \"\\n\" character\n        let headerPairs = headerStr.trim().split('\\u000d\\u000a');\n        for (let i = 0, ilen = headerPairs.length; i < ilen; i++) {\n            let headerPair = headerPairs[i];\n            let index = headerPair.indexOf('\\u003a\\u0020');\n            if (index > 0) {\n                headers[headerPair.substring(0, index)] = headerPair.substring(index + 2);\n            }\n        }\n        return headers;\n    }\n\n    /**\n     * Parses query parameters from a string and returns them as an array of key-value pairs.\n     * @param {string} queryParamString - A string containing the query parameters.\n     * @return {Array<{key: string, value: string}>} An array of objects representing the query parameters.\n     */\n    static parseQueryParams(queryParamString) {\n        const params = [];\n        const searchParams = new URLSearchParams(queryParamString);\n        for (const [key, value] of searchParams.entries()) {\n            params.push({ key: decodeURIComponent(key), value: decodeURIComponent(value) });\n        }\n        return params;\n    }\n\n    static generateUuid() {\n        let dt = new Date().getTime();\n        const uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n            const r = (dt + Math.random() * 16) % 16 | 0;\n            dt = Math.floor(dt / 16);\n            return (c == 'x' ? r : (r & 0x3 | 0x8)).toString(16);\n        });\n        return uuid;\n    }\n\n    static generateHashCode(string) {\n        let hash = 0;\n\n        if (string.length === 0) {\n            return hash;\n        }\n\n        for (let i = 0; i < string.length; i++) {\n            const chr = string.charCodeAt(i);\n            hash = ((hash << 5) - hash) + chr;\n            hash |= 0;\n        }\n        return hash;\n    }\n\n    /**\n     * Compares both urls and returns a relative url (target relative to original)\n     * @param {string} originalUrl\n     * @param {string} targetUrl\n     * @return {string|*}\n     */\n    static getRelativeUrl(originalUrl, targetUrl) {\n        try {\n            const original = new URL(originalUrl);\n            const target = new URL(targetUrl);\n\n            // Unify the protocol to compare the origins\n            original.protocol = target.protocol;\n            if (original.origin !== target.origin) {\n                return targetUrl;\n            }\n\n            // Use the relative path implementation of the path library. We need to cut off the actual filename in the end to get the relative path\n            let relativePath = path.relative(original.pathname.substr(0, original.pathname.lastIndexOf('/')), target.pathname.substr(0, target.pathname.lastIndexOf('/')));\n\n            // In case the relative path is empty (both path are equal) return the filename only. Otherwise add a slash in front of the filename\n            const startIndexOffset = relativePath.length === 0 ? 1 : 0;\n            relativePath += target.pathname.substr(target.pathname.lastIndexOf('/') + startIndexOffset, target.pathname.length - 1);\n\n            // Build the other candidate, e.g. the 'host relative' path that starts with \"/\", and return the shortest of the two candidates.\n            if (target.pathname.length < relativePath.length) {\n                return target.pathname;\n            }\n            return relativePath;\n        } catch (e) {\n            return targetUrl\n        }\n    }\n\n    static getHostFromUrl(urlString) {\n        try {\n            const url = new URL(urlString);\n\n            return url.host\n        } catch (e) {\n            return null\n        }\n    }\n\n    static parseUserAgent(ua = null) {\n        try {\n            const uaString = ua === null ? typeof navigator !== 'undefined' ? navigator.userAgent.toLowerCase() : '' : '';\n\n            return UAParser(uaString);\n        } catch (e) {\n            return {};\n        }\n    }\n\n    /**\n     * Checks for existence of \"http\" or \"https\" in a string\n     * @param string\n     * @returns {boolean}\n     */\n    static stringHasProtocol(string) {\n        return (/(http(s?)):\\/\\//i.test(string))\n    }\n\n    static bufferSourceToDataView(bufferSource) {\n        return Utils.toDataView(bufferSource, DataView);\n    }\n\n    static bufferSourceToInt8(bufferSource) {\n        return Utils.toDataView(bufferSource, Uint8Array)\n    }\n\n    static bufferSourceToHex(data) {\n        const arr = Utils.bufferSourceToInt8(data)\n        let hex = '';\n        for (let value of arr) {\n            value = value.toString(16);\n            if (value.length === 1) {\n                value = '0' + value;\n            }\n            hex += value;\n        }\n        return hex;\n    }\n\n    static toDataView(bufferSource, Type) {\n        const buffer = Utils.getArrayBuffer(bufferSource);\n        let bytesPerElement = 1;\n        if ('BYTES_PER_ELEMENT' in DataView) {\n            bytesPerElement = DataView.BYTES_PER_ELEMENT;\n        }\n\n        const dataEnd = ((bufferSource.byteOffset || 0) + bufferSource.byteLength) /\n            bytesPerElement;\n        const rawStart = ((bufferSource.byteOffset || 0)) / bytesPerElement;\n        const start = Math.floor(Math.max(0, Math.min(rawStart, dataEnd)));\n        const end = Math.floor(Math.min(start + Math.max(Infinity, 0), dataEnd));\n        return new Type(buffer, start, end - start);\n    }\n\n    static getArrayBuffer(view) {\n        if (view instanceof ArrayBuffer) {\n            return view;\n        } else {\n            return view.buffer;\n        }\n    }\n\n    static getCodecFamily(codecString) {\n        const { base, profile } = Utils._getCodecParts(codecString)\n\n        switch (base) {\n            case 'mp4a':\n                switch (profile) {\n                    case '69':\n                    case '6b':\n                    case '40.34':\n                        return Constants.CODEC_FAMILIES.MP3\n                    case '66':\n                    case '67':\n                    case '68':\n                    case '40.2':\n                    case '40.02':\n                    case '40.5':\n                    case '40.05':\n                    case '40.29':\n                    case '40.42':\n                        return Constants.CODEC_FAMILIES.AAC\n                    case 'a5':\n                        return Constants.CODEC_FAMILIES.AC3\n                    case 'e6':\n                        return Constants.CODEC_FAMILIES.EC3\n                    case 'b2':\n                        return Constants.CODEC_FAMILIES.DTSX\n                    case 'a9':\n                        return Constants.CODEC_FAMILIES.DTSC\n                }\n                break;\n            case 'avc1':\n            case 'avc3':\n                return Constants.CODEC_FAMILIES.AVC\n            case 'hvc1':\n            case 'hvc3':\n                return Constants.CODEC_FAMILIES.HEVC\n            default:\n                return base\n        }\n\n        return base;\n    }\n\n    static _getCodecParts(codecString) {\n        const [base, ...rest] = codecString.split('.');\n        const profile = rest.join('.');\n        return { base, profile };\n    }\n\n}\n\nexport default Utils;\n","const VERSION = '__VERSION__';\nexport function getVersionString() {\n    return VERSION;\n}\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nclass ErrorsBase {\n    extend(errors, config) {\n        if (!errors) {\n            return;\n        }\n\n        let override = config ? config.override : false;\n        let publicOnly = config ? config.publicOnly : false;\n\n\n        for (const err in errors) {\n            if (!errors.hasOwnProperty(err) || (this[err] && !override)) {\n                continue;\n            }\n            if (publicOnly && errors[err].indexOf('public_') === -1) {\n                continue;\n            }\n            this[err] = errors[err];\n\n        }\n    }\n}\n\nexport default ErrorsBase;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport EventsBase from './EventsBase.js';\n\n/**\n * These are internal events that should not be needed at the player level.\n * If you find and event in here that you would like access to from MediaPlayer level\n * please add an issue at https://github.com/Dash-Industry-Forum/dash.js/issues/new\n * @class\n * @ignore\n */\nclass CoreEvents extends EventsBase {\n    constructor () {\n        super();\n        this.ATTEMPT_BACKGROUND_SYNC = 'attemptBackgroundSync';\n        this.BUFFERING_COMPLETED = 'bufferingCompleted';\n        this.BUFFER_CLEARED = 'bufferCleared';\n        this.BYTES_APPENDED_END_FRAGMENT = 'bytesAppendedEndFragment';\n        this.BUFFER_REPLACEMENT_STARTED = 'bufferReplacementStarted';\n        this.CHECK_FOR_EXISTENCE_COMPLETED = 'checkForExistenceCompleted';\n        this.CMSD_STATIC_HEADER = 'cmsdStaticHeader';\n        this.CURRENT_TRACK_CHANGED = 'currentTrackChanged';\n        this.DATA_UPDATE_COMPLETED = 'dataUpdateCompleted';\n        this.INBAND_EVENTS = 'inbandEvents';\n        this.INITIAL_STREAM_SWITCH = 'initialStreamSwitch';\n        this.INIT_FRAGMENT_LOADED = 'initFragmentLoaded';\n        this.INIT_FRAGMENT_NEEDED = 'initFragmentNeeded';\n        this.INTERNAL_MANIFEST_LOADED = 'internalManifestLoaded';\n        this.ORIGINAL_MANIFEST_LOADED = 'originalManifestLoaded';\n        this.LOADING_COMPLETED = 'loadingCompleted';\n        this.LOADING_PROGRESS = 'loadingProgress';\n        this.LOADING_DATA_PROGRESS = 'loadingDataProgress';\n        this.LOADING_ABANDONED = 'loadingAborted';\n        this.MANIFEST_UPDATED = 'manifestUpdated';\n        this.MEDIA_FRAGMENT_LOADED = 'mediaFragmentLoaded';\n        this.MEDIA_FRAGMENT_NEEDED = 'mediaFragmentNeeded';\n        this.MEDIAINFO_UPDATED = 'mediaInfoUpdated';\n        this.QUOTA_EXCEEDED = 'quotaExceeded';\n        this.SEGMENT_LOCATION_BLACKLIST_ADD = 'segmentLocationBlacklistAdd';\n        this.SEGMENT_LOCATION_BLACKLIST_CHANGED = 'segmentLocationBlacklistChanged';\n        this.SERVICE_LOCATION_BASE_URL_BLACKLIST_ADD = 'serviceLocationBlacklistAdd';\n        this.SERVICE_LOCATION_BASE_URL_BLACKLIST_CHANGED = 'serviceLocationBlacklistChanged';\n        this.SERVICE_LOCATION_LOCATION_BLACKLIST_ADD = 'serviceLocationLocationBlacklistAdd';\n        this.SERVICE_LOCATION_LOCATION_BLACKLIST_CHANGED = 'serviceLocationLocationBlacklistChanged';\n        this.SET_FRAGMENTED_TEXT_AFTER_DISABLED = 'setFragmentedTextAfterDisabled';\n        this.SET_NON_FRAGMENTED_TEXT = 'setNonFragmentedText';\n        this.SOURCE_BUFFER_ERROR = 'sourceBufferError';\n        this.STREAMS_COMPOSED = 'streamsComposed';\n        this.STREAM_BUFFERING_COMPLETED = 'streamBufferingCompleted';\n        this.STREAM_REQUESTING_COMPLETED = 'streamRequestingCompleted';\n        this.TEXT_TRACKS_QUEUE_INITIALIZED = 'textTracksQueueInitialized';\n        this.TIME_SYNCHRONIZATION_COMPLETED = 'timeSynchronizationComplete';\n        this.UPDATE_TIME_SYNC_OFFSET = 'updateTimeSyncOffset';\n        this.URL_RESOLUTION_FAILED = 'urlResolutionFailed';\n        this.VIDEO_CHUNK_RECEIVED = 'videoChunkReceived';\n        this.WALLCLOCK_TIME_UPDATED = 'wallclockTimeUpdated';\n        this.XLINK_ELEMENT_LOADED = 'xlinkElementLoaded';\n        this.XLINK_READY = 'xlinkReady';\n        this.SEEK_TARGET = 'seekTarget';\n        this.SETTING_UPDATED_LIVE_DELAY = 'settingUpdatedLiveDelay';\n        this.SETTING_UPDATED_LIVE_DELAY_FRAGMENT_COUNT = 'settingUpdatedLiveDelayFragmentCount';\n        this.SETTING_UPDATED_CATCHUP_ENABLED = 'settingUpdatedCatchupEnabled';\n        this.SETTING_UPDATED_PLAYBACK_RATE_MIN = 'settingUpdatedPlaybackRateMin';\n        this.SETTING_UPDATED_PLAYBACK_RATE_MAX = 'settingUpdatedPlaybackRateMax';\n        this.SETTING_UPDATED_ABR_ACTIVE_RULES = 'settingUpdatedAbrActiveRules';\n        this.SETTING_UPDATED_MAX_BITRATE = 'settingUpdatedMaxBitrate';\n        this.SETTING_UPDATED_MIN_BITRATE = 'settingUpdatedMinBitrate';\n    }\n}\n\nexport default CoreEvents;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nimport CoreEvents from './CoreEvents.js';\n\nclass Events extends CoreEvents {\n}\n\nlet events = new Events();\nexport default events;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nclass EventsBase {\n    extend(events, config) {\n        if (!events) {\n            return;\n        }\n\n        let override = config ? config.override : false;\n        let publicOnly = config ? config.publicOnly : false;\n\n\n        for (const evt in events) {\n            if (!events.hasOwnProperty(evt) || (this[evt] && !override)) {\n                continue;\n            }\n            if (publicOnly && events[evt].indexOf('public_') === -1) {\n                continue;\n            }\n            this[evt] = events[evt];\n\n        }\n    }\n}\n\nexport default EventsBase;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES, LOSS OF USE, DATA, OR\n *  PROFITS, OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * Dash constants declaration\n * @ignore\n */\nexport default {\n    ACCESSIBILITY: 'Accessibility',\n    ADAPTATION_SET: 'AdaptationSet',\n    ADAPTATION_SETS: 'adaptationSets',\n    ADAPTATION_SET_SWITCHING_SCHEME_ID_URI: 'urn:mpeg:dash:adaptation-set-switching:2016',\n    ADD: 'add',\n    ASSET_IDENTIFIER: 'AssetIdentifier',\n    AUDIO_CHANNEL_CONFIGURATION: 'AudioChannelConfiguration',\n    AUDIO_SAMPLING_RATE: 'audioSamplingRate',\n    AVAILABILITY_END_TIME: 'availabilityEndTime',\n    AVAILABILITY_START_TIME: 'availabilityStartTime',\n    AVAILABILITY_TIME_COMPLETE: 'availabilityTimeComplete',\n    AVAILABILITY_TIME_OFFSET: 'availabilityTimeOffset',\n    BANDWITH: 'bandwidth',\n    BASE_URL: 'BaseURL',\n    BITSTREAM_SWITCHING: 'BitstreamSwitching',\n    BITSTREAM_SWITCHING_MINUS: 'bitstreamSwitching',\n    BYTE_RANGE: 'byteRange',\n    CAPTION: 'caption',\n    CENC_DEFAULT_KID: 'cenc:default_KID',\n    CLIENT_DATA_REPORTING: 'ClientDataReporting',\n    CLIENT_REQUIREMENT: 'clientRequirement',\n    CMCD_PARAMETERS: 'CMCDParameters',\n    CODECS: 'codecs',\n    CODEC_PRIVATE_DATA: 'codecPrivateData',\n    CODING_DEPENDENCY: 'codingDependency',\n    CONTENT_COMPONENT: 'ContentComponent',\n    CONTENT_PROTECTION: 'ContentProtection',\n    CONTENT_STEERING: 'ContentSteering',\n    CONTENT_STEERING_RESPONSE: {\n        VERSION: 'VERSION',\n        TTL: 'TTL',\n        RELOAD_URI: 'RELOAD-URI',\n        PATHWAY_PRIORITY: 'PATHWAY-PRIORITY',\n        PATHWAY_CLONES: 'PATHWAY-CLONES',\n        BASE_ID: 'BASE-ID',\n        ID: 'ID',\n        URI_REPLACEMENT: 'URI-REPLACEMENT',\n        HOST: 'HOST',\n        PARAMS: 'PARAMS'\n    },\n    CONTENT_TYPE: 'contentType',\n    DEFAULT_SERVICE_LOCATION: 'defaultServiceLocation',\n    DEPENDENCY_ID: 'dependencyId',\n    DURATION: 'duration',\n    DVB_PRIORITY : 'dvb:priority',\n    DVB_WEIGHT : 'dvb:weight',\n    DVB_URL : 'dvb:url',\n    DVB_MIMETYPE : 'dvb:mimeType',\n    DVB_FONTFAMILY : 'dvb:fontFamily',\n    DYNAMIC: 'dynamic',\n    ESSENTIAL_PROPERTY: 'EssentialProperty',\n    EVENT: 'Event',\n    EVENT_STREAM: 'EventStream',\n    FORCED_SUBTITLE: 'forced-subtitle',\n    FRAMERATE: 'frameRate',\n    FRAME_PACKING: 'FramePacking',\n    GROUP_LABEL: 'GroupLabel',\n    HEIGHT: 'height',\n    ID: 'id',\n    INBAND: 'inband',\n    INBAND_EVENT_STREAM: 'InbandEventStream',\n    INDEX: 'index',\n    INDEX_RANGE: 'indexRange',\n    INITIALIZATION: 'Initialization',\n    INITIALIZATION_MINUS: 'initialization',\n    LA_URL: 'Laurl',\n    LA_URL_LOWER_CASE: 'laurl',\n    LABEL: 'Label',\n    LANG: 'lang',\n    LOCATION: 'Location',\n    MAIN: 'main',\n    MAXIMUM_SAP_PERIOD: 'maximumSAPPeriod',\n    MAX_PLAYOUT_RATE: 'maxPlayoutRate',\n    MAX_SEGMENT_DURATION: 'maxSegmentDuration',\n    MAX_SUBSEGMENT_DURATION: 'maxSubsegmentDuration',\n    MEDIA: 'media',\n    MEDIA_PRESENTATION_DURATION: 'mediaPresentationDuration',\n    MEDIA_RANGE: 'mediaRange',\n    MEDIA_STREAM_STRUCTURE_ID: 'mediaStreamStructureId',\n    METRICS: 'Metrics',\n    METRICS_MINUS: 'metrics',\n    MIME_TYPE: 'mimeType',\n    MINIMUM_UPDATE_PERIOD: 'minimumUpdatePeriod',\n    MIN_BUFFER_TIME: 'minBufferTime',\n    MP4_PROTECTION_SCHEME: 'urn:mpeg:dash:mp4protection:2011',\n    MPD: 'MPD',\n    MPD_TYPE: 'mpd',\n    MPD_PATCH_TYPE: 'mpdpatch',\n    ORIGINAL_MPD_ID: 'mpdId',\n    ORIGINAL_PUBLISH_TIME: 'originalPublishTime',\n    PATCH_LOCATION: 'PatchLocation',\n    PERIOD: 'Period',\n    PRESENTATION_TIME: 'presentationTime',\n    PRESENTATION_TIME_OFFSET: 'presentationTimeOffset',\n    PRO: 'pro',\n    PRODUCER_REFERENCE_TIME: 'ProducerReferenceTime',\n    PRODUCER_REFERENCE_TIME_TYPE: {\n        ENCODER: 'encoder',\n        CAPTURED: 'captured',\n        APPLICATION: 'application'\n    },\n    PROFILES: 'profiles',\n    PSSH: 'pssh',\n    PUBLISH_TIME: 'publishTime',\n    QUALITY_RANKING : 'qualityRanking',\n    QUERY_BEFORE_START: 'queryBeforeStart',\n    QUERY_PART: '$querypart$',\n    RANGE: 'range',\n    RATING: 'Rating',\n    REF: 'ref',\n    REF_ID: 'refId',\n    REMOVE: 'remove',\n    REPLACE: 'replace',\n    REPORTING: 'Reporting',\n    REPRESENTATION: 'Representation',\n    REPRESENTATION_INDEX: 'RepresentationIndex',\n    ROBUSTNESS: 'robustness',\n    ROLE: 'Role',\n    S: 'S',\n    SAR: 'sar',\n    SCAN_TYPE: 'scanType',\n    SEGMENT_ALIGNMENT: 'segmentAlignment',\n    SEGMENT_BASE: 'SegmentBase',\n    SEGMENT_LIST: 'SegmentList',\n    SEGMENT_PROFILES: 'segmentProfiles',\n    SEGMENT_TEMPLATE: 'SegmentTemplate',\n    SEGMENT_TIMELINE: 'SegmentTimeline',\n    SEGMENT_TYPE: 'segment',\n    SEGMENT_URL: 'SegmentURL',\n    SERVICE_DESCRIPTION: 'ServiceDescription',\n    SERVICE_DESCRIPTION_LATENCY: 'Latency',\n    SERVICE_DESCRIPTION_OPERATING_BANDWIDTH: 'OperatingBandwidth',\n    SERVICE_DESCRIPTION_OPERATING_QUALITY: 'OperatingQuality',\n    SERVICE_DESCRIPTION_PLAYBACK_RATE: 'PlaybackRate',\n    SERVICE_DESCRIPTION_SCOPE: 'Scope',\n    SERVICE_LOCATION: 'serviceLocation',\n    SERVICE_LOCATIONS: 'serviceLocations',\n    SOURCE_URL: 'sourceURL',\n    START: 'start',\n    START_NUMBER: 'startNumber',\n    START_WITH_SAP: 'startWithSAP',\n    STATIC: 'static',\n    STEERING_TYPE: 'steering',\n    SUBSET: 'Subset',\n    SUBTITLE: 'subtitle',\n    SUB_REPRESENTATION: 'SubRepresentation',\n    SUB_SEGMENT_ALIGNMENT: 'subsegmentAlignment',\n    SUGGESTED_PRESENTATION_DELAY: 'suggestedPresentationDelay',\n    SUPPLEMENTAL_PROPERTY: 'SupplementalProperty',\n    SUPPLEMENTAL_CODECS: 'scte214:supplementalCodecs',\n    TIMESCALE: 'timescale',\n    TIMESHIFT_BUFFER_DEPTH: 'timeShiftBufferDepth',\n    TTL: 'ttl',\n    TYPE: 'type',\n    UTC_TIMING: 'UTCTiming',\n    VALUE: 'value',\n    VIEWPOINT: 'Viewpoint',\n    WALL_CLOCK_TIME: 'wallClockTime',\n    WIDTH: 'width',\n}\n\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nclass UTCTiming {\n    constructor() {\n        // UTCTiming is a DescriptorType and doesn't have any additional fields\n        this.schemeIdUri = '';\n        this.value = '';\n    }\n}\n\nexport default UTCTiming;","/**\n *\n * This code was ported from the dash.js project at:\n *   https://github.com/Dash-Industry-Forum/dash.js/blob/development/externals/cea608-parser.js\n *   https://github.com/Dash-Industry-Forum/dash.js/commit/8269b26a761e0853bb21d78780ed945144ecdd4d#diff-71bc295a2d6b6b7093a1d3290d53a4b2\n *\n * The original copyright appears below:\n *\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2015-2016, DASH Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  1. Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  2. Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport { VerboseLevel } from './VerboseLevel.js';\n\n/**\n * CaptionsLogger. To be removed in the future.\n *\n * @group CTA-608\n * @beta\n */\nexport class CaptionsLogger {\n\tpublic time: number | null = null;\n\tpublic verboseLevel: VerboseLevel = VerboseLevel.ERROR;\n\n\tlog(severity: VerboseLevel, msg: string | (() => string)): void {\n\t\tif (this.verboseLevel >= severity) {\n\t\t\tconst m: string = typeof msg === 'function' ? msg() : msg;\n\t\t\tconsole.log(`${this.time} [${severity}] ${m}`);\n\t\t}\n\t}\n}\n","import type { ValueOf } from '../../utils/ValueOf.js';\n\n/**\n * Logging levels for the CTA-608 parser.\n *\n * @group CTA-608\n *\n * @enum\n *\n * @beta\n */\nexport const VerboseLevel = {\n\tERROR: 0,\n\tTEXT: 1,\n\tWARNING: 2,\n\tINFO: 2,\n\tDEBUG: 3,\n\tDATA: 3,\n} as const;\n\n/**\n * @beta\n */\nexport type VerboseLevel = ValueOf<typeof VerboseLevel>;\n","/**\n *\n * This code was ported from the dash.js project at:\n *   https://github.com/Dash-Industry-Forum/dash.js/blob/development/externals/cea608-parser.js\n *   https://github.com/Dash-Industry-Forum/dash.js/commit/8269b26a761e0853bb21d78780ed945144ecdd4d#diff-71bc295a2d6b6b7093a1d3290d53a4b2\n *\n * The original copyright appears below:\n *\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2015-2016, DASH Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  1. Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  2. Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport type { PenStyles } from './PenStyles.js';\n\n/**\n * Pen state.\n *\n * @group CTA-608\n * @beta\n */\nexport class PenState {\n\tpublic foreground: string = 'white';\n\tpublic underline: boolean = false;\n\tpublic italics: boolean = false;\n\tpublic background: string = 'black';\n\tpublic flash: boolean = false;\n\n\treset(): void {\n\t\tthis.foreground = 'white';\n\t\tthis.underline = false;\n\t\tthis.italics = false;\n\t\tthis.background = 'black';\n\t\tthis.flash = false;\n\t}\n\n\tsetStyles(styles: Partial<PenStyles>): void {\n\t\tconst attribs = [\n\t\t\t'foreground',\n\t\t\t'underline',\n\t\t\t'italics',\n\t\t\t'background',\n\t\t\t'flash',\n\t\t];\n\t\tfor (let i = 0; i < attribs.length; i++) {\n\t\t\tconst style = attribs[i];\n\t\t\tif (Object.prototype.hasOwnProperty.call(styles, style)) {\n\t\t\t\t(this as any)[style] = (styles as any)[style];\n\t\t\t}\n\t\t}\n\t}\n\n\tisDefault(): boolean {\n\t\treturn (\n\t\t\tthis.foreground === 'white' &&\n\t\t\t!this.underline &&\n\t\t\t!this.italics &&\n\t\t\tthis.background === 'black' &&\n\t\t\t!this.flash\n\t\t);\n\t}\n\n\tequals(other: PenState): boolean {\n\t\treturn (\n\t\t\tthis.foreground === other.foreground &&\n\t\t\tthis.underline === other.underline &&\n\t\t\tthis.italics === other.italics &&\n\t\t\tthis.background === other.background &&\n\t\t\tthis.flash === other.flash\n\t\t);\n\t}\n\n\tcopy(newPenState: PenState): void {\n\t\tthis.foreground = newPenState.foreground;\n\t\tthis.underline = newPenState.underline;\n\t\tthis.italics = newPenState.italics;\n\t\tthis.background = newPenState.background;\n\t\tthis.flash = newPenState.flash;\n\t}\n}\n","/**\n *\n * This code was ported from the dash.js project at:\n *   https://github.com/Dash-Industry-Forum/dash.js/blob/development/externals/cea608-parser.js\n *   https://github.com/Dash-Industry-Forum/dash.js/commit/8269b26a761e0853bb21d78780ed945144ecdd4d#diff-71bc295a2d6b6b7093a1d3290d53a4b2\n *\n * The original copyright appears below:\n *\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2015-2016, DASH Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  1. Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  2. Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport { PenState } from './PenState.js';\n\n/**\n * Unicode character with styling and background.\n *\n * @group CTA-608\n * @beta\n */\nexport class StyledUnicodeChar {\n\tuchar: string = ' ';\n\tpenState: PenState = new PenState();\n\n\treset(): void {\n\t\tthis.uchar = ' ';\n\t\tthis.penState.reset();\n\t}\n\n\tsetChar(uchar: string, newPenState: PenState): void {\n\t\tthis.uchar = uchar;\n\t\tthis.penState.copy(newPenState);\n\t}\n\n\tsetPenState(newPenState: PenState): void {\n\t\tthis.penState.copy(newPenState);\n\t}\n\n\tequals(other: StyledUnicodeChar): boolean {\n\t\treturn this.uchar === other.uchar && this.penState.equals(other.penState);\n\t}\n\n\tcopy(newChar: StyledUnicodeChar): void {\n\t\tthis.uchar = newChar.uchar;\n\t\tthis.penState.copy(newChar.penState);\n\t}\n\n\tisEmpty(): boolean {\n\t\treturn this.uchar === ' ' && this.penState.isDefault();\n\t}\n}\n","export const NR_COLS = 100;\n","/**\n *  Exceptions from regular ASCII. CodePoints are mapped to UTF-16 codes\n */\nexport const specialCea608CharsCodes: { [key: number]: number; } = {\n\t42: 225, // lowercase a, acute accent\n\t92: 233, // lowercase e, acute accent\n\t94: 237, // lowercase i, acute accent\n\t95: 243, // lowercase o, acute accent\n\t96: 250, // lowercase u, acute accent\n\t123: 231, // lowercase c with cedilla\n\t124: 247, // division symbol\n\t125: 209, // uppercase N tilde\n\t126: 241, // lowercase n tilde\n\t127: 9608, // Full block\n\n\n\n\t// THIS BLOCK INCLUDES THE 16 EXTENDED (TWO-BYTE) LINE 21 CHARACTERS\n\t// THAT COME FROM HI BYTE=0x11 AND LOW BETWEEN 0x30 AND 0x3F\n\t// THIS MEANS THAT \\x50 MUST BE ADDED TO THE VALUES\n\t128: 174, // Registered symbol (R)\n\t129: 176, // degree sign\n\t130: 189, // 1/2 symbolOutputFilter\n\t131: 191, // Inverted (open) question mark\n\t132: 8482, // Trademark symbol (TM)\n\t133: 162, // Cents symbol\n\t134: 163, // Pounds sterling\n\t135: 9834, // Music 8'th note\n\t136: 224, // lowercase a, grave accent\n\t137: 32, // transparent space (regular)\n\t138: 232, // lowercase e, grave accent\n\t139: 226, // lowercase a, circumflex accent\n\t140: 234, // lowercase e, circumflex accent\n\t141: 238, // lowercase i, circumflex accent\n\t142: 244, // lowercase o, circumflex accent\n\t143: 251, // lowercase u, circumflex accent\n\n\n\t// THIS BLOCK INCLUDES THE 32 EXTENDED (TWO-BYTE) LINE 21 CHARACTERS\n\t// THAT COME FROM HI BYTE=0x12 AND LOW BETWEEN 0x20 AND 0x3F\n\t144: 193, // capital letter A with acute\n\t145: 201, // capital letter E with acute\n\t146: 211, // capital letter O with acute\n\t147: 218, // capital letter U with acute\n\t148: 220, // capital letter U with diaresis\n\t149: 252, // lowercase letter U with diaeresis\n\t150: 8216, // opening single quote\n\t151: 161, // inverted exclamation mark\n\t152: 42, // asterisk\n\t153: 8217, // closing single quote\n\t154: 9473, // box drawings heavy horizontal\n\t155: 169, // copyright sign\n\t156: 8480, // Service mark\n\t157: 8226, // (round) bullet\n\t158: 8220, // Left double quotation mark\n\t159: 8221, // Right double quotation mark\n\t160: 192, // uppercase A, grave accent\n\t161: 194, // uppercase A, circumflex\n\t162: 199, // uppercase C with cedilla\n\t163: 200, // uppercase E, grave accent\n\t164: 202, // uppercase E, circumflex\n\t165: 203, // capital letter E with diaresis\n\t166: 235, // lowercase letter e with diaresis\n\t167: 206, // uppercase I, circumflex\n\t168: 207, // uppercase I, with diaresis\n\t169: 239, // lowercase i, with diaresis\n\t170: 212, // uppercase O, circumflex\n\t171: 217, // uppercase U, grave accent\n\t172: 249, // lowercase u, grave accent\n\t173: 219, // uppercase U, circumflex\n\t174: 171, // left-pointing double angle quotation mark\n\t175: 187, // right-pointing double angle quotation mark\n\n\n\t// THIS BLOCK INCLUDES THE 32 EXTENDED (TWO-BYTE) LINE 21 CHARACTERS\n\t// THAT COME FROM HI BYTE=0x13 AND LOW BETWEEN 0x20 AND 0x3F\n\t176: 195, // Uppercase A, tilde\n\t177: 227, // Lowercase a, tilde\n\t178: 205, // Uppercase I, acute accent\n\t179: 204, // Uppercase I, grave accent\n\t180: 236, // Lowercase i, grave accent\n\t181: 210, // Uppercase O, grave accent\n\t182: 242, // Lowercase o, grave accent\n\t183: 213, // Uppercase O, tilde\n\t184: 245, // Lowercase o, tilde\n\t185: 123, // Open curly brace\n\t186: 125, // Closing curly brace\n\t187: 92, // Backslash\n\t188: 94, // Caret\n\t189: 95, // Underscore\n\t190: 124, // Pipe (vertical line)\n\t191: 8764, // Tilde operator\n\t192: 196, // Uppercase A, umlaut\n\t193: 228, // Lowercase A, umlaut\n\t194: 214, // Uppercase O, umlaut\n\t195: 246, // Lowercase o, umlaut\n\t196: 223, // Esszett (sharp S)\n\t197: 165, // Yen symbolOutputFilter\n\t198: 164, // Generic currency sign\n\t199: 9475, // Box drawings heavy vertical\n\t200: 197, // Uppercase A, ring\n\t201: 229, // Lowercase A, ring\n\t202: 216, // Uppercase O, stroke\n\t203: 248, // Lowercase o, strok\n\t204: 9487, // Box drawings heavy down and right\n\t205: 9491, // Box drawings heavy down and left\n\t206: 9495, // Box drawings heavy up and right\n\t207: 9499, // Box drawings heavy up and left\n};\n","import { specialCea608CharsCodes } from './specialCea608CharsCodes.js';\n\nexport const getCharForByte = function (byte: number): string {\n\treturn String.fromCharCode(specialCea608CharsCodes[byte] || byte);\n};\n","/**\n *\n * This code was ported from the dash.js project at:\n *   https://github.com/Dash-Industry-Forum/dash.js/blob/development/externals/cea608-parser.js\n *   https://github.com/Dash-Industry-Forum/dash.js/commit/8269b26a761e0853bb21d78780ed945144ecdd4d#diff-71bc295a2d6b6b7093a1d3290d53a4b2\n *\n * The original copyright appears below:\n *\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2015-2016, DASH Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  1. Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  2. Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport { CaptionsLogger } from './CaptionsLogger.js';\nimport { PenState } from './PenState.js';\nimport type { PenStyles } from './PenStyles.js';\nimport { StyledUnicodeChar } from './StyledUnicodeChar.js';\nimport { VerboseLevel } from './VerboseLevel.js';\nimport { NR_COLS } from './utils/NR_COLS.js';\nimport { getCharForByte } from './utils/getCharForByte.js';\n\n/**\n * CTA-608 row consisting of NR_COLS instances of StyledUnicodeChar.\n *\n * @group CTA-608\n * @beta\n */\nexport class Row {\n\tpublic chars: StyledUnicodeChar[] = [];\n\tpublic cueStartTime: number | null = null;\n\n\tprivate pos: number = 0;\n\tprivate currPenState: PenState = new PenState();\n\tprivate logger: CaptionsLogger;\n\n\tconstructor(logger: CaptionsLogger = new CaptionsLogger()) {\n\t\tfor (let i = 0; i < NR_COLS; i++) {\n\t\t\tthis.chars.push(new StyledUnicodeChar());\n\t\t}\n\t\tthis.logger = logger;\n\t}\n\n\tequals(other: Row): boolean {\n\t\tfor (let i = 0; i < NR_COLS; i++) {\n\t\t\tif (!this.chars[i].equals(other.chars[i])) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\tcopy(other: Row): void {\n\t\tfor (let i = 0; i < NR_COLS; i++) {\n\t\t\tthis.chars[i].copy(other.chars[i]);\n\t\t}\n\t}\n\n\tisEmpty(): boolean {\n\t\tlet empty = true;\n\t\tfor (let i = 0; i < NR_COLS; i++) {\n\t\t\tif (!this.chars[i].isEmpty()) {\n\t\t\t\tempty = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn empty;\n\t}\n\n\t/**\n\t *  Set the cursor to a valid column.\n\t */\n\tsetCursor(absPos: number): void {\n\t\tif (this.pos !== absPos) {\n\t\t\tthis.pos = absPos;\n\t\t}\n\n\t\tif (this.pos < 0) {\n\t\t\tthis.logger.log(\n\t\t\t\tVerboseLevel.DEBUG,\n\t\t\t\t'Negative cursor position ' + this.pos,\n\t\t\t);\n\t\t\tthis.pos = 0;\n\t\t}\n\t\telse if (this.pos > NR_COLS) {\n\t\t\tthis.logger.log(\n\t\t\t\tVerboseLevel.DEBUG,\n\t\t\t\t'Too large cursor position ' + this.pos,\n\t\t\t);\n\t\t\tthis.pos = NR_COLS;\n\t\t}\n\t}\n\n\t/**\n\t * Move the cursor relative to current position.\n\t */\n\tmoveCursor(relPos: number): void {\n\t\tconst newPos = this.pos + relPos;\n\t\tif (relPos > 1) {\n\t\t\tfor (let i = this.pos + 1; i < newPos + 1; i++) {\n\t\t\t\tthis.chars[i].setPenState(this.currPenState);\n\t\t\t}\n\t\t}\n\t\tthis.setCursor(newPos);\n\t}\n\n\t/**\n\t * Backspace, move one step back and clear character.\n\t */\n\tbackSpace(): void {\n\t\tthis.moveCursor(-1);\n\t\tthis.chars[this.pos].setChar(' ', this.currPenState);\n\t}\n\n\tinsertChar(byte: number): void {\n\t\tif (byte >= 0x90) {\n\t\t\t// Extended char\n\t\t\tthis.backSpace();\n\t\t}\n\t\tconst char = getCharForByte(byte);\n\t\tif (this.pos >= NR_COLS) {\n\t\t\tthis.logger.log(\n\t\t\t\tVerboseLevel.ERROR,\n\t\t\t\t() =>\n\t\t\t\t\t'Cannot insert ' +\n\t\t\t\t\tbyte.toString(16) +\n\t\t\t\t\t' (' +\n\t\t\t\t\tchar +\n\t\t\t\t\t') at position ' +\n\t\t\t\t\tthis.pos +\n\t\t\t\t\t'. Skipping it!',\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\t\tthis.chars[this.pos].setChar(char, this.currPenState);\n\t\tthis.moveCursor(1);\n\t}\n\n\tclearFromPos(startPos: number): void {\n\t\tlet i: number;\n\t\tfor (i = startPos; i < NR_COLS; i++) {\n\t\t\tthis.chars[i].reset();\n\t\t}\n\t}\n\n\tclear(): void {\n\t\tthis.clearFromPos(0);\n\t\tthis.pos = 0;\n\t\tthis.currPenState.reset();\n\t}\n\n\tclearToEndOfRow(): void {\n\t\tthis.clearFromPos(this.pos);\n\t}\n\n\tgetTextString(): string {\n\t\tconst chars: string[] = [];\n\t\tlet empty = true;\n\t\tfor (let i = 0; i < NR_COLS; i++) {\n\t\t\tconst char = this.chars[i].uchar;\n\t\t\tif (char !== ' ') {\n\t\t\t\tempty = false;\n\t\t\t}\n\n\t\t\tchars.push(char);\n\t\t}\n\t\tif (empty) {\n\t\t\treturn '';\n\t\t}\n\t\telse {\n\t\t\treturn chars.join('');\n\t\t}\n\t}\n\n\tsetPenStyles(styles: Partial<PenStyles>): void {\n\t\tthis.currPenState.setStyles(styles);\n\t\tconst currChar = this.chars[this.pos];\n\t\tcurrChar.setPenState(this.currPenState);\n\t}\n}\n","export const NR_ROWS = 15;\n","/**\n *\n * This code was ported from the dash.js project at:\n *   https://github.com/Dash-Industry-Forum/dash.js/blob/development/externals/cea608-parser.js\n *   https://github.com/Dash-Industry-Forum/dash.js/commit/8269b26a761e0853bb21d78780ed945144ecdd4d#diff-71bc295a2d6b6b7093a1d3290d53a4b2\n *\n * The original copyright appears below:\n *\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2015-2016, DASH Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  1. Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  2. Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport { CaptionsLogger } from './CaptionsLogger.js';\nimport type { PACData } from './PACData.js';\nimport type { PenStyles } from './PenStyles.js';\nimport { Row } from './Row.js';\nimport { NR_ROWS } from './utils/NR_ROWS.js';\nimport { VerboseLevel } from './VerboseLevel.js';\n\n/**\n * Keep a CTA-608 screen of 32x15 styled characters\n *\n * @group CTA-608\n * @beta\n */\nexport class CaptionScreen {\n\tprivate rows: Row[] = [];\n\tprivate currRow: number = NR_ROWS - 1;\n\tprivate nrRollUpRows: number | null = null;\n\tprivate lastOutputScreen: CaptionScreen | null = null;\n\tprivate logger: CaptionsLogger;\n\n\tconstructor(logger: CaptionsLogger = new CaptionsLogger()) {\n\t\tfor (let i = 0; i < NR_ROWS; i++) {\n\t\t\tthis.rows.push(new Row(logger));\n\t\t}\n\t\tthis.logger = logger;\n\t}\n\n\treset(): void {\n\t\tfor (let i = 0; i < NR_ROWS; i++) {\n\t\t\tthis.rows[i].clear();\n\t\t}\n\t\tthis.currRow = NR_ROWS - 1;\n\t}\n\n\tequals(other: CaptionScreen): boolean {\n\t\tlet equal = true;\n\t\tfor (let i = 0; i < NR_ROWS; i++) {\n\t\t\tif (!this.rows[i].equals(other.rows[i])) {\n\t\t\t\tequal = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn equal;\n\t}\n\n\tcopy(other: CaptionScreen): void {\n\t\tfor (let i = 0; i < NR_ROWS; i++) {\n\t\t\tthis.rows[i].copy(other.rows[i]);\n\t\t}\n\t}\n\n\tisEmpty(): boolean {\n\t\tlet empty = true;\n\t\tfor (let i = 0; i < NR_ROWS; i++) {\n\t\t\tif (!this.rows[i].isEmpty()) {\n\t\t\t\tempty = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn empty;\n\t}\n\n\tbackSpace(): void {\n\t\tconst row = this.rows[this.currRow];\n\t\trow.backSpace();\n\t}\n\n\tclearToEndOfRow(): void {\n\t\tconst row = this.rows[this.currRow];\n\t\trow.clearToEndOfRow();\n\t}\n\n\t/**\n\t * Insert a character (without styling) in the current row.\n\t */\n\tinsertChar(char: number): void {\n\t\tconst row = this.rows[this.currRow];\n\t\trow.insertChar(char);\n\t}\n\n\tsetPen(styles: Partial<PenStyles>): void {\n\t\tconst row = this.rows[this.currRow];\n\t\trow.setPenStyles(styles);\n\t}\n\n\tmoveCursor(relPos: number): void {\n\t\tconst row = this.rows[this.currRow];\n\t\trow.moveCursor(relPos);\n\t}\n\n\tsetCursor(absPos: number): void {\n\t\tthis.logger.log(VerboseLevel.INFO, 'setCursor: ' + absPos);\n\t\tconst row = this.rows[this.currRow];\n\t\trow.setCursor(absPos);\n\t}\n\n\tsetPAC(pacData: PACData): void {\n\t\tthis.logger.log(\n\t\t\tVerboseLevel.INFO,\n\t\t\t() => 'pacData = ' + JSON.stringify(pacData),\n\t\t);\n\t\tlet newRow = pacData.row - 1;\n\t\tif (this.nrRollUpRows && newRow < this.nrRollUpRows - 1) {\n\t\t\tnewRow = this.nrRollUpRows - 1;\n\t\t}\n\n\t\t// Make sure this only affects Roll-up Captions by checking this.nrRollUpRows\n\t\tif (this.nrRollUpRows && this.currRow !== newRow) {\n\t\t\t// clear all rows first\n\t\t\tfor (let i = 0; i < NR_ROWS; i++) {\n\t\t\t\tthis.rows[i].clear();\n\t\t\t}\n\n\t\t\t// Copy this.nrRollUpRows rows from lastOutputScreen and place it in the newRow location\n\t\t\t// topRowIndex - the start of rows to copy (inclusive index)\n\t\t\tconst topRowIndex = this.currRow + 1 - this.nrRollUpRows;\n\t\t\t// We only copy if the last position was already shown.\n\t\t\t// We use the cueStartTime value to check this.\n\t\t\tconst lastOutputScreen = this.lastOutputScreen;\n\t\t\tif (lastOutputScreen) {\n\t\t\t\tconst prevLineTime = lastOutputScreen.rows[topRowIndex].cueStartTime;\n\t\t\t\tconst time = this.logger.time;\n\t\t\t\tif (prevLineTime !== null && time !== null && prevLineTime < time) {\n\t\t\t\t\tfor (let i = 0; i < this.nrRollUpRows; i++) {\n\t\t\t\t\t\tthis.rows[newRow - this.nrRollUpRows + i + 1].copy(\n\t\t\t\t\t\t\tlastOutputScreen.rows[topRowIndex + i],\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.currRow = newRow;\n\t\tconst row = this.rows[this.currRow];\n\t\tif (pacData.indent !== null) {\n\t\t\tconst indent = pacData.indent;\n\t\t\tconst prevPos = Math.max(indent - 1, 0);\n\t\t\trow.setCursor(pacData.indent);\n\t\t\tpacData.color = row.chars[prevPos].penState.foreground;\n\t\t}\n\t\tconst styles: PenStyles = {\n\t\t\tforeground: pacData.color,\n\t\t\tunderline: pacData.underline,\n\t\t\titalics: pacData.italics,\n\t\t\tbackground: 'black',\n\t\t\tflash: false,\n\t\t};\n\t\tthis.setPen(styles);\n\t}\n\n\t/**\n\t * Set background/extra foreground, but first do back_space, and then insert space (backwards compatibility).\n\t */\n\tsetBkgData(bkgData: Partial<PenStyles>): void {\n\t\tthis.logger.log(\n\t\t\tVerboseLevel.INFO,\n\t\t\t() => 'bkgData = ' + JSON.stringify(bkgData),\n\t\t);\n\t\tthis.backSpace();\n\t\tthis.setPen(bkgData);\n\t\tthis.insertChar(0x20); // Space\n\t}\n\n\tsetRollUpRows(nrRows: number | null): void {\n\t\tthis.nrRollUpRows = nrRows;\n\t}\n\n\trollUp(): void {\n\t\tif (this.nrRollUpRows === null) {\n\t\t\tthis.logger.log(\n\t\t\t\tVerboseLevel.DEBUG,\n\t\t\t\t'roll_up but nrRollUpRows not set yet',\n\t\t\t);\n\t\t\treturn; // Not properly setup\n\t\t}\n\t\tthis.logger.log(VerboseLevel.TEXT, () => this.getDisplayText());\n\t\tconst topRowIndex = this.currRow + 1 - this.nrRollUpRows;\n\t\tconst topRow = this.rows.splice(topRowIndex, 1)[0];\n\t\ttopRow.clear();\n\t\tthis.rows.splice(this.currRow, 0, topRow);\n\t\tthis.logger.log(VerboseLevel.INFO, 'Rolling up');\n\t}\n\n\t/**\n\t * Get all non-empty rows with as unicode text.\n\t */\n\tgetDisplayText(asOneRow?: boolean): string {\n\t\tasOneRow = asOneRow || false;\n\t\tconst displayText: string[] = [];\n\t\tlet text = '';\n\t\tlet rowNr = -1;\n\t\tfor (let i = 0; i < NR_ROWS; i++) {\n\t\t\tconst rowText = this.rows[i].getTextString();\n\t\t\tif (rowText) {\n\t\t\t\trowNr = i + 1;\n\t\t\t\tif (asOneRow) {\n\t\t\t\t\tdisplayText.push('Row ' + rowNr + \": '\" + rowText + \"'\");\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tdisplayText.push(rowText.trim());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (displayText.length > 0) {\n\t\t\tif (asOneRow) {\n\t\t\t\ttext = '[' + displayText.join(' | ') + ']';\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttext = displayText.join('\\n');\n\t\t\t}\n\t\t}\n\t\treturn text;\n\t}\n\n\tgetTextAndFormat(): Row[] {\n\t\treturn this.rows;\n\t}\n}\n","/**\n *\n * This code was ported from the dash.js project at:\n *   https://github.com/Dash-Industry-Forum/dash.js/blob/development/externals/cea608-parser.js\n *   https://github.com/Dash-Industry-Forum/dash.js/commit/8269b26a761e0853bb21d78780ed945144ecdd4d#diff-71bc295a2d6b6b7093a1d3290d53a4b2\n *\n * The original copyright appears below:\n *\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2015-2016, DASH Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  1. Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  2. Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport type { CaptionModes } from './CaptionModes.js';\nimport { CaptionScreen } from './CaptionScreen.js';\nimport { CaptionsLogger } from './CaptionsLogger.js';\nimport type { CueHandler } from './CueHandler.js';\nimport type { PACData } from './PACData.js';\nimport type { PenStyles } from './PenStyles.js';\nimport { VerboseLevel } from './VerboseLevel.js';\n\n/**\n * CTA-608 Channel\n *\n * @group CTA-608\n * @beta\n */\nexport class Cta608Channel {\n\tprivate chNr: number;\n\tprivate outputFilter: CueHandler;\n\tprivate mode: CaptionModes;\n\tprivate displayedMemory: CaptionScreen;\n\tprivate nonDisplayedMemory: CaptionScreen;\n\tprivate lastOutputScreen: CaptionScreen;\n\tprivate writeScreen: CaptionScreen;\n\tprivate cueStartTime: number | null;\n\tprivate logger: CaptionsLogger;\n\n\tconstructor(\n\t\tchannelNumber: number,\n\t\toutputFilter: CueHandler,\n\t\tlogger: CaptionsLogger = new CaptionsLogger(),\n\t) {\n\t\tthis.chNr = channelNumber;\n\t\tthis.outputFilter = outputFilter;\n\t\tthis.mode = null;\n\t\tthis.displayedMemory = new CaptionScreen(logger);\n\t\tthis.nonDisplayedMemory = new CaptionScreen(logger);\n\t\tthis.lastOutputScreen = new CaptionScreen(logger);\n\t\tthis.writeScreen = this.displayedMemory;\n\t\tthis.mode = null;\n\t\tthis.cueStartTime = null; // Keeps track of where a cue started.\n\t\tthis.logger = logger;\n\n\t\tthis.logger.log(VerboseLevel.INFO, 'new Cea608Channel(' + this.chNr + ')');\n\t}\n\n\treset(): void {\n\t\tthis.mode = null;\n\t\tthis.displayedMemory.reset();\n\t\tthis.nonDisplayedMemory.reset();\n\t\tthis.lastOutputScreen.reset();\n\t\tthis.outputFilter?.reset?.();\n\t\tthis.writeScreen = this.displayedMemory;\n\t\tthis.mode = null;\n\t\tthis.cueStartTime = null;\n\t}\n\n\tsetPAC(pacData: PACData): void {\n\t\tthis.writeScreen.setPAC(pacData);\n\t}\n\n\tsetBkgData(bkgData: Partial<PenStyles>): void {\n\t\tthis.writeScreen.setBkgData(bkgData);\n\t}\n\n\tsetMode(newMode: CaptionModes): void {\n\t\tif (newMode === this.mode) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.mode = newMode;\n\t\tthis.logger.log(VerboseLevel.INFO, () => 'MODE=' + newMode);\n\t\tif (this.mode === 'MODE_POP-ON') {\n\t\t\tthis.writeScreen = this.nonDisplayedMemory;\n\t\t}\n\t\telse {\n\t\t\tthis.writeScreen = this.displayedMemory;\n\t\t\tthis.writeScreen.reset();\n\t\t}\n\t\tif (this.mode !== 'MODE_ROLL-UP') {\n\t\t\tthis.displayedMemory.setRollUpRows(null);\n\t\t\tthis.nonDisplayedMemory.setRollUpRows(null);\n\t\t}\n\t\tthis.mode = newMode;\n\t}\n\n\tinsertChars(chars: number[]): void {\n\t\tfor (let i = 0; i < chars.length; i++) {\n\t\t\tthis.writeScreen.insertChar(chars[i]);\n\t\t}\n\n\t\tconst screen =\n\t\t\tthis.writeScreen === this.displayedMemory ? 'DISP' : 'NON_DISP';\n\t\tthis.logger.log(\n\t\t\tVerboseLevel.INFO,\n\t\t\t() => screen + ': ' + this.writeScreen.getDisplayText(true),\n\t\t);\n\t\tif (this.mode === 'MODE_PAINT-ON' || this.mode === 'MODE_ROLL-UP') {\n\t\t\tthis.logger.log(\n\t\t\t\tVerboseLevel.TEXT,\n\t\t\t\t() => 'DISPLAYED: ' + this.displayedMemory.getDisplayText(true),\n\t\t\t);\n\t\t\tthis.outputDataUpdate();\n\t\t}\n\t}\n\n\tccRCL(): void {\n\t\t// Resume Caption Loading (switch mode to Pop On)\n\t\tthis.logger.log(VerboseLevel.INFO, 'RCL - Resume Caption Loading');\n\t\tthis.setMode('MODE_POP-ON');\n\t}\n\n\tccBS(): void {\n\t\t// BackSpace\n\t\tthis.logger.log(VerboseLevel.INFO, 'BS - BackSpace');\n\t\tif (this.mode === 'MODE_TEXT') {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.writeScreen.backSpace();\n\t\tif (this.writeScreen === this.displayedMemory) {\n\t\t\tthis.outputDataUpdate();\n\t\t}\n\t}\n\n\tccAOF(): void {\n\t\t// Reserved (formerly Alarm Off)\n\t}\n\n\tccAON(): void {\n\t\t// Reserved (formerly Alarm On)\n\t}\n\n\tccDER(): void {\n\t\t// Delete to End of Row\n\t\tthis.logger.log(VerboseLevel.INFO, 'DER- Delete to End of Row');\n\t\tthis.writeScreen.clearToEndOfRow();\n\t\tthis.outputDataUpdate();\n\t}\n\n\tccRU(nrRows: number | null): void {\n\t\t// Roll-Up Captions-2,3,or 4 Rows\n\t\tthis.logger.log(VerboseLevel.INFO, 'RU(' + nrRows + ') - Roll Up');\n\t\tthis.writeScreen = this.displayedMemory;\n\t\tthis.setMode('MODE_ROLL-UP');\n\t\tthis.writeScreen.setRollUpRows(nrRows);\n\t}\n\n\tccFON(): void {\n\t\t// Flash On\n\t\tthis.logger.log(VerboseLevel.INFO, 'FON - Flash On');\n\t\tthis.writeScreen.setPen({ flash: true });\n\t}\n\n\tccRDC(): void {\n\t\t// Resume Direct Captioning (switch mode to PaintOn)\n\t\tthis.logger.log(VerboseLevel.INFO, 'RDC - Resume Direct Captioning');\n\t\tthis.setMode('MODE_PAINT-ON');\n\t}\n\n\tccTR(): void {\n\t\t// Text Restart in text mode (not supported, however)\n\t\tthis.logger.log(VerboseLevel.INFO, 'TR');\n\t\tthis.setMode('MODE_TEXT');\n\t}\n\n\tccRTD(): void {\n\t\t// Resume Text Display in Text mode (not supported, however)\n\t\tthis.logger.log(VerboseLevel.INFO, 'RTD');\n\t\tthis.setMode('MODE_TEXT');\n\t}\n\n\tccEDM(): void {\n\t\t// Erase Displayed Memory\n\t\tthis.logger.log(VerboseLevel.INFO, 'EDM - Erase Displayed Memory');\n\t\tthis.displayedMemory.reset();\n\t\tthis.outputDataUpdate(true);\n\t}\n\n\tccCR(): void {\n\t\t// Carriage Return\n\t\tthis.logger.log(VerboseLevel.INFO, 'CR - Carriage Return');\n\t\tthis.writeScreen.rollUp();\n\t\tthis.outputDataUpdate(true);\n\t}\n\n\tccENM(): void {\n\t\t// Erase Non-Displayed Memory\n\t\tthis.logger.log(VerboseLevel.INFO, 'ENM - Erase Non-displayed Memory');\n\t\tthis.nonDisplayedMemory.reset();\n\t}\n\n\tccEOC(): void {\n\t\t// End of Caption (Flip Memories)\n\t\tthis.logger.log(VerboseLevel.INFO, 'EOC - End Of Caption');\n\t\tif (this.mode === 'MODE_POP-ON') {\n\t\t\tconst tmp = this.displayedMemory;\n\t\t\tthis.displayedMemory = this.nonDisplayedMemory;\n\t\t\tthis.nonDisplayedMemory = tmp;\n\t\t\tthis.writeScreen = this.nonDisplayedMemory;\n\t\t\tthis.logger.log(\n\t\t\t\tVerboseLevel.TEXT,\n\t\t\t\t() => 'DISP: ' + this.displayedMemory.getDisplayText(),\n\t\t\t);\n\t\t}\n\t\tthis.outputDataUpdate(true);\n\t}\n\n\tccTO(nrCols: number): void {\n\t\t// Tab Offset 1,2, or 3 columns\n\t\tthis.logger.log(VerboseLevel.INFO, 'TO(' + nrCols + ') - Tab Offset');\n\t\tthis.writeScreen.moveCursor(nrCols);\n\t}\n\n\tccMIDROW(secondByte: number): void {\n\t\t// Parse MIDROW command\n\t\tconst styles: Partial<PenStyles> = { flash: false };\n\t\tstyles.underline = secondByte % 2 === 1;\n\t\tstyles.italics = secondByte >= 0x2e;\n\t\tif (!styles.italics) {\n\t\t\tconst colorIndex = Math.floor(secondByte / 2) - 0x10;\n\t\t\tconst colors = [\n\t\t\t\t'white',\n\t\t\t\t'green',\n\t\t\t\t'blue',\n\t\t\t\t'cyan',\n\t\t\t\t'red',\n\t\t\t\t'yellow',\n\t\t\t\t'magenta',\n\t\t\t];\n\t\t\tstyles.foreground = colors[colorIndex];\n\t\t}\n\t\telse {\n\t\t\tstyles.foreground = 'white';\n\t\t}\n\t\tthis.logger.log(VerboseLevel.INFO, 'MIDROW: ' + JSON.stringify(styles));\n\t\tthis.writeScreen.setPen(styles);\n\t}\n\n\toutputDataUpdate(dispatch: boolean = false): void {\n\t\tconst time = this.logger.time;\n\t\tif (time === null) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.outputFilter) {\n\t\t\tif (this.cueStartTime === null && !this.displayedMemory.isEmpty()) {\n\t\t\t\t// Start of a new cue\n\t\t\t\tthis.cueStartTime = time;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (!this.displayedMemory.equals(this.lastOutputScreen)) {\n\t\t\t\t\tthis.outputFilter.newCue(\n\t\t\t\t\t\tthis.cueStartTime!,\n\t\t\t\t\t\ttime,\n\t\t\t\t\t\tthis.lastOutputScreen,\n\t\t\t\t\t);\n\t\t\t\t\tif (dispatch && this.outputFilter.dispatchCue) {\n\t\t\t\t\t\tthis.outputFilter.dispatchCue();\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.cueStartTime = this.displayedMemory.isEmpty() ? null : time;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.lastOutputScreen.copy(this.displayedMemory);\n\t\t}\n\t}\n\n\tcueSplitAtTime(t: number): void {\n\t\tif (this.outputFilter) {\n\t\t\tif (!this.displayedMemory.isEmpty()) {\n\t\t\t\tif (this.outputFilter.newCue) {\n\t\t\t\t\tthis.outputFilter.newCue(this.cueStartTime!, t, this.displayedMemory);\n\t\t\t\t}\n\n\t\t\t\tthis.cueStartTime = t;\n\t\t\t}\n\t\t}\n\t}\n}\n","export const backgroundColors: string[] = [\n\t'white',\n\t'green',\n\t'blue',\n\t'cyan',\n\t'red',\n\t'yellow',\n\t'magenta',\n\t'black',\n\t'transparent',\n];\n","import type { CmdHistory } from '../CmdHistory.js';\n\nexport function hasCmdRepeated(a: number, b: number, cmdHistory: CmdHistory): boolean {\n\treturn cmdHistory.a === a && cmdHistory.b === b;\n}\n","export const numArrayToHexArray = function (numArray: number[]): string[] {\n\tconst hexArray: string[] = [];\n\tfor (let j = 0; j < numArray.length; j++) {\n\t\thexArray.push(numArray[j].toString(16));\n\t}\n\n\treturn hexArray;\n};\n","export const rowsHighCh1: { [key: number]: number; } = {\n\t17: 2,\n\t18: 4,\n\t21: 6,\n\t22: 8,\n\t23: 10,\n\t19: 13,\n\t20: 15,\n};\n","export const rowsHighCh2: { [key: number]: number; } = {\n\t25: 2,\n\t26: 4,\n\t29: 6,\n\t30: 8,\n\t31: 10,\n\t27: 13,\n\t28: 15,\n};\n","// Tables to look up row from PAC data\n\nexport const rowsLowCh1: { [key: number]: number; } = {\n\t17: 1,\n\t18: 3,\n\t21: 5,\n\t22: 7,\n\t23: 9,\n\t16: 11,\n\t19: 12,\n\t20: 14,\n};\n","export const rowsLowCh2: { [key: number]: number; } = {\n\t25: 1,\n\t26: 3,\n\t29: 5,\n\t30: 7,\n\t31: 9,\n\t24: 11,\n\t27: 12,\n\t28: 14,\n};\n","import type { CmdHistory } from '../CmdHistory.js';\n\nexport function setLastCmd(\n\ta: number | null,\n\tb: number | null,\n\tcmdHistory: CmdHistory,\n): void {\n\tcmdHistory.a = a;\n\tcmdHistory.b = b;\n}\n","/**\n *\n * This code was ported from the dash.js project at:\n *   https://github.com/Dash-Industry-Forum/dash.js/blob/development/externals/cea608-parser.js\n *   https://github.com/Dash-Industry-Forum/dash.js/commit/8269b26a761e0853bb21d78780ed945144ecdd4d#diff-71bc295a2d6b6b7093a1d3290d53a4b2\n *\n * The original copyright appears below:\n *\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2015-2016, DASH Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  1. Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  2. Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport { CaptionsLogger } from './CaptionsLogger.js';\nimport type { Channels } from './Channels.js';\nimport type { CmdHistory } from './CmdHistory.js';\nimport { Cta608Channel } from './Cta608Channel.js';\nimport type { PACData } from './PACData.js';\nimport type { PenStyles } from './PenStyles.js';\nimport type { SupportedField } from './SupportedField.js';\nimport { VerboseLevel } from './VerboseLevel.js';\nimport { backgroundColors } from './utils/backgroundColors.js';\nimport { createCmdHistory } from './utils/createCmdHistory.js';\nimport { getCharForByte } from './utils/getCharForByte.js';\nimport { hasCmdRepeated } from './utils/hasCmdRepeated.js';\nimport { numArrayToHexArray } from './utils/numArrayToHexArray.js';\nimport { rowsHighCh1 } from './utils/rowsHighCh1.js';\nimport { rowsHighCh2 } from './utils/rowsHighCh2.js';\nimport { rowsLowCh1 } from './utils/rowsLowCh1.js';\nimport { rowsLowCh2 } from './utils/rowsLowCh2.js';\nimport { setLastCmd } from './utils/setLastCmd.js';\n\n/**\n * CEA-608 caption parser.\n *\n * @group CTA-608\n * @beta\n */\nexport class Cta608Parser {\n\tprivate channels: Array<Cta608Channel | null>;\n\tprivate currentChannel: Channels = 0;\n\tprivate cmdHistory: CmdHistory = createCmdHistory();\n\tprivate logger: CaptionsLogger;\n\tprivate lastTime: number | null = null;\n\n\tconstructor(field: SupportedField, out1: any, out2: any) {\n\t\tconst logger = (this.logger = new CaptionsLogger());\n\t\tthis.channels = [\n\t\t\tnull,\n\t\t\tnew Cta608Channel(field, out1, logger),\n\t\t\tnew Cta608Channel(field + 1, out2, logger),\n\t\t];\n\t}\n\n\t/**\n\t * Add data for time t in forms of list of bytes (unsigned ints). The bytes are treated as pairs.\n\t *\n\t * @param time - The time in milliseconds\n\t * @param byteList - The list of bytes\n\t */\n\taddData(time: number | null, byteList: number[]): void {\n\t\tthis.lastTime = time;\n\t\tthis.logger.time = time;\n\n\t\tfor (let i = 0; i < byteList.length; i += 2) {\n\t\t\tconst a = byteList[i] & 0x7f;\n\t\t\tconst b = byteList[i + 1] & 0x7f;\n\t\t\tlet cmdFound: boolean = false;\n\t\t\tlet charsFound: number[] | null = null;\n\n\t\t\tif (this.lastTime !== null) {\n\t\t\t\ttime = this.lastTime + 0.5 * i * 1001 / 30000;\n\t\t\t\tthis.logger.time = time;\n\t\t\t}\n\n\t\t\tif (a === 0 && b === 0) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.logger.log(\n\t\t\t\t\tVerboseLevel.DATA,\n\t\t\t\t\t() =>\n\t\t\t\t\t\t'[' +\n\t\t\t\t\t\tnumArrayToHexArray([byteList[i], byteList[i + 1]]) +\n\t\t\t\t\t\t'] -> (' +\n\t\t\t\t\t\tnumArrayToHexArray([a, b]) +\n\t\t\t\t\t\t')',\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tconst cmdHistory = this.cmdHistory;\n\t\t\tconst isControlCode = a >= 0x10 && a <= 0x1f;\n\t\t\tif (isControlCode) {\n\t\t\t\t// Skip redundant control codes\n\t\t\t\tif (hasCmdRepeated(a, b, cmdHistory)) {\n\t\t\t\t\tsetLastCmd(null, null, cmdHistory);\n\t\t\t\t\tthis.logger.log(\n\t\t\t\t\t\tVerboseLevel.DEBUG,\n\t\t\t\t\t\t() =>\n\t\t\t\t\t\t\t'Repeated command (' +\n\t\t\t\t\t\t\tnumArrayToHexArray([a, b]) +\n\t\t\t\t\t\t\t') is dropped',\n\t\t\t\t\t);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tsetLastCmd(a, b, this.cmdHistory);\n\n\t\t\t\tcmdFound = this.parseCmd(a, b);\n\n\t\t\t\tif (!cmdFound) {\n\t\t\t\t\tcmdFound = this.parseMidrow(a, b);\n\t\t\t\t}\n\n\t\t\t\tif (!cmdFound) {\n\t\t\t\t\tcmdFound = this.parsePAC(a, b);\n\t\t\t\t}\n\n\t\t\t\tif (!cmdFound) {\n\t\t\t\t\tcmdFound = this.parseBackgroundAttributes(a, b);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tsetLastCmd(null, null, cmdHistory);\n\t\t\t}\n\n\t\t\tif (!cmdFound) {\n\t\t\t\tcharsFound = this.parseChars(a, b);\n\t\t\t\tif (charsFound.length) {\n\t\t\t\t\tconst currChNr = this.currentChannel;\n\t\t\t\t\tif (currChNr && currChNr > 0) {\n\t\t\t\t\t\tconst channel = this.channels[currChNr] as Cta608Channel;\n\t\t\t\t\t\tchannel.insertChars(charsFound);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.logger.log(\n\t\t\t\t\t\t\tVerboseLevel.WARNING,\n\t\t\t\t\t\t\t'No channel found yet. TEXT-MODE?',\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!cmdFound && !charsFound) {\n\t\t\t\tthis.logger.log(\n\t\t\t\t\tVerboseLevel.WARNING,\n\t\t\t\t\t() =>\n\t\t\t\t\t\t\"Couldn't parse cleaned data \" +\n\t\t\t\t\t\tnumArrayToHexArray([a, b]) +\n\t\t\t\t\t\t' orig: ' +\n\t\t\t\t\t\tnumArrayToHexArray([byteList[i], byteList[i + 1]]),\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Parse Command.\n\t *\n\t * @param a - The first byte\n\t * @param b - The second byte\n\t * @returns True if a command was found\n\t */\n\tprivate parseCmd(a: number, b: number): boolean {\n\n\t\tconst cond1 =\n\t\t\t(a === 0x14 || a === 0x1c || a === 0x15 || a === 0x1d) &&\n\t\t\tb >= 0x20 &&\n\t\t\tb <= 0x2f;\n\t\tconst cond2 = (a === 0x17 || a === 0x1f) && b >= 0x21 && b <= 0x23;\n\t\tif (!(cond1 || cond2)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst chNr = a === 0x14 || a === 0x15 || a === 0x17 ? 1 : 2;\n\t\tconst channel = this.channels[chNr] as Cta608Channel;\n\n\t\tif (a === 0x14 || a === 0x15 || a === 0x1c || a === 0x1d) {\n\t\t\tif (b === 0x20) {\n\t\t\t\tchannel.ccRCL();\n\t\t\t}\n\t\t\telse if (b === 0x21) {\n\t\t\t\tchannel.ccBS();\n\t\t\t}\n\t\t\telse if (b === 0x22) {\n\t\t\t\tchannel.ccAOF();\n\t\t\t}\n\t\t\telse if (b === 0x23) {\n\t\t\t\tchannel.ccAON();\n\t\t\t}\n\t\t\telse if (b === 0x24) {\n\t\t\t\tchannel.ccDER();\n\t\t\t}\n\t\t\telse if (b === 0x25) {\n\t\t\t\tchannel.ccRU(2);\n\t\t\t}\n\t\t\telse if (b === 0x26) {\n\t\t\t\tchannel.ccRU(3);\n\t\t\t}\n\t\t\telse if (b === 0x27) {\n\t\t\t\tchannel.ccRU(4);\n\t\t\t}\n\t\t\telse if (b === 0x28) {\n\t\t\t\tchannel.ccFON();\n\t\t\t}\n\t\t\telse if (b === 0x29) {\n\t\t\t\tchannel.ccRDC();\n\t\t\t}\n\t\t\telse if (b === 0x2a) {\n\t\t\t\tchannel.ccTR();\n\t\t\t}\n\t\t\telse if (b === 0x2b) {\n\t\t\t\tchannel.ccRTD();\n\t\t\t}\n\t\t\telse if (b === 0x2c) {\n\t\t\t\tchannel.ccEDM();\n\t\t\t}\n\t\t\telse if (b === 0x2d) {\n\t\t\t\tchannel.ccCR();\n\t\t\t}\n\t\t\telse if (b === 0x2e) {\n\t\t\t\tchannel.ccENM();\n\t\t\t}\n\t\t\telse if (b === 0x2f) {\n\t\t\t\tchannel.ccEOC();\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\t// a == 0x17 || a == 0x1F\n\t\t\tchannel.ccTO(b - 0x20);\n\t\t}\n\n\t\tthis.currentChannel = chNr;\n\t\treturn true;\n\t}\n\n\t/**\n\t * Parse midrow styling command\n\t *\n\t * @param a - The first byte\n\t * @param b - The second byte\n\t * @returns `true` if midrow styling command was found\n\t */\n\tprivate parseMidrow(a: number, b: number): boolean {\n\t\tlet chNr: number = 0;\n\n\t\tif ((a === 0x11 || a === 0x19) && b >= 0x20 && b <= 0x2f) {\n\t\t\tif (a === 0x11) {\n\t\t\t\tchNr = 1;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tchNr = 2;\n\t\t\t}\n\n\t\t\tif (chNr !== this.currentChannel) {\n\t\t\t\tthis.logger.log(\n\t\t\t\t\tVerboseLevel.ERROR,\n\t\t\t\t\t'Mismatch channel in midrow parsing',\n\t\t\t\t);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tconst channel = this.channels[chNr];\n\t\t\tif (!channel) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tchannel.ccMIDROW(b);\n\t\t\tthis.logger.log(\n\t\t\t\tVerboseLevel.DEBUG,\n\t\t\t\t() => 'MIDROW (' + numArrayToHexArray([a, b]) + ')',\n\t\t\t);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Parse Preable Access Codes (Table 53).\n\t *\n\t * @param a - The first byte\n\t * @param b - The second byte\n\t * @returns A Boolean that tells if PAC found\n\t */\n\tprivate parsePAC(a: number, b: number): boolean {\n\t\tlet row: number;\n\n\t\tconst case1 =\n\t\t\t((a >= 0x11 && a <= 0x17) || (a >= 0x19 && a <= 0x1f)) &&\n\t\t\tb >= 0x40 &&\n\t\t\tb <= 0x7f;\n\t\tconst case2 = (a === 0x10 || a === 0x18) && b >= 0x40 && b <= 0x5f;\n\t\tif (!(case1 || case2)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst chNr: Channels = a <= 0x17 ? 1 : 2;\n\n\t\tif (b >= 0x40 && b <= 0x5f) {\n\t\t\trow = chNr === 1 ? rowsLowCh1[a] : rowsLowCh2[a];\n\t\t}\n\t\telse {\n\t\t\t// 0x60 <= b <= 0x7F\n\t\t\trow = chNr === 1 ? rowsHighCh1[a] : rowsHighCh2[a];\n\t\t}\n\t\tconst channel = this.channels[chNr];\n\t\tif (!channel) {\n\t\t\treturn false;\n\t\t}\n\t\tchannel.setPAC(this.interpretPAC(row, b));\n\t\tthis.currentChannel = chNr;\n\t\treturn true;\n\t}\n\n\t/**\n\t * Interpret the second byte of the pac, and return the information.\n\t *\n\t * @param row - The row number\n\t * @param byte - The second byte\n\t * @returns pacData with style parameters\n\t */\n\tprivate interpretPAC(row: number, byte: number): PACData {\n\t\tlet pacIndex;\n\t\tconst pacData: PACData = {\n\t\t\tcolor: null,\n\t\t\titalics: false,\n\t\t\tindent: null,\n\t\t\tunderline: false,\n\t\t\trow: row,\n\t\t};\n\n\t\tif (byte > 0x5f) {\n\t\t\tpacIndex = byte - 0x60;\n\t\t}\n\t\telse {\n\t\t\tpacIndex = byte - 0x40;\n\t\t}\n\n\t\tpacData.underline = (pacIndex & 1) === 1;\n\t\tif (pacIndex <= 0xd) {\n\t\t\tpacData.color = [\n\t\t\t\t'white',\n\t\t\t\t'green',\n\t\t\t\t'blue',\n\t\t\t\t'cyan',\n\t\t\t\t'red',\n\t\t\t\t'yellow',\n\t\t\t\t'magenta',\n\t\t\t\t'white',\n\t\t\t][Math.floor(pacIndex / 2)];\n\t\t}\n\t\telse if (pacIndex <= 0xf) {\n\t\t\tpacData.italics = true;\n\t\t\tpacData.color = 'white';\n\t\t}\n\t\telse {\n\t\t\tpacData.indent = Math.floor((pacIndex - 0x10) / 2) * 4;\n\t\t}\n\t\treturn pacData; // Note that row has zero offset. The spec uses 1.\n\t}\n\n\t/**\n\t * Parse characters.\n\t *\n\t * @param a - The first byte\n\t * @param b - The second byte\n\t * @returns An array with 1 to 2 codes corresponding to chars, if found. null otherwise.\n\t */\n\tprivate parseChars(a: number, b: number): number[] {\n\t\tlet channelNr: Channels;\n\t\tlet charCodes: number[] = [];\n\t\tlet charCode1: number | null = null;\n\n\t\tif (a >= 0x19) {\n\t\t\tchannelNr = 2;\n\t\t\tcharCode1 = a - 8;\n\t\t}\n\t\telse {\n\t\t\tchannelNr = 1;\n\t\t\tcharCode1 = a;\n\t\t}\n\t\tif (charCode1 >= 0x11 && charCode1 <= 0x13) {\n\t\t\t// Special character\n\t\t\tlet oneCode: number;\n\t\t\tif (charCode1 === 0x11) {\n\t\t\t\toneCode = b + 0x50;\n\t\t\t}\n\t\t\telse if (charCode1 === 0x12) {\n\t\t\t\toneCode = b + 0x70;\n\t\t\t}\n\t\t\telse {\n\t\t\t\toneCode = b + 0x90;\n\t\t\t}\n\n\t\t\tthis.logger.log(\n\t\t\t\tVerboseLevel.INFO,\n\t\t\t\t() =>\n\t\t\t\t\t\"Special char '\" +\n\t\t\t\t\tgetCharForByte(oneCode) +\n\t\t\t\t\t\"' in channel \" +\n\t\t\t\t\tchannelNr,\n\t\t\t);\n\t\t\tcharCodes = [oneCode];\n\t\t}\n\t\telse if (a >= 0x20 && a <= 0x7f) {\n\t\t\tcharCodes = b === 0 ? [a] : [a, b];\n\t\t}\n\t\tif (charCodes) {\n\t\t\tthis.logger.log(\n\t\t\t\tVerboseLevel.DEBUG,\n\t\t\t\t() => 'Char codes =  ' + numArrayToHexArray(charCodes).join(','),\n\t\t\t);\n\t\t}\n\t\treturn charCodes;\n\t}\n\n\t/**\n\t * Parse extended background attributes as well as new foreground color black.\n\t *\n\t * @param a - The first byte\n\t * @param b - The second byte\n\t * @returns True if background attributes are found\n\t */\n\tprivate parseBackgroundAttributes(a: number, b: number): boolean {\n\t\tconst case1 = (a === 0x10 || a === 0x18) && b >= 0x20 && b <= 0x2f;\n\t\tconst case2 = (a === 0x17 || a === 0x1f) && b >= 0x2d && b <= 0x2f;\n\t\tif (!(case1 || case2)) {\n\t\t\treturn false;\n\t\t}\n\t\tlet index: number;\n\t\tconst bkgData: Partial<PenStyles> = {};\n\t\tif (a === 0x10 || a === 0x18) {\n\t\t\tindex = Math.floor((b - 0x20) / 2);\n\t\t\tbkgData.background = backgroundColors[index];\n\t\t\tif (b % 2 === 1) {\n\t\t\t\tbkgData.background = bkgData.background + '_semi';\n\t\t\t}\n\t\t}\n\t\telse if (b === 0x2d) {\n\t\t\tbkgData.background = 'transparent';\n\t\t}\n\t\telse {\n\t\t\tbkgData.foreground = 'black';\n\t\t\tif (b === 0x2f) {\n\t\t\t\tbkgData.underline = true;\n\t\t\t}\n\t\t}\n\t\tconst chNr: Channels = a <= 0x17 ? 1 : 2;\n\t\tconst channel: Cta608Channel = this.channels[chNr] as Cta608Channel;\n\t\tchannel.setBkgData(bkgData);\n\t\treturn true;\n\t}\n\n\t/**\n\t * Reset state of parser and its channels.\n\t */\n\treset(): void {\n\t\tfor (let i = 0; i < Object.keys(this.channels).length; i++) {\n\t\t\tconst channel = this.channels[i];\n\t\t\tif (channel) {\n\t\t\t\tchannel.reset();\n\t\t\t}\n\t\t}\n\t\tsetLastCmd(null, null, this.cmdHistory);\n\t}\n\n\t/**\n\t * Trigger the generation of a cue, and the start of a new one if displayScreens are not empty.\n\t */\n\tcueSplitAtTime(t: number): void {\n\t\tfor (let i = 0; i < this.channels.length; i++) {\n\t\t\tconst channel = this.channels[i];\n\t\t\tif (channel) {\n\t\t\t\tchannel.cueSplitAtTime(t);\n\t\t\t}\n\t\t}\n\t}\n}\n","import type { CmdHistory } from '../CmdHistory.js';\n\nexport function createCmdHistory(): CmdHistory {\n\treturn {\n\t\ta: null,\n\t\tb: null,\n\t};\n}\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES, LOSS OF USE, DATA, OR\n *  PROFITS, OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * Metrics Constants declaration\n * @ignore\n */\nexport default {\n    TCP_CONNECTION : 'TcpList',\n    HTTP_REQUEST : 'HttpList',\n    TRACK_SWITCH : 'RepSwitchList',\n    BUFFER_LEVEL : 'BufferLevel',\n    BUFFER_LOADED : 'bufferLoaded',\n    ABANDON_LOAD : 'abandonload',\n    ALLOW_LOAD : 'allowload',\n    BUFFER_EMPTY : 'bufferStalled',\n    BUFFER_STATE : 'BufferState',\n    DVR_INFO : 'DVRInfo',\n    DROPPED_FRAMES : 'DroppedFrames',\n    SCHEDULING_INFO : 'SchedulingInfo',\n    REQUESTS_QUEUE : 'RequestsQueue',\n    MANIFEST_UPDATE : 'ManifestUpdate',\n    MANIFEST_UPDATE_STREAM_INFO : 'ManifestUpdatePeriodInfo',\n    MANIFEST_UPDATE_TRACK_INFO : 'ManifestUpdateRepresentationInfo',\n    PLAY_LIST : 'PlayList',\n    DVB_ERRORS : 'DVBErrors',\n    HTTP_REQUEST_DVB_REPORTING_TYPE : 'DVBReporting',\n}\n\n\n\n\n\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport Constants from '../constants/Constants.js';\nimport EventBus from '../../core/EventBus.js';\nimport Events from '../../core/events/Events.js';\nimport FactoryMaker from '../../core/FactoryMaker.js';\nimport Debug from '../../core/Debug.js';\nimport MediaPlayerEvents from '../../streaming/MediaPlayerEvents.js';\nimport MetricsConstants from '../constants/MetricsConstants.js';\n\nconst LIVE_UPDATE_PLAYBACK_TIME_INTERVAL_MS = 500;\n\nfunction PlaybackController() {\n\n    const context = this.context;\n    const eventBus = EventBus(context).getInstance();\n\n    let instance,\n        logger,\n        streamController,\n        serviceDescriptionController,\n        dashMetrics,\n        adapter,\n        videoModel,\n        timelineConverter,\n        wallclockTimeIntervalId,\n        liveDelay,\n        originalLiveDelay,\n        streamInfo,\n        isDynamic,\n        playOnceInitialized,\n        lastLivePlaybackTime,\n        lastLiveUpdateTime,\n        availabilityStartTime,\n        availabilityTimeComplete,\n        lowLatencyModeEnabled,\n        seekTarget,\n        internalSeek,\n        playbackStalled,\n        manifestUpdateInProgress,\n        initialCatchupModeActivated,\n        settings;\n\n    function setup() {\n        logger = Debug(context).getInstance().getLogger(instance);\n\n        reset();\n    }\n\n    /**\n     * Reset all settings\n     */\n    function reset() {\n        pause();\n        playOnceInitialized = false;\n        liveDelay = 0;\n        originalLiveDelay = 0;\n        availabilityStartTime = 0;\n        manifestUpdateInProgress = false;\n        availabilityTimeComplete = true;\n        lowLatencyModeEnabled = false;\n        initialCatchupModeActivated = false;\n        seekTarget = NaN;\n        lastLiveUpdateTime = NaN;\n\n        if (videoModel) {\n            eventBus.off(Events.DATA_UPDATE_COMPLETED, _onDataUpdateCompleted, instance);\n            eventBus.off(Events.MANIFEST_UPDATED, _onManifestUpdated, instance);\n            eventBus.off(Events.STREAMS_COMPOSED, _onStreamsComposed, instance);\n            eventBus.off(MediaPlayerEvents.PLAYBACK_ENDED, _onPlaybackEnded, instance);\n            eventBus.off(MediaPlayerEvents.STREAM_INITIALIZING, _onStreamInitializing, instance);\n            eventBus.off(MediaPlayerEvents.REPRESENTATION_SWITCH, _onRepresentationSwitch, instance);\n            eventBus.off(MediaPlayerEvents.BUFFER_LEVEL_STATE_CHANGED, _onBufferLevelStateChanged, instance);\n            stopUpdatingWallclockTime();\n            removeAllListeners();\n        }\n\n        wallclockTimeIntervalId = null;\n        videoModel = null;\n        streamInfo = null;\n        isDynamic = null;\n    }\n\n    /**\n     * Initializes the PlaybackController. This function is called whenever the stream is switched.\n     * @param {object} sInfo\n     * @param {boolean} periodSwitch\n     */\n    function initialize(sInfo, periodSwitch) {\n        streamInfo = sInfo;\n\n        if (periodSwitch !== true) {\n            _initializeForFirstStream();\n        }\n    }\n\n    /**\n     * Initializes the PlaybackController when the first stream is to be played.\n     * @private\n     */\n    function _initializeForFirstStream() {\n        addAllListeners();\n        isDynamic = streamInfo.manifestInfo.isDynamic;\n\n        playbackStalled = false;\n        internalSeek = false;\n\n        eventBus.on(Events.DATA_UPDATE_COMPLETED, _onDataUpdateCompleted, instance);\n        eventBus.on(Events.MANIFEST_UPDATED, _onManifestUpdated, instance);\n        eventBus.on(Events.STREAMS_COMPOSED, _onStreamsComposed, instance);\n        eventBus.on(MediaPlayerEvents.PLAYBACK_ENDED, _onPlaybackEnded, instance, { priority: EventBus.EVENT_PRIORITY_HIGH });\n        eventBus.on(MediaPlayerEvents.STREAM_INITIALIZING, _onStreamInitializing, instance);\n        eventBus.on(MediaPlayerEvents.REPRESENTATION_SWITCH, _onRepresentationSwitch, instance);\n        eventBus.on(MediaPlayerEvents.BUFFER_LEVEL_STATE_CHANGED, _onBufferLevelStateChanged, instance);\n        eventBus.on(MediaPlayerEvents.DYNAMIC_TO_STATIC, _onDynamicToStatic, instance);\n\n        if (playOnceInitialized) {\n            playOnceInitialized = false;\n            play();\n        }\n    }\n\n    /**\n     * Returns stalled state\n     * @return {boolean}\n     */\n    function getPlaybackStalled() {\n        return playbackStalled\n    }\n\n    /**\n     * Returns remaining duration of a period\n     * @param {object} sInfo\n     * @return {number}\n     */\n    function getTimeToStreamEnd(sInfo = null) {\n        return parseFloat((getStreamEndTime(sInfo) - getTime()).toFixed(5));\n    }\n\n    /**\n     * Returns end time of a period\n     * @param {object} sInfo\n     * @return {number}\n     */\n    function getStreamEndTime(sInfo) {\n        const refInfo = sInfo ? sInfo : streamInfo;\n        return refInfo.start + refInfo.duration;\n    }\n\n    /**\n     * Triggers play() on the video element\n     */\n    function play(adjustLiveDelay = false) {\n        if (streamInfo && videoModel && videoModel.getElement()) {\n            if (adjustLiveDelay && isDynamic) {\n                _adjustLiveDelayAfterUserInteraction(getTime());\n            }\n            videoModel.play();\n        } else {\n            playOnceInitialized = true;\n        }\n    }\n\n    /**\n     * Triggers pause() on the video element\n     */\n    function pause() {\n        if (streamInfo && videoModel) {\n            videoModel.pause();\n        }\n    }\n\n    /**\n     * Triggers a seek to the specified media time. If internal is enabled there will be now \"seeked\" event dispatched\n     * @param {number} time\n     * @param {boolean} stickToBuffered\n     * @param {boolean} internal\n     * @param {boolean} adjustLiveDelay\n     */\n    function seek(time, stickToBuffered = false, internal = false, adjustLiveDelay = false) {\n        if (!streamInfo || !videoModel || !videoModel.getElement()) {\n            return;\n        }\n\n        let currentTime = !isNaN(seekTarget) ? seekTarget : videoModel.getTime();\n        if (time === currentTime) {\n            return;\n        }\n\n        internalSeek = (internal === true);\n\n        if (!internalSeek) {\n            seekTarget = time;\n        }\n        logger.info('Requesting seek to time: ' + time + (internalSeek ? ' (internal)' : ''));\n\n        // We adjust the current latency. If catchup is enabled we will maintain this new latency\n        if (isDynamic && adjustLiveDelay) {\n            _adjustLiveDelayAfterUserInteraction(time);\n        }\n\n        videoModel.setCurrentTime(time, stickToBuffered);\n    }\n\n    /**\n     * Seeks back to the live edge as defined by the originally calculated live delay\n     * @param {boolean} stickToBuffered\n     * @param {boolean} internal\n     * @param {boolean} adjustLiveDelay\n     */\n    function seekToOriginalLive(stickToBuffered = false, internal = false, adjustLiveDelay = false) {\n        const dvrWindowEnd = _getDvrWindowEnd();\n\n        if (dvrWindowEnd === 0) {\n            return;\n        }\n\n        liveDelay = originalLiveDelay;\n        const seektime = dvrWindowEnd - liveDelay;\n\n        seek(seektime, stickToBuffered, internal, adjustLiveDelay);\n    }\n\n    /**\n     * Seeks to the live edge as currently defined by liveDelay\n     * @param {boolean} stickToBuffered\n     * @param {boolean} internal\n     * @param {boolean} adjustLiveDelay\n     */\n    function seekToCurrentLive(stickToBuffered = false, internal = false, adjustLiveDelay = false) {\n        const dvrWindowEnd = _getDvrWindowEnd();\n\n        if (dvrWindowEnd === 0) {\n            return;\n        }\n\n        const seektime = dvrWindowEnd - liveDelay;\n\n        seek(seektime, stickToBuffered, internal, adjustLiveDelay);\n    }\n\n    function _getDvrWindowEnd() {\n        if (!streamInfo || !videoModel || !isDynamic) {\n            return;\n        }\n\n        const type = streamController && streamController.hasVideoTrack() ? Constants.VIDEO : Constants.AUDIO;\n        const dvrInfo = dashMetrics.getCurrentDVRInfo(type);\n\n        return dvrInfo && dvrInfo.range ? dvrInfo.range.end : 0;\n    }\n\n\n    function _adjustLiveDelayAfterUserInteraction(time) {\n        const now = new Date(timelineConverter.getClientReferenceTime());\n        const period = adapter.getRegularPeriods()[0];\n        const nowAsPresentationTime = timelineConverter.calcPresentationTimeFromWallTime(now, period);\n\n        liveDelay = nowAsPresentationTime - time;\n    }\n\n    /**\n     * Returns current time of video element\n     * @return {number|null}\n     */\n    function getTime() {\n        return streamInfo && videoModel ? videoModel.getTime() : null;\n    }\n\n    /**\n     * Returns paused state of the video element\n     * @return {boolean|null}\n     */\n    function isPaused() {\n        return streamInfo && videoModel ? videoModel.isPaused() : null;\n    }\n\n    /**\n     * Returns seeking state of the video element\n     * @return {boolean|null}\n     */\n    function isSeeking() {\n        return streamInfo && videoModel ? videoModel.isSeeking() : null;\n    }\n\n    /**\n     * Returns stalled state of the video element\n     * @return {boolean|null}\n     */\n    function isStalled() {\n        return streamInfo && videoModel ? videoModel.isStalled() : null;\n    }\n\n    function isProgressing(timeoutValue = 500) {\n        return new Promise((resolve) => {\n            let startTime = -1;\n            let timeout = null;\n\n            const _onComplete = (res) => {\n                clearTimeout(timeout);\n                timeout = null;\n                eventBus.off(MediaPlayerEvents.PLAYBACK_TIME_UPDATED, _onPlaybackTimeUpdated, instance);\n                resolve(res);\n            }\n            const _onTimeout = () => {\n                _onComplete(false);\n            }\n            const _onPlaybackTimeUpdated = (e) => {\n                if (startTime < 0) {\n                    startTime = e.time;\n                } else {\n                    if (e.time > startTime + 0.1) {\n                        _onComplete(true);\n                    }\n                }\n            }\n            timeout = setTimeout(_onTimeout, timeoutValue);\n            eventBus.on(MediaPlayerEvents.PLAYBACK_TIME_UPDATED, _onPlaybackTimeUpdated, instance);\n        })\n    }\n\n    /**\n     * Returns current playback rate of the video element\n     * @return {number|null}\n     */\n    function getPlaybackRate() {\n        return streamInfo && videoModel ? videoModel.getPlaybackRate() : null;\n    }\n\n    /**\n     * Returns the played ranges of the video element\n     * @return {array}\n     */\n    function getPlayedRanges() {\n        return streamInfo && videoModel ? videoModel.getPlayedRanges() : null;\n    }\n\n    /**\n     * Returns ended attribute of the video element\n     * @return {boolean|null}\n     */\n    function getEnded() {\n        return streamInfo && videoModel ? videoModel.getEnded() : null;\n    }\n\n    /**\n     * Returns whether a stream is type dynamic or not\n     * @return {boolean}\n     */\n    function getIsDynamic() {\n        return isDynamic;\n    }\n\n    /**\n     * Returns the StreamController\n     * @return {object}\n     */\n    function getStreamController() {\n        return streamController;\n    }\n\n    /**\n     * Returns whether a manifest update is in progress\n     * @return {boolean}\n     */\n    function getIsManifestUpdateInProgress() {\n        return manifestUpdateInProgress;\n    }\n\n    /**\n     * Returns the availabilityStartTime\n     * @return {number}\n     */\n    function getAvailabilityStartTime() {\n        return availabilityStartTime;\n    }\n\n    /**\n     * Returns the current live delay. A seek triggered by the user adjusts this value.\n     * @return {number}\n     */\n    function getLiveDelay() {\n        return liveDelay;\n    }\n\n    /**\n     * Returns the original live delay as calculated at playback start\n     */\n    function getOriginalLiveDelay() {\n        return originalLiveDelay;\n    }\n\n    /**\n     * Returns the current live latency\n     * @return {number}\n     */\n    function getCurrentLiveLatency() {\n        if (!isDynamic || isNaN(availabilityStartTime)) {\n            return NaN;\n        }\n        let currentTime = getTime();\n        if (isNaN(currentTime) || currentTime === 0) {\n            return 0;\n        }\n\n        const now = new Date().getTime() + timelineConverter.getClientTimeOffset() * 1000;\n        return Math.max(((now - availabilityStartTime - currentTime * 1000) / 1000).toFixed(3), 0);\n    }\n\n    /**\n     * Computes the desirable delay for the live edge to avoid a risk of getting 404 when playing at the bleeding edge\n     * @param {number} fragmentDuration - seconds?\n     * @param {object} manifestInfo\n     * @returns {number} object\n     * @memberof PlaybackController#\n     */\n    function computeAndSetLiveDelay(fragmentDuration, manifestInfo) {\n        let delay,\n            ret,\n            startTime;\n        const MIN_BUFFER_TIME_FACTOR = 4;\n        const FRAGMENT_DURATION_FACTOR = 4;\n        const adjustedFragmentDuration = !isNaN(fragmentDuration) && isFinite(fragmentDuration) ? fragmentDuration : NaN;\n\n        let suggestedPresentationDelay = adapter.getSuggestedPresentationDelay();\n        const serviceDescriptionSettings = serviceDescriptionController.getServiceDescriptionSettings();\n\n        // Live delay specified by the user\n        if (!isNaN(settings.get().streaming.delay.liveDelay)) {\n            delay = settings.get().streaming.delay.liveDelay;\n        }\n\n        // Live delay fragment count specified by the user\n        else if (settings.get().streaming.delay.liveDelayFragmentCount !== null && !isNaN(settings.get().streaming.delay.liveDelayFragmentCount) && !isNaN(adjustedFragmentDuration)) {\n            delay = adjustedFragmentDuration * settings.get().streaming.delay.liveDelayFragmentCount;\n        }\n\n        // Live delay set via ServiceDescription element\n        else if (serviceDescriptionSettings && !isNaN(serviceDescriptionSettings.liveDelay) && serviceDescriptionSettings.liveDelay > 0) {\n            delay = serviceDescriptionSettings.liveDelay;\n        }\n        // Live delay set in the manifest using @suggestedPresentation Delay\n        else if (settings.get().streaming.delay.useSuggestedPresentationDelay === true && suggestedPresentationDelay !== null && !isNaN(suggestedPresentationDelay) && suggestedPresentationDelay > 0) {\n            delay = suggestedPresentationDelay;\n        }\n\n        // We found a fragment duration, use that to calculcate live delay\n        else if (!isNaN(adjustedFragmentDuration)) {\n            delay = adjustedFragmentDuration * FRAGMENT_DURATION_FACTOR;\n        }\n\n        // Fall back to @minBufferTime to calculate the live delay\n        else {\n            delay = manifestInfo && !isNaN(manifestInfo.minBufferTime) ? manifestInfo.minBufferTime * MIN_BUFFER_TIME_FACTOR : streamInfo.manifestInfo.minBufferTime * MIN_BUFFER_TIME_FACTOR;\n        }\n\n        startTime = adapter.getAvailabilityStartTime();\n        if (startTime !== null) {\n            availabilityStartTime = startTime;\n        }\n\n        if (manifestInfo && manifestInfo.dvrWindowSize > 0) {\n            // Latency can not be higher than DVR window size\n            ret = Math.min(delay, manifestInfo.dvrWindowSize);\n        } else {\n            ret = delay;\n        }\n        liveDelay = ret;\n        originalLiveDelay = ret;\n\n        return ret;\n    }\n\n    function setConfig(config) {\n        if (!config) {\n            return;\n        }\n\n        if (config.streamController) {\n            streamController = config.streamController;\n        }\n        if (config.serviceDescriptionController) {\n            serviceDescriptionController = config.serviceDescriptionController;\n        }\n        if (config.dashMetrics) {\n            dashMetrics = config.dashMetrics;\n        }\n        if (config.adapter) {\n            adapter = config.adapter;\n        }\n        if (config.videoModel) {\n            videoModel = config.videoModel;\n        }\n        if (config.timelineConverter) {\n            timelineConverter = config.timelineConverter;\n        }\n        if (config.settings) {\n            settings = config.settings;\n        }\n    }\n\n    /**\n     * Compare the current time of the video against the DVR window. If we are out of the DVR window we need to seek.\n     * @param {object} mediaType\n     */\n    function updateCurrentTime(mediaType = null) {\n        if (isPaused() || !isDynamic || videoModel.getReadyState() === 0 || isSeeking() || manifestUpdateInProgress) {\n            return;\n        }\n\n        // Note: In some cases we filter certain media types completely (for instance due to an unsupported video codec). This happens after the first entry to the DVR metric has been added.\n        // Now the DVR window for the filtered media type is not updated anymore. Consequently, always use a mediaType that is available to get a valid DVR window.\n        if (!mediaType) {\n            mediaType = streamController.hasVideoTrack() ? Constants.VIDEO : Constants.AUDIO;\n        }\n        // Compare the current time of the video element against the range defined in the DVR window.\n        const currentTime = getTime();\n        const actualTime = _getAdjustedPresentationTime(currentTime, mediaType);\n        const timeChanged = (!isNaN(actualTime) && actualTime !== currentTime);\n        if (timeChanged && !isSeeking() && (isStalled() || playbackStalled || videoModel.getReadyState() === 1)) {\n            logger.debug(`UpdateCurrentTime: Seek to actual time: ${actualTime} from currentTime: ${currentTime}`);\n            seek(actualTime, false, false);\n        }\n    }\n\n    /**\n     * Adjust the presentation time based on the DVR window. If we are out of the DVR window we return a corrected time\n     * @param {number} currentTime\n     * @param {string} mediatype\n     * @return {number}\n     * @private\n     */\n    function _getAdjustedPresentationTime(currentTime, mediatype) {\n        const DVRMetrics = dashMetrics.getCurrentDVRInfo(mediatype);\n        const DVRWindow = DVRMetrics ? DVRMetrics.range : null;\n        let actualTime;\n\n        if (!DVRWindow) {\n            return NaN;\n        }\n\n        if (currentTime > DVRWindow.end) {\n            actualTime = Math.max(DVRWindow.end - liveDelay, DVRWindow.start);\n\n        } else if (currentTime > 0 && currentTime + 0.250 < DVRWindow.start && Math.abs(currentTime - DVRWindow.start) < 315360000) {\n\n            // Checking currentTime plus 250ms as the 'timeupdate' is fired with a frequency between 4Hz and 66Hz\n            // https://developer.mozilla.org/en-US/docs/Web/Events/timeupdate\n            // http://w3c.github.io/html/single-page.html#offsets-into-the-media-resource\n            // Checking also duration of the DVR makes sense. We detected temporary situations in which currentTime\n            // is bad reported by the browser which causes playback to jump to start (315360000 = 1 year)\n            if (lowLatencyModeEnabled) {\n                actualTime = Math.max(DVRWindow.end - liveDelay, DVRWindow.start);\n            } else {\n                actualTime = DVRWindow.start;\n            }\n        } else {\n            actualTime = currentTime;\n        }\n\n        return actualTime;\n    }\n\n    /**\n     * Start interval handler for wallclock time update\n     */\n    function startUpdatingWallclockTime() {\n        if (wallclockTimeIntervalId !== null) {\n            return;\n        }\n\n        wallclockTimeIntervalId = setInterval(() => {\n            _onWallclockTime();\n        }, settings.get().streaming.wallclockTimeUpdateInterval);\n    }\n\n    /**\n     * Stop the interval handler for the wallclock time update\n     */\n    function stopUpdatingWallclockTime() {\n        clearInterval(wallclockTimeIntervalId);\n        wallclockTimeIntervalId = null;\n    }\n\n    function _onDataUpdateCompleted(e) {\n        const voRepresentation = e.currentRepresentation;\n        const info = voRepresentation ? voRepresentation.mediaInfo.streamInfo : null;\n\n        if (info === null || streamInfo.id !== info.id) {\n            return;\n        }\n        streamInfo = info;\n    }\n\n    function _onCanPlay() {\n        eventBus.trigger(Events.CAN_PLAY);\n    }\n\n    function _onCanPlayThrough() {\n        eventBus.trigger(Events.CAN_PLAY_THROUGH);\n    }\n\n    function _onBufferLevelStateChanged(e) {\n        // do not stall playback when get an event from Stream that is not active\n        if (e.streamId !== streamController.getActiveStreamInfo().id) {\n            return;\n        }\n\n        playbackStalled = e.state === MetricsConstants.BUFFER_EMPTY;\n\n        if (settings.get().streaming.buffer.setStallState) {\n            videoModel.setStallState(e.mediaType, e.state === MetricsConstants.BUFFER_EMPTY);\n        }\n    }\n\n    function _onPlaybackStart() {\n        logger.info('Native video element event: play');\n        updateCurrentTime();\n        startUpdatingWallclockTime();\n        eventBus.trigger(Events.PLAYBACK_STARTED, { startTime: getTime() });\n    }\n\n    function _onPlaybackWaiting() {\n        logger.info('Native video element event: waiting');\n        eventBus.trigger(Events.PLAYBACK_WAITING, { playingTime: getTime() });\n    }\n\n    function _onPlaybackPlaying() {\n        logger.info('Native video element event: playing');\n        internalSeek = false;\n        eventBus.trigger(Events.PLAYBACK_PLAYING, { playingTime: getTime() });\n    }\n\n    function _onPlaybackPaused() {\n        logger.info('Native video element event: pause');\n        eventBus.trigger(Events.PLAYBACK_PAUSED, { ended: getEnded() });\n    }\n\n    function _onPlaybackSeeking() {\n        // Check if internal seeking to be ignored\n        if (internalSeek) {\n            return;\n        }\n\n        let seekTime = getTime();\n        // On some browsers/devices, in case of live streams, setting current time on video element fails when there is no buffered data at requested time\n        // Then re-set seek target time and video element will be seeked afterwhile once data is buffered (see BufferContoller)\n        if (!isNaN(seekTarget) && seekTarget !== seekTime) {\n            seekTime = seekTarget;\n        }\n        seekTarget = NaN;\n\n        logger.info('Seeking to: ' + seekTime);\n        startUpdatingWallclockTime();\n        eventBus.trigger(Events.PLAYBACK_SEEKING, {\n            seekTime: seekTime,\n            streamId: streamInfo.id\n        });\n    }\n\n    function _onPlaybackSeeked() {\n        logger.info('Native video element event: seeked');\n        internalSeek = false;\n        eventBus.trigger(Events.PLAYBACK_SEEKED);\n    }\n\n    function _onPlaybackTimeUpdated() {\n        if (streamInfo) {\n            eventBus.trigger(Events.PLAYBACK_TIME_UPDATED, {\n                timeToEnd: getTimeToStreamEnd(),\n                time: getTime(),\n                streamId: streamInfo.id\n            });\n        }\n    }\n\n    function _onPlaybackProgress() {\n        eventBus.trigger(Events.PLAYBACK_PROGRESS, { streamId: streamInfo.id });\n    }\n\n    function _onPlaybackRateChanged() {\n        const rate = getPlaybackRate();\n        logger.info('Native video element event: ratechange: ', rate);\n        eventBus.trigger(Events.PLAYBACK_RATE_CHANGED, { playbackRate: rate });\n    }\n\n    function _onPlaybackMetaDataLoaded() {\n        logger.info('Native video element event: loadedmetadata');\n        eventBus.trigger(Events.PLAYBACK_METADATA_LOADED);\n        startUpdatingWallclockTime();\n    }\n\n    function _onPlaybackLoadedData() {\n        logger.info('Native video element event: loadeddata');\n        eventBus.trigger(Events.PLAYBACK_LOADED_DATA);\n    }\n\n    // Event to handle the native video element ended event\n    function _onNativePlaybackEnded() {\n        logger.info('Native video element event: ended');\n        pause();\n        stopUpdatingWallclockTime();\n        const streamInfo = streamController ? streamController.getActiveStreamInfo() : null;\n        if (!streamInfo) {\n            return;\n        }\n        eventBus.trigger(Events.PLAYBACK_ENDED, { 'isLast': streamInfo.isLast });\n    }\n\n    function _onVolumeChanged() {\n        eventBus.trigger(Events.PLAYBACK_VOLUME_CHANGED);\n    }\n\n    // Handle DASH PLAYBACK_ENDED event\n    function _onPlaybackEnded(e) {\n        if (wallclockTimeIntervalId && e.isLast) {\n            // PLAYBACK_ENDED was triggered elsewhere, react.\n            logger.info('onPlaybackEnded -- PLAYBACK_ENDED but native video element didn\\'t fire ended');\n            const seekTime = e.seekTime ? e.seekTime : getStreamEndTime();\n            videoModel.setCurrentTime(seekTime);\n            pause();\n            stopUpdatingWallclockTime();\n        }\n    }\n\n    function _onPlaybackError(event) {\n        const target = event.target || event.srcElement;\n        eventBus.trigger(Events.PLAYBACK_ERROR, { error: target.error });\n    }\n\n    function _onWallclockTime() {\n        eventBus.trigger(Events.WALLCLOCK_TIME_UPDATED, {\n            isDynamic: isDynamic,\n            time: new Date()\n        });\n\n        // Updates playback time for paused dynamic streams\n        // (video element doesn't call timeupdate when the playback is paused)\n        if (getIsDynamic()) {\n            const now = Date.now();\n            if (isNaN(lastLiveUpdateTime) || now > lastLiveUpdateTime + settings.get().streaming.liveUpdateTimeThresholdInMilliseconds) {\n                streamController.addDVRMetric();\n                if (isPaused()) {\n                    _updateLivePlaybackTime();\n                } else {\n                    updateCurrentTime();\n                }\n                lastLiveUpdateTime = now;\n            }\n        }\n    }\n\n    function _onDynamicToStatic() {\n        isDynamic = false;\n    }\n\n    function _updateLivePlaybackTime() {\n        const now = Date.now();\n        if (!lastLivePlaybackTime || now > lastLivePlaybackTime + LIVE_UPDATE_PLAYBACK_TIME_INTERVAL_MS) {\n            lastLivePlaybackTime = now;\n            _onPlaybackTimeUpdated();\n        }\n    }\n\n    /**\n     * Returns the combined minimum buffer level of all StreamProcessors. If a filter list is provided the types specified in the filter list are excluded.\n     * @param {array} filterList StreamProcessor types to exclude\n     * @return {null}\n     */\n    function getBufferLevel(filterList = null) {\n        let bufferLevel = null;\n        streamController.getActiveStreamProcessors().forEach(p => {\n            if (!filterList || filterList.length === 0 || filterList.indexOf(p.getType()) === -1) {\n                const bl = p.getBufferLevel();\n                if (bufferLevel === null) {\n                    bufferLevel = bl;\n                } else {\n                    bufferLevel = Math.min(bufferLevel, bl);\n                }\n            }\n        });\n\n        return bufferLevel;\n    }\n\n    /**\n     * Returns the value of lowLatencyModeEnabled\n     * @return {boolean} lowLatencyModeEnabled\n     */\n    function getLowLatencyModeEnabled() {\n        return lowLatencyModeEnabled\n    }\n\n    function onPlaybackStalled(e) {\n        eventBus.trigger(Events.PLAYBACK_STALLED, { e: e });\n    }\n\n    function _onStreamInitializing(e) {\n        _checkEnableLowLatency(e.mediaInfo);\n    }\n\n    /**\n     * We enable low latency playback if for the current representation availabilityTimeComplete is set to false\n     * @param e\n     * @private\n     */\n    function _onRepresentationSwitch(e) {\n        const activeStreamInfo = streamController.getActiveStreamInfo();\n        if (!e || !activeStreamInfo || !e.currentRepresentation || !e.streamId || e.streamId !== activeStreamInfo.id || !e.mediaType || (e.mediaType !== Constants.VIDEO && e.mediaType !== Constants.AUDIO)) {\n            return;\n        }\n\n        availabilityTimeComplete = e.currentRepresentation.availabilityTimeComplete;\n        lowLatencyModeEnabled = !availabilityTimeComplete;\n\n        // If we enable low latency mode for the first time we also enable the catchup mechanism. This can be deactivated again for instance if the user seeks within the DVR window. We leave deactivation up to the application but also do not activate automatically again.\n        if (lowLatencyModeEnabled && !initialCatchupModeActivated) {\n            initialCatchupModeActivated = true;\n        }\n    }\n\n    function getInitialCatchupModeActivated() {\n        return initialCatchupModeActivated;\n    }\n\n    /**\n     * A new manifest has been loaded, updating is still in progress.\n     * @private\n     */\n    function _onManifestUpdated() {\n        manifestUpdateInProgress = true;\n    }\n\n    /**\n     * Manifest update was completed\n     * @private\n     */\n    function _onStreamsComposed() {\n        manifestUpdateInProgress = false;\n    }\n\n    function _checkEnableLowLatency(mediaInfo) {\n        if (mediaInfo && mediaInfo.supplementalProperties &&\n            mediaInfo.supplementalProperties.find(item => item.schemeIdUri === Constants.SUPPLEMENTAL_PROPERTY_DVB_LL_SCHEME)) {\n            logger.debug('Low Latency critical SupplementalProperty set: Enabling low Latency');\n            lowLatencyModeEnabled = true;\n        }\n    }\n\n    function addAllListeners() {\n        videoModel.addEventListener('canplay', _onCanPlay);\n        videoModel.addEventListener('canplaythrough', _onCanPlayThrough);\n        videoModel.addEventListener('play', _onPlaybackStart);\n        videoModel.addEventListener('waiting', _onPlaybackWaiting);\n        videoModel.addEventListener('playing', _onPlaybackPlaying);\n        videoModel.addEventListener('pause', _onPlaybackPaused);\n        videoModel.addEventListener('error', _onPlaybackError);\n        videoModel.addEventListener('seeking', _onPlaybackSeeking);\n        videoModel.addEventListener('seeked', _onPlaybackSeeked);\n        videoModel.addEventListener('timeupdate', _onPlaybackTimeUpdated);\n        videoModel.addEventListener('progress', _onPlaybackProgress);\n        videoModel.addEventListener('ratechange', _onPlaybackRateChanged);\n        videoModel.addEventListener('loadedmetadata', _onPlaybackMetaDataLoaded);\n        videoModel.addEventListener('loadeddata', _onPlaybackLoadedData);\n        videoModel.addEventListener('stalled', onPlaybackStalled);\n        videoModel.addEventListener('ended', _onNativePlaybackEnded);\n        videoModel.addEventListener('volumechange', _onVolumeChanged);\n    }\n\n    function removeAllListeners() {\n        videoModel.removeEventListener('canplay', _onCanPlay);\n        videoModel.removeEventListener('canplaythrough', _onCanPlayThrough);\n        videoModel.removeEventListener('play', _onPlaybackStart);\n        videoModel.removeEventListener('waiting', _onPlaybackWaiting);\n        videoModel.removeEventListener('playing', _onPlaybackPlaying);\n        videoModel.removeEventListener('pause', _onPlaybackPaused);\n        videoModel.removeEventListener('error', _onPlaybackError);\n        videoModel.removeEventListener('seeking', _onPlaybackSeeking);\n        videoModel.removeEventListener('seeked', _onPlaybackSeeked);\n        videoModel.removeEventListener('timeupdate', _onPlaybackTimeUpdated);\n        videoModel.removeEventListener('progress', _onPlaybackProgress);\n        videoModel.removeEventListener('ratechange', _onPlaybackRateChanged);\n        videoModel.removeEventListener('loadedmetadata', _onPlaybackMetaDataLoaded);\n        videoModel.removeEventListener('loadeddata', _onPlaybackLoadedData);\n        videoModel.removeEventListener('stalled', onPlaybackStalled);\n        videoModel.removeEventListener('ended', _onNativePlaybackEnded);\n        videoModel.removeEventListener('volumechange', _onVolumeChanged);\n    }\n\n    instance = {\n        computeAndSetLiveDelay,\n        getAvailabilityStartTime,\n        getBufferLevel,\n        getCurrentLiveLatency,\n        getEnded,\n        getInitialCatchupModeActivated,\n        getIsDynamic,\n        getIsManifestUpdateInProgress,\n        getLiveDelay,\n        getLowLatencyModeEnabled,\n        getOriginalLiveDelay,\n        getPlaybackRate,\n        getPlaybackStalled,\n        getPlayedRanges,\n        getStreamController,\n        getStreamEndTime,\n        getTime,\n        getTimeToStreamEnd,\n        initialize,\n        isPaused,\n        isProgressing,\n        isSeeking,\n        isStalled,\n        pause,\n        play,\n        reset,\n        seek,\n        seekToCurrentLive,\n        seekToOriginalLive,\n        setConfig,\n        updateCurrentTime,\n    };\n\n    setup();\n\n    return instance;\n}\n\nPlaybackController.__dashjs_factory_name = 'PlaybackController';\nexport default FactoryMaker.getSingletonFactory(PlaybackController);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport {HTTPRequest} from './metrics/HTTPRequest.js';\n\n/**\n * @class\n * @ignore\n */\nclass FragmentRequest {\n    constructor(url) {\n        this.action = FragmentRequest.ACTION_DOWNLOAD;\n        this.availabilityEndTime = null;\n        this.availabilityStartTime = null;\n        this.bandwidth = NaN;\n        this.bytesLoaded = NaN;\n        this.bytesTotal = NaN;\n        this.delayLoadingTime = NaN;\n        this.duration = NaN;\n        this.endDate = null;\n        this.firstByteDate = null;\n        this.index = NaN;\n        this.mediaStartTime = NaN;\n        this.mediaType = null;\n        this.quality = NaN;\n        this.range = null;\n        this.representation = null;\n        this.responseType = 'arraybuffer';\n        this.serviceLocation = null;\n        this.startDate = null;\n        this.startTime = NaN;\n        this.timescale = NaN;\n        this.type = null;\n        this.url = url || null;\n        this.wallStartTime = null;\n    }\n\n    isInitializationRequest() {\n        return (this.type && this.type === HTTPRequest.INIT_SEGMENT_TYPE);\n    }\n\n    setInfo(info) {\n        this.type = info && info.init ? HTTPRequest.INIT_SEGMENT_TYPE : HTTPRequest.MEDIA_SEGMENT_TYPE;\n        this.url = info && info.url ? info.url : null;\n        this.range = info && info.range ? info.range.start + '-' + info.range.end : null;\n        this.mediaType = info && info.mediaType ? info.mediaType : null;\n        this.representation = info && info.representation ? info.representation : null;\n    }\n}\n\nFragmentRequest.ACTION_DOWNLOAD = 'download';\nFragmentRequest.ACTION_COMPLETE = 'complete';\n\nexport default FragmentRequest;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport FactoryMaker from '../../core/FactoryMaker.js';\nimport FragmentRequest from '../vo/FragmentRequest.js';\n\nconst FRAGMENT_MODEL_LOADING = 'loading';\nconst FRAGMENT_MODEL_EXECUTED = 'executed';\nconst FRAGMENT_MODEL_CANCELED = 'canceled';\nconst FRAGMENT_MODEL_FAILED = 'failed';\n\nfunction FragmentModel(config) {\n\n    config = config || {};\n    const eventBus = config.eventBus;\n    const events = config.events;\n    const dashMetrics = config.dashMetrics;\n    const fragmentLoader = config.fragmentLoader;\n    const debug = config.debug;\n    const streamInfo = config.streamInfo;\n    const type = config.type;\n\n    let instance,\n        logger,\n        executedRequests,\n        loadingRequests;\n\n    function setup() {\n        logger = debug.getLogger(instance);\n        resetInitialSettings();\n        eventBus.on(events.LOADING_COMPLETED, onLoadingCompleted, instance);\n        eventBus.on(events.LOADING_DATA_PROGRESS, onLoadingInProgress, instance);\n        eventBus.on(events.LOADING_ABANDONED, onLoadingAborted, instance);\n    }\n\n    function getStreamId() {\n        return streamInfo.id;\n    }\n\n    function getType() {\n        return type;\n    }\n\n    function isFragmentLoaded(request) {\n        const isEqualComplete = function (req1, req2) {\n            return ((req1.action === FragmentRequest.ACTION_COMPLETE) && (req1.action === req2.action));\n        };\n\n        const isEqualMedia = function (req1, req2) {\n            return !isNaN(req1.index) && (req1.startTime === req2.startTime) && (req1.adaptationIndex === req2.adaptationIndex) && (req1.type === req2.type);\n        };\n\n        const isEqualInit = function (req1, req2) {\n            return req1.representation.id === req2.representation.id;\n        };\n\n        const check = function (requests) {\n            let isLoaded = false;\n\n            requests.some(req => {\n                if (isEqualMedia(request, req) || isEqualInit(request, req) || isEqualComplete(request, req)) {\n                    isLoaded = true;\n                    return isLoaded;\n                }\n            });\n            return isLoaded;\n        };\n\n        if (!request) {\n            return false;\n        }\n\n        return check(executedRequests);\n    }\n\n    function isFragmentLoadedOrPending(request) {\n        let isLoaded = false;\n        let i = 0;\n        let req;\n\n        // First, check if the fragment has already been loaded\n        isLoaded = isFragmentLoaded(request);\n\n        // Then, check if the fragment is about to be loeaded\n        if (!isLoaded) {\n            for (i = 0; i < loadingRequests.length; i++) {\n                req = loadingRequests[i];\n                if ((request.url === req.url) && (request.startTime === req.startTime)) {\n                    isLoaded = true;\n                }\n            }\n        }\n\n        return isLoaded;\n    }\n\n    /**\n     *\n     * Gets an array of {@link FragmentRequest} objects\n     *\n     * @param {Object} filter The object with properties by which the method filters the requests to be returned.\n     *  the only mandatory property is state, which must be a value from\n     *  other properties should match the properties of {@link FragmentRequest}. E.g.:\n     *  getRequests({state: FragmentModel.FRAGMENT_MODEL_EXECUTED, quality: 0}) - returns\n     *  all the requests from executedRequests array where requests.quality = filter.quality\n     *\n     * @returns {Array}\n     * @memberof FragmentModel#\n     */\n    function getRequests(filter) {\n        const states = filter ? filter.state instanceof Array ? filter.state : [filter.state] : [];\n\n        let filteredRequests = [];\n        states.forEach(state => {\n            const requests = getRequestsForState(state);\n            filteredRequests = filteredRequests.concat(filterRequests(requests, filter));\n        });\n\n        return filteredRequests;\n    }\n\n    function getRequestThreshold(req) {\n        return isNaN(req.duration) ? 0.25 : Math.min(req.duration / 8, 0.5);\n    }\n\n    function removeExecutedRequestsBeforeTime(time) {\n        executedRequests = executedRequests.filter(req => {\n            const threshold = getRequestThreshold(req);\n            return isNaN(req.startTime) || (time !== undefined ? req.startTime >= time - threshold : false);\n        });\n    }\n\n    function removeExecutedRequestsAfterTime(time) {\n        executedRequests = executedRequests.filter(req => {\n            return isNaN(req.startTime) || (time !== undefined ? req.startTime < time : false);\n        });\n    }\n\n    function removeExecutedRequestsInTimeRange(start, end) {\n        if (end <= start + 0.5) {\n            return;\n        }\n\n        executedRequests = executedRequests.filter(req => {\n            const threshold = getRequestThreshold(req);\n            return (isNaN(req.startTime) || req.startTime >= (end - threshold)) ||\n                (isNaN(req.duration) || (req.startTime + req.duration) <= (start + threshold));\n        });\n    }\n\n    // Remove requests that are not \"represented\" by any of buffered ranges\n    function syncExecutedRequestsWithBufferedRange(bufferedRanges, streamDuration) {\n        if (!bufferedRanges || bufferedRanges.length === 0) {\n            removeExecutedRequestsBeforeTime();\n            return;\n        }\n\n        let start = 0;\n        for (let i = 0, ln = bufferedRanges.length; i < ln; i++) {\n            removeExecutedRequestsInTimeRange(start, bufferedRanges.start(i));\n            start = bufferedRanges.end(i);\n        }\n        if (streamDuration > 0) {\n            removeExecutedRequestsInTimeRange(start, streamDuration);\n        }\n    }\n\n    function abortRequests() {\n        logger.debug('abort requests');\n        fragmentLoader.abort();\n        loadingRequests = [];\n    }\n\n    function executeRequest(request) {\n        switch (request.action) {\n            case FragmentRequest.ACTION_DOWNLOAD:\n                addSchedulingInfoMetrics(request, FRAGMENT_MODEL_LOADING);\n                loadingRequests.push(request);\n                loadCurrentFragment(request);\n                break;\n            default:\n                logger.warn('Unknown request action.');\n        }\n    }\n\n    function loadCurrentFragment(request) {\n        eventBus.trigger(events.FRAGMENT_LOADING_STARTED,\n            { request: request },\n            { streamId: streamInfo.id, mediaType: type }\n        );\n        fragmentLoader.load(request);\n    }\n\n    function getRequestForTime(arr, time, threshold) {\n        // loop through the executed requests and pick the one for which the playback interval matches the given time\n        const lastIdx = arr.length - 1;\n        for (let i = lastIdx; i >= 0; i--) {\n            const req = arr[i];\n            const start = req.startTime;\n            const end = start + req.duration;\n            threshold = !isNaN(threshold) ? threshold : getRequestThreshold(req);\n            if ((!isNaN(start) && !isNaN(end) && ((time + threshold) >= start) && ((time - threshold) < end)) || (isNaN(start) && isNaN(time))) {\n                return req;\n            }\n        }\n        return null;\n    }\n\n    function filterRequests(arr, filter) {\n        // for time use a specific filtration function\n        if (filter.hasOwnProperty('time')) {\n            return [getRequestForTime(arr, filter.time, filter.threshold)];\n        }\n\n        return arr.filter(request => {\n            for (const prop in filter) {\n                if (prop === 'state') {\n                    continue;\n                }\n                if (filter.hasOwnProperty(prop) && request[prop] != filter[prop]) {\n                    return false;\n                }\n            }\n\n            return true;\n        });\n    }\n\n    function getRequestsForState(state) {\n        let requests;\n        switch (state) {\n            case FRAGMENT_MODEL_LOADING:\n                requests = loadingRequests;\n                break;\n            case FRAGMENT_MODEL_EXECUTED:\n                requests = executedRequests;\n                break;\n            default:\n                requests = [];\n        }\n        return requests;\n    }\n\n    function addSchedulingInfoMetrics(request, state) {\n        dashMetrics.addSchedulingInfo(request, state);\n        dashMetrics.addRequestsQueue(request.mediaType, loadingRequests, executedRequests);\n    }\n\n    function onLoadingCompleted(e) {\n        if (e.sender !== fragmentLoader) {\n            return;\n        }\n\n        loadingRequests.splice(loadingRequests.indexOf(e.request), 1);\n\n        if (e.response && !e.error) {\n            executedRequests.push(e.request);\n        }\n\n        addSchedulingInfoMetrics(e.request, e.error ? FRAGMENT_MODEL_FAILED : FRAGMENT_MODEL_EXECUTED);\n\n        eventBus.trigger(events.FRAGMENT_LOADING_COMPLETED,\n            {\n                request: e.request,\n                response: e.response,\n                error: e.error,\n                sender: this\n            },\n            { streamId: streamInfo.id, mediaType: type }\n        );\n    }\n\n    function onLoadingInProgress(e) {\n        if (e.sender !== fragmentLoader) {\n            return;\n        }\n\n        eventBus.trigger(events.FRAGMENT_LOADING_PROGRESS,\n            {\n                request: e.request,\n                response: e.response,\n                error: e.error,\n                sender: this\n            },\n            { streamId: streamInfo.id, mediaType: type }\n        );\n    }\n\n    function onLoadingAborted(e) {\n        if (e.sender !== fragmentLoader) {\n            return;\n        }\n\n        eventBus.trigger(events.FRAGMENT_LOADING_ABANDONED,\n            { request: e.request },\n            { streamId: streamInfo.id, mediaType: type }\n        );\n    }\n\n    function resetInitialSettings() {\n        executedRequests = [];\n        loadingRequests = [];\n        if (fragmentLoader) {\n            fragmentLoader.resetInitialSettings();\n        }\n    }\n\n    function reset() {\n        eventBus.off(events.LOADING_COMPLETED, onLoadingCompleted, this);\n        eventBus.off(events.LOADING_DATA_PROGRESS, onLoadingInProgress, this);\n        eventBus.off(events.LOADING_ABANDONED, onLoadingAborted, this);\n\n        if (fragmentLoader) {\n            fragmentLoader.reset();\n        }\n        resetInitialSettings();\n    }\n\n    instance = {\n        abortRequests,\n        executeRequest,\n        getRequests,\n        getStreamId,\n        getType,\n        isFragmentLoaded,\n        isFragmentLoadedOrPending,\n        removeExecutedRequestsAfterTime,\n        removeExecutedRequestsBeforeTime,\n        reset,\n        resetInitialSettings,\n        syncExecutedRequestsWithBufferedRange,\n    };\n\n    setup();\n    return instance;\n}\n\nFragmentModel.__dashjs_factory_name = 'FragmentModel';\nconst factory = FactoryMaker.getClassFactory(FragmentModel);\nfactory.FRAGMENT_MODEL_LOADING = FRAGMENT_MODEL_LOADING;\nfactory.FRAGMENT_MODEL_EXECUTED = FRAGMENT_MODEL_EXECUTED;\nfactory.FRAGMENT_MODEL_CANCELED = FRAGMENT_MODEL_CANCELED;\nfactory.FRAGMENT_MODEL_FAILED = FRAGMENT_MODEL_FAILED;\nFactoryMaker.updateClassFactory(FragmentModel.__dashjs_factory_name, factory);\nexport default factory;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport ErrorsBase from './ErrorsBase.js';\n\n/**\n * Errors declaration\n * @class\n */\nclass Errors extends ErrorsBase {\n    constructor() {\n        super();\n\n        /**\n         * Error code returned when a manifest parsing error occurs\n         */\n        this.MANIFEST_LOADER_PARSING_FAILURE_ERROR_CODE = 10;\n\n        /**\n         * Error code returned when a manifest loading error occurs\n         */\n        this.MANIFEST_LOADER_LOADING_FAILURE_ERROR_CODE = 11;\n\n        /**\n         * Error code returned when a xlink loading error occurs\n         */\n        this.XLINK_LOADER_LOADING_FAILURE_ERROR_CODE = 12;\n\n        /**\n         * Error code returned when no segment ranges could be determined from the sidx box\n         */\n        this.SEGMENT_BASE_LOADER_ERROR_CODE = 15;\n\n        /**\n         * Error code returned when the time synchronization failed\n         */\n        this.TIME_SYNC_FAILED_ERROR_CODE = 16;\n\n        /**\n         * Error code returned when loading a fragment failed\n         */\n        this.FRAGMENT_LOADER_LOADING_FAILURE_ERROR_CODE = 17;\n\n        /**\n         * Error code returned when the FragmentLoader did not receive a request object\n         */\n        this.FRAGMENT_LOADER_NULL_REQUEST_ERROR_CODE = 18;\n\n        /**\n         * Error code returned when the BaseUrl resolution failed\n         */\n        this.URL_RESOLUTION_FAILED_GENERIC_ERROR_CODE = 19;\n\n        /**\n         * Error code returned when the append operation in the SourceBuffer failed\n         */\n        this.APPEND_ERROR_CODE = 20;\n\n        /**\n         * Error code returned when the remove operation in the SourceBuffer failed\n         */\n        this.REMOVE_ERROR_CODE = 21;\n\n        /**\n         * Error code returned when updating the internal objects after loading an MPD failed\n         */\n        this.DATA_UPDATE_FAILED_ERROR_CODE = 22;\n\n        /**\n         * Error code returned when MediaSource is not supported by the browser\n         */\n        this.CAPABILITY_MEDIASOURCE_ERROR_CODE = 23;\n\n        /**\n         * Error code returned when Protected contents are not supported\n         */\n        this.CAPABILITY_MEDIAKEYS_ERROR_CODE = 24;\n\n        /**\n         * Error code returned when loading the manifest failed\n         */\n        this.DOWNLOAD_ERROR_ID_MANIFEST_CODE = 25;\n\n        /**\n         * Error code returned when loading the sidx failed\n         */\n        this.DOWNLOAD_ERROR_ID_SIDX_CODE = 26;\n\n        /**\n         * Error code returned when loading the media content failed\n         */\n        this.DOWNLOAD_ERROR_ID_CONTENT_CODE = 27;\n\n        /**\n         * Error code returned when loading the init segment failed\n         */\n        this.DOWNLOAD_ERROR_ID_INITIALIZATION_CODE = 28;\n\n        /**\n         * Error code returned when loading the XLink content failed\n         */\n        this.DOWNLOAD_ERROR_ID_XLINK_CODE = 29;\n\n        /**\n         * Error code returned when parsing the MPD resulted in a logical error\n         */\n        this.MANIFEST_ERROR_ID_PARSE_CODE = 31;\n\n        /**\n         * Error code returned when no stream (period) has been detected in the manifest\n         */\n        this.MANIFEST_ERROR_ID_NOSTREAMS_CODE = 32;\n\n        /**\n         * Error code returned when something wrong has happened during parsing and appending subtitles (TTML or VTT)\n         */\n        this.TIMED_TEXT_ERROR_ID_PARSE_CODE = 33;\n\n        /**\n         * Error code returned when a 'muxed' media type has been detected in the manifest. This type is not supported\n         */\n\n        this.MANIFEST_ERROR_ID_MULTIPLEXED_CODE = 34;\n\n        /**\n         * Error code returned when a media source type is not supported\n         */\n        this.MEDIASOURCE_TYPE_UNSUPPORTED_CODE = 35;\n\n        /**\n         * Error code returned when the available Adaptation Sets can not be selected because the corresponding key ids have an invalid key status\n         * @type {number}\n         */\n        this.NO_SUPPORTED_KEY_IDS = 36;\n\n        this.MANIFEST_LOADER_PARSING_FAILURE_ERROR_MESSAGE = 'parsing failed for ';\n        this.MANIFEST_LOADER_LOADING_FAILURE_ERROR_MESSAGE = 'Failed loading manifest: ';\n        this.XLINK_LOADER_LOADING_FAILURE_ERROR_MESSAGE = 'Failed loading Xlink element: ';\n        this.SEGMENTS_UPDATE_FAILED_ERROR_MESSAGE = 'Segments update failed';\n        this.SEGMENTS_UNAVAILABLE_ERROR_MESSAGE = 'no segments are available yet';\n        this.SEGMENT_BASE_LOADER_ERROR_MESSAGE = 'error loading segment ranges from sidx';\n        this.TIME_SYNC_FAILED_ERROR_MESSAGE = 'Failed to synchronize client and server time';\n        this.FRAGMENT_LOADER_NULL_REQUEST_ERROR_MESSAGE = 'request is null';\n        this.URL_RESOLUTION_FAILED_GENERIC_ERROR_MESSAGE = 'Failed to resolve a valid URL';\n        this.APPEND_ERROR_MESSAGE = 'chunk is not defined';\n        this.REMOVE_ERROR_MESSAGE = 'Removing data from the SourceBuffer';\n        this.DATA_UPDATE_FAILED_ERROR_MESSAGE = 'Data update failed';\n        this.CAPABILITY_MEDIASOURCE_ERROR_MESSAGE = 'mediasource is not supported';\n        this.CAPABILITY_MEDIAKEYS_ERROR_MESSAGE = 'mediakeys is not supported';\n        this.TIMED_TEXT_ERROR_MESSAGE_PARSE = 'parsing error :';\n        this.MEDIASOURCE_TYPE_UNSUPPORTED_MESSAGE = 'Error creating source buffer of type : ';\n        this.NO_SUPPORTED_KEY_IDS_MESSAGE = 'All possible Adaptation Sets have an invalid key status';\n    }\n}\n\nlet errors = new Errors();\nexport default errors;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport Debug from '../core/Debug.js';\nimport DashJSError from './vo/DashJSError.js';\nimport FactoryMaker from '../core/FactoryMaker.js';\nimport Errors from '../core/errors/Errors.js';\nimport Settings from '../core/Settings.js';\nimport constants from './constants/Constants.js';\nimport {HTTPRequest} from './vo/metrics/HTTPRequest.js';\nimport Events from '../core/events/Events.js';\n\nconst APPEND_WINDOW_START_OFFSET = 0.1;\nconst APPEND_WINDOW_END_OFFSET = 0.01;\n\n/**\n * @class SourceBufferSink\n * @ignore\n * @implements FragmentSink\n */\n\nconst CHECK_INTERVAL = 50;\n\nfunction SourceBufferSink(config) {\n    const context = this.context;\n    const settings = Settings(context).getInstance();\n    const textController = config.textController;\n    const eventBus = config.eventBus;\n\n    let instance,\n        type,\n        logger,\n        buffer,\n        mediaInfo,\n        intervalId;\n\n    let callbacks = [];\n    let appendQueue = [];\n    let isAppendingInProgress = false;\n    let mediaSource = config.mediaSource;\n    let lastRequestAppended = null;\n\n    function setup() {\n        logger = Debug(context).getInstance().getLogger(instance);\n    }\n\n    function _getCodecStringForRepresentation(representation) {\n        return representation.mimeType + ';codecs=\"' + representation.codecs + '\"';\n    }\n\n    function initializeForStreamSwitch(mInfo, selectedRepresentation, oldSourceBufferSink) {\n        mediaInfo = mInfo;\n        type = mediaInfo.type;\n\n        _copyPreviousSinkData(oldSourceBufferSink);\n        _addEventListeners();\n    }\n\n    function changeType(representation) {\n        const codec = _getCodecStringForRepresentation(representation);\n        return new Promise((resolve) => {\n            _waitForUpdateEnd(() => {\n                if (buffer.changeType) {\n                    logger.debug(`Changing SourceBuffer codec to ${codec}`);\n                    buffer.changeType(codec);\n                }\n                resolve();\n            });\n        });\n    }\n\n    function _copyPreviousSinkData(oldSourceBufferSink) {\n        buffer = oldSourceBufferSink.getBuffer();\n    }\n\n    function initializeForFirstUse(mInfo, selectedRepresentation) {\n        mediaInfo = mInfo;\n        const streamInfo = mInfo.streamInfo;\n        type = mediaInfo.type;\n        const codec = selectedRepresentation ? _getCodecStringForRepresentation(selectedRepresentation) : mInfo.codec;\n        try {\n            // Safari claims to support anything starting 'application/mp4'.\n            // it definitely doesn't understand 'application/mp4;codecs=\"stpp\"'\n            // - currently no browser does, so check for it and use our own\n            // implementation. The same is true for codecs=\"wvtt\".\n            if (codec.match(/application\\/mp4;\\s*codecs=\"(stpp|wvtt).*\"/i)) {\n                return _initializeForText(streamInfo);\n            }\n\n            buffer = mediaSource.addSourceBuffer(codec);\n\n            _addEventListeners();\n\n            const promises = [];\n\n            promises.push(updateAppendWindow(mediaInfo.streamInfo));\n\n            if (selectedRepresentation && selectedRepresentation.mseTimeOffset !== undefined) {\n                promises.push(updateTimestampOffset(selectedRepresentation.mseTimeOffset));\n            }\n\n            return Promise.all(promises);\n\n        } catch (e) {\n            // Note that in the following, the quotes are open to allow for extra text after stpp and wvtt\n            if ((mediaInfo.type == constants.TEXT && !mediaInfo.isFragmented) || (codec.indexOf('codecs=\"stpp') !== -1) || (codec.indexOf('codecs=\"vtt') !== -1) || (codec.indexOf('text/vtt') !== -1)) {\n                return _initializeForText(streamInfo);\n            }\n            return Promise.reject(e);\n        }\n    }\n\n    function _initializeForText(streamInfo) {\n        buffer = textController.getTextSourceBuffer(streamInfo);\n        return Promise.resolve();\n    }\n\n    function _addEventListeners() {\n        // use updateend event if possible\n        if (typeof buffer.addEventListener === 'function') {\n            try {\n                buffer.addEventListener('updateend', _updateEndHandler, false);\n                buffer.addEventListener('error', _errHandler, false);\n                buffer.addEventListener('abort', _errHandler, false);\n\n            } catch (err) {\n                // use setInterval to periodically check if updating has been completed\n                intervalId = setInterval(_updateEndHandler, CHECK_INTERVAL);\n            }\n        } else {\n            // use setInterval to periodically check if updating has been completed\n            intervalId = setInterval(_updateEndHandler, CHECK_INTERVAL);\n        }\n    }\n\n    function getType() {\n        return type;\n    }\n\n    function removeEventListeners() {\n        try {\n            if (typeof buffer.removeEventListener === 'function') {\n                buffer.removeEventListener('updateend', _updateEndHandler, false);\n                buffer.removeEventListener('error', _errHandler, false);\n                buffer.removeEventListener('abort', _errHandler, false);\n            }\n            clearInterval(intervalId);\n        } catch (e) {\n            logger.error(e);\n        }\n    }\n\n    function updateAppendWindow(sInfo) {\n        return new Promise((resolve) => {\n\n            if (!buffer || !settings.get().streaming.buffer.useAppendWindow) {\n                resolve();\n                return;\n            }\n\n            _waitForUpdateEnd(() => {\n                try {\n                    if (!buffer) {\n                        resolve();\n                        return;\n                    }\n\n                    let appendWindowEnd = mediaSource.duration;\n                    let appendWindowStart = 0;\n                    if (sInfo && !isNaN(sInfo.start) && !isNaN(sInfo.duration) && isFinite(sInfo.duration)) {\n                        appendWindowEnd = sInfo.start + sInfo.duration;\n                    }\n                    if (sInfo && !isNaN(sInfo.start)) {\n                        appendWindowStart = sInfo.start;\n                    }\n                    if (buffer.appendWindowEnd !== appendWindowEnd || buffer.appendWindowStart !== appendWindowStart) {\n                        buffer.appendWindowStart = 0;\n                        buffer.appendWindowEnd = appendWindowEnd + APPEND_WINDOW_END_OFFSET;\n                        buffer.appendWindowStart = Math.max(appendWindowStart - APPEND_WINDOW_START_OFFSET, 0);\n                        logger.debug(`Updated append window for ${mediaInfo.type}. Set start to ${buffer.appendWindowStart} and end to ${buffer.appendWindowEnd}`);\n                    }\n\n                    resolve();\n                } catch (e) {\n                    logger.warn(`Failed to set append window`);\n                    resolve();\n                }\n            });\n        });\n    }\n\n    function updateTimestampOffset(mseTimeOffset) {\n        return new Promise((resolve) => {\n\n            if (!buffer) {\n                resolve();\n                return;\n            }\n\n            _waitForUpdateEnd(() => {\n                try {\n                    if (buffer.timestampOffset !== mseTimeOffset && !isNaN(mseTimeOffset)) {\n                        buffer.timestampOffset = mseTimeOffset;\n                        logger.debug(`Set MSE timestamp offset to ${mseTimeOffset}`);\n                    }\n                    resolve();\n                } catch (e) {\n                    resolve();\n                }\n            });\n        });\n    }\n\n\n    function reset() {\n        if (buffer) {\n            try {\n                callbacks = [];\n                removeEventListeners();\n                isAppendingInProgress = false;\n                appendQueue = [];\n                if (!buffer.getClassName || buffer.getClassName() !== 'TextSourceBuffer') {\n                    logger.debug(`Removing sourcebuffer from media source`);\n                    mediaSource.removeSourceBuffer(buffer);\n                }\n            } catch (e) {\n\n            }\n            buffer = null;\n        }\n        lastRequestAppended = null;\n    }\n\n    function getBuffer() {\n        return buffer;\n    }\n\n    function getAllBufferRanges() {\n        try {\n            return buffer.buffered;\n        } catch (e) {\n            logger.error('getAllBufferRanges exception: ' + e.message);\n            return null;\n        }\n    }\n\n    function append(chunk, request = null) {\n        return new Promise((resolve, reject) => {\n            if (!chunk) {\n                reject({\n                    chunk: chunk,\n                    error: new DashJSError(Errors.APPEND_ERROR_CODE, Errors.APPEND_ERROR_MESSAGE)\n                });\n                return;\n            }\n            appendQueue.push({ data: chunk, promise: { resolve, reject }, request });\n            _waitForUpdateEnd(_appendNextInQueue.bind(this));\n        });\n    }\n\n    function abortBeforeAppend() {\n        return new Promise((resolve) => {\n            _waitForUpdateEnd(() => {\n                // Save the append window, which is reset on abort().\n                const appendWindowStart = buffer.appendWindowStart;\n                const appendWindowEnd = buffer.appendWindowEnd;\n\n                if (buffer) {\n                    buffer.abort();\n                    buffer.appendWindowStart = appendWindowStart;\n                    buffer.appendWindowEnd = appendWindowEnd;\n                }\n                resolve();\n            });\n        });\n    }\n\n    function remove(range) {\n        return new Promise((resolve, reject) => {\n            const start = range.start;\n            const end = range.end;\n\n            // make sure that the given time range is correct. Otherwise we will get InvalidAccessError\n            if (!((start >= 0) && (end > start))) {\n                resolve();\n                return;\n            }\n\n            _waitForUpdateEnd(function () {\n                try {\n                    buffer.remove(start, end);\n                    // updating is in progress, we should wait for it to complete before signaling that this operation is done\n                    _waitForUpdateEnd(function () {\n                        resolve({\n                            from: start,\n                            to: end,\n                            unintended: false\n                        });\n                        if (range.resolve) {\n                            range.resolve();\n                        }\n                    });\n                } catch (err) {\n                    reject({\n                        from: start,\n                        to: end,\n                        unintended: false,\n                        error: new DashJSError(Errors.REMOVE_ERROR_CODE, Errors.REMOVE_ERROR_MESSAGE)\n                    });\n                    if (range.reject) {\n                        range.reject(err);\n                    }\n                }\n            });\n        });\n    }\n\n    function _appendNextInQueue() {\n        if (isAppendingInProgress) {\n            return;\n        }\n\n        if (appendQueue.length > 0) {\n            isAppendingInProgress = true;\n            const nextChunk = appendQueue[0];\n            appendQueue.splice(0, 1);\n\n            const afterSuccess = function () {\n                isAppendingInProgress = false;\n                if (appendQueue.length > 0) {\n                    _appendNextInQueue.call(this);\n                }\n                // Init segments are cached. In any other case we dont need the chunk bytes anymore and can free the memory\n                if (nextChunk && nextChunk.data && nextChunk.data.segmentType && nextChunk.data.segmentType !== HTTPRequest.INIT_SEGMENT_TYPE) {\n                    delete nextChunk.data.bytes;\n                }\n                nextChunk.promise.resolve({ chunk: nextChunk.data });\n            };\n\n            try {\n                lastRequestAppended = nextChunk.request;\n                if (nextChunk.data.bytes.byteLength === 0) {\n                    afterSuccess.call(this);\n                } else {\n                    try {\n                        logger.debug(`Appending ${nextChunk.data.segmentType} from period ${nextChunk.data.streamId} to buffer. Request URL: ${nextChunk.request.url}, Representation: ID: ${nextChunk.data.representation.id}, bitrate: ${nextChunk.data.representation.bitrateInKbit}`)\n                    } catch (e) {\n\n                    }\n                    if (buffer.appendBuffer) {\n                        buffer.appendBuffer(nextChunk.data.bytes);\n                    } else {\n                        buffer.append(nextChunk.data.bytes, nextChunk.data);\n                    }\n                    // updating is in progress, we should wait for it to complete before signaling that this operation is done\n                    _waitForUpdateEnd(afterSuccess.bind(this));\n                }\n            } catch (err) {\n                logger.fatal('SourceBuffer append failed \"' + err + '\"');\n                if (appendQueue.length > 0) {\n                    _appendNextInQueue();\n                } else {\n                    isAppendingInProgress = false;\n                }\n\n                delete nextChunk.data.bytes;\n                nextChunk.promise.reject({ chunk: nextChunk.data, error: new DashJSError(err.code, err.message) });\n            }\n        }\n    }\n\n    function abort() {\n        return new Promise((resolve) => {\n            try {\n                appendQueue = [];\n                if (mediaSource.readyState === 'open') {\n                    _waitForUpdateEnd(() => {\n                        try {\n                            if (buffer) {\n                                buffer.abort();\n                            }\n                            resolve();\n                        } catch (e) {\n                            resolve();\n                        }\n                    });\n                } else if (buffer && buffer.setTextTrack && mediaSource.readyState === 'ended') {\n                    buffer.abort(); //The cues need to be removed from the TextSourceBuffer via a call to abort()\n                    resolve();\n                } else {\n                    resolve();\n                }\n            } catch (e) {\n                resolve();\n            }\n        });\n    }\n\n    function _executeCallback() {\n        if (callbacks.length > 0) {\n            if (!buffer.updating) {\n                const cb = callbacks.shift();\n                cb();\n                // Try to execute next callback if still not updating\n                _executeCallback();\n            }\n        }\n    }\n\n    function _updateEndHandler() {\n        // if updating is still in progress do nothing and wait for the next check again.\n        if (buffer.updating) {\n            return;\n        }\n\n        // updating is completed, now we can stop checking and resolve the promise\n        _executeCallback();\n    }\n\n    function _errHandler(e) {\n        const error = e.target || {};\n        _triggerEvent(Events.SOURCE_BUFFER_ERROR, { error, lastRequestAppended })\n    }\n\n    function _triggerEvent(eventType, data) {\n        let payload = data || {};\n        eventBus.trigger(eventType, payload, { streamId: mediaInfo.streamInfo.id, mediaType: type });\n    }\n\n    function _waitForUpdateEnd(callback) {\n        try {\n            callbacks.push(callback);\n\n            if (!buffer.updating) {\n                _executeCallback();\n            }\n        } catch (e) {\n            logger.error(e);\n        }\n    }\n\n    instance = {\n        abort,\n        abortBeforeAppend,\n        append,\n        changeType,\n        getAllBufferRanges,\n        getBuffer,\n        getType,\n        initializeForFirstUse,\n        initializeForStreamSwitch,\n        remove,\n        removeEventListeners,\n        reset,\n        updateAppendWindow,\n        updateTimestampOffset,\n    };\n\n    setup();\n\n    return instance;\n}\n\nSourceBufferSink.__dashjs_factory_name = 'SourceBufferSink';\nconst factory = FactoryMaker.getClassFactory(SourceBufferSink);\nexport default factory;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport Debug from '../core/Debug.js';\nimport FactoryMaker from '../core/FactoryMaker.js';\n\n/**\n * This is a sink that is used to temporarily hold onto media chunks before a video element is added.\n * The discharge() function is used to get the chunks out of the PreBuffer for adding to a real SourceBuffer.\n *\n * @class PreBufferSink\n * @ignore\n * @implements FragmentSink\n */\nfunction PreBufferSink(onAppendedCallback) {\n    const context = this.context;\n\n    let instance,\n        logger,\n        outstandingInit;\n    let chunks = [];\n    let onAppended = onAppendedCallback;\n\n    function setup() {\n        logger = Debug(context).getInstance().getLogger(instance);\n    }\n\n    function reset() {\n        chunks = [];\n        outstandingInit = null;\n        onAppended = null;\n    }\n\n    function append(chunk) {\n        if (chunk.segmentType !== 'InitializationSegment') { //Init segments are stored in the initCache.\n            chunks.push(chunk);\n            chunks.sort(function (a, b) {\n                return a.start - b.start;\n            });\n            outstandingInit = null;\n        } else {//We need to hold an init chunk for when a corresponding media segment is being downloaded when the discharge happens.\n            outstandingInit = chunk;\n        }\n\n        logger.debug('PreBufferSink appended chunk s: ' + chunk.start + '; e: ' + chunk.end);\n        if (onAppended) {\n            onAppended({\n                chunk: chunk\n            });\n        }\n        return Promise.resolve();\n    }\n\n    function remove(start, end) {\n        chunks = chunks.filter(a => !((isNaN(end) || a.start < end) && (isNaN(start) || a.end > start))); //The opposite of the getChunks predicate.\n        return Promise.resolve();\n    }\n\n    //Nothing async, nothing to abort.\n    function abort() {\n        return Promise.resolve();\n    }\n\n    function getAllBufferRanges() {\n        let ranges = [];\n\n        for (let i = 0; i < chunks.length; i++) {\n            let chunk = chunks[i];\n            if (ranges.length === 0 || chunk.start > ranges[ranges.length - 1].end) {\n                ranges.push({start: chunk.start, end: chunk.end});\n            } else {\n                ranges[ranges.length - 1].end = chunk.end;\n            }\n        }\n\n        //Implements TimeRanges interface. So acts just like sourceBuffer.buffered.\n        const timeranges = {\n            start: function (n) {\n                return ranges[n].start;\n            },\n            end: function (n) {\n                return ranges[n].end;\n            }\n        };\n\n        Object.defineProperty(timeranges, 'length', {\n            get: function () {\n                return ranges.length;\n            }\n        });\n\n        return timeranges;\n    }\n\n    function updateTimestampOffset() {\n        return Promise.resolve();\n    }\n\n    function getBuffer() {\n        return this;\n    }\n\n    /**\n     * Return the all chunks in the buffer the lie between times start and end.\n     * Because a chunk cannot be split, this returns the full chunk if any part of its time lies in the requested range.\n     * Chunks are removed from the buffer when they are discharged.\n     * @function PreBufferSink#discharge\n     * @param {?Number} start The start time from which to discharge from the buffer. If NaN, it is regarded as unbounded.\n     * @param {?Number} end The end time from which to discharge from the buffer. If NaN, it is regarded as unbounded.\n     * @returns {Array} The set of chunks from the buffer within the time ranges.\n     */\n    function discharge(start, end) {\n        const result = getChunksAt(start, end);\n        if (outstandingInit) {\n            result.push(outstandingInit);\n            outstandingInit = null;\n        }\n\n        remove(start, end);\n\n        return result;\n    }\n\n    function getChunksAt(start, end) {\n        return chunks.filter(a => ((isNaN(end) || a.start < end) && (isNaN(start) || a.end > start)));\n    }\n\n    function waitForUpdateEnd(callback) {\n        callback();\n    }\n\n    instance = {\n        getAllBufferRanges,\n        append,\n        remove,\n        abort,\n        discharge,\n        reset,\n        updateTimestampOffset,\n        waitForUpdateEnd,\n        getBuffer\n    };\n\n    setup();\n\n    return instance;\n}\n\nPreBufferSink.__dashjs_factory_name = 'PreBufferSink';\nconst factory = FactoryMaker.getClassFactory(PreBufferSink);\nexport default factory;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * Represents data structure to keep and drive {DataChunk}\n */\n\nimport FactoryMaker from '../../core/FactoryMaker.js';\n\nfunction InitCache() {\n\n    let data = {};\n\n    function save (chunk) {\n        const id = chunk.streamId;\n        const representationId = chunk.representation.id;\n\n        data[id] = data[id] || {};\n        data[id][representationId] = chunk;\n    }\n\n    function extract (streamId, representationId) {\n        if (data && data[streamId] && data[streamId][representationId]) {\n            return data[streamId][representationId];\n        } else {\n            return null;\n        }\n    }\n\n\n    function reset () {\n        data = {};\n    }\n\n    const instance = {\n        save: save,\n        extract: extract,\n        reset: reset\n    };\n\n    return instance;\n}\n\nInitCache.__dashjs_factory_name = 'InitCache';\nexport default FactoryMaker.getSingletonFactory(InitCache);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport Constants from '../constants/Constants.js';\nimport MetricsConstants from '../constants/MetricsConstants.js';\nimport FragmentModel from '../models/FragmentModel.js';\nimport SourceBufferSink from '../SourceBufferSink.js';\nimport PreBufferSink from '../PreBufferSink.js';\nimport EventBus from '../../core/EventBus.js';\nimport Events from '../../core/events/Events.js';\nimport FactoryMaker from '../../core/FactoryMaker.js';\nimport Debug from '../../core/Debug.js';\nimport InitCache from '../utils/InitCache.js';\nimport {HTTPRequest} from '../vo/metrics/HTTPRequest.js';\nimport MediaPlayerEvents from '../../streaming/MediaPlayerEvents.js';\n\nconst BUFFER_END_THRESHOLD = 0.5;\nconst BUFFER_RANGE_CALCULATION_THRESHOLD = 0.01;\nconst QUOTA_EXCEEDED_ERROR_CODE = 22;\n\nconst BUFFER_CONTROLLER_TYPE = 'BufferController';\n\nfunction BufferController(config) {\n\n    config = config || {};\n    const capabilities = config.capabilities;\n    const context = this.context;\n    const eventBus = EventBus(context).getInstance();\n    const fragmentModel = config.fragmentModel;\n    const playbackController = config.playbackController;\n    const representationController = config.representationController;\n    const settings = config.settings;\n    const streamInfo = config.streamInfo;\n    const textController = config.textController;\n    const type = config.type;\n\n    let instance,\n        logger,\n        isBufferingCompleted,\n        bufferLevel,\n        criticalBufferLevel,\n        mediaSource,\n        maxAppendedIndex,\n        maximumIndex,\n        sourceBufferSink,\n        dischargeBuffer,\n        isPrebuffering,\n        dischargeFragments,\n        bufferState,\n        appendedBytesInfo,\n        wallclockTicked,\n        isPruningInProgress,\n        isQuotaExceeded,\n        initCache,\n        pendingPruningRanges,\n        replacingBuffer,\n        seekTarget;\n\n\n    function setup() {\n        logger = Debug(context).getInstance().getLogger(instance);\n        initCache = InitCache(context).getInstance();\n\n        resetInitialSettings();\n    }\n\n    /**\n     * Initialize the BufferController. Sets the media source and registers the event handlers.\n     * @param {object} mediaSource\n     */\n    function initialize(mediaSource) {\n        setMediaSource(mediaSource);\n\n        eventBus.on(Events.INIT_FRAGMENT_LOADED, _onInitFragmentLoaded, instance);\n        eventBus.on(Events.MEDIA_FRAGMENT_LOADED, _onMediaFragmentLoaded, instance);\n        eventBus.on(Events.WALLCLOCK_TIME_UPDATED, _onWallclockTimeUpdated, instance);\n\n        eventBus.on(MediaPlayerEvents.PLAYBACK_PLAYING, _onPlaybackPlaying, instance);\n        eventBus.on(MediaPlayerEvents.PLAYBACK_PROGRESS, _onPlaybackProgression, instance);\n        eventBus.on(MediaPlayerEvents.PLAYBACK_TIME_UPDATED, _onPlaybackProgression, instance);\n        eventBus.on(MediaPlayerEvents.PLAYBACK_RATE_CHANGED, _onPlaybackRateChanged, instance);\n        eventBus.on(MediaPlayerEvents.PLAYBACK_STALLED, _onPlaybackStalled, instance);\n    }\n\n    /**\n     * Returns the stream id\n     * @return {string}\n     */\n    function getStreamId() {\n        return streamInfo.id;\n    }\n\n    /**\n     * Returns the media type\n     * @return {type}\n     */\n    function getType() {\n        return type;\n    }\n\n    /**\n     * Returns the type of the BufferController. We distinguish between standard buffer controllers and buffer controllers related to texttracks.\n     * @return {string}\n     */\n    function getBufferControllerType() {\n        return BUFFER_CONTROLLER_TYPE;\n    }\n\n    /**\n     * Sets the mediasource.\n     * @param {object} value\n     * @param {object} mediaInfo\n     */\n    function setMediaSource(value, mediaInfo = null) {\n        return new Promise((resolve, reject) => {\n            mediaSource = value;\n            // if we have a prebuffer, we should prepare to discharge it, and make a new sourceBuffer ready\n            if (sourceBufferSink && mediaInfo && typeof sourceBufferSink.discharge === 'function') {\n                dischargeBuffer = sourceBufferSink;\n                createBufferSink(mediaInfo)\n                    .then(() => {\n                        resolve();\n                    })\n                    .catch((e) => {\n                        reject(e);\n                    })\n            } else {\n                resolve();\n            }\n        })\n\n    }\n\n    /**\n     * Creates a SourceBufferSink object\n     * @param {object} mediaInfo\n     * @param {array} oldBufferSinks\n     * @return {Promise<Object>} SourceBufferSink\n     */\n    function createBufferSink(mediaInfo, oldBufferSinks = [], oldRepresentation) {\n        return new Promise((resolve, reject) => {\n            if (!initCache || !mediaInfo) {\n                resolve(null);\n                return;\n            }\n            if (mediaSource) {\n                isPrebuffering = false;\n                _initializeSinkForMseBuffering(mediaInfo, oldBufferSinks, oldRepresentation)\n                    .then((sink) => {\n                        resolve(sink);\n                    })\n                    .catch((e) => {\n                        reject(e);\n                    })\n            } else {\n                isPrebuffering = true;\n                _initializeSinkForPrebuffering()\n                    .then((sink) => {\n                        resolve(sink);\n                    })\n                    .catch((e) => {\n                        reject(e);\n                    })\n            }\n        });\n    }\n\n    function _initializeSinkForPrebuffering() {\n        return new Promise((resolve, reject) => {\n            sourceBufferSink = PreBufferSink(context).create(_onAppended.bind(this));\n            updateBufferTimestampOffset(representationController.getCurrentRepresentation())\n                .then(() => {\n                    resolve(sourceBufferSink);\n                })\n                .catch(() => {\n                    reject();\n                })\n        })\n    }\n\n    function _initializeSinkForMseBuffering(mediaInfo, oldBufferSinks, oldRepresentation) {\n        return new Promise((resolve) => {\n            sourceBufferSink = SourceBufferSink(context).create({\n                mediaSource,\n                textController,\n                eventBus\n            });\n            _initializeSink(mediaInfo, oldBufferSinks, oldRepresentation)\n                .then(() => {\n                    return updateBufferTimestampOffset(representationController.getCurrentRepresentation());\n                })\n                .then(() => {\n                    resolve(sourceBufferSink);\n                })\n                .catch((e) => {\n                    logger.warn('Caught error on create SourceBuffer: ' + e);\n                    resolve(sourceBufferSink);\n                });\n        })\n    }\n\n    function _initializeSink(mediaInfo, oldBufferSinks, oldRepresentation) {\n        const newRepresentation = representationController.getCurrentRepresentation();\n\n        if (oldBufferSinks && oldBufferSinks[type] && (type === Constants.VIDEO || type === Constants.AUDIO)) {\n            return _initializeSinkForStreamSwitch(mediaInfo, newRepresentation, oldBufferSinks, oldRepresentation)\n        } else {\n            return _initializeSinkForFirstUse(mediaInfo, newRepresentation);\n        }\n    }\n\n    function _initializeSinkForStreamSwitch(mediaInfo, newRepresentation, oldBufferSinks, oldRepresentation) {\n        sourceBufferSink.initializeForStreamSwitch(mediaInfo, newRepresentation, oldBufferSinks[type]);\n\n        const promises = [];\n        promises.push(sourceBufferSink.abortBeforeAppend());\n        promises.push(updateAppendWindow());\n        promises.push(_changeCodec(newRepresentation, oldRepresentation))\n\n        if (newRepresentation && newRepresentation.mseTimeOffset !== undefined) {\n            promises.push(updateBufferTimestampOffset(newRepresentation));\n        }\n\n        return Promise.allSettled(promises);\n    }\n\n    function _initializeSinkForFirstUse(mediaInfo, newRepresentation) {\n        return sourceBufferSink.initializeForFirstUse(mediaInfo, newRepresentation);\n    }\n\n    function dischargePreBuffer() {\n        if (sourceBufferSink && dischargeBuffer && typeof dischargeBuffer.discharge === 'function') {\n            const ranges = dischargeBuffer.getAllBufferRanges();\n\n            if (ranges.length > 0) {\n                let rangeStr = 'Beginning ' + type + 'PreBuffer discharge, adding buffer for:';\n                for (let i = 0; i < ranges.length; i++) {\n                    rangeStr += ' start: ' + ranges.start(i) + ', end: ' + ranges.end(i) + ';';\n                }\n                logger.debug(rangeStr);\n            } else {\n                logger.debug('PreBuffer discharge requested, but there were no media segments in the PreBuffer.');\n            }\n\n            //A list of fragments to supress bytesAppended events for. This makes transferring from a prebuffer to a sourcebuffer silent.\n            dischargeFragments = [];\n            let chunks = dischargeBuffer.discharge();\n            let lastInit = null;\n            for (let j = 0; j < chunks.length; j++) {\n                const chunk = chunks[j];\n                if (chunk.segmentType !== HTTPRequest.INIT_SEGMENT_TYPE) {\n                    const initChunk = initCache.extract(chunk.streamId, chunk.representation.id);\n                    if (initChunk) {\n                        if (lastInit !== initChunk) {\n                            dischargeFragments.push(initChunk);\n                            sourceBufferSink.append(initChunk);\n                            lastInit = initChunk;\n                        }\n                    }\n                }\n                dischargeFragments.push(chunk);\n                sourceBufferSink.append(chunk);\n            }\n\n            dischargeBuffer.reset();\n            dischargeBuffer = null;\n        }\n    }\n\n\n    /**\n     * Callback handler when init segment has been loaded. Based on settings, the init segment is saved to the cache, and appended to the buffer.\n     * @param {object} e\n     * @private\n     */\n    function _onInitFragmentLoaded(e) {\n        if (settings.get().streaming.cacheInitSegments) {\n            logger.info('Init fragment finished loading saving to', type + '\\'s init cache');\n            initCache.save(e.chunk);\n        }\n        logger.debug('Append Init fragment', type, ' with representationId:', e.chunk.representation.id, ' and quality:', e.chunk.quality, ', data size:', e.chunk.bytes.byteLength);\n        _appendToBuffer(e.chunk);\n    }\n\n    /**\n     * Append the init segment for a certain representation to the buffer. If the init segment is cached we take the one from the cache. Otherwise the function returns false and the segment has to be requested again.\n     * @param {string} representationId\n     * @return {boolean}\n     */\n    function appendInitSegmentFromCache(representationId) {\n        // Get init segment from cache\n        const chunk = initCache.extract(streamInfo.id, representationId);\n\n        if (!chunk) {\n            // Init segment not in cache, shall be requested\n            return false;\n        }\n\n        // Append init segment into buffer\n        logger.info('Append Init fragment', type, ' with representationId:', chunk.representation.id, ' and quality:', chunk.quality, ', data size:', chunk.bytes.byteLength);\n        _appendToBuffer(chunk);\n\n        return true;\n    }\n\n    /**\n     * Calls the _appendToBuffer function to append the segment to the buffer. In case of a track switch the buffer might be cleared.\n     * @param {object} e\n     */\n    function _onMediaFragmentLoaded(e) {\n        _appendToBuffer(e.chunk, e.request);\n    }\n\n    /**\n     * Append data to the MSE buffer using the SourceBufferSink\n     * @param {object} chunk\n     * @param {object} request\n     * @private\n     */\n    function _appendToBuffer(chunk, request = null) {\n        if (!sourceBufferSink) {\n            return;\n        }\n        sourceBufferSink.append(chunk, request)\n            .then((e) => {\n                _onAppended(e);\n            })\n            .catch((e) => {\n                _onAppended(e);\n            });\n\n        if (chunk.representation.mediaInfo.type === Constants.VIDEO) {\n            _triggerEvent(Events.VIDEO_CHUNK_RECEIVED, { chunk: chunk });\n        }\n    }\n\n    function _showBufferRanges(ranges) {\n        if (ranges && ranges.length > 0) {\n            for (let i = 0, len = ranges.length; i < len; i++) {\n                logger.debug('Buffered range: ' + ranges.start(i) + ' - ' + ranges.end(i) + ', currentTime = ', playbackController.getTime());\n            }\n        }\n    }\n\n    function _onAppended(e) {\n        if (e.error) {\n            // If we receive a QUOTA_EXCEEDED_ERROR_CODE we should adjust the target buffer times to avoid this error in the future.\n            if (e.error.code === QUOTA_EXCEEDED_ERROR_CODE) {\n                _handleQuotaExceededError();\n            }\n            if (e.error.code === QUOTA_EXCEEDED_ERROR_CODE || !hasEnoughSpaceToAppend()) {\n                logger.warn('Clearing playback buffer to overcome quota exceed situation');\n                // Notify ScheduleController to stop scheduling until buffer has been pruned\n                _triggerEvent(Events.QUOTA_EXCEEDED, {\n                    criticalBufferLevel: criticalBufferLevel,\n                    quotaExceededTime: e.chunk.start\n                });\n                clearBuffers(getClearRanges());\n            }\n            return;\n        }\n\n        // Check if session has not been stopped in the meantime (while last segment was being appended)\n        if (!sourceBufferSink) {\n            return;\n        }\n\n        _updateBufferLevel();\n\n        isQuotaExceeded = false;\n        appendedBytesInfo = e.chunk;\n\n        if (!appendedBytesInfo || !appendedBytesInfo.endFragment) {\n            return;\n        }\n\n        if (appendedBytesInfo && !isNaN(appendedBytesInfo.index)) {\n            maxAppendedIndex = Math.max(appendedBytesInfo.index, maxAppendedIndex);\n            _checkIfBufferingCompleted();\n        }\n\n        const ranges = sourceBufferSink.getAllBufferRanges();\n        if (appendedBytesInfo.segmentType === HTTPRequest.MEDIA_SEGMENT_TYPE) {\n            _showBufferRanges(ranges);\n            _onPlaybackProgression();\n            _adjustSeekTarget();\n        }\n\n        let suppressAppendedEvent = false;\n        if (dischargeFragments) {\n            if (dischargeFragments.indexOf(appendedBytesInfo) > 0) {\n                suppressAppendedEvent = true;\n            }\n            dischargeFragments = null;\n        }\n\n        if (appendedBytesInfo && !suppressAppendedEvent) {\n            _triggerEvent(Events.BYTES_APPENDED_END_FRAGMENT, {\n                startTime: appendedBytesInfo.start,\n                index: appendedBytesInfo.index,\n                bufferedRanges: ranges,\n                segmentType: appendedBytesInfo.segmentType,\n                mediaType: type,\n                representationId: appendedBytesInfo.representation.id\n            });\n        }\n    }\n\n    /**\n     * In some cases the segment we requested might start at a different time than we initially aimed for. segments timeline/template tolerance.\n     * We might need to do an internal seek if there is drift.\n     * @private\n     */\n    function _adjustSeekTarget() {\n        if (isNaN(seekTarget) || isPrebuffering) {\n            return;\n        }\n        // Check buffered data only for audio and video\n        if (type !== Constants.AUDIO && type !== Constants.VIDEO) {\n            seekTarget = NaN;\n            return;\n        }\n\n        // Check if current buffered range already contains seek target (and current video element time)\n        const currentTime = playbackController.getTime();\n        const rangeAtCurrenTime = getRangeAt(currentTime, 0);\n        const rangeAtSeekTarget = getRangeAt(seekTarget, 0);\n        if (rangeAtCurrenTime && rangeAtSeekTarget && rangeAtCurrenTime.start === rangeAtSeekTarget.start) {\n            seekTarget = NaN;\n            return;\n        }\n\n        // Get buffered range corresponding to the seek target\n        const segmentDuration = representationController.getCurrentRepresentation().segmentDuration;\n        const range = getRangeAt(seekTarget, segmentDuration);\n        if (!range) {\n            return;\n        }\n\n        if (settings.get().streaming.buffer.enableSeekDecorrelationFix && Math.abs(currentTime - seekTarget) > segmentDuration) {\n            // If current video model time is decorrelated from seek target (and appended buffer) then seek video element\n            // (in case of live streams on some browsers/devices for which we can't set video element time at unavalaible range)\n\n            // Check if appended segment is not anterior from seek target (segments timeline/template tolerance)\n            if (seekTarget <= range.end) {\n                // Seek video element to seek target or range start if appended buffer starts after seek target (segments timeline/template tolerance)\n                playbackController.seek(Math.max(seekTarget, range.start), false, true);\n            }\n        } else if (currentTime < range.start) {\n            // If appended buffer starts after seek target (segments timeline/template tolerance) then seek to range start\n            playbackController.seek(range.start, false, true);\n        }\n    }\n\n    function _handleQuotaExceededError() {\n        isQuotaExceeded = true;\n        criticalBufferLevel = getTotalBufferedTime() * 0.8;\n        logger.warn('Quota exceeded, Critical Buffer: ' + criticalBufferLevel);\n\n        if (criticalBufferLevel > 0) {\n            // recalculate buffer lengths according to criticalBufferLevel\n            const bufferToKeep = Math.max(0.2 * criticalBufferLevel, 1);\n            const bufferAhead = criticalBufferLevel - bufferToKeep;\n            const bufferTimeAtTopQuality = Math.min(settings.get().streaming.buffer.bufferTimeAtTopQuality, bufferAhead * 0.9);\n            const bufferTimeAtTopQualityLongForm = Math.min(settings.get().streaming.buffer.bufferTimeAtTopQualityLongForm, bufferAhead * 0.9);\n            const s = {\n                streaming: {\n                    buffer: {\n                        bufferToKeep: parseFloat(bufferToKeep.toFixed(5)),\n                        bufferTimeAtTopQuality: parseFloat(bufferTimeAtTopQuality.toFixed(5)),\n                        bufferTimeAtTopQualityLongForm: parseFloat(bufferTimeAtTopQualityLongForm.toFixed(5))\n                    }\n                }\n            };\n            settings.update(s);\n        }\n    }\n\n    function prepareForPlaybackSeek() {\n        if (isBufferingCompleted) {\n            setIsBufferingCompleted(false);\n        }\n\n        // Abort the current request and empty all possible segments to be appended\n        return sourceBufferSink.abort();\n    }\n\n    function prepareForForceReplacementQualitySwitch(newRepresentation, oldRepresentation) {\n        return new Promise((resolve) => {\n            const promises = [];\n            promises.push(sourceBufferSink.abort())\n            promises.push(updateAppendWindow())\n            promises.push(pruneAllSafely())\n            promises.push(updateBufferTimestampOffset(newRepresentation))\n            promises.push(_changeCodec(newRepresentation, oldRepresentation))\n\n            Promise.allSettled(promises)\n                .then(() => {\n                    setIsBufferingCompleted(false);\n                    resolve();\n                })\n\n        });\n    }\n\n    function prepareForAbandonQualitySwitch(newRepresentation, oldRepresentation) {\n        return _defaultQualitySwitchPreparation(newRepresentation, oldRepresentation);\n    }\n\n    function prepareForFastQualitySwitch(newRepresentation, oldRepresentation) {\n        return _defaultQualitySwitchPreparation(newRepresentation, oldRepresentation);\n    }\n\n    function prepareForDefaultQualitySwitch(newRepresentation, oldRepresentation) {\n        return _defaultQualitySwitchPreparation(newRepresentation, oldRepresentation);\n    }\n\n    function _defaultQualitySwitchPreparation(newRepresentation, oldRepresentation) {\n        const promises = [];\n        promises.push(updateBufferTimestampOffset(newRepresentation));\n        promises.push(abort());\n        promises.push(_changeCodec(newRepresentation, oldRepresentation));\n\n        return Promise.allSettled(promises);\n    }\n\n    function prepareForReplacementTrackSwitch(newRepresentation, oldRepresentation) {\n        return new Promise((resolve) => {\n            const promises = [];\n            promises.push(sourceBufferSink.abort());\n            promises.push(updateAppendWindow());\n            promises.push(_changeCodec(newRepresentation, oldRepresentation));\n            promises.push(pruneAllSafely());\n            promises.push(updateBufferTimestampOffset(newRepresentation));\n\n            Promise.allSettled(promises)\n                .then(() => {\n                    setIsBufferingCompleted(false);\n                    resolve();\n                })\n        })\n    }\n\n    function prepareForNonReplacementTrackSwitch(newRepresentation, oldRepresentation) {\n        return new Promise((resolve) => {\n            const promises = [];\n\n            promises.push(updateAppendWindow());\n            promises.push(_changeCodec(newRepresentation, oldRepresentation))\n\n            Promise.allSettled(promises)\n                .then(() => {\n                    resolve();\n                })\n        });\n    }\n\n    function _changeCodec(newRepresentation, oldRepresentation) {\n\n        if (!newRepresentation || !oldRepresentation) {\n            logger.warn(`BufferController._changeCodec() is missing the information about the Representations. Doing nothing`);\n            return Promise.resolve();\n        }\n\n        // we dont need change type for the codec change if we have the same mime type and codec family\n        if (newRepresentation && oldRepresentation && newRepresentation.mimeType === oldRepresentation.mimeType && newRepresentation.codecFamily === oldRepresentation.codecFamily) {\n            logger.debug(`Switching to new codec ${newRepresentation.codecs} without changeType as previous codec ${oldRepresentation.codecs} is compatible.`);\n            return Promise.resolve();\n        }\n\n        // change type should not be used or is not supported\n        if (!settings.get().streaming.buffer.useChangeType || !capabilities.supportsChangeType()) {\n            logger.debug(`changeType() not available`);\n            return Promise.resolve()\n        }\n\n        logger.debug(`Using changeType() to switch from codec ${oldRepresentation.codecs} to ${newRepresentation.codecs}`);\n        return sourceBufferSink.changeType(newRepresentation);\n    }\n\n    function pruneAllSafely() {\n        return new Promise((resolve, reject) => {\n            let ranges = getAllRangesWithSafetyFactor();\n\n            if (!ranges || ranges.length === 0) {\n                _onPlaybackProgression();\n                resolve();\n                return;\n            }\n\n            clearBuffers(ranges)\n                .then(() => {\n                    resolve();\n                })\n                .catch((e) => {\n                    reject(e);\n                });\n        });\n    }\n\n    function getAllRangesWithSafetyFactor(seekTime) {\n        const clearRanges = [];\n        const ranges = sourceBufferSink.getAllBufferRanges();\n\n        // no valid ranges\n        if (!ranges || ranges.length === 0) {\n            return clearRanges;\n        }\n\n        // if no target time is provided we clear everything\n        if ((!seekTime && seekTime !== 0) || isNaN(seekTime)) {\n            clearRanges.push({\n                start: ranges.start(0),\n                end: ranges.end(ranges.length - 1) + BUFFER_END_THRESHOLD\n            });\n        }\n\n        // otherwise we need to calculate the correct pruning range\n        else {\n            const behindPruningRange = _getRangeBehindForPruning(seekTime, ranges);\n            const aheadPruningRange = _getRangeAheadForPruning(seekTime, ranges);\n\n            if (behindPruningRange) {\n                clearRanges.push(behindPruningRange);\n            }\n\n            if (aheadPruningRange) {\n                clearRanges.push(aheadPruningRange);\n            }\n        }\n\n        return clearRanges;\n    }\n\n    function _getRangeBehindForPruning(targetTime, ranges) {\n        const bufferToKeepBehind = settings.get().streaming.buffer.bufferToKeep;\n        const startOfBuffer = ranges.start(0);\n\n        // if we do a seek ahead of the current play position we do need to prune behind the new play position\n        const behindDiff = targetTime - startOfBuffer;\n        if (behindDiff > bufferToKeepBehind) {\n\n            let rangeEnd = Math.max(0, targetTime - bufferToKeepBehind);\n            // Ensure we keep full range of current fragment\n            const currentTimeRequest = fragmentModel.getRequests({\n                state: FragmentModel.FRAGMENT_MODEL_EXECUTED,\n                time: targetTime,\n                threshold: BUFFER_RANGE_CALCULATION_THRESHOLD\n            })[0];\n\n            if (currentTimeRequest) {\n                rangeEnd = Math.min(currentTimeRequest.startTime, rangeEnd);\n            }\n            if (rangeEnd > 0) {\n                return {\n                    start: startOfBuffer,\n                    end: rangeEnd\n                };\n            }\n        }\n\n        return null;\n    }\n\n    function _getRangeAheadForPruning(targetTime, ranges) {\n        // if we do a seek behind the current play position we do need to prune ahead of the new play position\n        // we keep everything that is within bufferToKeepAhead but only if the buffer is continuous.\n        // Otherwise we have gaps once the seek is done which might trigger an unintentional gap jump\n        const endOfBuffer = ranges.end(ranges.length - 1) + BUFFER_END_THRESHOLD;\n        const continuousBufferTime = getContinuousBufferTimeForTargetTime(targetTime);\n\n        // This is the maximum range we keep ahead\n        const isLongFormContent = streamInfo.manifestInfo.duration >= settings.get().streaming.buffer.longFormContentDurationThreshold;\n        const bufferToKeepAhead = isLongFormContent ? settings.get().streaming.buffer.bufferTimeAtTopQualityLongForm : settings.get().streaming.buffer.bufferTimeAtTopQuality;\n\n        // Define the start time from which we will prune. If there is no continuous range from the targettime we start immediately at the target time\n        // Otherwise we set the start point to the end of the continuous range taking the maximum buffer to keep ahead into account\n        let rangeStart = !isNaN(continuousBufferTime) ? Math.min(continuousBufferTime, targetTime + bufferToKeepAhead) : targetTime;\n\n        // Check if we are done buffering, no need to prune then\n        if (rangeStart >= ranges.end(ranges.length - 1)) {\n            return null\n        }\n\n        // Ensure we keep full range of current fragment\n        const currentTimeRequest = fragmentModel.getRequests({\n            state: FragmentModel.FRAGMENT_MODEL_EXECUTED,\n            time: targetTime,\n            threshold: BUFFER_RANGE_CALCULATION_THRESHOLD\n        })[0];\n\n        if (currentTimeRequest) {\n            rangeStart = Math.max(currentTimeRequest.startTime + currentTimeRequest.duration, rangeStart);\n        }\n\n        // Never remove the contiguous range of targetTime in order to avoid flushes & reenqueues when the user doesn't want it\n        const avoidCurrentTimeRangePruning = settings.get().streaming.buffer.avoidCurrentTimeRangePruning;\n        if (avoidCurrentTimeRangePruning) {\n            for (let i = 0; i < ranges.length; i++) {\n                if (ranges.start(i) <= targetTime && targetTime <= ranges.end(i)\n                    && ranges.start(i) <= rangeStart && rangeStart <= ranges.end(i)) {\n                    let oldRangeStart = rangeStart;\n                    if (i + 1 < ranges.length) {\n                        rangeStart = ranges.start(i + 1);\n                    } else {\n                        rangeStart = ranges.end(i) + 1;\n                    }\n                    logger.debug('Buffered range [' + ranges.start(i) + ', ' + ranges.end(i) + '] overlaps with targetTime ' + targetTime + ' and range to be pruned [' + oldRangeStart + ', ' + endOfBuffer + '], using [' + rangeStart + ', ' + endOfBuffer + '] instead' + ((rangeStart < endOfBuffer) ? '' : ' (no actual pruning)'));\n                    break;\n                }\n            }\n        }\n\n        if (rangeStart < ranges.end(ranges.length - 1)) {\n            return {\n                start: rangeStart,\n                end: endOfBuffer\n            };\n        }\n        return null;\n    }\n\n\n    function _onPlaybackProgression() {\n        if (!replacingBuffer || (type === Constants.TEXT && textController.isTextEnabled())) {\n            _updateBufferLevel();\n        }\n    }\n\n    function _onPlaybackStalled() {\n        checkIfSufficientBuffer();\n    }\n\n    function _onPlaybackPlaying() {\n        checkIfSufficientBuffer();\n        seekTarget = NaN;\n    }\n\n    function hasBufferAtTime(time) {\n        try {\n            const ranges = sourceBufferSink.getAllBufferRanges();\n\n            if (!ranges || ranges.length === 0) {\n                return false;\n            }\n\n            let i = 0;\n\n            while (i < ranges.length) {\n                const start = ranges.start(i);\n                const end = ranges.end(i);\n\n                if (time >= start && time <= end) {\n                    return true;\n                }\n\n                i += 1;\n            }\n\n            return false\n\n        } catch (e) {\n            logger.error(e);\n            return false;\n        }\n    }\n\n    function getRangeAt(time, tolerance) {\n        if (!sourceBufferSink) {\n            return null;\n        }\n        const ranges = sourceBufferSink.getAllBufferRanges();\n        let start = 0;\n        let end = 0;\n        let firstStart = null;\n        let lastEnd = null;\n        let gap = 0;\n        let len,\n            i;\n\n        const toler = !isNaN(tolerance) ? tolerance : 0.15;\n\n        if (ranges !== null && ranges !== undefined) {\n            for (i = 0, len = ranges.length; i < len; i++) {\n                start = ranges.start(i);\n                end = ranges.end(i);\n                if (firstStart === null) {\n                    gap = Math.abs(start - time);\n                    if (time >= start && time < end) {\n                        // start the range\n                        firstStart = start;\n                        lastEnd = end;\n                    } else if (gap <= toler) {\n                        // start the range even though the buffer does not contain time 0\n                        firstStart = start;\n                        lastEnd = end;\n                    }\n                } else {\n                    gap = start - lastEnd;\n                    if (gap <= toler) {\n                        // the discontinuity is smaller than the tolerance, combine the ranges\n                        lastEnd = end;\n                    } else {\n                        break;\n                    }\n                }\n            }\n\n            if (firstStart !== null) {\n                return {\n                    start: firstStart,\n                    end: lastEnd\n                };\n            }\n        }\n\n        return null;\n    }\n\n    function getBufferLength(time, tolerance) {\n        let range,\n            length;\n\n        // Consider gap/discontinuity limit as tolerance\n        if (settings.get().streaming.gaps.jumpGaps) {\n            tolerance = settings.get().streaming.gaps.smallGapLimit;\n        }\n\n        range = getRangeAt(time, tolerance);\n\n        if (range === null) {\n            length = 0;\n        } else {\n            length = range.end - time;\n        }\n\n        return length;\n    }\n\n    function _updateBufferLevel() {\n        if (playbackController) {\n            let referenceTime = playbackController.getTime() || 0;\n            // In case we are prebuffering we dont have a current time yet\n            if (isPrebuffering) {\n                referenceTime = !isNaN(seekTarget) ? seekTarget : 0;\n            }\n            const tolerance = settings.get().streaming.gaps.jumpGaps && !isNaN(settings.get().streaming.gaps.smallGapLimit) ? settings.get().streaming.gaps.smallGapLimit : NaN;\n            bufferLevel = Math.max(getBufferLength(referenceTime, tolerance), 0);\n            _triggerEvent(Events.BUFFER_LEVEL_UPDATED, { mediaType: type, bufferLevel: bufferLevel });\n            checkIfSufficientBuffer();\n        }\n    }\n\n    function _checkIfBufferingCompleted() {\n        const isLastIdxAppended = maxAppendedIndex >= maximumIndex - 1; // Handles 0 and non 0 based request index\n        // To avoid rounding error when comparing, the stream time and buffer level only must be within 5 decimal places\n        const periodBuffered = playbackController.getTimeToStreamEnd(streamInfo) - bufferLevel < 0.00001;\n        if ((isLastIdxAppended || periodBuffered) && !isBufferingCompleted) {\n            setIsBufferingCompleted(true);\n            logger.debug(`checkIfBufferingCompleted trigger BUFFERING_COMPLETED for stream id ${streamInfo.id} and type ${type}`);\n        }\n    }\n\n    function checkIfSufficientBuffer() {\n        // No need to check buffer if type is not audio or video (for example if several errors occur during text parsing, so that the buffer cannot be filled, no error must occur on video playback)\n        if (type !== Constants.AUDIO && type !== Constants.VIDEO) {\n            return;\n        }\n\n        // When the player is working in low latency mode, the buffer is often below STALL_THRESHOLD.\n        // So, when in low latency mode, change dash.js behavior so it notifies a stall just when\n        // buffer reach 0 seconds\n        if (((!playbackController.getLowLatencyModeEnabled() && bufferLevel < settings.get().streaming.buffer.stallThreshold) || bufferLevel === 0) && !isBufferingCompleted) {\n            _notifyBufferStateChanged(MetricsConstants.BUFFER_EMPTY);\n        } else {\n            if (isBufferingCompleted || bufferLevel >= settings.get().streaming.buffer.stallThreshold || (playbackController.getLowLatencyModeEnabled() && bufferLevel > 0)) {\n                _notifyBufferStateChanged(MetricsConstants.BUFFER_LOADED);\n            }\n        }\n    }\n\n    function _notifyBufferStateChanged(state) {\n        if (bufferState === state ||\n            (state === MetricsConstants.BUFFER_EMPTY && playbackController.getTime() === 0) || // Don't trigger BUFFER_EMPTY if it's initial loading\n            (type === Constants.TEXT && !textController.isTextEnabled())) {\n            return;\n        }\n\n        bufferState = state;\n\n        _triggerEvent(Events.BUFFER_LEVEL_STATE_CHANGED, { state: state });\n        _triggerEvent(state === MetricsConstants.BUFFER_LOADED ? Events.BUFFER_LOADED : Events.BUFFER_EMPTY);\n        logger.debug(state === MetricsConstants.BUFFER_LOADED ? 'Got enough buffer to start' : 'Waiting for more buffer before starting playback');\n    }\n\n    /* prune buffer on our own in background to avoid browsers pruning buffer silently */\n    function pruneBuffer() {\n        if (!sourceBufferSink || type === Constants.TEXT) {\n            return;\n        }\n\n        if (!isBufferingCompleted) {\n            clearBuffers(getClearRanges());\n        }\n    }\n\n    function getClearRanges() {\n        const clearRanges = [];\n        const ranges = sourceBufferSink.getAllBufferRanges();\n        if (!ranges || ranges.length === 0) {\n            return clearRanges;\n        }\n\n        const currentTime = playbackController.getTime();\n        let startRangeToKeep = Math.max(0, currentTime - settings.get().streaming.buffer.bufferToKeep);\n\n        const currentTimeRequest = fragmentModel.getRequests({\n            state: FragmentModel.FRAGMENT_MODEL_EXECUTED,\n            time: currentTime,\n            threshold: BUFFER_RANGE_CALCULATION_THRESHOLD\n        })[0];\n\n        // Ensure we keep full range of current fragment\n        if (currentTimeRequest) {\n            startRangeToKeep = Math.min(currentTimeRequest.startTime, startRangeToKeep);\n        } else if (currentTime === 0 && playbackController.getIsDynamic()) {\n            // Don't prune before the live stream starts, it messes with low latency\n            return [];\n        }\n\n        if (ranges.start(0) <= startRangeToKeep) {\n            const behindRange = {\n                start: 0,\n                end: startRangeToKeep\n            };\n            for (let i = 0; i < ranges.length && ranges.end(i) <= startRangeToKeep; i++) {\n                behindRange.end = ranges.end(i);\n            }\n            if (behindRange.start < behindRange.end) {\n                clearRanges.push(behindRange);\n            }\n        }\n\n        return clearRanges;\n    }\n\n    function clearBuffers(ranges) {\n        return new Promise((resolve, reject) => {\n            if (!ranges || !sourceBufferSink || ranges.length === 0) {\n                _updateBufferLevel();\n                resolve();\n                return;\n            }\n\n            const promises = [];\n            ranges.forEach((range) => {\n                promises.push(_addClearRangeWithPromise(range));\n            });\n\n\n            if (!isPruningInProgress) {\n                clearNextRange();\n            }\n\n            Promise.all(promises)\n                .then(() => {\n                    resolve();\n                })\n                .catch((e) => {\n                    reject(e);\n                });\n        });\n    }\n\n    function _addClearRangeWithPromise(range) {\n        return new Promise((resolve, reject) => {\n            range.resolve = resolve;\n            range.reject = reject;\n            pendingPruningRanges.push(range);\n        });\n    }\n\n    function clearNextRange() {\n        try {\n            // If there's nothing to prune reset state\n            if (pendingPruningRanges.length === 0 || !sourceBufferSink) {\n                logger.debug('Nothing to prune, halt pruning');\n                pendingPruningRanges = [];\n                isPruningInProgress = false;\n                return;\n            }\n\n            const sourceBuffer = sourceBufferSink.getBuffer();\n            // If there's nothing buffered any pruning is invalid, so reset our state\n            if (!sourceBuffer || !sourceBuffer.buffered || sourceBuffer.buffered.length === 0) {\n                logger.debug('SourceBuffer is empty (or does not exist), halt pruning');\n                pendingPruningRanges = [];\n                isPruningInProgress = false;\n                return;\n            }\n\n            const range = pendingPruningRanges.shift();\n            logger.debug(`${type}: Removing buffer from: ${range.start} to ${range.end}`);\n            isPruningInProgress = true;\n\n            // If removing buffer ahead current playback position, update maxAppendedIndex\n            const currentTime = playbackController.getTime();\n            if (currentTime < range.end) {\n                setIsBufferingCompleted(false);\n            }\n\n            sourceBufferSink.remove(range)\n                .then((e) => {\n                    _onRemoved(e);\n                })\n                .catch((e) => {\n                    _onRemoved(e);\n                });\n        } catch (e) {\n            isPruningInProgress = false;\n        }\n    }\n\n    function _onRemoved(e) {\n        logger.debug('onRemoved buffer from:', e.from, 'to', e.to);\n\n        if (!sourceBufferSink) {\n            return;\n        }\n\n        const ranges = sourceBufferSink.getAllBufferRanges();\n        _showBufferRanges(ranges);\n\n        if (pendingPruningRanges.length === 0) {\n            isPruningInProgress = false;\n            _updateBufferLevel();\n        }\n\n        if (e.unintended) {\n            logger.warn('Detected unintended removal from:', e.from, 'to', e.to, 'setting streamprocessor time to', e.from);\n            _triggerEvent(Events.SEEK_TARGET, { time: e.from });\n        }\n\n        if (isPruningInProgress) {\n            clearNextRange();\n        } else {\n            if (!replacingBuffer) {\n                _updateBufferLevel();\n            } else {\n                replacingBuffer = false;\n            }\n            _triggerEvent(Events.BUFFER_CLEARED, {\n                from: e.from,\n                to: e.to,\n                unintended: e.unintended,\n                hasEnoughSpaceToAppend: hasEnoughSpaceToAppend(),\n                quotaExceeded: isQuotaExceeded\n            });\n        }\n    }\n\n    function updateBufferTimestampOffset(voRepresentation) {\n        return new Promise((resolve) => {\n            if (!voRepresentation || voRepresentation.mseTimeOffset === undefined || !sourceBufferSink || !sourceBufferSink.updateTimestampOffset) {\n                resolve();\n                return;\n            }\n            // Each track can have its own @presentationTimeOffset, so we should set the offset\n            // if it has changed after switching the quality or updating an MPD\n            sourceBufferSink.updateTimestampOffset(voRepresentation.mseTimeOffset)\n                .then(() => {\n                    resolve();\n                })\n                .catch(() => {\n                    resolve();\n                });\n        });\n\n    }\n\n    function abort() {\n        if (sourceBufferSink) {\n            return sourceBufferSink.abort();\n        }\n        return Promise.resolve();\n    }\n\n    function updateAppendWindow() {\n        if (sourceBufferSink && !isBufferingCompleted) {\n            return sourceBufferSink.updateAppendWindow(streamInfo);\n        }\n        return Promise.resolve();\n    }\n\n    function segmentRequestingCompleted(segmentIndex) {\n        if (!isNaN(segmentIndex)) {\n            maximumIndex = segmentIndex;\n            _checkIfBufferingCompleted();\n        }\n    }\n\n    function _onWallclockTimeUpdated() {\n        wallclockTicked++;\n        const secondsElapsed = (wallclockTicked * (settings.get().streaming.wallclockTimeUpdateInterval / 1000));\n        if ((secondsElapsed >= settings.get().streaming.buffer.bufferPruningInterval)) {\n            wallclockTicked = 0;\n            pruneBuffer();\n        }\n    }\n\n    function _onPlaybackRateChanged() {\n        checkIfSufficientBuffer();\n    }\n\n    function getBuffer() {\n        return sourceBufferSink;\n    }\n\n    function getBufferLevel() {\n        return bufferLevel;\n    }\n\n    function getMediaSource() {\n        return mediaSource;\n    }\n\n    function getIsBufferingCompleted() {\n        return isBufferingCompleted;\n    }\n\n    function setIsBufferingCompleted(value) {\n        isBufferingCompleted = value;\n\n        if (isBufferingCompleted) {\n            _triggerEvent(Events.BUFFERING_COMPLETED);\n        } else {\n            maximumIndex = Number.POSITIVE_INFINITY;\n        }\n    }\n\n    function getIsPruningInProgress() {\n        return isPruningInProgress;\n    }\n\n    function getTotalBufferedTime() {\n        try {\n            const ranges = sourceBufferSink.getAllBufferRanges();\n            let totalBufferedTime = 0;\n            let ln,\n                i;\n\n            if (!ranges) {\n                return totalBufferedTime;\n            }\n\n            for (i = 0, ln = ranges.length; i < ln; i++) {\n                totalBufferedTime += ranges.end(i) - ranges.start(i);\n            }\n\n            return totalBufferedTime;\n        } catch (e) {\n            return 0;\n        }\n    }\n\n    /**\n     * This function returns the maximum time for which the buffer is continuous starting from a target time.\n     * As soon as there is a gap we return the time before the gap starts\n     * @param {number} targetTime\n     */\n    function getContinuousBufferTimeForTargetTime(targetTime) {\n        try {\n            let adjustedTime = targetTime;\n            const ranges = sourceBufferSink.getAllBufferRanges();\n\n            if (!ranges || ranges.length === 0) {\n                return NaN;\n            }\n\n            let i = 0;\n\n            while (adjustedTime === targetTime && i < ranges.length) {\n                const start = ranges.start(i);\n                const end = ranges.end(i);\n\n                if (adjustedTime >= start && adjustedTime <= end) {\n                    adjustedTime = end;\n                }\n\n                i += 1;\n            }\n\n            return adjustedTime === targetTime ? NaN : adjustedTime;\n\n        } catch (e) {\n            return NaN\n        }\n    }\n\n    function hasEnoughSpaceToAppend() {\n        const totalBufferedTime = getTotalBufferedTime();\n        return (isNaN(totalBufferedTime) || totalBufferedTime < criticalBufferLevel);\n    }\n\n    function setSeekTarget(value) {\n        seekTarget = value;\n    }\n\n    function _triggerEvent(eventType, data) {\n        let payload = data || {};\n        eventBus.trigger(eventType, payload, { streamId: streamInfo.id, mediaType: type });\n    }\n\n    function resetInitialSettings(errored, keepBuffers) {\n        criticalBufferLevel = Number.POSITIVE_INFINITY;\n        bufferState = undefined;\n        maximumIndex = Number.POSITIVE_INFINITY;\n        maxAppendedIndex = 0;\n        appendedBytesInfo = null;\n        isBufferingCompleted = false;\n        isPruningInProgress = false;\n        isQuotaExceeded = false;\n        bufferLevel = 0;\n        wallclockTicked = 0;\n        pendingPruningRanges = [];\n        seekTarget = NaN;\n        isPrebuffering = false;\n\n        if (sourceBufferSink) {\n            let tmpSourceBufferSinkToReset = sourceBufferSink;\n            sourceBufferSink = null;\n            if (!errored) {\n                if (!keepBuffers) {\n                    tmpSourceBufferSinkToReset.abort()\n                        .then(() => {\n                            tmpSourceBufferSinkToReset.reset(keepBuffers);\n                            tmpSourceBufferSinkToReset = null;\n                        });\n                } else {\n                    tmpSourceBufferSinkToReset.removeEventListeners();\n                }\n            }\n        }\n\n        replacingBuffer = false;\n    }\n\n    function reset(errored, keepBuffers) {\n        eventBus.off(Events.INIT_FRAGMENT_LOADED, _onInitFragmentLoaded, this);\n        eventBus.off(Events.MEDIA_FRAGMENT_LOADED, _onMediaFragmentLoaded, this);\n        eventBus.off(Events.WALLCLOCK_TIME_UPDATED, _onWallclockTimeUpdated, this);\n\n        eventBus.off(MediaPlayerEvents.PLAYBACK_PLAYING, _onPlaybackPlaying, this);\n        eventBus.off(MediaPlayerEvents.PLAYBACK_PROGRESS, _onPlaybackProgression, this);\n        eventBus.off(MediaPlayerEvents.PLAYBACK_TIME_UPDATED, _onPlaybackProgression, this);\n        eventBus.off(MediaPlayerEvents.PLAYBACK_RATE_CHANGED, _onPlaybackRateChanged, this);\n        eventBus.off(MediaPlayerEvents.PLAYBACK_STALLED, _onPlaybackStalled, this);\n\n\n        resetInitialSettings(errored, keepBuffers);\n    }\n\n    instance = {\n        appendInitSegmentFromCache,\n        clearBuffers,\n        createBufferSink,\n        dischargePreBuffer,\n        getAllRangesWithSafetyFactor,\n        getBuffer,\n        getBufferControllerType,\n        getBufferLevel,\n        getContinuousBufferTimeForTargetTime,\n        getIsBufferingCompleted,\n        getIsPruningInProgress,\n        getMediaSource,\n        getRangeAt,\n        getStreamId,\n        getType,\n        hasBufferAtTime,\n        initialize,\n        prepareForAbandonQualitySwitch,\n        prepareForDefaultQualitySwitch,\n        prepareForFastQualitySwitch,\n        prepareForForceReplacementQualitySwitch,\n        prepareForNonReplacementTrackSwitch,\n        prepareForPlaybackSeek,\n        prepareForReplacementTrackSwitch,\n        pruneAllSafely,\n        pruneBuffer,\n        reset,\n        segmentRequestingCompleted,\n        setIsBufferingCompleted,\n        setMediaSource,\n        setSeekTarget,\n        updateAppendWindow,\n        updateBufferTimestampOffset,\n    };\n\n    setup();\n    return instance;\n}\n\nBufferController.__dashjs_factory_name = BUFFER_CONTROLLER_TYPE;\nexport default FactoryMaker.getClassFactory(BufferController);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport EventBus from '../../core/EventBus.js';\nimport Events from '../../core/events/Events.js';\nimport FactoryMaker from '../../core/FactoryMaker.js';\nimport InitCache from '../utils/InitCache.js';\nimport SourceBufferSink from '../SourceBufferSink.js';\nimport DashJSError from '../../streaming/vo/DashJSError.js';\nimport Errors from '../../core/errors/Errors.js';\n\nconst BUFFER_CONTROLLER_TYPE = 'NotFragmentedTextBufferController';\n\nfunction NotFragmentedTextBufferController(config) {\n\n    config = config || {};\n    const context = this.context;\n    const eventBus = EventBus(context).getInstance();\n\n    const textController = config.textController;\n    const errHandler = config.errHandler;\n    const streamInfo = config.streamInfo;\n    const type = config.type;\n\n    let instance,\n        isBufferingCompleted,\n        initialized,\n        mediaSource,\n        sourceBufferSink,\n        initCache;\n\n    function setup() {\n        initialized = false;\n        mediaSource = null;\n        isBufferingCompleted = false;\n\n        initCache = InitCache(context).getInstance();\n\n        eventBus.on(Events.INIT_FRAGMENT_LOADED, _onInitFragmentLoaded, instance);\n    }\n\n    function getBufferControllerType() {\n        return BUFFER_CONTROLLER_TYPE;\n    }\n\n    function initialize(source) {\n        setMediaSource(source);\n    }\n\n    function createBufferSink(mediaInfo) {\n        return new Promise((resolve, reject) => {\n            try {\n                sourceBufferSink = SourceBufferSink(context).create({ mediaSource, textController, eventBus });\n                sourceBufferSink.initializeForFirstUse(mediaInfo);\n                if (!initialized) {\n                    if (sourceBufferSink.getBuffer() && typeof sourceBufferSink.getBuffer().initialize === 'function') {\n                        sourceBufferSink.getBuffer().initialize();\n                    }\n                    initialized = true;\n                }\n                resolve(sourceBufferSink);\n            } catch (e) {\n                errHandler.error(new DashJSError(Errors.MEDIASOURCE_TYPE_UNSUPPORTED_CODE, Errors.MEDIASOURCE_TYPE_UNSUPPORTED_MESSAGE + type));\n                reject(e);\n            }\n        });\n\n    }\n\n    function getStreamId() {\n        return streamInfo.id;\n    }\n\n    function getType() {\n        return type;\n    }\n\n    function getBuffer() {\n        return sourceBufferSink;\n    }\n\n    function setMediaSource(value) {\n        mediaSource = value;\n    }\n\n    function getMediaSource() {\n        return mediaSource;\n    }\n\n    function getIsPruningInProgress() {\n        return false;\n    }\n\n    function dischargePreBuffer() {\n    }\n\n    function getBufferLevel() {\n        return 0;\n    }\n\n    function getIsBufferingCompleted() {\n        return isBufferingCompleted;\n    }\n\n    function setIsBufferingCompleted(value) {\n        if (isBufferingCompleted === value) {\n            return;\n        }\n\n        isBufferingCompleted = value;\n\n        if (isBufferingCompleted) {\n            triggerEvent(Events.BUFFERING_COMPLETED);\n        }\n    }\n\n    function reset(errored) {\n        eventBus.off(Events.INIT_FRAGMENT_LOADED, _onInitFragmentLoaded, instance);\n\n        if (!errored && sourceBufferSink) {\n            sourceBufferSink.abort();\n            sourceBufferSink.reset();\n            sourceBufferSink = null;\n        }\n    }\n\n    function appendInitSegmentFromCache(representationId) {\n        // If text data file already in cache then no need to append it again\n        return initCache.extract(streamInfo.id, representationId) !== null;\n    }\n\n    function _onInitFragmentLoaded(e) {\n        if (!e.chunk.bytes || isBufferingCompleted) {\n            return;\n        }\n\n        initCache.save(e.chunk);\n\n        sourceBufferSink.append(e.chunk);\n\n        setIsBufferingCompleted(true);\n    }\n\n    function getRangeAt() {\n        return null;\n    }\n\n    function hasBufferAtTime() {\n        return true;\n    }\n\n    function getAllRangesWithSafetyFactor() {\n        return [];\n    }\n\n    function getContinuousBufferTimeForTargetTime() {\n        return Number.POSITIVE_INFINITY;\n    }\n\n    function clearBuffers() {\n        return Promise.resolve();\n    }\n\n    function pruneBuffer() {\n        return;\n    }\n\n    function updateBufferTimestampOffset() {\n        return Promise.resolve();\n    }\n\n    function prepareForPlaybackSeek() {\n        return Promise.resolve();\n    }\n\n    function prepareForReplacementTrackSwitch() {\n        isBufferingCompleted = false;\n        return Promise.resolve();\n    }\n\n    function updateAppendWindow() {\n        return Promise.resolve();\n    }\n\n    function setSeekTarget() {\n\n    }\n\n    function segmentRequestingCompleted() {\n\n    }\n\n    function pruneAllSafely() {\n        return Promise.resolve();\n    }\n\n    function triggerEvent(eventType, data) {\n        let payload = data || {};\n        eventBus.trigger(eventType, payload, { streamId: streamInfo.id, mediaType: type });\n    }\n\n    instance = {\n        initialize,\n        getStreamId,\n        getType,\n        getBufferControllerType,\n        createBufferSink,\n        dischargePreBuffer,\n        getBuffer,\n        getBufferLevel,\n        getRangeAt,\n        pruneBuffer,\n        hasBufferAtTime,\n        getAllRangesWithSafetyFactor,\n        getContinuousBufferTimeForTargetTime,\n        setMediaSource,\n        getMediaSource,\n        appendInitSegmentFromCache,\n        getIsBufferingCompleted,\n        setIsBufferingCompleted,\n        getIsPruningInProgress,\n        reset,\n        clearBuffers,\n        prepareForPlaybackSeek,\n        prepareForReplacementTrackSwitch,\n        setSeekTarget,\n        updateAppendWindow,\n        pruneAllSafely,\n        updateBufferTimestampOffset,\n        segmentRequestingCompleted\n    };\n\n    setup();\n\n    return instance;\n}\n\nNotFragmentedTextBufferController.__dashjs_factory_name = BUFFER_CONTROLLER_TYPE;\nexport default FactoryMaker.getClassFactory(NotFragmentedTextBufferController);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport Constants from '../constants/Constants.js';\nimport FragmentModel from '../models/FragmentModel.js';\nimport EventBus from '../../core/EventBus.js';\nimport Events from '../../core/events/Events.js';\nimport FactoryMaker from '../../core/FactoryMaker.js';\nimport Debug from '../../core/Debug.js';\nimport MetricsConstants from '../constants/MetricsConstants.js';\nimport MediaPlayerEvents from '../MediaPlayerEvents.js';\n\nfunction ScheduleController(config) {\n\n    config = config || {};\n    const context = this.context;\n    const eventBus = EventBus(context).getInstance();\n    const dashMetrics = config.dashMetrics;\n    const mediaPlayerModel = config.mediaPlayerModel;\n    const fragmentModel = config.fragmentModel;\n    const abrController = config.abrController;\n    const playbackController = config.playbackController;\n    const textController = config.textController;\n    const type = config.type;\n    const bufferController = config.bufferController;\n    const representationController = config.representationController\n    const settings = config.settings;\n\n    let instance,\n        streamInfo,\n        logger,\n        timeToLoadDelay,\n        scheduleTimeout,\n        hasVideoTrack,\n        lastFragmentRequest,\n        lastInitializedRepresentationId,\n        switchTrack,\n        initSegmentRequired,\n        managedMediaSourceAllowsRequest,\n        checkPlaybackQuality;\n\n    function setup() {\n        logger = Debug(context).getInstance().getLogger(instance);\n        resetInitialSettings();\n        streamInfo = config.streamInfo;\n    }\n\n    function initialize(_hasVideoTrack) {\n        hasVideoTrack = _hasVideoTrack;\n\n        eventBus.on(Events.URL_RESOLUTION_FAILED, _onURLResolutionFailed, instance);\n        eventBus.on(MediaPlayerEvents.PLAYBACK_STARTED, _onPlaybackStarted, instance);\n        eventBus.on(MediaPlayerEvents.PLAYBACK_RATE_CHANGED, _onPlaybackRateChanged, instance);\n        eventBus.on(MediaPlayerEvents.PLAYBACK_TIME_UPDATED, _onPlaybackTimeUpdated, instance);\n        eventBus.on(MediaPlayerEvents.MANAGED_MEDIA_SOURCE_START_STREAMING, _onManagedMediaSourceStartStreaming, instance);\n        eventBus.on(MediaPlayerEvents.MANAGED_MEDIA_SOURCE_END_STREAMING, _onManagedMediaSourceEndStreaming, instance);\n    }\n\n    function _onManagedMediaSourceStartStreaming() {\n        managedMediaSourceAllowsRequest = true;\n    }\n\n    function _onManagedMediaSourceEndStreaming() {\n        managedMediaSourceAllowsRequest = false;\n    }\n\n    function getType() {\n        return type;\n    }\n\n    function getStreamId() {\n        return streamInfo.id;\n    }\n\n    function startScheduleTimer(value) {\n\n        //return if both buffering and playback have ended\n        if (bufferController.getIsBufferingCompleted()) {\n            return;\n        }\n\n        clearScheduleTimer();\n        const timeoutValue = !isNaN(value) ? value : 0;\n        scheduleTimeout = setTimeout(schedule, timeoutValue);\n    }\n\n    function clearScheduleTimer() {\n        if (scheduleTimeout) {\n            clearTimeout(scheduleTimeout);\n            scheduleTimeout = null;\n        }\n    }\n\n    /**\n     * Schedule the request for an init or a media segment\n     */\n    function schedule() {\n        try {\n            // Check if we are supposed to stop scheduling\n            if (_shouldClearScheduleTimer()) {\n                clearScheduleTimer();\n                return;\n            }\n\n            if (_shouldScheduleNextRequest()) {\n                let qualityChange = false;\n                if (checkPlaybackQuality) {\n                    // in case the playback quality is supposed to be changed, the corresponding StreamProcessor will update the currentRepresentation.\n                    // The StreamProcessor will also start the schedule timer again once the quality switch has beeen prepared. Consequently, we only call _getNextFragment if the quality is not changed.\n                    qualityChange = abrController.checkPlaybackQuality(type, streamInfo.id);\n                }\n                if (!qualityChange) {\n                    _getNextFragment();\n                }\n\n            } else {\n                startScheduleTimer(playbackController.getLowLatencyModeEnabled() ? settings.get().streaming.scheduling.lowLatencyTimeout : settings.get().streaming.scheduling.defaultTimeout);\n            }\n        } catch (e) {\n            startScheduleTimer(playbackController.getLowLatencyModeEnabled() ? settings.get().streaming.scheduling.lowLatencyTimeout : settings.get().streaming.scheduling.defaultTimeout);\n        }\n    }\n\n    /**\n     * Triggers the events to start requesting an init or a media segment. This will be picked up by the corresponding StreamProcessor.\n     * @private\n     */\n    function _getNextFragment() {\n        const currentRepresentation = representationController.getCurrentRepresentation();\n\n        // A quality changed occured or we are switching the AdaptationSet. In that case we need to load a new init segment\n        if (initSegmentRequired || currentRepresentation.id !== lastInitializedRepresentationId || switchTrack) {\n            if (switchTrack) {\n                logger.debug('Switch track for ' + type + ', representation id = ' + currentRepresentation.id);\n                switchTrack = false;\n            } else {\n                logger.debug('Quality has changed, get init request for representationid = ' + currentRepresentation.id);\n            }\n            eventBus.trigger(Events.INIT_FRAGMENT_NEEDED,\n                { representationId: currentRepresentation.id, sender: instance },\n                { streamId: streamInfo.id, mediaType: type }\n            );\n            checkPlaybackQuality = false;\n            initSegmentRequired = false;\n        }\n\n        // Request a media segment instead\n        else {\n            logger.debug(`Media segment needed for ${type} and stream id ${streamInfo.id}`);\n            eventBus.trigger(Events.MEDIA_FRAGMENT_NEEDED,\n                {},\n                { streamId: streamInfo.id, mediaType: type }\n            );\n            checkPlaybackQuality = true;\n        }\n\n    }\n\n    /**\n     * Check if we need to stop scheduling for now.\n     * @return {boolean}\n     * @private\n     */\n    function _shouldClearScheduleTimer() {\n        try {\n            return (((type === Constants.TEXT) && !textController.isTextEnabled()) ||\n                (playbackController.isPaused() && (!playbackController.getStreamController().getInitialPlayback() || !playbackController.getStreamController().getAutoPlay()) && !settings.get().streaming.scheduling.scheduleWhilePaused));\n        } catch (e) {\n            return false;\n        }\n    }\n\n    /**\n     * Check if we can start scheduling the next request\n     * @return {boolean}\n     * @private\n     */\n    function _shouldScheduleNextRequest() {\n        try {\n            if (!managedMediaSourceAllowsRequest) {\n                return false;\n            }\n            const currentRepresentation = representationController.getCurrentRepresentation();\n            return currentRepresentation && (lastInitializedRepresentationId == null || switchTrack || _shouldBuffer());\n        } catch (e) {\n            return false;\n        }\n    }\n\n    /**\n     * Check if the current buffer level is below our buffer target.\n     * @return {boolean}\n     * @private\n     */\n    function _shouldBuffer() {\n        const currentRepresentation = representationController.getCurrentRepresentation();\n        if (!type || !currentRepresentation) {\n            return true;\n        }\n        let segmentDurationToAddToBufferLevel = currentRepresentation && currentRepresentation.segmentDuration && !isNaN(currentRepresentation.segmentDuration) ? currentRepresentation.segmentDuration : 0;\n        const bufferLevel = dashMetrics.getCurrentBufferLevel(type);\n        const bufferTarget = getBufferTarget();\n\n        // If the buffer target is smaller than the segment duration we do not take it into account. For low latency playback do not delay the buffering.\n        if (bufferTarget <= segmentDurationToAddToBufferLevel || playbackController.getLowLatencyModeEnabled() || (type === Constants.AUDIO && hasVideoTrack)) {\n            segmentDurationToAddToBufferLevel = 0;\n        }\n\n        return bufferLevel + segmentDurationToAddToBufferLevel < bufferTarget;\n    }\n\n    /**\n     * Determine the buffer target depending on the type and whether we have audio and video AdaptationSets available\n     * @return {number}\n     */\n    function getBufferTarget() {\n        let bufferTarget = NaN;\n        const currentRepresentation = representationController.getCurrentRepresentation();\n\n        if (!type || !currentRepresentation) {\n            return bufferTarget;\n        }\n\n        if (type === Constants.TEXT) {\n            bufferTarget = _getBufferTargetForFragmentedText();\n        } else if (type === Constants.AUDIO && hasVideoTrack) {\n            bufferTarget = _getBufferTargetForAudio();\n        } else {\n            bufferTarget = _getGenericBufferTarget();\n        }\n\n        return bufferTarget;\n    }\n\n    /**\n     * Returns the buffer target for fragmented text tracks\n     * @return {number}\n     * @private\n     */\n    function _getBufferTargetForFragmentedText() {\n        try {\n            if (textController.isTextEnabled()) {\n                const currentRepresentation = representationController.getCurrentRepresentation();\n                if (isNaN(currentRepresentation.fragmentDuration)) {\n                    // call metrics function to have data in the latest scheduling info...\n                    // if no metric, returns 0. In this case, rule will return false.\n                    const schedulingInfo = dashMetrics.getCurrentSchedulingInfo(MetricsConstants.SCHEDULING_INFO);\n                    return schedulingInfo ? schedulingInfo.duration : 0;\n                } else {\n                    return currentRepresentation.fragmentDuration;\n                }\n            } else { // text is disabled, rule will return false\n                return 0;\n            }\n        } catch (e) {\n            return 0;\n        }\n    }\n\n    /**\n     * Returns the buffer target for audio tracks in case we have a video track available as well\n     * @return {number}\n     * @private\n     */\n    function _getBufferTargetForAudio() {\n        try {\n            const videoBufferLevel = dashMetrics.getCurrentBufferLevel(Constants.VIDEO);\n            const currentRepresentation = representationController.getCurrentRepresentation();\n            // For multiperiod we need to consider that audio and video segments might have different durations.\n            // This can lead to scenarios in which we completely buffered the video segments and the video buffer level for the current period is not changing anymore. However we might still need a small audio segment to finish buffering audio as well.\n            // If we set the buffer time of audio equal to the video buffer time scheduling for the remaining audio segment will only be triggered when audio fragmentDuration > videoBufferLevel. That will delay preloading of the upcoming period.\n            // Should find a better solution than just adding 1\n            if (isNaN(currentRepresentation.fragmentDuration)) {\n                return videoBufferLevel + 1;\n            } else {\n                return Math.max(videoBufferLevel + 1, currentRepresentation.fragmentDuration);\n            }\n        } catch (e) {\n            return 0;\n        }\n    }\n\n    /**\n     * Determines the generic buffer target, for instance for video tracks or when we got an audio only stream\n     * @return {number}\n     * @private\n     */\n    function _getGenericBufferTarget() {\n        try {\n            const currentRepresentation = representationController.getCurrentRepresentation();\n            const streamInfo = currentRepresentation.mediaInfo.streamInfo;\n            if (abrController.isPlayingAtTopQuality(currentRepresentation)) {\n                const isLongFormContent = streamInfo.manifestInfo.duration >= settings.get().streaming.buffer.longFormContentDurationThreshold;\n                return isLongFormContent ? settings.get().streaming.buffer.bufferTimeAtTopQualityLongForm : settings.get().streaming.buffer.bufferTimeAtTopQuality;\n            } else {\n                return mediaPlayerModel.getBufferTimeDefaultUnadjusted();\n            }\n        } catch (e) {\n            return mediaPlayerModel.getBufferTimeDefaultUnadjusted();\n        }\n    }\n\n    function setSwitchTrack(value) {\n        switchTrack = value;\n    }\n\n    function getSwitchTrack() {\n        return switchTrack;\n    }\n\n    function _onPlaybackTimeUpdated() {\n        _completeQualityChange(true);\n    }\n\n    function _completeQualityChange(trigger) {\n        if (playbackController && fragmentModel) {\n            const item = fragmentModel.getRequests({\n                state: FragmentModel.FRAGMENT_MODEL_EXECUTED,\n                time: playbackController.getTime(),\n                threshold: 0\n            })[0];\n\n            if (item && playbackController.getTime() >= item.startTime) {\n                if ((!lastFragmentRequest.representation || (item.representation.mediaInfo.type === lastFragmentRequest.representation.mediaInfo.type && item.representation.mediaInfo.index !== lastFragmentRequest.representation.mediaInfo.index)) && trigger) {\n                    logger.debug(`Track change rendered for streamId ${streamInfo.id} and type ${type}`);\n                    eventBus.trigger(Events.TRACK_CHANGE_RENDERED, {\n                        mediaType: type,\n                        oldMediaInfo: lastFragmentRequest && lastFragmentRequest.representation && lastFragmentRequest.representation.mediaInfo ? lastFragmentRequest.representation.mediaInfo : null,\n                        newMediaInfo: item.representation.mediaInfo,\n                        streamId: streamInfo.id\n                    });\n                }\n                if ((!lastFragmentRequest.representation || (item.representation.id !== lastFragmentRequest.representation.id)) && trigger) {\n                    logger.debug(`Quality change rendered for streamId ${streamInfo.id} and type ${type}`);\n                    eventBus.trigger(Events.QUALITY_CHANGE_RENDERED, {\n                        mediaType: type,\n                        oldRepresentation: lastFragmentRequest.representation ? lastFragmentRequest.representation : null,\n                        newRepresentation: item.representation,\n                        streamId: streamInfo.id\n                    });\n                }\n                lastFragmentRequest.representation = item.representation\n            }\n        }\n    }\n\n    function _onURLResolutionFailed() {\n        fragmentModel.abortRequests();\n        clearScheduleTimer();\n    }\n\n    function _onPlaybackStarted() {\n        if (!settings.get().streaming.scheduling.scheduleWhilePaused) {\n            startScheduleTimer();\n        }\n    }\n\n    function _onPlaybackRateChanged(e) {\n        dashMetrics.updatePlayListTraceMetrics({ playbackspeed: e.playbackRate.toString() });\n    }\n\n    function setTimeToLoadDelay(value) {\n        timeToLoadDelay = value;\n    }\n\n    function getTimeToLoadDelay() {\n        return timeToLoadDelay;\n    }\n\n    function setCheckPlaybackQuality(value) {\n        checkPlaybackQuality = value;\n    }\n\n    function setInitSegmentRequired(value) {\n        initSegmentRequired = value;\n    }\n\n    function setLastInitializedRepresentationId(value) {\n        lastInitializedRepresentationId = value;\n    }\n\n    function resetInitialSettings() {\n        checkPlaybackQuality = true;\n        timeToLoadDelay = 0;\n        lastInitializedRepresentationId = null;\n        lastFragmentRequest = {\n            representation: null,\n        };\n        switchTrack = false;\n        initSegmentRequired = false;\n        managedMediaSourceAllowsRequest = true;\n    }\n\n    function reset() {\n        eventBus.off(Events.URL_RESOLUTION_FAILED, _onURLResolutionFailed, instance);\n        eventBus.off(MediaPlayerEvents.PLAYBACK_STARTED, _onPlaybackStarted, instance);\n        eventBus.off(MediaPlayerEvents.PLAYBACK_RATE_CHANGED, _onPlaybackRateChanged, instance);\n        eventBus.off(MediaPlayerEvents.PLAYBACK_TIME_UPDATED, _onPlaybackTimeUpdated, instance);\n        eventBus.off(MediaPlayerEvents.MANAGED_MEDIA_SOURCE_START_STREAMING, _onManagedMediaSourceStartStreaming, instance);\n        eventBus.off(MediaPlayerEvents.MANAGED_MEDIA_SOURCE_END_STREAMING, _onManagedMediaSourceEndStreaming, instance);\n\n        clearScheduleTimer();\n        _completeQualityChange(false);\n        resetInitialSettings();\n        streamInfo = null;\n    }\n\n    function getPlaybackController() {\n        return playbackController;\n    }\n\n    instance = {\n        clearScheduleTimer,\n        getBufferTarget,\n        getPlaybackController,\n        getStreamId,\n        getSwitchTrack,\n        getTimeToLoadDelay,\n        getType,\n        initialize,\n        reset,\n        setCheckPlaybackQuality,\n        setInitSegmentRequired,\n        setLastInitializedRepresentationId,\n        setSwitchTrack,\n        setTimeToLoadDelay,\n        startScheduleTimer,\n    };\n\n    setup();\n\n    return instance;\n}\n\nScheduleController.__dashjs_factory_name = 'ScheduleController';\nexport default FactoryMaker.getClassFactory(ScheduleController);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nclass Segment {\n    constructor() {\n        // Ignore and  discard this segment after\n        this.availabilityEndTime = NaN;\n        // Do not schedule this segment until\n        this.availabilityStartTime = NaN;\n        this.duration = NaN;\n        // The index of the segment in the list of segments. We start at 0\n        this.index = null;\n        this.indexRange = null;\n        this.media = null;\n        this.mediaRange = null;\n        // This is supposed to match the time encoded in the media Segment\n        this.mediaStartTime = NaN;\n        // When the source buffer timeOffset is set to mseTimeOffset this is the\n        // time that will match the seekTarget and video.currentTime\n        this.presentationStartTime = NaN;\n        // this is the number that should be inserted into the media url\n        this.replacementNumber = NaN;\n        // this is the time that should be inserted into the media url\n        this.replacementTime = null;\n        this.representation = null;\n        // For dynamic mpd's, this is the wall clock time that the video\n        this.wallStartTime = NaN;\n    }\n}\n\nexport default Segment;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport Segment from './../vo/Segment.js';\n\nfunction zeroPadToLength(numStr, minStrLength) {\n    while (numStr.length < minStrLength) {\n        numStr = '0' + numStr;\n    }\n    return numStr;\n}\n\nfunction getNumberForSegment(segment, segmentIndex) {\n    return segment.representation.startNumber + segmentIndex;\n}\n\nexport function unescapeDollarsInTemplate(url) {\n    return url ? url.split('$$').join('$') : url;\n}\n\nexport function replaceIDForTemplate(url, value) {\n    if (!value || !url || url.indexOf('$RepresentationID$') === -1) {\n        return url;\n    }\n    let v = value.toString();\n    return url.split('$RepresentationID$').join(v);\n}\n\nexport function replaceTokenForTemplate(url, token, value) {\n    const formatTag = '%0';\n\n    let startPos,\n        endPos,\n        formatTagPos,\n        specifier,\n        width,\n        paddedValue;\n\n    const tokenLen = token.length;\n    const formatTagLen = formatTag.length;\n\n    if (!url) {\n        return url;\n    }\n\n    // keep looping round until all instances of <token> have been\n    // replaced. once that has happened, startPos below will be -1\n    // and the completed url will be returned.\n    while (true) {\n\n        // check if there is a valid $<token>...$ identifier\n        // if not, return the url as is.\n        startPos = url.indexOf('$' + token);\n        if (startPos < 0) {\n            return url;\n        }\n\n        // the next '$' must be the end of the identifier\n        // if there isn't one, return the url as is.\n        endPos = url.indexOf('$', startPos + tokenLen);\n        if (endPos < 0) {\n            return url;\n        }\n\n        // now see if there is an additional format tag suffixed to\n        // the identifier within the enclosing '$' characters\n        formatTagPos = url.indexOf(formatTag, startPos + tokenLen);\n        if (formatTagPos > startPos && formatTagPos < endPos) {\n\n            specifier = url.charAt(endPos - 1);\n            width = parseInt(url.substring(formatTagPos + formatTagLen, endPos - 1), 10);\n\n            // support the minimum specifiers required by IEEE 1003.1\n            // (d, i , o, u, x, and X) for completeness\n            switch (specifier) {\n                // treat all int types as uint,\n                // hence deliberate fallthrough\n                case 'd':\n                case 'i':\n                case 'u':\n                    paddedValue = zeroPadToLength(value.toString(), width);\n                    break;\n                case 'x':\n                    paddedValue = zeroPadToLength(value.toString(16), width);\n                    break;\n                case 'X':\n                    paddedValue = zeroPadToLength(value.toString(16), width).toUpperCase();\n                    break;\n                case 'o':\n                    paddedValue = zeroPadToLength(value.toString(8), width);\n                    break;\n                default:\n                    return url;\n            }\n        } else {\n            paddedValue = value;\n        }\n\n        url = url.substring(0, startPos) + paddedValue + url.substring(endPos + 1);\n    }\n}\n\nfunction getSegment(representation, duration, presentationStartTime, mediaStartTime, timelineConverter, presentationEndTime, isDynamic, index) {\n    let seg = new Segment();\n\n    seg.representation = representation;\n    seg.duration = duration;\n    seg.presentationStartTime = presentationStartTime;\n    seg.mediaStartTime = mediaStartTime;\n    seg.availabilityStartTime = timelineConverter.calcAvailabilityStartTimeFromPresentationTime(presentationEndTime, representation, isDynamic);\n    seg.availabilityEndTime = timelineConverter.calcAvailabilityEndTimeFromPresentationTime(presentationEndTime + duration, representation, isDynamic);\n    seg.wallStartTime = timelineConverter.calcWallTimeForSegment(seg, isDynamic);\n    seg.replacementNumber = getNumberForSegment(seg, index);\n    seg.index = index;\n\n    return seg;\n}\n\nfunction isSegmentAvailable(timelineConverter, representation, segment, isDynamic) {\n    const voPeriod = representation.adaptation.period;\n\n    // Avoid requesting segments for which the start time overlaps the period boundary\n    if (isFinite(voPeriod.duration) && voPeriod.start + voPeriod.duration <= segment.presentationStartTime) {\n        return false\n    }\n\n    if (isDynamic) {\n\n        if (representation.availabilityTimeOffset === 'INF') {\n            return true;\n        }\n\n        // For dynamic manifests we check if the presentation start time + duration is included in the availability window\n        // SAST = Period@start + seg@presentationStartTime + seg@duration\n        // ASAST = SAST - ATO\n        // SAET = SAST + TSBD + seg@duration\n        // refTime serves as an anchor time to compare the availability time of the segments against.\n        const refTime = timelineConverter.getClientReferenceTime();\n        return segment.availabilityStartTime.getTime() <= refTime && (!isFinite(segment.availabilityEndTime) || segment.availabilityEndTime.getTime() >= refTime);\n    }\n\n    return true;\n}\n\nexport function getIndexBasedSegment(timelineConverter, isDynamic, representation, index) {\n    let duration,\n        presentationStartTime,\n        presentationEndTime;\n\n\n    duration = representation.segmentDuration;\n\n    /*\n     * From spec - If neither @duration attribute nor SegmentTimeline element is present, then the Representation\n     * shall contain exactly one Media Segment. The MPD start time is 0 and the MPD duration is obtained\n     * in the same way as for the last Media Segment in the Representation.\n     */\n    if (isNaN(duration)) {\n        duration = representation.adaptation.period.duration;\n    }\n\n    presentationStartTime = parseFloat((representation.adaptation.period.start + (index * duration)).toFixed(5));\n    presentationEndTime = parseFloat((presentationStartTime + duration).toFixed(5));\n\n    const mediaTime = timelineConverter.calcMediaTimeFromPresentationTime(presentationStartTime, representation);\n\n    const segment = getSegment(representation, duration, presentationStartTime, mediaTime,\n        timelineConverter, presentationEndTime, isDynamic, index);\n\n    if (!isSegmentAvailable(timelineConverter, representation, segment, isDynamic)) {\n        return null;\n    }\n\n    return segment;\n}\n\nexport function getTimeBasedSegment(timelineConverter, isDynamic, representation, time, duration, fTimescale, url, range, index, tManifest) {\n    const scaledTime = time / fTimescale;\n    const scaledDuration = duration / fTimescale;\n\n    let presentationStartTime,\n        presentationEndTime,\n        seg;\n\n    presentationStartTime = timelineConverter.calcPresentationTimeFromMediaTime(scaledTime, representation);\n    presentationEndTime = presentationStartTime + scaledDuration;\n\n    seg = getSegment(representation, scaledDuration, presentationStartTime,\n        scaledTime,\n        timelineConverter, presentationEndTime, isDynamic, index);\n\n    if (!isSegmentAvailable(timelineConverter, representation, seg, isDynamic)) {\n        return null;\n    }\n\n    seg.replacementTime = tManifest ? tManifest : time;\n\n    url = replaceTokenForTemplate(url, 'Number', seg.replacementNumber);\n    url = replaceTokenForTemplate(url, 'Time', seg.replacementTime);\n    seg.media = url;\n    seg.mediaRange = range;\n\n    return seg;\n}\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport Constants from '../../streaming/constants/Constants.js';\nimport FactoryMaker from '../../core/FactoryMaker.js';\nimport MediaPlayerEvents from '../../streaming/MediaPlayerEvents.js';\nimport {getTimeBasedSegment} from '../utils/SegmentsUtils.js';\n\nfunction RepresentationController(config) {\n\n    config = config || {};\n    const eventBus = config.eventBus;\n    const events = config.events;\n    const abrController = config.abrController;\n    const dashMetrics = config.dashMetrics;\n    const playbackController = config.playbackController;\n    const timelineConverter = config.timelineConverter;\n    const type = config.type;\n    const streamInfo = config.streamInfo;\n    const segmentsController = config.segmentsController;\n    const isDynamic = config.isDynamic;\n\n    let instance,\n        voAvailableRepresentations,\n        currentVoRepresentation;\n\n    function setup() {\n        resetInitialSettings();\n\n        eventBus.on(MediaPlayerEvents.MANIFEST_VALIDITY_CHANGED, onManifestValidityChanged, instance);\n    }\n\n    function getStreamId() {\n        return streamInfo.id;\n    }\n\n    function getType() {\n        return type;\n    }\n\n    function checkConfig() {\n        if (!abrController || !dashMetrics || !playbackController || !timelineConverter) {\n            throw new Error(Constants.MISSING_CONFIG_ERROR);\n        }\n    }\n\n    function getCurrentRepresentation() {\n        return currentVoRepresentation;\n    }\n\n    function resetInitialSettings() {\n        currentVoRepresentation = null;\n        voAvailableRepresentations = [];\n    }\n\n    function reset() {\n        eventBus.off(MediaPlayerEvents.MANIFEST_VALIDITY_CHANGED, onManifestValidityChanged, instance);\n\n        resetInitialSettings();\n    }\n\n    function updateData(availableRepresentations, isFragmented, selectedRepresentationId) {\n        return new Promise((resolve, reject) => {\n            voAvailableRepresentations = availableRepresentations;\n            const selectedRepresentation = getRepresentationById(selectedRepresentationId);\n            _setCurrentVoRepresentation(selectedRepresentation);\n\n\n            if (type !== Constants.VIDEO && type !== Constants.AUDIO && (type !== Constants.TEXT || !isFragmented)) {\n                endDataUpdate();\n                resolve();\n                return;\n            }\n\n            const promises = [];\n            for (let i = 0, ln = voAvailableRepresentations.length; i < ln; i++) {\n                const currentRep = voAvailableRepresentations[i];\n                promises.push(_updateRepresentation(currentRep));\n            }\n\n            Promise.all(promises)\n                .then(() => {\n                    _onAllRepresentationsUpdated();\n                    resolve();\n                })\n                .catch((e) => {\n                    reject(e);\n                })\n        })\n    }\n\n    function _onAllRepresentationsUpdated() {\n        abrController.setPlaybackQuality(type, streamInfo, currentVoRepresentation);\n        const dvrInfo = dashMetrics.getCurrentDVRInfo(type);\n        if (dvrInfo) {\n            dashMetrics.updateManifestUpdateInfo({ latency: dvrInfo.range.end - playbackController.getTime() });\n        }\n\n        endDataUpdate();\n    }\n\n    function _updateRepresentation(currentRep) {\n        return new Promise((resolve, reject) => {\n            const hasInitialization = currentRep.hasInitialization();\n            const hasSegments = currentRep.hasSegments();\n\n            // If representation has initialization and segments information we are done\n            // otherwise, it means that a request has to be made to get initialization and/or segments information\n            const promises = [];\n\n            promises.push(segmentsController.updateInitData(currentRep, hasInitialization));\n            promises.push(segmentsController.updateSegmentData(currentRep, hasSegments));\n\n            Promise.all(promises)\n                .then((data) => {\n                    if (data[0] && !data[0].error) {\n                        currentRep = _onInitLoaded(currentRep, data[0]);\n                    }\n                    if (data[1] && !data[1].error) {\n                        currentRep = _onSegmentsLoaded(currentRep, data[1]);\n                    }\n                    currentRep.fragmentDuration = currentRep.segmentDuration ? currentRep.segmentDuration : currentRep.segments && currentRep.segments.length > 0 ? currentRep.segments[0].duration : NaN;\n                    _setMediaFinishedInformation(currentRep);\n                    _onRepresentationUpdated(currentRep);\n                    resolve();\n                })\n                .catch((e) => {\n                    reject(e);\n                });\n        });\n    }\n\n    function _setMediaFinishedInformation(representation) {\n        representation.mediaFinishedInformation = segmentsController.getMediaFinishedInformation(representation);\n    }\n\n    function _onInitLoaded(representation, e) {\n        if (!e || e.error || !e.representation) {\n            return representation;\n        }\n        return e.representation;\n    }\n\n    function _onSegmentsLoaded(representation, e) {\n        if (!e || e.error) {\n            return;\n        }\n\n        const fragments = e.segments;\n        const segments = [];\n        let count = 0;\n\n        let i,\n            len,\n            s,\n            seg;\n\n        for (i = 0, len = fragments ? fragments.length : 0; i < len; i++) {\n            s = fragments[i];\n\n            seg = getTimeBasedSegment(\n                timelineConverter,\n                isDynamic,\n                representation,\n                s.startTime,\n                s.duration,\n                s.timescale,\n                s.media,\n                s.mediaRange,\n                count);\n\n            if (seg) {\n                segments.push(seg);\n                seg = null;\n                count++;\n            }\n        }\n\n        if (segments.length > 0) {\n            representation.segments = segments;\n        }\n\n        return representation;\n    }\n\n    function _addRepresentationSwitch(currentRepresentation) {\n        checkConfig();\n        const now = new Date();\n        const currentVideoTimeMs = playbackController.getTime() * 1000;\n        if (currentRepresentation) {\n            dashMetrics.addRepresentationSwitch(currentRepresentation.adaptation.type, now, currentVideoTimeMs, currentRepresentation.id);\n        }\n\n        eventBus.trigger(MediaPlayerEvents.REPRESENTATION_SWITCH, {\n            mediaType: type,\n            streamId: streamInfo.id,\n            currentRepresentation,\n        }, { streamId: streamInfo.id, mediaType: type })\n    }\n\n    function getRepresentationById(id) {\n        if (!voAvailableRepresentations || voAvailableRepresentations.length === 0) {\n            return null;\n        }\n\n        const reps = voAvailableRepresentations.filter((rep) => {\n            return rep.id === id;\n        })\n\n        if (reps.length > 0) {\n            return reps[0]\n        }\n\n        return null;\n    }\n\n    function endDataUpdate(error) {\n        eventBus.trigger(events.DATA_UPDATE_COMPLETED,\n            {\n                currentRepresentation: currentVoRepresentation,\n                error: error\n            },\n            { streamId: streamInfo.id, mediaType: type }\n        );\n    }\n\n    function _onRepresentationUpdated(r) {\n        let manifestUpdateInfo = dashMetrics.getCurrentManifestUpdate();\n        let alreadyAdded = false;\n        let repInfo;\n\n\n        if (manifestUpdateInfo) {\n            for (let i = 0; i < manifestUpdateInfo.representationInfo.length; i++) {\n                repInfo = manifestUpdateInfo.representationInfo[i];\n                if (repInfo.index === r.index && repInfo.mediaType === getType()) {\n                    alreadyAdded = true;\n                    break;\n                }\n            }\n\n            if (!alreadyAdded) {\n                dashMetrics.addManifestUpdateRepresentationInfo(r, getType());\n            }\n        }\n    }\n\n    /**\n     * We get the new selected Representation which will not hold the ranges and the segment references in case of SegmentBase.\n     * In any case use the id to find the right Representation instance in our array of Representations.\n     * @param newRep\n     */\n    function prepareQualityChange(newRep) {\n        const voRepresentations = voAvailableRepresentations.filter((rep) => {\n            return rep.id === newRep.id;\n        })\n\n        if (voRepresentations.length > 0) {\n            _setCurrentVoRepresentation(voRepresentations[0]);\n        }\n    }\n\n    function _setCurrentVoRepresentation(value) {\n        if (!currentVoRepresentation || currentVoRepresentation.id !== value.id) {\n            _addRepresentationSwitch(value);\n        }\n        currentVoRepresentation = value;\n    }\n\n    function onManifestValidityChanged(e) {\n        if (e.newDuration) {\n            const representation = getCurrentRepresentation();\n            if (representation && representation.adaptation.period) {\n                const period = representation.adaptation.period;\n                period.duration = e.newDuration;\n            }\n        }\n    }\n\n    instance = {\n        getCurrentRepresentation,\n        getRepresentationById,\n        getStreamId,\n        getType,\n        prepareQualityChange,\n        reset,\n        updateData,\n    };\n\n    setup();\n    return instance;\n}\n\nRepresentationController.__dashjs_factory_name = 'RepresentationController';\nexport default FactoryMaker.getClassFactory(RepresentationController);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport FragmentRequest from '../streaming/vo/FragmentRequest.js';\nimport {HTTPRequest} from '../streaming/vo/metrics/HTTPRequest.js';\nimport FactoryMaker from '../core/FactoryMaker.js';\nimport MediaPlayerEvents from '../streaming/MediaPlayerEvents.js';\nimport {\n    replaceIDForTemplate,\n    replaceTokenForTemplate,\n    unescapeDollarsInTemplate\n} from './utils/SegmentsUtils.js';\nimport DashConstants from './constants/DashConstants.js';\n\n\nconst DEFAULT_ADJUST_SEEK_TIME_THRESHOLD = 0.5;\nconst SEGMENT_START_TIME_DELTA = 0.001;\n\nfunction DashHandler(config) {\n\n    config = config || {};\n\n    const eventBus = config.eventBus;\n    const debug = config.debug;\n    const urlUtils = config.urlUtils;\n    const type = config.type;\n    const streamInfo = config.streamInfo;\n    const segmentsController = config.segmentsController;\n    const timelineConverter = config.timelineConverter;\n    const baseURLController = config.baseURLController;\n\n    let instance,\n        logger,\n        lastSegment,\n        isDynamicManifest,\n        mediaHasFinished;\n\n    function setup() {\n        logger = debug.getLogger(instance);\n        resetInitialSettings();\n\n        eventBus.on(MediaPlayerEvents.DYNAMIC_TO_STATIC, _onDynamicToStatic, instance);\n    }\n\n    function initialize(isDynamic) {\n        isDynamicManifest = isDynamic;\n        mediaHasFinished = false;\n        segmentsController.initialize(isDynamic);\n    }\n\n    function getStreamId() {\n        return streamInfo.id;\n    }\n\n    function getType() {\n        return type;\n    }\n\n    function getStreamInfo() {\n        return streamInfo;\n    }\n\n    function resetInitialSettings() {\n        lastSegment = null;\n    }\n\n    function reset() {\n        resetInitialSettings();\n        eventBus.off(MediaPlayerEvents.DYNAMIC_TO_STATIC, _onDynamicToStatic, instance);\n    }\n\n    function _setRequestUrl(request, destination, representation) {\n        const baseURL = baseURLController.resolve(representation.path);\n        let url,\n            serviceLocation,\n            queryParams = {};\n\n        if (!baseURL || (destination === baseURL.url) || (!urlUtils.isRelative(destination))) {\n            url = destination;\n        } else {\n            url = baseURL.url;\n            serviceLocation = baseURL.serviceLocation;\n            queryParams = baseURL.queryParams;\n\n            if (destination) {\n                url = urlUtils.resolve(destination, url);\n            }\n        }\n\n        if (urlUtils.isRelative(url)) {\n            return false;\n        }\n\n        request.url = url;\n        request.serviceLocation = serviceLocation;\n        request.queryParams = queryParams;\n\n        return true;\n    }\n\n    function getInitRequest(mediaInfo, representation) {\n        if (!representation) {\n            return null;\n        }\n        return _generateInitRequest(mediaInfo, representation, getType());\n    }\n\n    function _generateInitRequest(mediaInfo, representation, mediaType) {\n        const request = new FragmentRequest();\n        const period = representation.adaptation.period;\n        const presentationStartTime = period.start;\n\n        request.mediaType = mediaType;\n        request.type = HTTPRequest.INIT_SEGMENT_TYPE;\n        request.range = representation.range;\n        request.availabilityStartTime = timelineConverter.calcAvailabilityStartTimeFromPresentationTime(presentationStartTime, representation, isDynamicManifest);\n        request.availabilityEndTime = timelineConverter.calcAvailabilityEndTimeFromPresentationTime(presentationStartTime + period.duration, representation, isDynamicManifest);\n        request.representation = representation;\n\n        if (_setRequestUrl(request, representation.initialization, representation)) {\n            request.url = replaceTokenForTemplate(request.url, 'Bandwidth', representation.bandwidth);\n            return request;\n        }\n    }\n\n    function _getRequestForSegment(mediaInfo, segment) {\n        if (segment === null || segment === undefined) {\n            return null;\n        }\n\n        const request = new FragmentRequest();\n        const representation = segment.representation;\n        const bandwidth = representation.bandwidth;\n        let url = segment.media;\n\n        url = replaceTokenForTemplate(url, 'Number', segment.replacementNumber);\n        url = replaceTokenForTemplate(url, 'Time', segment.replacementTime);\n        url = replaceTokenForTemplate(url, 'Bandwidth', bandwidth);\n        url = replaceIDForTemplate(url, representation.id);\n        url = unescapeDollarsInTemplate(url);\n\n        request.mediaType = getType();\n        request.bandwidth = representation.bandwidth;\n        request.type = HTTPRequest.MEDIA_SEGMENT_TYPE;\n        request.range = segment.mediaRange;\n        request.startTime = segment.presentationStartTime;\n        request.mediaStartTime = segment.mediaStartTime;\n        request.duration = segment.duration;\n        request.timescale = representation.timescale;\n        request.availabilityStartTime = segment.availabilityStartTime;\n        request.availabilityEndTime = segment.availabilityEndTime;\n        request.availabilityTimeComplete = representation.availabilityTimeComplete;\n        request.wallStartTime = segment.wallStartTime;\n        request.index = segment.index;\n        request.adaptationIndex = representation.adaptation.index;\n        request.representation = representation;\n\n        if (_setRequestUrl(request, url, representation)) {\n            return request;\n        }\n    }\n\n    function isLastSegmentRequested(representation, bufferingTime) {\n        if (!representation || !lastSegment) {\n            return false;\n        }\n\n        // Either transition from dynamic to static was done or no next static segment found\n        if (mediaHasFinished) {\n            return true;\n        }\n\n        // Period is endless\n        if (!isFinite(representation.adaptation.period.duration)) {\n            return false;\n        }\n\n        // we are replacing existing stuff in the buffer for instance after a track switch\n        if (lastSegment.presentationStartTime + lastSegment.duration > bufferingTime) {\n            return false;\n        }\n\n        // Additional segment references may be added to the last period.\n        // Additional periods may be added to the end of the MPD.\n        // Segment references SHALL NOT be added to any period other than the last period.\n        // An MPD update MAY combine adding segment references to the last period with adding of new periods. An MPD update that adds content MAY be combined with an MPD update that removes content.\n        // The index of the last requested segment is higher than the number of available segments.\n        // For SegmentTimeline and SegmentTemplate the index does not include the startNumber.\n        // For SegmentList the index includes the startnumber which is why the numberOfSegments includes this as well\n        if (representation.mediaFinishedInformation && !isNaN(representation.mediaFinishedInformation.numberOfSegments) && !isNaN(lastSegment.index) && lastSegment.index >= (representation.mediaFinishedInformation.numberOfSegments - 1)) {\n            // For static manifests and Template addressing we can compare the index against the number of available segments\n            if (!isDynamicManifest || representation.segmentInfoType === DashConstants.SEGMENT_TEMPLATE) {\n                return true;\n            }\n            // For SegmentList we need to check if the next period is signaled\n            else if (isDynamicManifest && representation.segmentInfoType === DashConstants.SEGMENT_LIST && representation.adaptation.period.nextPeriodId) {\n                return true\n            }\n        }\n\n        // For dynamic SegmentTimeline manifests we need to check if the next period is already signaled and the segment we fetched before is the last one that is signaled.\n        // We can not simply use the index, as numberOfSegments might have decreased after an MPD update\n        return !!(isDynamicManifest && representation.adaptation.period.nextPeriodId && representation.segmentInfoType === DashConstants.SEGMENT_TIMELINE && representation.mediaFinishedInformation &&\n            !isNaN(representation.mediaFinishedInformation.mediaTimeOfLastSignaledSegment) && lastSegment && !isNaN(lastSegment.mediaStartTime) && !isNaN(lastSegment.duration) && lastSegment.mediaStartTime + lastSegment.duration >= (representation.mediaFinishedInformation.mediaTimeOfLastSignaledSegment - 0.05));\n    }\n\n\n    function getSegmentRequestForTime(mediaInfo, representation, time) {\n        let request = null;\n\n        if (!representation || !representation.segmentInfoType) {\n            return request;\n        }\n\n        const segment = segmentsController.getSegmentByTime(representation, time);\n        if (segment) {\n            lastSegment = segment;\n            logger.debug('Index for time ' + time + ' is ' + segment.index);\n            request = _getRequestForSegment(mediaInfo, segment);\n        }\n\n        return request;\n    }\n\n    /**\n     * This function returns the next segment request without modifying any internal variables. Any class (e.g CMCD Model) that needs information about the upcoming request should use this method.\n     * @param {object} mediaInfo\n     * @param {object} representation\n     * @return {FragmentRequest|null}\n     */\n    function getNextSegmentRequestIdempotent(mediaInfo, representation) {\n        let request = null;\n        let indexToRequest = lastSegment ? lastSegment.index + 1 : 0;\n        const segment = segmentsController.getSegmentByIndex(\n            representation,\n            indexToRequest,\n            lastSegment ? lastSegment.mediaStartTime : -1\n        );\n        if (!segment) {\n            return null;\n        }\n        request = _getRequestForSegment(mediaInfo, segment);\n        return request;\n    }\n\n    /**\n     * Main function to get the next segment request.\n     * @param {object} mediaInfo\n     * @param {object} representation\n     * @return {FragmentRequest|null}\n     */\n    function getNextSegmentRequest(mediaInfo, representation) {\n        if (!representation || !representation.segmentInfoType) {\n            return null;\n        }\n\n        let indexToRequest = lastSegment ? lastSegment.index + 1 : 0;\n\n        return _getRequest(mediaInfo, representation, indexToRequest);\n    }\n\n    function repeatSegmentRequest(mediaInfo, representation) {\n        if (!representation || !representation.segmentInfoType) {\n            return null;\n        }\n\n        let indexToRequest = lastSegment ? lastSegment.index : 0;\n\n        return _getRequest(mediaInfo, representation, indexToRequest);\n    }\n\n    function _getRequest(mediaInfo, representation, indexToRequest) {\n        let request = null;\n        const segment = segmentsController.getSegmentByIndex(representation, indexToRequest, lastSegment ? lastSegment.mediaStartTime : -1);\n\n        // No segment found\n        if (!segment) {\n            // Dynamic manifest there might be something available in the next iteration\n            if (isDynamicManifest && !mediaHasFinished) {\n                logger.debug(getType() + ' No segment found at index: ' + indexToRequest + '. Wait for next loop');\n                return null;\n            } else {\n                mediaHasFinished = true;\n            }\n        } else {\n            request = _getRequestForSegment(mediaInfo, segment);\n            lastSegment = segment;\n        }\n\n        return request;\n    }\n\n    /**\n     * This function returns a time larger than the current time for which we can generate a request.\n     * This is useful in scenarios in which the user seeks into a gap in a dynamic Timeline manifest. We will not find a valid request then and need to adjust the seektime.\n     * @param {number} time\n     * @param {object} mediaInfo\n     * @param {object} representation\n     * @param {number} targetThreshold\n     * @return {number}\n     */\n    function getValidTimeAheadOfTargetTime(time, mediaInfo, representation, targetThreshold) {\n        try {\n\n            if (isNaN(time) || !mediaInfo || !representation) {\n                return NaN;\n            }\n\n            if (time < 0) {\n                time = 0;\n            }\n\n            if (isNaN(targetThreshold)) {\n                targetThreshold = DEFAULT_ADJUST_SEEK_TIME_THRESHOLD;\n            }\n\n            if (getSegmentRequestForTime(mediaInfo, representation, time)) {\n                return time;\n            }\n\n            if (representation.adaptation.period.start + representation.adaptation.period.duration < time) {\n                return NaN;\n            }\n\n            // If we have a duration look until the end of the duration, otherwise maximum 30 seconds\n            const end = isFinite(representation.adaptation.period.duration) ? representation.adaptation.period.start + representation.adaptation.period.duration : time + 30;\n            let currentUpperTime = Math.min(time + targetThreshold, end);\n            let adjustedTime = NaN;\n            let targetRequest = null;\n\n            while (currentUpperTime <= end) {\n                let upperRequest = null;\n\n                if (currentUpperTime <= end) {\n                    upperRequest = getSegmentRequestForTime(mediaInfo, representation, currentUpperTime);\n                }\n\n                if (upperRequest) {\n                    adjustedTime = currentUpperTime;\n                    targetRequest = upperRequest;\n                    break;\n                }\n\n                currentUpperTime += targetThreshold;\n            }\n\n            if (targetRequest) {\n                const requestEndTime = targetRequest.startTime + targetRequest.duration;\n\n                // Keep the original start time in case it is covered by a segment\n                if (time > targetRequest.startTime && requestEndTime - time > targetThreshold) {\n                    return time;\n                }\n\n                if (!isNaN(targetRequest.startTime) && time < targetRequest.startTime && adjustedTime > targetRequest.startTime) {\n                    // Apply delta to segment start time to get around rounding issues\n                    return targetRequest.startTime + SEGMENT_START_TIME_DELTA;\n                }\n\n                return Math.min(requestEndTime - targetThreshold, adjustedTime);\n            }\n\n            return adjustedTime;\n\n\n        } catch (e) {\n            return NaN;\n        }\n    }\n\n    function getCurrentIndex() {\n        return lastSegment ? lastSegment.index : -1;\n    }\n\n    function _onDynamicToStatic() {\n        logger.debug('Dynamic stream complete');\n        mediaHasFinished = true;\n    }\n\n    instance = {\n        getCurrentIndex,\n        getInitRequest,\n        getNextSegmentRequest,\n        getNextSegmentRequestIdempotent,\n        getSegmentRequestForTime,\n        getStreamId,\n        getStreamInfo,\n        getType,\n        getValidTimeAheadOfTargetTime,\n        initialize,\n        isLastSegmentRequested,\n        repeatSegmentRequest,\n        reset,\n    };\n\n    setup();\n\n    return instance;\n}\n\nDashHandler.__dashjs_factory_name = 'DashHandler';\nexport default FactoryMaker.getClassFactory(DashHandler);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport FactoryMaker from '../../core/FactoryMaker.js';\n\n/**\n * @module DefaultURLUtils\n * @description Provides utility functions for operating on URLs.\n * Initially this is simply a method to determine the Base URL of a URL, but\n * should probably include other things provided all over the place such as\n * determining whether a URL is relative/absolute, resolving two paths etc.\n * @ignore\n */\nfunction DefaultURLUtils() {\n\n    let resolveFunction;\n\n    const schemeRegex = /^[a-z][a-z0-9+\\-_.]*:/i;\n    const httpUrlRegex = /^https?:\\/\\//i;\n    const httpsUrlRegex = /^https:\\/\\//i;\n    const originRegex = /^([a-z][a-z0-9+\\-_.]*:\\/\\/[^\\/]+)\\/?/i;\n\n    /**\n     * Resolves a url given an optional base url\n     * Uses window.URL to do the resolution.\n     *\n     * @param {string} url\n     * @param {string} [baseUrl]\n     * @return {string}\n     * @memberof module:DefaultURLUtils\n     * @instance\n     * @private\n     */\n    const nativeURLResolver = (url, baseUrl) => {\n        try {\n            return new window.URL(url, baseUrl).toString();\n        } catch (e) {\n            return url;\n        }\n    };\n\n    /**\n     * Resolves a url given an optional base url\n     * Does not resolve ./, ../ etc but will do enough to construct something\n     * which will satisfy XHR etc when window.URL is not available ie\n     * IE11/node etc.\n     *\n     * @param {string} url\n     * @param {string} [baseUrl]\n     * @return {string}\n     * @memberof module:DefaultURLUtils\n     * @instance\n     * @private\n     */\n    const dumbURLResolver = (url, baseUrl) => {\n        let baseUrlParseFunc = parseBaseUrl;\n\n        if (!baseUrl) {\n            return url;\n        }\n\n        if (!isRelative(url)) {\n            return url;\n        }\n\n        if (isPathAbsolute(url)) {\n            baseUrlParseFunc = parseOrigin;\n        }\n\n        if (isSchemeRelative(url)) {\n            baseUrlParseFunc = parseScheme;\n        }\n\n        const base = baseUrlParseFunc(baseUrl);\n        const joinChar =\n            base.charAt(base.length - 1) !== '/' &&\n            url.charAt(0) !== '/' ?\n                '/' : '';\n\n        return [base, url].join(joinChar);\n    };\n\n    function setup() {\n        try {\n            const u = new window.URL('x', 'http://y'); // eslint-disable-line\n            resolveFunction = nativeURLResolver;\n        } catch (e) {\n            // must be IE11/Node etc\n        } finally {\n            resolveFunction = resolveFunction || dumbURLResolver;\n        }\n    }\n\n    /**\n     * Returns a string that contains the Base URL of a URL, if determinable.\n     * @param {string} url - full url\n     * @return {string}\n     * @memberof module:DefaultURLUtils\n     * @instance\n     */\n    function parseBaseUrl(url) {\n        const slashIndex = url.indexOf('/');\n        const lastSlashIndex = url.lastIndexOf('/');\n\n        if (slashIndex !== -1) {\n            // if there is only '//'\n            if (lastSlashIndex === slashIndex + 1) {\n                return url;\n            }\n\n            if (url.indexOf('?') !== -1) {\n                url = url.substring(0, url.indexOf('?'));\n            }\n\n            return url.substring(0, lastSlashIndex + 1);\n        }\n\n        return '';\n    }\n\n    /**\n     * Returns a string that contains the scheme and origin of a URL,\n     * if determinable.\n     * @param {string} url - full url\n     * @return {string}\n     * @memberof module:DefaultURLUtils\n     * @instance\n     */\n    function parseOrigin(url) {\n        const matches = url.match(originRegex);\n\n        if (matches) {\n            return matches[1];\n        }\n\n        return '';\n    }\n\n    /**\n     * Returns a string that contains the fragment of a URL without scheme,\n     * if determinable.\n     * @param {string} url - full url\n     * @return {string}\n     * @memberof module:DefaultURLUtils\n     * @instance\n     */\n    function removeHostname(url) {\n        let urlParts = /^(?:\\w+\\:\\/\\/)?([^\\/]+)(.*)$/.exec(url); //[1] = host / [2] = path\n        return urlParts[2].substring(1);\n    }\n\n    /**\n     * Returns a string that contains the scheme of a URL, if determinable.\n     * @param {string} url - full url\n     * @return {string}\n     * @memberof module:DefaultURLUtils\n     * @instance\n     */\n    function parseScheme(url) {\n        const matches = url.match(schemeRegex);\n\n        if (matches) {\n            return matches[0];\n        }\n\n        return '';\n    }\n\n    /**\n     * Determines whether the url is relative.\n     * @return {boolean}\n     * @param {string} url\n     * @memberof module:DefaultURLUtils\n     * @instance\n     */\n    function isRelative(url) {\n        return !schemeRegex.test(url);\n    }\n\n    /**\n     * Determines whether the url is path-absolute.\n     * @return {bool}\n     * @param {string} url\n     * @memberof module:DefaultURLUtils\n     * @instance\n     */\n    function isPathAbsolute(url) {\n        return isRelative(url) && url.charAt(0) === '/';\n    }\n\n    /**\n     * Determines whether the url is scheme-relative.\n     * @return {bool}\n     * @param {string} url\n     * @memberof module:DefaultURLUtils\n     * @instance\n     */\n    function isSchemeRelative(url) {\n        return url.indexOf('//') === 0;\n    }\n\n    /**\n     * Determines whether the url is an HTTP-URL as defined in ISO/IEC\n     * 23009-1:2014 3.1.15. ie URL with a fixed scheme of http or https\n     * @return {bool}\n     * @param {string} url\n     * @memberof module:DefaultURLUtils\n     * @instance\n     */\n    function isHTTPURL(url) {\n        return httpUrlRegex.test(url);\n    }\n\n    /**\n     * Determines whether the supplied url has https scheme\n     * @return {bool}\n     * @param {string} url\n     * @memberof module:DefaultURLUtils\n     * @instance\n     */\n    function isHTTPS(url) {\n        return httpsUrlRegex.test(url);\n    }\n\n    /**\n     * Resolves a url given an optional base url\n     * @return {string}\n     * @param {string} url\n     * @param {string} [baseUrl]\n     * @memberof module:DefaultURLUtils\n     * @instance\n     */\n    function resolve(url, baseUrl) {\n        return resolveFunction(url, baseUrl);\n    }\n\n    setup();\n\n    const instance = {\n        parseBaseUrl: parseBaseUrl,\n        parseOrigin: parseOrigin,\n        parseScheme: parseScheme,\n        isRelative: isRelative,\n        isPathAbsolute: isPathAbsolute,\n        isSchemeRelative: isSchemeRelative,\n        isHTTPURL: isHTTPURL,\n        isHTTPS: isHTTPS,\n        removeHostname: removeHostname,\n        resolve: resolve\n    };\n\n    return instance;\n}\n\nDefaultURLUtils.__dashjs_factory_name = 'DefaultURLUtils';\nexport default FactoryMaker.getSingletonFactory(DefaultURLUtils);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport FactoryMaker from '../../core/FactoryMaker.js';\nimport DefaultURLUtils from './DefaultURLUtils.js';\n\n/**\n * @module URLUtils\n * @ignore\n * @description Provides utility functions for operating on URLs.\n * Initially this is simply a method to determine the Base URL of a URL, but\n * should probably include other things provided all over the place such as\n * determining whether a URL is relative/absolute, resolving two paths etc.\n */\nfunction URLUtils() {\n\n    let instance;\n    let defaultURLUtils;\n    let regexUtils = [];\n    const context = this.context;\n\n    function getUtils(url) {\n        let i;\n        for (i = 0; i < regexUtils.length; i++) {\n            let regex = regexUtils[i].regex;\n            if (regex.test(url)) {\n                return regexUtils[i].utils;\n            }\n        }\n        return defaultURLUtils;\n    }\n\n    function setup() {\n        defaultURLUtils = DefaultURLUtils(context).getInstance();\n    }\n\n    /**\n     * Register a module to handle specific url.\n     * @param {regex} regex - url regex\n     * @param {object} utils - object that handles the regex\n     * @memberof module:URLUtils\n     * @instance\n     */\n    function registerUrlRegex(regex, utils) {\n        regexUtils.push({regex: regex, utils: utils});\n    }\n\n    function internalCall(functionName, url, baseUrl) {\n        let utils = getUtils(baseUrl || url);\n        return utils && typeof (utils[functionName]) === 'function' ? utils[functionName](url, baseUrl) : defaultURLUtils[functionName](url, baseUrl);\n    }\n\n    /**\n     * Returns a string that contains the Base URL of a URL, if determinable.\n     * @param {string} url - full url\n     * @return {string}\n     * @memberof module:URLUtils\n     * @instance\n     */\n    function parseBaseUrl(url) {\n        return internalCall('parseBaseUrl', url);\n    }\n\n    /**\n     * Returns a string that contains the scheme and origin of a URL,\n     * if determinable.\n     * @param {string} url - full url\n     * @return {string}\n     * @memberof module:URLUtils\n     * @instance\n     */\n    function parseOrigin(url) {\n        return internalCall('parseOrigin', url);\n    }\n\n    /**\n     * Returns a string that contains the fragment of a URL without scheme,\n     * if determinable.\n     * @param {string} url - full url\n     * @return {string}\n     * @memberof module:URLUtils\n     * @instance\n     */\n    function removeHostname(url) {\n        return internalCall('removeHostname', url);\n    }\n\n    /**\n     * Returns a string that contains the scheme of a URL, if determinable.\n     * @param {string} url - full url\n     * @return {string}\n     * @memberof module:URLUtils\n     * @instance\n     */\n    function parseScheme(url) {\n        return internalCall('parseScheme', url);\n    }\n\n    /**\n     * Determines whether the url is relative.\n     * @return {boolean}\n     * @param {string} url\n     * @memberof module:URLUtils\n     * @instance\n     */\n    function isRelative(url) {\n        return internalCall('isRelative', url);\n    }\n\n    /**\n     * Determines whether the url is path-absolute.\n     * @return {bool}\n     * @param {string} url\n     * @memberof module:URLUtils\n     * @instance\n     */\n    function isPathAbsolute(url) {\n        return internalCall('isPathAbsolute', url);\n    }\n\n    /**\n     * Determines whether the url is scheme-relative.\n     * @return {bool}\n     * @param {string} url\n     * @memberof module:URLUtils\n     * @instance\n     */\n    function isSchemeRelative(url) {\n        return internalCall('isSchemeRelative', url);\n    }\n\n    /**\n     * Determines whether the url is an HTTP-URL as defined in ISO/IEC\n     * 23009-1:2014 3.1.15. ie URL with a fixed scheme of http or https\n     * @return {bool}\n     * @param {string} url\n     * @memberof module:URLUtils\n     * @instance\n     */\n    function isHTTPURL(url) {\n        return internalCall('isHTTPURL', url);\n    }\n\n    /**\n     * Determines whether the supplied url has https scheme\n     * @return {bool}\n     * @param {string} url\n     * @memberof module:URLUtils\n     * @instance\n     */\n    function isHTTPS(url) {\n        return internalCall('isHTTPS', url);\n    }\n\n    /**\n     * Resolves a url given an optional base url\n     * @return {string}\n     * @param {string} url\n     * @param {string} [baseUrl]\n     * @memberof module:URLUtils\n     * @instance\n     */\n    function resolve(url, baseUrl) {\n        return internalCall('resolve', url, baseUrl);\n    }\n\n    setup();\n    instance = {\n        registerUrlRegex:   registerUrlRegex,\n        parseBaseUrl:       parseBaseUrl,\n        parseOrigin:        parseOrigin,\n        parseScheme:        parseScheme,\n        isRelative:         isRelative,\n        isPathAbsolute:     isPathAbsolute,\n        isSchemeRelative:   isSchemeRelative,\n        isHTTPURL:          isHTTPURL,\n        isHTTPS:            isHTTPS,\n        removeHostname:     removeHostname,\n        resolve:            resolve\n    };\n\n    return instance;\n}\n\nURLUtils.__dashjs_factory_name = 'URLUtils';\nconst factory = FactoryMaker.getSingletonFactory(URLUtils);\nexport default factory;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @classdesc a PlayList from ISO23009-1 Annex D, this Object holds reference to the playback session information\n * @ignore\n */\nclass PlayList {\n    /**\n     * @class\n     */\n    constructor() {\n\n        /**\n         * Timestamp of the user action that starts the playback stream...\n         * @public\n         */\n        this.start = null;\n        /**\n         * Presentation time at which playout was requested by the user...\n         * @public\n         */\n        this.mstart = null;\n        /**\n         * Type of user action which triggered playout\n         * - New playout request (e.g. initial playout or seeking)\n         * - Resume from pause\n         * - Other user request (e.g. user-requested quality change)\n         * - Start of a metrics collection stream (hence earlier entries in the play list not collected)\n         * @public\n         */\n        this.starttype = null;\n\n        /**\n         * List of streams of continuous rendering of decoded samples.\n         * @public\n         */\n        this.trace = [];\n    }\n}\n\n/* Public Static Constants */\nPlayList.INITIAL_PLAYOUT_START_REASON = 'initial_playout';\nPlayList.SEEK_START_REASON = 'seek';\nPlayList.RESUME_FROM_PAUSE_START_REASON = 'resume';\nPlayList.METRICS_COLLECTION_START_REASON = 'metrics_collection_start';\n\n/**\n * @classdesc a PlayList.Trace from ISO23009-1 Annex D\n * @ignore\n */\nclass PlayListTrace {\n    /**\n     * @class\n     */\n    constructor() {\n        /**\n         * The value of the Representation@id of the Representation from which the samples were taken.\n         * @type {string}\n         * @public\n         */\n        this.representationid = null;\n        /**\n         * If not present, this metrics concerns the Representation as a whole.\n         * If present, subreplevel indicates the greatest value of any\n         * Subrepresentation@level being rendered.\n         * @type {number}\n         * @public\n         */\n        this.subreplevel = null;\n        /**\n         * The time at which the first sample was rendered\n         * @type {number}\n         * @public\n         */\n        this.start = null;\n        /**\n         * The presentation time of the first sample rendered.\n         * @type {number}\n         * @public\n         */\n        this.mstart = null;\n        /**\n         * The duration of the continuously presented samples (which is the same in real time and media time). \"Continuously presented\" means that the media clock continued to advance at the playout speed throughout the interval. NOTE: the spec does not call out the units, but all other durations etc are in ms, and we use ms too.\n         * @type {number}\n         * @public\n         */\n        this.duration = null;\n        /**\n         * The playback speed relative to normal playback speed (i.e.normal forward playback speed is 1.0).\n         * @type {number}\n         * @public\n         */\n        this.playbackspeed = null;\n        /**\n         * The reason why continuous presentation of this Representation was stopped.\n         * representation switch\n         * rebuffering\n         * user request\n         * end of Period\n         * end of Stream\n         * end of content\n         * end of a metrics collection period\n         *\n         * @type {string}\n         * @public\n         */\n        this.stopreason = null;\n    }\n}\n\nPlayListTrace.REPRESENTATION_SWITCH_STOP_REASON = 'representation_switch';\nPlayListTrace.REBUFFERING_REASON = 'rebuffering';\nPlayListTrace.USER_REQUEST_STOP_REASON = 'user_request';\nPlayListTrace.END_OF_PERIOD_STOP_REASON = 'end_of_period';\nPlayListTrace.END_OF_CONTENT_STOP_REASON = 'end_of_content';\nPlayListTrace.METRICS_COLLECTION_STOP_REASON = 'metrics_collection_end';\nPlayListTrace.FAILURE_STOP_REASON = 'failure';\n\nexport { PlayList, PlayListTrace };\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport FactoryMaker from '../../core/FactoryMaker.js';\nimport Constants from '../../streaming/constants/Constants.js';\nimport {getTimeBasedSegment} from './SegmentsUtils.js';\n\nfunction TimelineSegmentsGetter(config, isDynamic) {\n\n    config = config || {};\n    const timelineConverter = config.timelineConverter;\n    const dashMetrics = config.dashMetrics;\n\n    let instance;\n\n    function checkConfig() {\n        if (!timelineConverter) {\n            throw new Error(Constants.MISSING_CONFIG_ERROR);\n        }\n    }\n\n    function getMediaFinishedInformation(representation) {\n        if (!representation) {\n            return 0;\n        }\n\n        const base = representation.adaptation.period.mpd.manifest.Period[representation.adaptation.period.index].AdaptationSet[representation.adaptation.index].Representation[representation.index].SegmentTemplate ||\n            representation.adaptation.period.mpd.manifest.Period[representation.adaptation.period.index].AdaptationSet[representation.adaptation.index].Representation[representation.index].SegmentList;\n        const timeline = base.SegmentTimeline;\n\n        let time = 0;\n        let scaledTime = 0;\n        let availableSegments = 0;\n\n        let fragments,\n            frag,\n            i,\n            len,\n            j,\n            repeat,\n            fTimescale;\n\n        fTimescale = representation.timescale;\n        fragments = timeline.S;\n\n        len = fragments.length;\n\n        for (i = 0; i < len; i++) {\n            frag = fragments[i];\n            repeat = 0;\n            if (frag.hasOwnProperty('r')) {\n                repeat = frag.r;\n            }\n\n            // For a repeated S element, t belongs only to the first segment\n            if (frag.hasOwnProperty('t')) {\n                time = frag.t;\n                scaledTime = time / fTimescale;\n            }\n\n            // This is a special case: \"A negative value of the @r attribute of the S element indicates that the duration indicated in @d attribute repeats until the start of the next S element, the end of the Period or until the\n            // next MPD update.\"\n            if (repeat < 0) {\n                const nextFrag = fragments[i + 1];\n                repeat = _calculateRepeatCountForNegativeR(representation, nextFrag, frag, fTimescale, scaledTime);\n            }\n\n            for (j = 0; j <= repeat; j++) {\n                availableSegments++;\n\n                time += frag.d;\n                scaledTime = time / fTimescale;\n            }\n        }\n\n        // We need to account for the index of the segments starting at 0. We subtract 1\n        return { numberOfSegments: availableSegments, mediaTimeOfLastSignaledSegment: scaledTime };\n    }\n\n    function iterateSegments(representation, iterFunc) {\n        const base = representation.adaptation.period.mpd.manifest.Period[representation.adaptation.period.index].\n            AdaptationSet[representation.adaptation.index].Representation[representation.index].SegmentTemplate ||\n            representation.adaptation.period.mpd.manifest.Period[representation.adaptation.period.index].\n                AdaptationSet[representation.adaptation.index].Representation[representation.index].SegmentList;\n        const timeline = base.SegmentTimeline;\n        const list = base.SegmentURL;\n\n        let time = 0;\n        let relativeIdx = -1;\n\n        let fragments,\n            frag,\n            i,\n            len,\n            j,\n            repeat,\n            fTimescale;\n\n        fTimescale = representation.timescale;\n        fragments = timeline.S;\n\n        let breakIterator = false;\n\n        for (i = 0, len = fragments.length; i < len && !breakIterator; i++) {\n            frag = fragments[i];\n            repeat = 0;\n            if (frag.hasOwnProperty('r')) {\n                repeat = frag.r;\n            }\n\n            // For a repeated S element, t belongs only to the first segment\n            if (frag.hasOwnProperty('t')) {\n                time = frag.t;\n            }\n\n            // This is a special case: \"A negative value of the @r attribute of the S element indicates that the duration indicated in @d attribute repeats until the start of the next S element, the end of the Period or until the\n            // next MPD update.\"\n            if (repeat < 0) {\n                const nextFrag = fragments[i + 1];\n                repeat = _calculateRepeatCountForNegativeR(representation, nextFrag, frag, fTimescale, time / fTimescale);\n            }\n\n            for (j = 0; j <= repeat && !breakIterator; j++) {\n                relativeIdx++;\n\n                breakIterator = iterFunc(time, base, list, frag, fTimescale, relativeIdx, i);\n\n                if (breakIterator) {\n                    representation.segmentDuration = frag.d / fTimescale;\n                }\n\n                time += frag.d;\n            }\n        }\n    }\n\n    function _calculateRepeatCountForNegativeR(representation, nextFrag, frag, fTimescale, scaledTime) {\n        let repeatEndTime;\n\n        if (nextFrag && nextFrag.hasOwnProperty('t')) {\n            repeatEndTime = nextFrag.t / fTimescale;\n        } else {\n            try {\n                let availabilityEnd = 0;\n                if (!isNaN(representation.adaptation.period.start) && !isNaN(representation.adaptation.period.duration) && isFinite(representation.adaptation.period.duration)) {\n                    // use end of the Period\n                    availabilityEnd = representation.adaptation.period.start + representation.adaptation.period.duration;\n                } else {\n                    // use DVR window\n                    const dvrWindow = dashMetrics.getCurrentDVRInfo();\n                    availabilityEnd = !isNaN(dvrWindow.end) ? dvrWindow.end : 0;\n                }\n                repeatEndTime = timelineConverter.calcMediaTimeFromPresentationTime(availabilityEnd, representation);\n                representation.segmentDuration = frag.d / fTimescale;\n            } catch (e) {\n                repeatEndTime = 0;\n            }\n        }\n\n        return Math.max(Math.ceil((repeatEndTime - scaledTime) / (frag.d / fTimescale)) - 1, 0);\n    }\n\n\n    function getSegmentByIndex(representation, index, lastSegmentTime) {\n        checkConfig();\n\n        if (!representation) {\n            return null;\n        }\n\n        let segment = null;\n        let found = false;\n\n        iterateSegments(representation, function (time, base, list, frag, fTimescale, relativeIdx, i) {\n            if (found || lastSegmentTime < 0) {\n                let media = base.media;\n                let mediaRange = frag.mediaRange;\n\n                if (list) {\n                    media = list[i].media || '';\n                    mediaRange = list[i].mediaRange;\n                }\n\n                segment = getTimeBasedSegment(\n                    timelineConverter,\n                    isDynamic,\n                    representation,\n                    time,\n                    frag.d,\n                    fTimescale,\n                    media,\n                    mediaRange,\n                    relativeIdx,\n                    frag.tManifest);\n\n                return true;\n            } else if (time >= (lastSegmentTime * fTimescale) - (frag.d * 0.5)) { // same logic, if deviation is\n                // 50% of segment duration, segment is found if time is greater than or equal to (startTime of previous segment - half of the previous segment duration)\n                found = true;\n            }\n\n            return false;\n        });\n\n        return segment;\n    }\n\n    function getSegmentByTime(representation, requestedTime) {\n        checkConfig();\n\n        if (!representation) {\n            return null;\n        }\n\n        if (requestedTime === undefined) {\n            requestedTime = null;\n        }\n\n        let segment = null;\n        const requiredMediaTime = timelineConverter.calcMediaTimeFromPresentationTime(requestedTime, representation);\n\n        iterateSegments(representation, function (time, base, list, frag, fTimescale, relativeIdx, i) {\n            // In some cases when requiredMediaTime = actual end time of the last segment\n            // it is possible that this time a bit exceeds the declared end time of the last segment.\n            // in this case we still need to include the last segment in the segment list.\n            const scaledMediaTime = precisionRound(requiredMediaTime * fTimescale);\n            if (scaledMediaTime < (time + frag.d) && scaledMediaTime >= time) {\n                let media = base.media;\n                let mediaRange = frag.mediaRange;\n\n                if (list) {\n                    media = list[i].media || '';\n                    mediaRange = list[i].mediaRange;\n                }\n\n                segment = getTimeBasedSegment(\n                    timelineConverter,\n                    isDynamic,\n                    representation,\n                    time,\n                    frag.d,\n                    fTimescale,\n                    media,\n                    mediaRange,\n                    relativeIdx,\n                    frag.tManifest);\n\n                return true;\n            }\n\n            return false;\n        });\n\n        return segment;\n    }\n\n    function precisionRound(number) {\n        return parseFloat(number.toPrecision(15));\n    }\n\n    instance = {\n        getSegmentByIndex,\n        getSegmentByTime,\n        getMediaFinishedInformation\n    };\n\n    return instance;\n}\n\nTimelineSegmentsGetter.__dashjs_factory_name = 'TimelineSegmentsGetter';\nconst factory = FactoryMaker.getClassFactory(TimelineSegmentsGetter);\nexport default factory;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport FactoryMaker from '../../core/FactoryMaker.js';\nimport Constants from '../../streaming/constants/Constants.js';\nimport {replaceTokenForTemplate, getIndexBasedSegment} from './SegmentsUtils.js';\n\nfunction TemplateSegmentsGetter(config, isDynamic) {\n    config = config || {};\n    const timelineConverter = config.timelineConverter;\n\n    let instance;\n\n    function checkConfig() {\n        if (!timelineConverter || !timelineConverter.hasOwnProperty('calcPeriodRelativeTimeFromMpdRelativeTime')) {\n            throw new Error(Constants.MISSING_CONFIG_ERROR);\n        }\n    }\n\n    function getMediaFinishedInformation(representation) {\n        const mediaFinishedInformation = { numberOfSegments: 0, mediaTimeOfLastSignaledSegment: NaN }\n        if (!representation) {\n            return mediaFinishedInformation\n        }\n\n        const duration = representation.segmentDuration;\n        if (isNaN(duration)) {\n            mediaFinishedInformation.numberOfSegments = 1;\n        } else {\n            mediaFinishedInformation.numberOfSegments = Math.ceil(representation.adaptation.period.duration / duration);\n        }\n\n        return mediaFinishedInformation;\n    }\n\n    function getSegmentByIndex(representation, index) {\n        checkConfig();\n\n        if (!representation) {\n            return null;\n        }\n\n        const template = representation.adaptation.period.mpd.manifest.Period[representation.adaptation.period.index].\n            AdaptationSet[representation.adaptation.index].Representation[representation.index].SegmentTemplate;\n\n        // This is the index without @startNumber\n        index = Math.max(index, 0);\n\n        const seg = getIndexBasedSegment(timelineConverter, isDynamic, representation, index);\n        if (seg) {\n            seg.replacementTime = Math.round(index * representation.segmentDuration * representation.timescale, 10);\n\n            let url = template.media;\n            url = replaceTokenForTemplate(url, 'Number', seg.replacementNumber);\n            url = replaceTokenForTemplate(url, 'Time', seg.replacementTime);\n            seg.media = url;\n        }\n\n        return seg;\n    }\n\n    function getSegmentByTime(representation, requestedTime) {\n        checkConfig();\n\n        if (!representation) {\n            return null;\n        }\n\n        const duration = representation.segmentDuration;\n\n        if (isNaN(duration)) {\n            return null;\n        }\n\n        // Calculate the relative time for the requested time in this period\n        let periodTime = timelineConverter.calcPeriodRelativeTimeFromMpdRelativeTime(representation, requestedTime);\n        const index = Math.floor(periodTime / duration);\n\n        return getSegmentByIndex(representation, index);\n    }\n\n    instance = {\n        getSegmentByIndex,\n        getSegmentByTime,\n        getMediaFinishedInformation\n    };\n\n    return instance;\n}\n\nTemplateSegmentsGetter.__dashjs_factory_name = 'TemplateSegmentsGetter';\nconst factory = FactoryMaker.getClassFactory(TemplateSegmentsGetter);\nexport default factory;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport FactoryMaker from '../../core/FactoryMaker.js';\nimport Constants from '../../streaming/constants/Constants.js';\n\nimport {getIndexBasedSegment} from './SegmentsUtils.js';\n\nfunction ListSegmentsGetter(config, isDynamic) {\n\n    config = config || {};\n    const timelineConverter = config.timelineConverter;\n\n    let instance;\n\n    function checkConfig() {\n        if (!timelineConverter || !timelineConverter.hasOwnProperty('calcPeriodRelativeTimeFromMpdRelativeTime')) {\n            throw new Error(Constants.MISSING_CONFIG_ERROR);\n        }\n    }\n\n    function getMediaFinishedInformation(representation) {\n        const mediaFinishedInformation = { numberOfSegments: 0, mediaTimeOfLastSignaledSegment: NaN }\n\n        if (!representation) {\n            return mediaFinishedInformation;\n        }\n\n        const list = representation.adaptation.period.mpd.manifest.Period[representation.adaptation.period.index].AdaptationSet[representation.adaptation.index].Representation[representation.index].SegmentList;\n        const startNumber = representation && !isNaN(representation.startNumber) ? representation.startNumber : 1;\n        const offset = Math.max(startNumber - 1, 0);\n\n        mediaFinishedInformation.numberOfSegments = offset + list.SegmentURL.length;\n\n        return mediaFinishedInformation\n    }\n\n    function getSegmentByIndex(representation, index) {\n        checkConfig();\n\n        if (!representation) {\n            return null;\n        }\n\n        const list = representation.adaptation.period.mpd.manifest.Period[representation.adaptation.period.index].AdaptationSet[representation.adaptation.index].Representation[representation.index].SegmentList;\n        const len = list.SegmentURL.length;\n\n        const startNumber = representation && !isNaN(representation.startNumber) ? representation.startNumber : 1;\n        const offsetToSubtract = Math.max(startNumber - 1, 0);\n\n        const relativeIndex = Math.max(index - offsetToSubtract, 0);\n\n        let segment = null;\n        if (relativeIndex < len) {\n            const s = list.SegmentURL[relativeIndex];\n\n            segment = getIndexBasedSegment(timelineConverter, isDynamic, representation, index);\n            if (segment) {\n                segment.replacementTime = (startNumber + index - 1) * representation.segmentDuration;\n                segment.media = s.media ? s.media : '';\n                segment.mediaRange = s.mediaRange;\n                segment.indexRange = s.indexRange;\n            }\n        }\n\n        return segment;\n    }\n\n    function getSegmentByTime(representation, requestedTime) {\n        checkConfig();\n\n        if (!representation) {\n            return null;\n        }\n\n        const duration = representation.segmentDuration;\n\n        if (isNaN(duration)) {\n            return null;\n        }\n\n        const periodTime = timelineConverter.calcPeriodRelativeTimeFromMpdRelativeTime(representation, requestedTime);\n        const index = Math.floor(periodTime / duration);\n\n        return getSegmentByIndex(representation, index);\n    }\n\n    instance = {\n        getSegmentByIndex,\n        getSegmentByTime,\n        getMediaFinishedInformation\n    };\n\n    return instance;\n}\n\nListSegmentsGetter.__dashjs_factory_name = 'ListSegmentsGetter';\nconst factory = FactoryMaker.getClassFactory(ListSegmentsGetter);\nexport default factory;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport FactoryMaker from '../../core/FactoryMaker.js';\nimport Constants from '../../streaming/constants/Constants.js';\n\nfunction SegmentBaseGetter(config) {\n\n    config = config || {};\n    const timelineConverter = config.timelineConverter;\n\n    let instance;\n\n    function checkConfig() {\n        if (!timelineConverter || !timelineConverter.hasOwnProperty('calcPeriodRelativeTimeFromMpdRelativeTime')) {\n            throw new Error(Constants.MISSING_CONFIG_ERROR);\n        }\n    }\n\n    function getMediaFinishedInformation(representation) {\n        const mediaFinishedInformation = { numberOfSegments: 0, mediaTimeOfLastSignaledSegment: NaN }\n\n        if (!representation || !representation.segments) {\n            return mediaFinishedInformation\n        }\n\n        mediaFinishedInformation.numberOfSegments = representation.segments.length;\n\n        return mediaFinishedInformation;\n    }\n\n    function getSegmentByIndex(representation, index) {\n        checkConfig();\n\n        if (!representation) {\n            return null;\n        }\n\n        const len = representation.segments ? representation.segments.length : -1;\n        let seg;\n        if (index < len) {\n            seg = representation.segments[index];\n            if (seg && seg.index === index) {\n                return seg;\n            }\n        }\n\n        for (let i = 0; i < len; i++) {\n            seg = representation.segments[i];\n\n            if (seg && seg.index === index) {\n                return seg;\n            }\n        }\n\n        return null;\n    }\n\n    function getSegmentByTime(representation, requestedTime) {\n        checkConfig();\n\n        const index = getIndexByTime(representation, requestedTime);\n\n        return getSegmentByIndex(representation, index);\n    }\n\n    function getIndexByTime(representation, time) {\n        if (!representation) {\n            return -1;\n        }\n\n        const segments = representation.segments;\n        const ln = segments ? segments.length : null;\n\n        let idx = -1;\n        let epsilon,\n            seg,\n            ft,\n            fd,\n            i;\n\n        if (segments && ln > 0) {\n            for (i = 0; i < ln; i++) {\n                seg = segments[i];\n                ft = seg.presentationStartTime;\n                fd = seg.duration;\n\n                epsilon = fd / 2;\n                if ((time + epsilon) >= ft &&\n                    (time - epsilon) < (ft + fd)) {\n                    idx = seg.index;\n                    break;\n                }\n            }\n        }\n\n        return idx;\n    }\n\n    instance = {\n        getSegmentByIndex,\n        getSegmentByTime,\n        getMediaFinishedInformation\n    };\n\n    return instance;\n}\n\nSegmentBaseGetter.__dashjs_factory_name = 'SegmentBaseGetter';\nconst factory = FactoryMaker.getClassFactory(SegmentBaseGetter);\nexport default factory;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport FactoryMaker from '../../core/FactoryMaker.js';\nimport TimelineSegmentsGetter from '../utils/TimelineSegmentsGetter.js';\nimport TemplateSegmentsGetter from '../utils/TemplateSegmentsGetter.js';\nimport ListSegmentsGetter from '../utils/ListSegmentsGetter.js';\nimport SegmentBaseGetter from '../utils/SegmentBaseGetter.js';\n\nfunction SegmentsController(config) {\n    config = config || {};\n\n    const context = this.context;\n    const dashConstants = config.dashConstants;\n    const type = config.type;\n    const segmentBaseController = config.segmentBaseController;\n\n    let instance,\n        getters;\n\n    function setup() {\n        getters = {};\n    }\n\n    function initialize(isDynamic) {\n        getters[dashConstants.SEGMENT_TIMELINE] = TimelineSegmentsGetter(context).create(config, isDynamic);\n        getters[dashConstants.SEGMENT_TEMPLATE] = TemplateSegmentsGetter(context).create(config, isDynamic);\n        getters[dashConstants.SEGMENT_LIST] = ListSegmentsGetter(context).create(config, isDynamic);\n        getters[dashConstants.SEGMENT_BASE] = SegmentBaseGetter(context).create(config, isDynamic);\n    }\n\n    function updateInitData(voRepresentation, hasInitialization) {\n        if (hasInitialization) {\n            return Promise.resolve();\n        }\n        return segmentBaseController.getSegmentBaseInitSegment({\n            representation: voRepresentation,\n            mediaType: type\n        });\n    }\n\n    function updateSegmentData(voRepresentation, hasSegments) {\n        if (hasSegments) {\n            return Promise.resolve();\n        }\n        return segmentBaseController.getSegmentList({\n            mimeType: voRepresentation.mimeType,\n            representation: voRepresentation,\n            mediaType: type\n        });\n    }\n\n    function getSegmentsGetter(representation) {\n        return representation ? representation.segments ? getters[dashConstants.SEGMENT_BASE] : getters[representation.segmentInfoType] : null;\n    }\n\n    function getSegmentByIndex(representation, index, lastSegmentTime) {\n        const getter = getSegmentsGetter(representation);\n        return getter ? getter.getSegmentByIndex(representation, index, lastSegmentTime) : null;\n    }\n\n    function getSegmentByTime(representation, time) {\n        const getter = getSegmentsGetter(representation);\n        return getter ? getter.getSegmentByTime(representation, time) : null;\n    }\n\n    function getMediaFinishedInformation(representation) {\n        const getter = getSegmentsGetter(representation);\n        return getter ? getter.getMediaFinishedInformation(representation) : {\n            numberOfSegments: 0,\n            mediaTimeOfLastSignaledSegment: NaN\n        };\n    }\n\n    instance = {\n        initialize,\n        updateInitData,\n        updateSegmentData,\n        getSegmentByIndex,\n        getSegmentByTime,\n        getMediaFinishedInformation\n    };\n\n    setup();\n\n    return instance;\n}\n\nSegmentsController.__dashjs_factory_name = 'SegmentsController';\nconst factory = FactoryMaker.getClassFactory(SegmentsController);\nexport default factory;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport FactoryMaker from '../../core/FactoryMaker.js';\n\n/**\n * @module TimeUtils\n * @ignore\n * @description Provides utility functions for time manipulation/conversion\n */\nfunction TimeUtils() {\n\n    let instance;\n\n    /**\n     * Convert NTP timestamp into an UTC timestamp\n     * @return {number}\n     * @param {number} ntpTimestamp\n     * @memberof module:TimeUtils\n     * @instance\n     */\n    function ntpToUTC(ntpTimeStamp) {\n        const start = new Date(Date.UTC(1900, 0, 1, 0, 0, 0));\n        return new Date(start.getTime() + ntpTimeStamp).getTime();\n    }\n\n    instance = {\n        ntpToUTC\n    };\n\n    return instance;\n}\n\nTimeUtils.__dashjs_factory_name = 'TimeUtils';\nexport default FactoryMaker.getSingletonFactory(TimeUtils);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nclass MediaInfoSelectionInput {\n    constructor(data) {\n        this.newMediaInfo = data.newMediaInfo;\n        this.previouslySelectedRepresentation = data.previouslySelectedRepresentation;\n        this.newRepresentation = data.newRepresentation;\n    }\n}\n\nexport default MediaInfoSelectionInput;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport Constants from './constants/Constants.js';\nimport DashConstants from '../dash/constants/DashConstants.js';\nimport MetricsConstants from './constants/MetricsConstants.js';\nimport FragmentModel from './models/FragmentModel.js';\nimport BufferController from './controllers/BufferController.js';\nimport NotFragmentedTextBufferController from './text/NotFragmentedTextBufferController.js';\nimport ScheduleController from './controllers/ScheduleController.js';\nimport RepresentationController from '../dash/controllers/RepresentationController.js';\nimport FactoryMaker from '../core/FactoryMaker.js';\nimport {checkInteger} from './utils/SupervisorTools.js';\nimport EventBus from '../core/EventBus.js';\nimport Events from '../core/events/Events.js';\nimport MediaPlayerEvents from './MediaPlayerEvents.js';\nimport DashHandler from '../dash/DashHandler.js';\nimport Errors from '../core/errors/Errors.js';\nimport DashJSError from './vo/DashJSError.js';\nimport Debug from '../core/Debug.js';\nimport URLUtils from '../streaming/utils/URLUtils.js';\nimport {PlayListTrace} from './vo/metrics/PlayList.js';\nimport SegmentsController from '../dash/controllers/SegmentsController.js';\nimport {HTTPRequest} from './vo/metrics/HTTPRequest.js';\nimport TimeUtils from './utils/TimeUtils.js';\nimport MediaInfoSelectionInput from './vo/MediaInfoSelectionInput.js';\n\n\nfunction StreamProcessor(config) {\n\n    config = config || {};\n    let context = this.context;\n    let eventBus = EventBus(context).getInstance();\n\n    let abrController = config.abrController;\n    let adapter = config.adapter;\n    let boxParser = config.boxParser;\n    let capabilities = config.capabilities;\n    let dashMetrics = config.dashMetrics;\n    let errHandler = config.errHandler;\n    let fragmentModel = config.fragmentModel;\n    let manifestModel = config.manifestModel;\n    let mediaController = config.mediaController;\n    let mediaPlayerModel = config.mediaPlayerModel;\n    let mimeType = config.mimeType;\n    let playbackController = config.playbackController;\n    let segmentBlacklistController = config.segmentBlacklistController;\n    let settings = config.settings;\n    let streamInfo = config.streamInfo;\n    let textController = config.textController;\n    let timelineConverter = config.timelineConverter;\n    let type = config.type;\n\n    let bufferController,\n        bufferingTime,\n        currentMediaInfo,\n        dashHandler,\n        instance,\n        isDynamic,\n        logger,\n        mediaInfoArr,\n        pendingSwitchToVoRepresentation,\n        qualityChangeInProgress,\n        representationController,\n        scheduleController,\n        segmentsController,\n        shouldRepeatRequest,\n        shouldUseExplicitTimeForRequest,\n        trackSwitchInProgress;\n\n    function setup() {\n        logger = Debug(context).getInstance().getLogger(instance);\n        resetInitialSettings();\n\n        eventBus.on(Events.INIT_FRAGMENT_NEEDED, _onInitFragmentNeeded, instance);\n        eventBus.on(Events.MEDIA_FRAGMENT_NEEDED, _onMediaFragmentNeeded, instance);\n        eventBus.on(Events.INIT_FRAGMENT_LOADED, _onInitFragmentLoaded, instance);\n        eventBus.on(Events.MEDIA_FRAGMENT_LOADED, _onMediaFragmentLoaded, instance);\n        eventBus.on(Events.BUFFER_LEVEL_STATE_CHANGED, _onBufferLevelStateChanged, instance);\n        eventBus.on(Events.BUFFER_CLEARED, _onBufferCleared, instance);\n        eventBus.on(Events.SEEK_TARGET, _onSeekTarget, instance);\n        eventBus.on(Events.FRAGMENT_LOADING_ABANDONED, _onFragmentLoadingAbandoned, instance);\n        eventBus.on(Events.FRAGMENT_LOADING_COMPLETED, _onFragmentLoadingCompleted, instance);\n        eventBus.on(Events.QUOTA_EXCEEDED, _onQuotaExceeded, instance);\n        eventBus.on(Events.SET_FRAGMENTED_TEXT_AFTER_DISABLED, _onSetFragmentedTextAfterDisabled, instance);\n        eventBus.on(Events.SET_NON_FRAGMENTED_TEXT, _onSetNonFragmentedText, instance);\n        eventBus.on(Events.SOURCE_BUFFER_ERROR, _onSourceBufferError, instance);\n        eventBus.on(Events.BYTES_APPENDED_END_FRAGMENT, _onBytesAppended, instance);\n    }\n\n    function initialize(mediaSource, hasVideoTrack, isFragmented) {\n\n        segmentsController = SegmentsController(context).create({\n            events: Events,\n            eventBus,\n            streamInfo,\n            timelineConverter,\n            dashConstants: DashConstants,\n            segmentBaseController: config.segmentBaseController,\n            type\n        });\n\n        dashHandler = DashHandler(context).create({\n            streamInfo,\n            type,\n            timelineConverter,\n            dashMetrics,\n            mediaPlayerModel,\n            baseURLController: config.baseURLController,\n            errHandler,\n            segmentsController,\n            settings,\n            boxParser,\n            events: Events,\n            eventBus,\n            errors: Errors,\n            debug: Debug(context).getInstance(),\n            dashConstants: DashConstants,\n            constants: Constants,\n            urlUtils: URLUtils(context).getInstance()\n        });\n\n        isDynamic = streamInfo.manifestInfo.isDynamic;\n\n        // Create/initialize controllers\n        dashHandler.initialize(isDynamic);\n        abrController.registerStreamType(type, instance);\n\n        representationController = RepresentationController(context).create({\n            streamInfo,\n            type,\n            abrController,\n            dashMetrics,\n            playbackController,\n            timelineConverter,\n            dashConstants: DashConstants,\n            events: Events,\n            eventBus,\n            errors: Errors,\n            isDynamic,\n            adapter,\n            segmentsController\n        });\n\n        bufferController = _createBufferControllerForType(type, isFragmented);\n        if (bufferController) {\n            bufferController.initialize(mediaSource);\n        }\n\n        scheduleController = ScheduleController(context).create({\n            streamInfo,\n            type,\n            mimeType,\n            adapter,\n            dashMetrics,\n            mediaPlayerModel,\n            fragmentModel,\n            abrController,\n            playbackController,\n            textController,\n            mediaController,\n            bufferController,\n            representationController,\n            settings\n        });\n\n        scheduleController.initialize(hasVideoTrack);\n\n        bufferingTime = 0;\n        shouldUseExplicitTimeForRequest = false;\n        shouldRepeatRequest = false;\n    }\n\n    function getStreamId() {\n        return streamInfo.id;\n    }\n\n    function getType() {\n        return type;\n    }\n\n    function resetInitialSettings() {\n        mediaInfoArr = [];\n        currentMediaInfo = null;\n        bufferingTime = 0;\n        shouldUseExplicitTimeForRequest = false;\n        shouldRepeatRequest = false;\n        qualityChangeInProgress = false;\n        trackSwitchInProgress = false;\n        _resetPendingSwitchToRepresentation();\n    }\n\n    function reset(errored, keepBuffers) {\n        if (dashHandler) {\n            dashHandler.reset();\n        }\n\n        if (bufferController) {\n            bufferController.reset(errored, keepBuffers);\n            bufferController = null;\n        }\n\n        if (scheduleController) {\n            scheduleController.reset();\n            scheduleController = null;\n        }\n\n        if (representationController) {\n            representationController.reset();\n            representationController = null;\n        }\n\n        if (segmentsController) {\n            segmentsController = null;\n        }\n\n        if (abrController) {\n            abrController.unRegisterStreamType(getStreamId(), type);\n        }\n\n        eventBus.off(Events.INIT_FRAGMENT_NEEDED, _onInitFragmentNeeded, instance);\n        eventBus.off(Events.MEDIA_FRAGMENT_NEEDED, _onMediaFragmentNeeded, instance);\n        eventBus.off(Events.INIT_FRAGMENT_LOADED, _onInitFragmentLoaded, instance);\n        eventBus.off(Events.MEDIA_FRAGMENT_LOADED, _onMediaFragmentLoaded, instance);\n        eventBus.off(Events.BUFFER_LEVEL_STATE_CHANGED, _onBufferLevelStateChanged, instance);\n        eventBus.off(Events.BUFFER_CLEARED, _onBufferCleared, instance);\n        eventBus.off(Events.SEEK_TARGET, _onSeekTarget, instance);\n        eventBus.off(Events.FRAGMENT_LOADING_ABANDONED, _onFragmentLoadingAbandoned, instance);\n        eventBus.off(Events.FRAGMENT_LOADING_COMPLETED, _onFragmentLoadingCompleted, instance);\n        eventBus.off(Events.SET_FRAGMENTED_TEXT_AFTER_DISABLED, _onSetFragmentedTextAfterDisabled, instance);\n        eventBus.off(Events.SET_NON_FRAGMENTED_TEXT, _onSetNonFragmentedText, instance);\n        eventBus.off(Events.QUOTA_EXCEEDED, _onQuotaExceeded, instance);\n        eventBus.off(Events.SOURCE_BUFFER_ERROR, _onSourceBufferError, instance);\n        eventBus.off(Events.BYTES_APPENDED_END_FRAGMENT, _onBytesAppended, instance);\n\n\n        resetInitialSettings();\n        type = null;\n        streamInfo = null;\n    }\n\n    function setMediaInfoArray(value) {\n        mediaInfoArr = value;\n    }\n\n    /**\n     * When a seek within the corresponding period occurs this function initiates the clearing of the buffer and sets the correct buffering time.\n     * @param {object} e\n     * @returns {Promise<any>}\n     */\n    function prepareInnerPeriodPlaybackSeeking(e) {\n        return new Promise((resolve) => {\n\n            // If we seek to a buffered area we can keep requesting where we left before the seek\n            // If we seek back then forwards buffering will stop until we are below our buffer goal\n            // If we seek forwards then pruneBuffer() will make sure that the bufferToKeep setting is respected\n            const hasBufferAtTargetTime = bufferController.hasBufferAtTime(e.seekTime);\n            if (hasBufferAtTargetTime) {\n                bufferController.pruneBuffer();\n                const continuousBufferTime = bufferController.getContinuousBufferTimeForTargetTime(e.seekTime);\n                if (_shouldSetBufferingComplete(continuousBufferTime)) {\n                    bufferController.setIsBufferingCompleted(true);\n                }\n                resolve();\n                return;\n            }\n\n            // Stop segment requests until we have figured out for which time we need to request a segment. We don't want to replace existing segments.\n            clearScheduleTimer();\n            fragmentModel.abortRequests();\n\n            // Abort operations to the SourceBuffer Sink and reset the BufferControllers isBufferingCompleted state.\n            bufferController.prepareForPlaybackSeek()\n                .then(() => {\n                    // Clear the buffer. We need to prune everything which is not in the target interval.\n                    const clearRanges = bufferController.getAllRangesWithSafetyFactor(e.seekTime);\n                    // When everything has been pruned go on\n                    return bufferController.clearBuffers(clearRanges);\n                })\n                .then(() => {\n                    // Figure out the correct segment request time.\n                    const continuousBufferTime = bufferController.getContinuousBufferTimeForTargetTime(e.seekTime);\n\n                    // If the buffer is continuous and exceeds the duration of the period we are still done buffering. We need to trigger the buffering completed event in order to start prebuffering upcoming periods again\n                    if (_shouldSetBufferingComplete(continuousBufferTime)) {\n                        bufferController.setIsBufferingCompleted(true);\n                        resolve();\n                    } else {\n                        const targetTime = isNaN(continuousBufferTime) ? e.seekTime : continuousBufferTime;\n                        setExplicitBufferingTime(targetTime);\n                        bufferController.setSeekTarget(targetTime);\n\n                        const promises = [];\n\n                        // Append window has been reset by abort() operation. Set the correct values again\n                        promises.push(bufferController.updateAppendWindow());\n\n                        // Timestamp offset could've been changed by preloading period\n                        const voRepresentation = getRepresentation();\n                        promises.push(bufferController.updateBufferTimestampOffset(voRepresentation));\n\n                        Promise.all(promises)\n                            .then(() => {\n                                // We might have aborted the append operation of an init segment. Append init segment again.\n                                scheduleController.setInitSegmentRequired(true);\n\n                                // Right after a seek we should not immediately check the playback quality\n                                scheduleController.setCheckPlaybackQuality(false);\n                                scheduleController.startScheduleTimer();\n                                resolve();\n                            });\n                    }\n                })\n                .catch((e) => {\n                    logger.error(e);\n                });\n\n        })\n    }\n\n    function _shouldSetBufferingComplete(continuousBufferTime) {\n        return !isNaN(continuousBufferTime) && !isNaN(streamInfo.duration) && isFinite(streamInfo.duration) && continuousBufferTime >= streamInfo.start + streamInfo.duration\n    }\n\n    /**\n     * Seek outside of the current period.\n     * @return {Promise<unknown>}\n     */\n    function prepareOuterPeriodPlaybackSeeking() {\n        return new Promise((resolve, reject) => {\n            try {\n                // Stop scheduling\n                clearScheduleTimer();\n\n                // Abort all ongoing requests\n                fragmentModel.abortRequests();\n\n                // buffering not complete anymore and abort current append operation to SourceBuffer\n                bufferController.prepareForPlaybackSeek()\n                    .then(() => {\n                        // Clear the buffers completely.\n                        return bufferController.pruneAllSafely();\n                    })\n                    .then(() => {\n                        resolve();\n                    });\n\n            } catch (e) {\n                reject(e);\n            }\n        });\n    }\n\n    /**\n     * ScheduleController indicates that an init segment needs to be fetched.\n     * @param {object} e\n     * @param {boolean} rescheduleIfNoRequest - Defines whether we reschedule in case no valid request could be generated\n     * @private\n     */\n    function _onInitFragmentNeeded(e, rescheduleIfNoRequest = true) {\n        // Event propagation may have been stopped (see MssHandler)\n        if (!e.sender) {\n            return;\n        }\n\n        if (playbackController.getIsManifestUpdateInProgress()) {\n            _noValidRequest();\n            return;\n        }\n\n        if (currentMediaInfo.isText && !textController.isTextEnabled()) {\n            return;\n        }\n\n        if (bufferController && e.representationId) {\n            if (!bufferController.appendInitSegmentFromCache(e.representationId)) {\n                const rep = representationController.getCurrentRepresentation();\n                // Dummy init segment (fragmented tracks without initialization segment)\n                if (rep.range === 0) {\n                    _onMediaFragmentNeeded();\n                    return;\n                }\n                // Init segment not in cache, send new request\n                const request = dashHandler ? dashHandler.getInitRequest(currentMediaInfo, rep) : null;\n                if (request) {\n                    fragmentModel.executeRequest(request);\n                } else if (rescheduleIfNoRequest) {\n                    scheduleController.setInitSegmentRequired(true);\n                    _noValidRequest();\n                }\n            }\n        }\n    }\n\n    /**\n     * ScheduleController indicates that a media segment is needed\n     * @param {object} e\n     * @param {boolean} rescheduleIfNoRequest -  Defines whether we reschedule in case no valid request could be generated\n     * @private\n     */\n    function _onMediaFragmentNeeded(e, rescheduleIfNoRequest = true) {\n        // Don't schedule next fragments while updating manifest or pruning to avoid buffer inconsistencies\n        if (playbackController.getIsManifestUpdateInProgress() || bufferController.getIsPruningInProgress()) {\n            _noValidRequest();\n            return;\n        }\n\n        let request = _getFragmentRequest();\n        if (request) {\n            shouldUseExplicitTimeForRequest = false;\n            shouldRepeatRequest = false;\n            _mediaRequestGenerated(request);\n        } else {\n            _noMediaRequestGenerated(rescheduleIfNoRequest);\n        }\n    }\n\n    /**\n     * If we generated a valid media request we can execute the request. In some cases the segment might be blacklisted.\n     * @param {object} request\n     * @private\n     */\n    function _mediaRequestGenerated(request) {\n        if (!isNaN(request.startTime + request.duration)) {\n            bufferingTime = request.startTime + request.duration;\n        }\n        request.delayLoadingTime = new Date().getTime() + scheduleController.getTimeToLoadDelay();\n        scheduleController.setTimeToLoadDelay(0);\n        if (!_shouldIgnoreRequest(request)) {\n            logger.debug(`Next fragment request url for stream id ${streamInfo.id} and media type ${type} is ${request.url} with request range ${request.range}`);\n            fragmentModel.executeRequest(request);\n        } else {\n            logger.warn(`Fragment request url ${request.url} for stream id ${streamInfo.id} and media type ${type} is on the ignore list and will be skipped`);\n            _noValidRequest();\n        }\n    }\n\n    /**\n     * We could not generate a valid request. Check if the media is finished, we are stuck in a gap or simply need to wait for the next segment to be available.\n     * @param {boolean} rescheduleIfNoRequest\n     * @private\n     */\n    function _noMediaRequestGenerated(rescheduleIfNoRequest) {\n        const representation = representationController.getCurrentRepresentation();\n\n        // If  this statement is true we might be stuck. A static manifest does not change and we did not find a valid request for the target time\n        // There is no point in trying again. We need to adjust the time in order to find a valid request. This can happen if the user/app seeked into a gap.\n        // For dynamic manifests this can also happen especially if we jump over the gap in the previous period and are using SegmentTimeline and in case there is a positive eptDelta at the beginning of the period we are stuck.\n        try {\n            if (settings.get().streaming.gaps.enableSeekFix && (shouldUseExplicitTimeForRequest || playbackController.getTime() === 0)) {\n                let adjustedTime;\n                if (!isDynamic) {\n                    adjustedTime = dashHandler.getValidTimeAheadOfTargetTime(bufferingTime, currentMediaInfo, representation, settings.get().streaming.gaps.threshold);\n                    if (isNaN(adjustedTime)) {\n                        // If there is no valid target time ahead and the buffering time is within the duration of one segment we slightly adjust it\n                        if (bufferingTime >= representation.adaptation.period.mpd.mediaPresentationDuration - representation.segmentDuration) {\n                            adjustedTime = bufferingTime - 0.1;\n                        }\n                    }\n                } else if (isDynamic && representation.segmentInfoType === DashConstants.SEGMENT_TIMELINE) {\n                    // If we find a valid request ahead of the current time then we are in a gap. Segments are only added at the end of the timeline\n                    adjustedTime = dashHandler.getValidTimeAheadOfTargetTime(bufferingTime, currentMediaInfo, representation, settings.get().streaming.gaps.threshold);\n                }\n                if (!isNaN(adjustedTime) && adjustedTime !== bufferingTime) {\n                    if (playbackController.isSeeking() || playbackController.getTime() === 0) {\n                        // If we are seeking then playback is stalled. Do a seek to get out of this situation\n                        logger.warn(`Adjusting playback time ${adjustedTime} because of gap in the manifest. Seeking by ${adjustedTime - bufferingTime}`);\n                        playbackController.seek(adjustedTime, false, false);\n                    } else {\n                        // If we are not seeking we should still be playing but we cant find anything to buffer. So we adjust the buffering time and leave the gap jump to the GapController\n                        logger.warn(`Adjusting buffering time ${adjustedTime} because of gap in the manifest. Adjusting time by ${adjustedTime - bufferingTime}`);\n                        setExplicitBufferingTime(adjustedTime)\n\n                        if (rescheduleIfNoRequest) {\n                            _noValidRequest();\n                        }\n                    }\n                    return;\n                }\n            }\n        } catch (e) {\n            logger.error(e);\n        }\n\n        // Check if the media is finished. If so, no need to schedule another request\n        const hasHandledBufferingComplete = checkAndHandleCompletedBuffering();\n        if (hasHandledBufferingComplete) {\n            return\n        }\n\n        if (rescheduleIfNoRequest) {\n            _noValidRequest();\n        }\n    }\n\n    function checkAndHandleCompletedBuffering() {\n        const representation = representationController.getCurrentRepresentation();\n        const isLastSegmentRequested = dashHandler.isLastSegmentRequested(representation, bufferingTime);\n\n        if (isLastSegmentRequested) {\n            const segmentIndex = dashHandler.getCurrentIndex();\n            logger.debug(`Segment requesting for stream ${streamInfo.id} has finished`);\n            eventBus.trigger(Events.STREAM_REQUESTING_COMPLETED, { segmentIndex }, {\n                streamId: streamInfo.id,\n                mediaType: type\n            });\n            bufferController.segmentRequestingCompleted(segmentIndex);\n            clearScheduleTimer();\n        }\n\n        return isLastSegmentRequested\n    }\n\n    /**\n     * In certain situations we need to ignore a request. For instance, if a segment is blacklisted because it caused an MSE error.\n     * @private\n     */\n    function _shouldIgnoreRequest(request) {\n        let blacklistUrl = request.url;\n\n        if (request.range) {\n            blacklistUrl = blacklistUrl.concat('_', request.range);\n        }\n\n        return segmentBlacklistController.contains(blacklistUrl)\n    }\n\n    /**\n     * Get the init or media segment request using the DashHandler.\n     * @return {null|FragmentRequest|null}\n     * @private\n     */\n    function _getFragmentRequest() {\n        let request;\n\n        if (isNaN(bufferingTime) || (getType() === Constants.TEXT && !textController.isTextEnabled())) {\n            return null;\n        }\n\n        if (dashHandler) {\n            const representation = getRepresentation();\n\n            if (shouldUseExplicitTimeForRequest) {\n                request = dashHandler.getSegmentRequestForTime(currentMediaInfo, representation, bufferingTime);\n            } else if (shouldRepeatRequest) {\n                request = dashHandler.repeatSegmentRequest(currentMediaInfo, representation);\n            } else {\n                request = dashHandler.getNextSegmentRequest(currentMediaInfo, representation);\n            }\n        }\n\n        return request;\n    }\n\n    /**\n     * Whenever we can not generate a valid request we restart scheduling according to the timeouts defined in the settings.\n     * @private\n     */\n    function _noValidRequest() {\n        scheduleController.startScheduleTimer(playbackController.getLowLatencyModeEnabled() ? settings.get().streaming.scheduling.lowLatencyTimeout : settings.get().streaming.scheduling.defaultTimeout);\n    }\n\n    function _onDataUpdateCompleted() {\n        const currentRepresentation = representationController.getCurrentRepresentation()\n        if (!bufferController.getIsBufferingCompleted()) {\n            bufferController.updateBufferTimestampOffset(currentRepresentation);\n        }\n    }\n\n    function _onBufferLevelStateChanged(e) {\n        dashMetrics.addBufferState(type, e.state, scheduleController.getBufferTarget());\n        if (e.state === MetricsConstants.BUFFER_EMPTY && !playbackController.isSeeking()) {\n            logger.info('Buffer is empty! Stalling!');\n            dashMetrics.pushPlayListTraceMetrics(new Date(), PlayListTrace.REBUFFERING_REASON);\n        }\n    }\n\n    function _onBufferCleared(e) {\n        // Remove executed requests not buffered anymore\n        fragmentModel.syncExecutedRequestsWithBufferedRange(\n            bufferController.getBuffer().getAllBufferRanges(),\n            streamInfo.duration);\n\n        // If buffer removed ahead current time (QuotaExceededError or automatic buffer pruning) then adjust current index handler time\n        if (e.quotaExceeded && e.from > playbackController.getTime()) {\n            setExplicitBufferingTime(e.from);\n        }\n\n        // (Re)start schedule once buffer has been pruned after a QuotaExceededError\n        if (e.hasEnoughSpaceToAppend && e.quotaExceeded) {\n            scheduleController.startScheduleTimer();\n        }\n    }\n\n    /**\n     * This function is called when the corresponding SourceBuffer encountered an error.\n     * We blacklist the last segment assuming it caused the error\n     * @param {object} e\n     * @private\n     */\n    function _onSourceBufferError(e) {\n        if (!e || !e.lastRequestAppended || !e.lastRequestAppended.url) {\n            return;\n        }\n\n        let blacklistUrl = e.lastRequestAppended.url;\n\n        if (e.lastRequestAppended.range) {\n            blacklistUrl = blacklistUrl.concat('_', e.lastRequestAppended.range);\n        }\n        logger.warn(`Blacklisting segment with url ${blacklistUrl}`);\n        segmentBlacklistController.add(blacklistUrl);\n    }\n\n    function _onBytesAppended(e) {\n        logger.debug(`Appended bytes for ${e.mediaType} and stream id ${e.streamId}`);\n\n        // we save the last initialized quality. That way we make sure that the media fragments we are about to append match the init segment\n        if (e.segmentType === HTTPRequest.INIT_SEGMENT_TYPE) {\n            const lastInitializedRepresentationId = e.representationId;\n            scheduleController.setLastInitializedRepresentationId(lastInitializedRepresentationId);\n            logger.info('[' + type + '] ' + 'lastInitializedRepresentationId changed to ' + lastInitializedRepresentationId);\n        }\n\n        if (pendingSwitchToVoRepresentation && pendingSwitchToVoRepresentation.enabled) {\n            _prepareForDefaultQualitySwitch(pendingSwitchToVoRepresentation.newRepresentation, pendingSwitchToVoRepresentation.oldRepresentation);\n        } else if (!trackSwitchInProgress) {\n            scheduleController.startScheduleTimer(0);\n        }\n    }\n\n    function _resetPendingSwitchToRepresentation() {\n        pendingSwitchToVoRepresentation = { newRepresentation: null, oldRepresentation: null, enabled: false };\n    }\n\n    /**\n     * Called once the StreamProcessor is initialized and when the track is switched. We only have one StreamProcessor per media type. So we need to adjust the mediaInfo once we switch/select a track.\n     * @param {MediaInfoSelectionInput} mediaInfoSelectionInput\n     */\n    function selectMediaInfo(mediaInfoSelectionInput) {\n        return new Promise((resolve) => {\n            if (!representationController) {\n                return Promise.resolve();\n            }\n\n            let selectedValues = null;\n\n            // Switching to a new AdaptationSet as part of a quality switch\n            if (mediaInfoSelectionInput.newRepresentation) {\n                selectedValues = _getTargetValuesForAdaptationSetQualitySwitch(mediaInfoSelectionInput);\n            }\n\n            // Switching to a new AS\n            else if ((currentMediaInfo === null || (!adapter.areMediaInfosEqual(currentMediaInfo, mediaInfoSelectionInput.newMediaInfo)))) {\n                selectedValues = _getTargetValuesForAdaptationSetSwitch(mediaInfoSelectionInput);\n            }\n\n            // MPD update quality remains the same\n            else {\n                selectedValues = _getTargetValuesForMpdUpdate(mediaInfoSelectionInput);\n            }\n\n            _setCurrentMediaInfo(selectedValues.currentMediaInfo);\n\n            eventBus.trigger()\n\n            // Update Representation Controller with the new data. Note we do not filter any Representations here as the filter values might change over time.\n            const voRepresentations = abrController.getPossibleVoRepresentations(currentMediaInfo, false);\n            return representationController.updateData(voRepresentations, currentMediaInfo.isFragmented, selectedValues.selectedRepresentation.id)\n                .then(() => {\n                    _onDataUpdateCompleted()\n                    resolve();\n                })\n                .catch((e) => {\n                    logger.error(e);\n                    resolve()\n                })\n\n        })\n    }\n\n    function _setCurrentMediaInfo(value) {\n        if (!adapter.areMediaInfosEqual(currentMediaInfo, value)) {\n            eventBus.trigger(MediaPlayerEvents.NEW_TRACK_SELECTED, {\n                value\n            });\n        }\n        currentMediaInfo = value;\n        abrController.handleNewMediaInfo(currentMediaInfo);\n        eventBus.trigger(Events.MEDIAINFO_UPDATED, {\n            mediaType: type,\n            streamId: streamInfo.id,\n            currentMediaInfo\n        });\n    }\n\n    function _getTargetValuesForAdaptationSetQualitySwitch(selectionInput) {\n        return {\n            selectedRepresentation: selectionInput.newRepresentation,\n            currentMediaInfo: selectionInput.newMediaInfo,\n        }\n    }\n\n    function _getTargetValuesForAdaptationSetSwitch(selectionInput) {\n        let bitrateInKbit = NaN;\n\n        // In case ABR was disabled and we got a selected Representation from the previous period we use a bitrate that is close to the one from the previous period\n        if (!settings.get().streaming.abr.autoSwitchBitrate[selectionInput.newMediaInfo.type] && selectionInput.previouslySelectedRepresentation) {\n            bitrateInKbit = selectionInput.previouslySelectedRepresentation.bitrateInKbit\n        } else {\n            bitrateInKbit = abrController.getInitialBitrateFor(type);\n        }\n\n        const selectedRepresentation = abrController.getOptimalRepresentationForBitrate(selectionInput.newMediaInfo, bitrateInKbit, false);\n        return {\n            selectedRepresentation,\n            currentMediaInfo: selectionInput.newMediaInfo\n        }\n    }\n\n    function _getTargetValuesForMpdUpdate(selectionInput) {\n        return {\n            currentMediaInfo: selectionInput.newMediaInfo,\n            selectedRepresentation: representationController.getCurrentRepresentation()\n        }\n    }\n\n    /**\n     * The quality has changed which means we have switched to a different representation.\n     * If we want to aggressively replace existing parts in the buffer we need to make sure that the new quality is higher than the already buffered one.\n     * @param {object} e\n     */\n    function prepareQualityChange(e) {\n        if (!e.newRepresentation) {\n            return;\n        }\n\n        if (pendingSwitchToVoRepresentation && pendingSwitchToVoRepresentation.enabled) {\n            logger.warn(`Canceling queued representation switch to ${pendingSwitchToVoRepresentation.newRepresentation.id} for ${type}`);\n        }\n\n        if (e.isAdaptationSetSwitch) {\n            logger.debug(`Preparing quality switch to different AdaptationSet for type ${type}`);\n            _prepareAdaptationSwitchQualityChange(e)\n        } else {\n            logger.debug(`Preparing quality within the same AdaptationSet for type ${type}`);\n            _prepareNonAdaptationSwitchQualityChange(e)\n        }\n    }\n\n    function _prepareNonAdaptationSwitchQualityChange(e) {\n        const newRepresentation = e.newRepresentation;\n\n        qualityChangeInProgress = true;\n\n        // Stop scheduling until we are done with preparing the quality switch\n        clearScheduleTimer();\n\n        // Update selected Representation in RepresentationController\n        representationController.prepareQualityChange(newRepresentation);\n\n        _handleDifferentSwitchTypes(e);\n    }\n\n    function _prepareAdaptationSwitchQualityChange(e) {\n        const newRepresentation = e.newRepresentation;\n\n        qualityChangeInProgress = true;\n\n        // Stop scheduling until we are done with preparing the quality switch\n        clearScheduleTimer();\n\n        // Informing ScheduleController about AS switch\n        scheduleController.setSwitchTrack(true);\n\n        const newMediaInfo = newRepresentation.mediaInfo;\n        _setCurrentMediaInfo(newMediaInfo);\n        const mediaInfoSelectionInput = new MediaInfoSelectionInput({ newMediaInfo, newRepresentation })\n        selectMediaInfo(mediaInfoSelectionInput)\n            .then(() => {\n                _handleDifferentSwitchTypes(e);\n            })\n    }\n\n    function _handleDifferentSwitchTypes(e) {\n        const newRepresentation = e.newRepresentation;\n        const oldRepresentation = e.oldRepresentation;\n\n        if (!newRepresentation || !oldRepresentation) {\n            logger.warn(`_handleDifferentSwitchTypes() is missing the target representations`);\n        }\n\n        // If the switch should occur immediately we need to replace existing stuff in the buffer\n        if (e.reason && e.reason.forceReplace) {\n            _prepareForForceReplacementQualitySwitch(newRepresentation, oldRepresentation);\n        }\n\n        // We abandoned a current request\n        else if (e && e.reason && e.reason.forceAbandon) {\n            _prepareForAbandonQualitySwitch(newRepresentation, oldRepresentation)\n        }\n\n        // If fast switch is enabled we check if we are supposed to replace existing stuff in the buffer\n        else if (mediaPlayerModel.getFastSwitchEnabled()) {\n            _prepareForFastQualitySwitch(newRepresentation, oldRepresentation);\n        }\n\n        // Default quality switch. We append the new quality to the already buffered stuff\n        else {\n            _prepareForDefaultQualitySwitch(newRepresentation, oldRepresentation);\n        }\n\n        dashMetrics.pushPlayListTraceMetrics(new Date(), PlayListTrace.REPRESENTATION_SWITCH_STOP_REASON);\n        dashMetrics.createPlaylistTraceMetrics(newRepresentation.id, playbackController.getTime() * 1000, playbackController.getPlaybackRate());\n    }\n\n    function _prepareForForceReplacementQualitySwitch(newPresentation, oldRepresentation) {\n\n        // Abort the current request to avoid inconsistencies and in case a rule such as AbandonRequestRule has forced a quality switch. A quality switch can also be triggered manually by the application.\n        // If we update the buffer values now, or initialize a request to the new init segment, the currently downloading media segment might use wrong values.\n        // Everything that is already in the buffer queue is ok and will be handled by the corresponding function below depending on the switch mode.\n        fragmentModel.abortRequests();\n\n        // Inform other classes like the GapController that we are replacing existing stuff\n        eventBus.trigger(Events.BUFFER_REPLACEMENT_STARTED, {\n            mediaType: type,\n            streamId: streamInfo.id\n        }, { mediaType: type, streamId: streamInfo.id });\n\n        scheduleController.setCheckPlaybackQuality(false);\n\n        // Abort appending segments to the buffer. Also adjust the appendWindow as we might have been in the progress of prebuffering stuff.\n        bufferController.prepareForForceReplacementQualitySwitch(newPresentation, oldRepresentation)\n            .then(() => {\n                _replacementQualitySwitchPreparationDone();\n            })\n            .catch(() => {\n                _replacementQualitySwitchPreparationDone();\n            });\n    }\n\n    function _replacementQualitySwitchPreparationDone() {\n        _bufferClearedForReplacement();\n        _resetPendingSwitchToRepresentation();\n        qualityChangeInProgress = false;\n    }\n\n    function _prepareForAbandonQualitySwitch(newRepresentation, oldRepresentation) {\n        bufferController.prepareForAbandonQualitySwitch(newRepresentation, oldRepresentation)\n            .then(() => {\n                _abandonQualitySwitchPreparationDone();\n            })\n            .catch(() => {\n                _abandonQualitySwitchPreparationDone();\n            })\n    }\n\n    function _abandonQualitySwitchPreparationDone() {\n        fragmentModel.abortRequests();\n        shouldRepeatRequest = true;\n        scheduleController.setCheckPlaybackQuality(false);\n        scheduleController.startScheduleTimer();\n        qualityChangeInProgress = false;\n    }\n\n    function _prepareForFastQualitySwitch(newRepresentation, oldRepresentation) {\n        // if we switch up in quality and need to replace existing parts in the buffer we need to adjust the buffer target\n        const time = playbackController.getTime();\n        let safeBufferLevel = 1.5 * (!isNaN(newRepresentation.fragmentDuration) ? newRepresentation.fragmentDuration : 1);\n        const request = fragmentModel.getRequests({\n            state: FragmentModel.FRAGMENT_MODEL_EXECUTED,\n            time: time + safeBufferLevel,\n            threshold: 0\n        })[0];\n\n        if (request && !currentMediaInfo.isText) {\n            const bufferLevel = bufferController.getBufferLevel();\n            const abandonmentState = abrController.getAbandonmentStateFor(streamInfo.id, type);\n\n            // The new quality is higher than the one we originally requested\n            if (request.bandwidth < newRepresentation.bandwidth && bufferLevel >= safeBufferLevel && abandonmentState === MetricsConstants.ALLOW_LOAD) {\n                bufferController.prepareForFastQualitySwitch(newRepresentation, oldRepresentation)\n                    .then(() => {\n                        _fastQualitySwitchPreparationDone(time, safeBufferLevel);\n                    })\n                    .catch(() => {\n                        _fastQualitySwitchPreparationDone(time, safeBufferLevel);\n                    })\n            }\n\n            // If we have buffered a higher quality we do not replace anything.\n            else {\n                _prepareForDefaultQualitySwitch(newRepresentation, oldRepresentation);\n            }\n        } else {\n            _prepareForDefaultQualitySwitch(newRepresentation, oldRepresentation);\n        }\n    }\n\n    function _fastQualitySwitchPreparationDone(time, safeBufferLevel) {\n        // Abort the current request to avoid inconsistencies. A quality switch can also be triggered manually by the application.\n        // If we update the buffer values now, or initialize a request to the new init segment, the currently downloading media segment might \"work\" with wrong values.\n        // Everything that is already in the buffer queue is ok\n        fragmentModel.abortRequests();\n        const targetTime = time + safeBufferLevel;\n        setExplicitBufferingTime(targetTime);\n        scheduleController.setCheckPlaybackQuality(false);\n        scheduleController.startScheduleTimer();\n        qualityChangeInProgress = false;\n    }\n\n    function _prepareForDefaultQualitySwitch(newRepresentation, oldRepresentation) {\n        // We are not canceling the current request. Check if there is still an ongoing request. If so we wait for the request to be finished and the media to be appended\n        const ongoingRequests = fragmentModel.getRequests({ state: FragmentModel.FRAGMENT_MODEL_LOADING })\n        if (ongoingRequests && ongoingRequests.length > 0) {\n            logger.debug('Preparing for default quality switch: Waiting for ongoing segment request to be finished before applying switch.')\n            pendingSwitchToVoRepresentation.newRepresentation = newRepresentation;\n            pendingSwitchToVoRepresentation.oldRepresentation = oldRepresentation;\n            pendingSwitchToVoRepresentation.enabled = true;\n            return;\n        }\n\n        bufferController.prepareForDefaultQualitySwitch(newRepresentation, oldRepresentation)\n            .then(() => {\n                _defaultQualitySwitchPreparationDone();\n            })\n            .catch(() => {\n                _defaultQualitySwitchPreparationDone();\n            })\n    }\n\n    function _defaultQualitySwitchPreparationDone() {\n        scheduleController.setCheckPlaybackQuality(false);\n        if (currentMediaInfo.segmentAlignment || currentMediaInfo.subSegmentAlignment) {\n            scheduleController.startScheduleTimer();\n        } else {\n            _bufferClearedForNonReplacement()\n        }\n        _resetPendingSwitchToRepresentation();\n        qualityChangeInProgress = false;\n    }\n\n\n    /**\n     * We have canceled the download of a fragment and need to adjust the buffer time or reload an init segment\n     * @param {object} e\n     */\n    function _onFragmentLoadingAbandoned(e) {\n        logger.info('onFragmentLoadingAbandoned request: ' + e.request.url + ' has been aborted');\n\n        // we only need to handle this if we are not seeking, not switching the tracks and not switching the quality\n        if (!playbackController.isSeeking() && !scheduleController.getSwitchTrack() && !qualityChangeInProgress) {\n            logger.info('onFragmentLoadingAbandoned request: ' + e.request.url + ' has to be downloaded again, origin is not seeking process or switch track call');\n\n            // in case of an init segment we force the download of an init segment\n            if (e.request && e.request.isInitializationRequest()) {\n                scheduleController.setInitSegmentRequired(true);\n            }\n\n            // in case of a media segment we reset the buffering time\n            else {\n                setExplicitBufferingTime(e.request.startTime + (e.request.duration / 2));\n            }\n\n            // In case of a seek the schedule controller was stopped and will be started once the buffer has been pruned.\n            scheduleController.startScheduleTimer(0);\n        }\n    }\n\n    /**\n     * When a fragment has been loaded we need to start the schedule timer again in case of an error.\n     * @param {object} e\n     */\n    function _onFragmentLoadingCompleted(e) {\n        logger.info('OnFragmentLoadingCompleted for stream id ' + streamInfo.id + ' and media type ' + type + ' - Url:', e.request ? e.request.url : 'undefined', e.request.range ? ', Range:' + e.request.range : '');\n\n        if (currentMediaInfo.isText) {\n            scheduleController.startScheduleTimer(0);\n        }\n\n        if (e.error && e.request.serviceLocation) {\n            _handleFragmentLoadingError(e);\n        }\n    }\n\n    /**\n     * If we encountered an error when loading the fragment we need to handle it according to the segment type\n     * @private\n     */\n    function _handleFragmentLoadingError(e) {\n        logger.info(`Fragment loading completed with an error`);\n\n        if (!e || !e.request || !e.request.type) {\n            return;\n        }\n\n        // In case there are baseUrls that can still be tried a valid request can be generated. If no valid request can be generated we ran out of baseUrls.\n        // Consequently, we need to signal that we dont want to retry in case no valid request could be generated otherwise we keep trying with the same url infinitely.\n\n        // Init segment could not be loaded. If we have multiple baseUrls we still have a chance to get a valid segment.\n        if (e.request.type === HTTPRequest.INIT_SEGMENT_TYPE) {\n            _onInitFragmentNeeded({\n                representationId: e.request.representation.id,\n                sender: {}\n            }, false)\n        }\n\n        // Media segment could not be loaded\n        else if (e.request.type === HTTPRequest.MEDIA_SEGMENT_TYPE) {\n            setExplicitBufferingTime(e.request.startTime + (e.request.duration / 2));\n            _onMediaFragmentNeeded({}, false);\n        }\n    }\n\n    /**\n     * Callback function triggered by the TextController whenever a track is changed for fragmented text. Will only be triggered if textracks have previously been disabled.\n     * @private\n     */\n    function _onSetFragmentedTextAfterDisabled() {\n        setExplicitBufferingTime(playbackController.getTime());\n        getScheduleController().startScheduleTimer();\n    }\n\n    /**\n     * Callback function triggered by the TextController whenever a track is changed for non fragmented text\n     * @param {object} e\n     * @private\n     */\n    function _onSetNonFragmentedText(e) {\n        const currentTrackInfo = e.currentTrackInfo;\n\n        if (!currentTrackInfo) {\n            return;\n        }\n\n        const newMediaInfo = mediaInfoArr.find((info) => {\n            return info.index === currentTrackInfo.index && info.lang === currentTrackInfo.lang;\n        });\n\n        if (newMediaInfo) {\n            selectMediaInfo(new MediaInfoSelectionInput({ newMediaInfo }))\n                .then(() => {\n                    bufferController.setIsBufferingCompleted(false);\n                    setExplicitBufferingTime(playbackController.getTime());\n                    scheduleController.setInitSegmentRequired(true);\n                    scheduleController.startScheduleTimer();\n                });\n        }\n    }\n\n    function _onQuotaExceeded(e) {\n        // Stop scheduler (will be restarted once buffer is pruned)\n        setExplicitBufferingTime(e.quotaExceededTime);\n        clearScheduleTimer();\n    }\n\n    function getRepresentationController() {\n        return representationController;\n    }\n\n    function getBuffer() {\n        return bufferController ? bufferController.getBuffer() : null;\n    }\n\n    function getBufferController() {\n        return bufferController;\n    }\n\n    function dischargePreBuffer() {\n        bufferController.dischargePreBuffer();\n    }\n\n    function getFragmentModel() {\n        return fragmentModel;\n    }\n\n    function updateStreamInfo(newStreamInfo) {\n        streamInfo = newStreamInfo;\n        if (!isBufferingCompleted()) {\n            return bufferController.updateAppendWindow();\n        }\n        return Promise.resolve();\n    }\n\n    function getStreamInfo() {\n        return streamInfo;\n    }\n\n    function getMediaInfo() {\n        return currentMediaInfo;\n    }\n\n    function getAllMediaInfos() {\n        return mediaInfoArr;\n    }\n\n    function getMediaSource() {\n        return bufferController.getMediaSource();\n    }\n\n    function setMediaSource(mediaSource) {\n        return bufferController.setMediaSource(mediaSource, currentMediaInfo);\n    }\n\n    function getScheduleController() {\n        return scheduleController;\n    }\n\n    function clearScheduleTimer() {\n        if (scheduleController) {\n            scheduleController.clearScheduleTimer();\n        }\n    }\n\n    /**\n     * Get a specific voRepresentation. If quality parameter is defined, this function will return the voRepresentation for this quality.\n     * Otherwise, this function will return the current voRepresentation used by the representationController.\n     * @param {number} id - id of the voRepresentation.\n     * @return {object} voRepresentation\n     */\n    function getRepresentation(id = NaN) {\n        let voRepresentation;\n\n        if (!isNaN(id)) {\n            checkInteger(id);\n            voRepresentation = representationController ? representationController.getRepresentationById(id) : null;\n        } else {\n            voRepresentation = representationController ? representationController.getCurrentRepresentation() : null;\n        }\n\n        return voRepresentation\n    }\n\n    function isBufferingCompleted() {\n        return bufferController ? bufferController.getIsBufferingCompleted() : false;\n    }\n\n    function getBufferLevel() {\n        return bufferController ? bufferController.getBufferLevel() : 0;\n    }\n\n    /**\n     * Probe the next request. This is used in the CMCD model to get information about the upcoming request. Note: No actual request is performed here.\n     * @return {FragmentRequest|null}\n     */\n    function probeNextRequest() {\n        const voRepresentation = getRepresentation();\n\n        return dashHandler.getNextSegmentRequestIdempotent(\n            currentMediaInfo,\n            voRepresentation\n        );\n    }\n\n    function _onInitFragmentLoaded(e) {\n        if (!settings.get().streaming.enableManifestTimescaleMismatchFix) {\n            return;\n        }\n        const chunk = e.chunk;\n        const bytes = chunk.bytes;\n        const representationId = chunk.representation.id;\n        const currentRepresentation = getRepresentation(representationId);\n        if (currentRepresentation) {\n            currentRepresentation.timescale = boxParser.getMediaTimescaleFromMoov(bytes);\n        }\n    }\n\n    function _onMediaFragmentLoaded(e) {\n        const chunk = e.chunk;\n        const bytes = chunk.bytes;\n        const representationId = chunk.representation.id;\n        const currentRepresentation = getRepresentation(representationId);\n        // If we switch tracks this event might be fired after the representations in the RepresentationController have been updated according to the new MediaInfo.\n        // In this case there will be no currentRepresentation and voRepresentation matching the \"old\" quality\n        if (currentRepresentation) {\n\n            let isoFile;\n\n            // Check for inband prft on media segment (if enabled)\n            if (settings.get().streaming.parseInbandPrft && e.request.type === HTTPRequest.MEDIA_SEGMENT_TYPE) {\n                isoFile = isoFile ? isoFile : boxParser.parse(bytes);\n                const timescale = currentRepresentation.timescale;\n                const prfts = _handleInbandPrfts(isoFile, timescale);\n                if (prfts && prfts.length) {\n                    eventBus.trigger(MediaPlayerEvents.INBAND_PRFT,\n                        { data: prfts },\n                        { streamId: streamInfo.id, mediaType: type }\n                    );\n                }\n            }\n\n            const eventStreamMedia = adapter.getEventsFor(currentRepresentation.mediaInfo, null, streamInfo);\n            const eventStreamTrack = adapter.getEventsFor(currentRepresentation, currentRepresentation, streamInfo);\n\n            if (eventStreamMedia && eventStreamMedia.length > 0 || eventStreamTrack && eventStreamTrack.length > 0) {\n                const request = e.request;\n\n                isoFile = isoFile ? isoFile : boxParser.parse(bytes);\n                const events = _handleInbandEvents(isoFile, request, eventStreamMedia, eventStreamTrack);\n                eventBus.trigger(Events.INBAND_EVENTS,\n                    { events: events },\n                    { streamId: streamInfo.id }\n                );\n            }\n        }\n    }\n\n    function _handleInbandPrfts(isoFile, timescale) {\n        const prftBoxes = isoFile.getBoxes('prft');\n\n        const prfts = [];\n        prftBoxes.forEach(prft => {\n            prfts.push(_parsePrftBox(prft, timescale));\n        });\n\n        return prfts;\n    }\n\n    function _parsePrftBox(prft, timescale) {\n        // Get prft type according to box flags\n        let type = 'unknown';\n        switch (prft.flags) {\n            case 0:\n                type = DashConstants.PRODUCER_REFERENCE_TIME_TYPE.ENCODER;\n                break;\n            case 16:\n                type = DashConstants.PRODUCER_REFERENCE_TIME_TYPE.APPLICATION;\n                break;\n            case 24:\n                type = DashConstants.PRODUCER_REFERENCE_TIME_TYPE.CAPTURED;\n                break;\n            default:\n                break;\n        }\n\n        // Get NPT timestamp according to IETF RFC 5905, relative to 1/1/1900\n        let ntpTimestamp = (prft.ntp_timestamp_sec * 1000) + (prft.ntp_timestamp_frac / 2 ** 32 * 1000);\n        ntpTimestamp = TimeUtils(context).getInstance().ntpToUTC(ntpTimestamp);\n\n        const mediaTime = (prft.media_time / timescale);\n\n        return {\n            type,\n            ntpTimestamp,\n            mediaTime\n        }\n    }\n\n    function _handleInbandEvents(isoFile, request, mediaInbandEvents, trackInbandEvents) {\n        try {\n            const eventStreams = {};\n            const events = [];\n\n            /* Extract the possible schemeIdUri : If a DASH client detects an event message box with a scheme that is not defined in MPD, the client is expected to ignore it */\n            const inbandEvents = mediaInbandEvents.concat(trackInbandEvents);\n            for (let i = 0, ln = inbandEvents.length; i < ln; i++) {\n                eventStreams[inbandEvents[i].schemeIdUri + '/' + inbandEvents[i].value] = inbandEvents[i];\n            }\n\n            const eventBoxes = isoFile.getBoxes('emsg');\n\n            if (!eventBoxes || eventBoxes.length === 0) {\n                return events;\n            }\n\n            const sidx = isoFile.getBox('sidx');\n            const mediaAnchorTime = sidx && !isNaN(sidx.earliest_presentation_time) && !isNaN(sidx.timescale) ? sidx.earliest_presentation_time / sidx.timescale : request && !isNaN(request.mediaStartTime) ? request.mediaStartTime : 0;\n            const fragmentMediaStartTime = Math.max(mediaAnchorTime, 0);\n            const voRepresentation = representationController.getCurrentRepresentation();\n\n            for (let i = 0, ln = eventBoxes.length; i < ln; i++) {\n                const event = adapter.getEvent(eventBoxes[i], eventStreams, fragmentMediaStartTime, voRepresentation);\n\n                if (event) {\n                    events.push(event);\n                }\n            }\n\n            return events;\n        } catch (e) {\n            return [];\n        }\n    }\n\n    function createBufferSinks(previousBufferSinks, oldRepresentation) {\n        const buffer = getBuffer();\n\n        if (buffer) {\n            return Promise.resolve(buffer);\n        }\n\n        return bufferController ? bufferController.createBufferSink(currentMediaInfo, previousBufferSinks, oldRepresentation) : Promise.resolve(null);\n    }\n\n    function prepareTrackSwitch(oldRepresentation, replaceBuffer = false) {\n        return new Promise((resolve) => {\n            logger.debug(`Preparing track switch for type ${type}`);\n            const shouldReplace =\n                type === Constants.TEXT ||\n                replaceBuffer ||\n                (settings.get().streaming.trackSwitchMode[type] === Constants.TRACK_SWITCH_MODE_ALWAYS_REPLACE && playbackController.getTimeToStreamEnd(streamInfo) > settings.get().streaming.buffer.stallThreshold);\n\n            // when buffering is completed and we are not supposed to replace anything do nothing.\n            // Still we need to trigger preloading again and call change type in case user seeks back before transitioning to next period\n            if (bufferController.getIsBufferingCompleted() && !shouldReplace) {\n                _handleBufferingCompleteTrackSwitch(oldRepresentation)\n                    .then(() => {\n                        resolve();\n                    })\n            } else {\n                // We stop the schedule controller and signal a track switch. That way we request a new init segment next\n                scheduleController.setSwitchTrack(true);\n                // when we are supposed to replace it does not matter if buffering is already completed\n                if (shouldReplace) {\n                    _handleReplaceTrackSwitch(oldRepresentation)\n                        .then(() => {\n                            resolve();\n                        })\n                } else {\n                    // We do not replace anything that is already in the buffer. Still we need to prepare the buffer for the track switch\n                    _handleNoReplaceTrackSwitch(oldRepresentation)\n                        .then(() => {\n                            resolve();\n                        })\n                }\n            }\n        })\n    }\n\n    function _handleBufferingCompleteTrackSwitch(oldRepresentation) {\n        return new Promise((resolve) => {\n            const newRepresentation = representationController.getCurrentRepresentation()\n            bufferController.prepareForNonReplacementTrackSwitch(newRepresentation, oldRepresentation)\n                .then(() => {\n                    eventBus.trigger(Events.BUFFERING_COMPLETED, {}, { streamId: streamInfo.id, mediaType: type })\n                    resolve();\n                })\n                .catch(() => {\n                    eventBus.trigger(Events.BUFFERING_COMPLETED, {}, { streamId: streamInfo.id, mediaType: type })\n                    resolve();\n                })\n        })\n    }\n\n    function _handleReplaceTrackSwitch(oldRepresentation) {\n        return new Promise((resolve) => {\n            // Inform other classes like the GapController that we are replacing existing stuff\n            eventBus.trigger(Events.BUFFER_REPLACEMENT_STARTED, {\n                mediaType: type,\n                streamId: streamInfo.id\n            }, { mediaType: type, streamId: streamInfo.id });\n\n            // Abort the current request it will be removed from the buffer anyways\n            fragmentModel.abortRequests();\n\n            // Abort appending segments to the buffer. Also adjust the appendWindow as we might have been in the progress of prebuffering stuff.\n            const newRepresentation = getRepresentation()\n            bufferController.prepareForReplacementTrackSwitch(newRepresentation, oldRepresentation)\n                .then(() => {\n                    _bufferClearedForReplacement();\n                    resolve();\n                })\n                .catch(() => {\n                    _bufferClearedForReplacement();\n                    resolve();\n                });\n        })\n    }\n\n    function _handleNoReplaceTrackSwitch(oldRepresentation) {\n        return new Promise((resolve) => {\n            // As long as we have ongoing requests we can not change the SourceBuffer type etc.\n            // Otherwise, we might run into cases in which we append the segment that is currently being downloaded with wrong SourceBuffer values.\n            // The ScheduleController was stopped. Once a potentially ongoing request was finished we can continue\n\n            const _finishNoReplaceTrackSwitch = () => {\n                const ongoingRequests = fragmentModel.getRequests({ state: FragmentModel.FRAGMENT_MODEL_LOADING });\n                if (!ongoingRequests || ongoingRequests.length === 0) {\n                    const newRepresentation = getRepresentation()\n                    bufferController.prepareForNonReplacementTrackSwitch(newRepresentation, oldRepresentation)\n                        .then(() => {\n                            _bufferClearedForNonReplacement();\n                            resolve();\n                        })\n                        .catch((e) => {\n                            logger.error(e);\n                            _bufferClearedForNonReplacement();\n                            resolve();\n                        });\n                } else {\n                    eventBus.once(MediaPlayerEvents.FRAGMENT_LOADING_COMPLETED, _finishNoReplaceTrackSwitch, instance);\n                }\n            }\n\n            _finishNoReplaceTrackSwitch();\n        })\n    }\n\n\n    /**\n     * For an instant track switch we need to adjust the buffering time after the buffer has been pruned.\n     * @private\n     */\n    function _bufferClearedForReplacement() {\n        const targetTime = playbackController.getTime();\n\n        if (settings.get().streaming.buffer.flushBufferAtTrackSwitch) {\n            // For some devices (like chromecast) it is necessary to seek the video element to reset the internal decoding buffer,\n            // otherwise audio track switch will be effective only once after previous buffered track is consumed\n            playbackController.seek(targetTime + 0.001, false, true);\n        }\n\n        setExplicitBufferingTime(targetTime);\n        bufferController.setSeekTarget(targetTime);\n        scheduleController.startScheduleTimer();\n    }\n\n    function _bufferClearedForNonReplacement() {\n        const time = playbackController.getTime();\n        const continuousBufferTime = bufferController.getContinuousBufferTimeForTargetTime(time);\n        const targetTime = isNaN(continuousBufferTime) ? time : continuousBufferTime;\n\n        setExplicitBufferingTime(targetTime);\n        scheduleController.startScheduleTimer();\n    }\n\n    function _createBufferControllerForType(type, isFragmented) {\n        let controller = null;\n\n        if (!type) {\n            errHandler.error(new DashJSError(Errors.MEDIASOURCE_TYPE_UNSUPPORTED_CODE, Errors.MEDIASOURCE_TYPE_UNSUPPORTED_MESSAGE + 'not properly defined'));\n            return null;\n        }\n\n        if (type === Constants.TEXT && !isFragmented) {\n            controller = NotFragmentedTextBufferController(context).create({\n                errHandler,\n                fragmentModel,\n                mimeType,\n                settings,\n                streamInfo,\n                textController,\n                type,\n            });\n        } else {\n            controller = BufferController(context).create({\n                abrController,\n                capabilities,\n                errHandler,\n                fragmentModel,\n                manifestModel,\n                mediaController,\n                mediaPlayerModel,\n                playbackController,\n                representationController,\n                settings,\n                streamInfo,\n                textController,\n                type,\n            });\n        }\n\n        return controller;\n    }\n\n    function _onSeekTarget(e) {\n        if (e && !isNaN(e.time)) {\n            setExplicitBufferingTime(e.time);\n            bufferController.setSeekTarget(e.time);\n        }\n    }\n\n    function setExplicitBufferingTime(value) {\n        bufferingTime = value;\n        shouldUseExplicitTimeForRequest = true;\n    }\n\n    function setTrackSwitchInProgress(value) {\n        trackSwitchInProgress = value;\n    }\n\n    function finalisePlayList(time, reason) {\n        dashMetrics.pushPlayListTraceMetrics(time, reason);\n    }\n\n    instance = {\n        checkAndHandleCompletedBuffering,\n        clearScheduleTimer,\n        createBufferSinks,\n        dischargePreBuffer,\n        finalisePlayList,\n        getAllMediaInfos,\n        getBuffer,\n        getBufferController,\n        getBufferLevel,\n        getFragmentModel,\n        getMediaInfo,\n        getMediaSource,\n        getRepresentation,\n        getRepresentationController,\n        getScheduleController,\n        getStreamId,\n        getStreamInfo,\n        getType,\n        initialize,\n        isBufferingCompleted,\n        prepareInnerPeriodPlaybackSeeking,\n        prepareOuterPeriodPlaybackSeeking,\n        prepareQualityChange,\n        prepareTrackSwitch,\n        probeNextRequest,\n        reset,\n        selectMediaInfo,\n        setExplicitBufferingTime,\n        setMediaInfoArray,\n        setMediaSource,\n        setTrackSwitchInProgress,\n        updateStreamInfo,\n    };\n\n    setup();\n\n    return instance;\n}\n\nStreamProcessor.__dashjs_factory_name = 'StreamProcessor';\nexport default FactoryMaker.getClassFactory(StreamProcessor);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * @class\n * @ignore\n */\nclass DataChunk {\n    //Represents a data structure that keep all the necessary info about a single init/media segment\n    constructor() {\n        this.streamId = null;\n        this.segmentType = null;\n        this.quality = NaN;\n        this.index = NaN;\n        this.bytes = null;\n        this.start = NaN;\n        this.end = NaN;\n        this.duration = NaN;\n        this.representation = null;\n        this.endFragment = null;\n    }\n}\n\nexport default DataChunk;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport FactoryMaker from '../../core/FactoryMaker.js';\nimport Utils from '../../core/Utils.js';\n\n/**\n * @module XHRLoader\n * @ignore\n * @description Manages download of resources via HTTP.\n */\nfunction XHRLoader() {\n\n    let instance;\n    let xhr;\n\n    /**\n     * Load request\n     * @param {CommonMediaRequest} commonMediaRequest\n     * @param {CommonMediaResponse} commonMediaResponse\n     */\n    function load(commonMediaRequest, commonMediaResponse) {\n        xhr = null;\n        xhr = new XMLHttpRequest();\n        xhr.open(commonMediaRequest.method, commonMediaRequest.url, true);\n\n        if (commonMediaRequest.responseType) {\n            xhr.responseType = commonMediaRequest.responseType;\n        }\n\n        if (commonMediaRequest.headers) {\n            for (let header in commonMediaRequest.headers) {\n                let value = commonMediaRequest.headers[header];\n                if (value) {\n                    xhr.setRequestHeader(header, value);\n                }\n            }\n        }\n\n        xhr.withCredentials = commonMediaRequest.credentials === 'include';\n        xhr.timeout = commonMediaRequest.timeout;\n\n        xhr.onload = function () {\n            commonMediaResponse.url = this.responseURL;\n            commonMediaResponse.status = this.status;\n            commonMediaResponse.statusText = this.statusText;\n            commonMediaResponse.headers = Utils.parseHttpHeaders(this.getAllResponseHeaders());\n            commonMediaResponse.data = this.response;\n        }\n        xhr.onloadend = commonMediaRequest.customData.onloadend;\n        xhr.onprogress = commonMediaRequest.customData.onprogress;\n        xhr.onabort = commonMediaRequest.customData.onabort;\n        xhr.ontimeout = commonMediaRequest.customData.ontimeout;\n\n        xhr.send();\n\n        commonMediaRequest.customData.abort = abort.bind(this);\n        return true;\n    }\n\n    function abort() {\n        if (xhr) {\n            xhr.onloadend = xhr.onerror = xhr.onprogress = xhr.onload = null; // Remove event listeners\n            xhr.abort();\n            xhr = null;\n        }\n    }\n\n    function getXhr() {\n        return xhr\n    }\n\n    function resetInitialSettings() {\n        abort();\n    }\n\n    function reset() {\n        abort();\n        instance = null;\n    }\n\n    instance = {\n        load,\n        abort,\n        getXhr,\n        reset,\n        resetInitialSettings\n    };\n\n    return instance;\n}\n\nXHRLoader.__dashjs_factory_name = 'XHRLoader';\n\nconst factory = FactoryMaker.getClassFactory(XHRLoader);\nexport default factory;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport FactoryMaker from '../../core/FactoryMaker.js';\nimport Settings from '../../core/Settings.js';\nimport Constants from '../constants/Constants.js';\nimport Debug from '../../core/Debug.js';\n\n/**\n * @module FetchLoader\n * @ignore\n * @description Manages download of resources via HTTP using fetch.\n */\nfunction FetchLoader() {\n\n    const context = this.context;\n    const settings = Settings(context).getInstance();\n    let instance, boxParser, logger;\n\n    function setConfig(cfg) {\n        boxParser = cfg.boxParser\n    }\n\n    function setup() {\n        logger = Debug(context).getInstance().getLogger(instance);\n    }\n\n    /**\n     * Load request\n     * With HTTP responses that use chunked transfer encoding, the promise returned by fetch will resolve as soon as the response's headers are received.\n     * @param {CommonMediaRequest} commonMediaRequest\n     * @param {CommonMediaResponse} commonMediaResponse\n     */\n    function load(commonMediaRequest, commonMediaResponse) {\n        const headers = _getHeaders(commonMediaRequest);\n        const abortController = _setupAbortMechanism(commonMediaRequest);\n        const fetchResourceRequestObject = _getFetchResourceRequestObject(commonMediaRequest, headers, abortController);\n\n        fetch(fetchResourceRequestObject)\n            .then((fetchResponse) => {\n                _handleFetchResponse(fetchResponse, commonMediaRequest, commonMediaResponse);\n            })\n            .catch(() => {\n                _handleFetchError(commonMediaRequest);\n            })\n    }\n\n    function _handleFetchResponse(fetchResponse, commonMediaRequest, commonMediaResponse) {\n        _updateCommonMediaResponseInstance(commonMediaResponse, fetchResponse);\n\n        if (!fetchResponse.ok) {\n            commonMediaRequest.customData.onloadend();\n        }\n\n        let totalBytesReceived = 0;\n        let signaledFirstByte = false;\n        let receivedData = new Uint8Array();\n        let endPositionOfLastProcessedBoxInReceivedData = 0;\n\n        commonMediaRequest.customData.reader = fetchResponse.body.getReader();\n        let downloadedData = [];\n        let moofStartTimeData = [];\n        let mdatEndTimeData = [];\n        let lastChunkWasFinished = true;\n\n        const calculationMode = settings.get().streaming.abr.throughput.lowLatencyDownloadTimeCalculationMode;\n\n        /**\n         * Callback function for ReadableStreamDefaultReader\n         * @param value - chunk data. Always undefined when done is true.\n         * @param done - true if the stream has already given you all its data.\n         */\n        const _processResult = ({ value, done }) => {\n\n            if (done) {\n                _handleRequestComplete()\n                return;\n            }\n\n            if (value && value.length > 0) {\n                _handleReceivedChunkData(value)\n            }\n\n            _readResponseBody(commonMediaRequest, commonMediaResponse, _processResult);\n        };\n\n        /**\n         * Once a request is completed throw final progress event with the calculated bytes and download time\n         * @private\n         */\n        function _handleRequestComplete() {\n            if (receivedData) {\n                const calculatedDownloadTime = _calculateDownloadTime();\n\n                // In this case we push an entry to the traces.\n                // This is the only entry we push as the other calls to onprogress use noTrace = true\n                commonMediaRequest.customData.onprogress({\n                    loaded: totalBytesReceived,\n                    total: totalBytesReceived,\n                    lengthComputable: true,\n                    time: calculatedDownloadTime\n                });\n\n                commonMediaResponse.data = receivedData.buffer;\n            }\n            commonMediaRequest.customData.onloadend();\n        }\n\n        function _calculateDownloadTime() {\n            // If there is pending data, call progress so network metrics\n            // are correctly generated\n            // Same structure as https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequestEventTarget/\n            let downloadTime = null;\n            if (calculationMode === Constants.LOW_LATENCY_DOWNLOAD_TIME_CALCULATION_MODE.MOOF_PARSING) {\n                downloadTime = _getDownloadTimeForMoofParsing();\n            } else if (calculationMode === Constants.LOW_LATENCY_DOWNLOAD_TIME_CALCULATION_MODE.DOWNLOADED_DATA) {\n                downloadTime = _getDownloadTimeForDownloadedData()\n            }\n\n            return downloadTime;\n        }\n\n        function _getDownloadTimeForMoofParsing() {\n            const calculatedThroughput = _calculateThroughputByMoofMdatTimes(moofStartTimeData, mdatEndTimeData);\n\n            if (calculatedThroughput) {\n                return totalBytesReceived * 8 / calculatedThroughput;\n            }\n\n            return null;\n        }\n\n        function _getDownloadTimeForDownloadedData() {\n            return calculateDownloadedTime(downloadedData, totalBytesReceived);\n        }\n\n        /**\n         * Called every time we received data if the request is not completed\n         * @param value\n         * @private\n         */\n        function _handleReceivedChunkData(value) {\n            receivedData = _concatTypedArray(receivedData, value);\n            totalBytesReceived += value.length;\n\n            downloadedData.push({\n                timestamp: _getCurrentTimestamp(),\n                bytes: value.length\n            });\n\n            if (calculationMode === Constants.LOW_LATENCY_DOWNLOAD_TIME_CALCULATION_MODE.MOOF_PARSING && lastChunkWasFinished) {\n                _findMoofBoxInChunkData();\n            }\n\n            const boxesInfo = boxParser.findLastTopIsoBoxCompleted(['moov', 'mdat'], receivedData, endPositionOfLastProcessedBoxInReceivedData);\n            if (boxesInfo.found) {\n                _handleTopIsoBoxCompleted(boxesInfo);\n            } else {\n                _handleNoCompletedTopIsoBox(boxesInfo);\n            }\n        }\n\n        function _findMoofBoxInChunkData() {\n            const boxesInfo = boxParser.findLastTopIsoBoxCompleted(['moof'], receivedData, endPositionOfLastProcessedBoxInReceivedData);\n\n            if (boxesInfo.found) {\n                lastChunkWasFinished = false;\n                moofStartTimeData.push({\n                    timestamp: _getCurrentTimestamp()\n                });\n            }\n        }\n\n        function _handleTopIsoBoxCompleted(boxesInfo) {\n            const endPositionOfLastTargetBox = boxesInfo.startOffsetOfLastFoundTargetBox + boxesInfo.sizeOfLastFoundTargetBox;\n            const data = _getDataForMediaSourceBufferAndAdjustReceivedData(endPositionOfLastTargetBox);\n\n            // Store the end time of each chunk download  with its size in array EndTimeData\n            if (calculationMode === Constants.LOW_LATENCY_DOWNLOAD_TIME_CALCULATION_MODE.MOOF_PARSING && !lastChunkWasFinished) {\n                lastChunkWasFinished = true;\n                mdatEndTimeData.push({\n                    timestamp: _getCurrentTimestamp(),\n                    bytes: data.length\n                });\n            }\n\n            // Announce progress but don't track traces. Throughput measures are quite unstable\n            // when they are based in small amount of data\n            commonMediaRequest.customData.onprogress({\n                data: data.buffer,\n                lengthComputable: false,\n                noTrace: true\n            });\n\n            endPositionOfLastProcessedBoxInReceivedData = 0;\n        }\n\n        /**\n         * Make the data that we received available for playback\n         * If we are going to pass full buffer, avoid copying it and pass\n         * complete buffer. Otherwise, clone the part of the buffer that is completed\n         * and adjust remaining buffer. A clone is needed because ArrayBuffer of a typed-array\n         * keeps a reference to the original data\n         * @param endPositionOfLastTargetBox\n         * @returns {Uint8Array}\n         * @private\n         */\n        function _getDataForMediaSourceBufferAndAdjustReceivedData(endPositionOfLastTargetBox) {\n            let data;\n\n            if (endPositionOfLastTargetBox === receivedData.length) {\n                data = receivedData;\n                receivedData = new Uint8Array();\n            } else {\n                data = new Uint8Array(receivedData.subarray(0, endPositionOfLastTargetBox));\n                receivedData = receivedData.subarray(endPositionOfLastTargetBox);\n            }\n\n            return data\n        }\n\n        function _handleNoCompletedTopIsoBox(boxesInfo) {\n            endPositionOfLastProcessedBoxInReceivedData = boxesInfo.startOffsetOfLastCompletedBox + boxesInfo.sizeOfLastCompletedBox;\n            // Call progress, so it generates traces that will be later used to know when the first byte\n            // were received\n            if (!signaledFirstByte) {\n                commonMediaRequest.customData.onprogress({\n                    lengthComputable: false,\n                    noTrace: true\n                });\n                signaledFirstByte = true;\n            }\n        }\n\n        _readResponseBody(commonMediaRequest, commonMediaResponse, _processResult);\n    }\n\n    /**\n     * Reads the response of the request. For details refer to https://developer.mozilla.org/en-US/docs/Web/API/ReadableStreamDefaultReader/read\n     * @param {CommonMediaRequest} commonMediaRequest\n     * @param {CommonMediaResponse} commonMediaResponse\n     * @param processResult\n     * @private\n     */\n    function _readResponseBody(commonMediaRequest, commonMediaResponse, processResult) {\n        commonMediaRequest.customData.reader.read()\n            .then(processResult)\n            .catch(function () {\n                _handleFetchError(commonMediaRequest);\n            });\n    }\n\n    function _handleFetchError(commonMediaRequest) {\n        if (commonMediaRequest.customData.onloadend) {\n            commonMediaRequest.customData.onloadend();\n        }\n    }\n\n    function _updateCommonMediaResponseInstance(commonMediaResponse, fetchResponse) {\n        commonMediaResponse.status = fetchResponse.status;\n        commonMediaResponse.statusText = fetchResponse.statusText;\n        commonMediaResponse.url = fetchResponse.url;\n\n        const responseHeaders = {};\n        for (const key of fetchResponse.headers.keys()) {\n            responseHeaders[key] = fetchResponse.headers.get(key);\n        }\n        commonMediaResponse.headers = responseHeaders;\n    }\n\n    function _getHeaders(commonMediaRequest) {\n        const headers = new Headers();\n\n        if (commonMediaRequest.headers) {\n            for (let header in commonMediaRequest.headers) {\n                let value = commonMediaRequest.headers[header];\n                if (value) {\n                    headers.append(header, value);\n                }\n            }\n        }\n\n        return headers\n    }\n\n    function _setupAbortMechanism(commonMediaRequest) {\n        let abortController;\n\n        if (typeof window.AbortController === 'function') {\n            abortController = new AbortController();\n            commonMediaRequest.customData.abortController = abortController;\n            abortController.signal.onabort = commonMediaRequest.customData.onabort;\n        }\n\n        commonMediaRequest.customData.abort = abort.bind(commonMediaRequest);\n\n        return abortController\n    }\n\n    function _getFetchResourceRequestObject(commonMediaRequest, headers, abortController) {\n        const fetchResourceRequestObject = new Request(commonMediaRequest.url, {\n            method: commonMediaRequest.method,\n            headers: headers,\n            credentials: commonMediaRequest.credentials,\n            signal: abortController ? abortController.signal : undefined\n        });\n\n        return fetchResourceRequestObject\n    }\n\n    function _getCurrentTimestamp() {\n        if (typeof performance !== 'undefined' && typeof performance.now === 'function') {\n            return performance.now();\n        } else {\n            return Date.now();\n        }\n    }\n\n    /**\n     * Creates a new Uint8 array and adds the existing data as well as new data\n     * @param receivedData\n     * @param data\n     * @returns {Uint8Array|*}\n     * @private\n     */\n    function _concatTypedArray(receivedData, data) {\n        if (receivedData.length === 0) {\n            return data;\n        }\n        const result = new Uint8Array(receivedData.length + data.length);\n        result.set(receivedData);\n\n        // set(typedarray, targetOffset)\n        result.set(data, receivedData.length);\n\n        return result;\n    }\n\n    /**\n     * Use the AbortController to abort a request\n     * @param request\n     */\n    function abort() {\n        // this = httpRequest (CommonMediaRequest)\n        if (this.customData.abortController) {\n            // For firefox and edge\n            this.customData.abortController.abort();\n        } else if (this.customData.reader) {\n            // For Chrome\n            try {\n                this.customData.reader.cancel();\n                this.onabort();\n            } catch (e) {\n                // throw exceptions (TypeError) when reader was previously closed,\n                // for example, because a network issue\n            }\n        }\n    }\n\n    function reset() {\n\n    }\n\n    /**\n     * Default throughput calculation\n     * @param downloadedData\n     * @param bytesReceived\n     * @returns {number|null}\n     * @private\n     */\n    function calculateDownloadedTime(downloadedData, bytesReceived) {\n        try {\n            downloadedData = downloadedData.filter(data => data.bytes > ((bytesReceived / 4) / downloadedData.length));\n            if (downloadedData.length > 1) {\n                let time = 0;\n                const avgTimeDistance = (downloadedData[downloadedData.length - 1].timestamp - downloadedData[0].timestamp) / downloadedData.length;\n                downloadedData.forEach((data, index) => {\n                    // To be counted the data has to be over a threshold\n                    const next = downloadedData[index + 1];\n                    if (next) {\n                        const distance = next.timestamp - data.timestamp;\n                        time += distance < avgTimeDistance ? distance : 0;\n                    }\n                });\n                return time;\n            }\n            return null;\n        } catch (e) {\n            return null;\n        }\n    }\n\n    function _calculateThroughputByMoofMdatTimes(moofStartTimeData, mdatEndTimeData) {\n        try {\n            let filteredMoofStartTimeData,\n                filteredMdatEndTimeData;\n\n            // Filter the last chunks in a segment in both arrays [StartTimeData and EndTimeData]\n            filteredMoofStartTimeData = moofStartTimeData.slice(0, -1);\n            filteredMdatEndTimeData = mdatEndTimeData.slice(0, -1);\n\n            if (filteredMoofStartTimeData.length !== filteredMdatEndTimeData.length) {\n                logger.warn(`[FetchLoader] Moof and Mdat data arrays have different lengths. Moof: ${filteredMoofStartTimeData.length}, Mdat: ${filteredMdatEndTimeData.length}`);\n            }\n\n            if (filteredMoofStartTimeData.length <= 1) {\n                return null;\n            }\n\n            let chunkThroughputValues = [];\n            let shortDurationBytesReceived = 0;\n            let shortDurationStartTime = 0;\n\n            for (let i = 0; i < filteredMoofStartTimeData.length; i++) {\n                if (filteredMoofStartTimeData[i] && filteredMdatEndTimeData[i]) {\n                    let chunkDownloadTime = filteredMdatEndTimeData[i].timestamp - filteredMoofStartTimeData[i].timestamp;\n                    if (chunkDownloadTime > 1) {\n                        const throughput = _getThroughputInBitPerMs(filteredMdatEndTimeData[i].bytes, chunkDownloadTime);\n                        chunkThroughputValues.push(throughput);\n                        shortDurationStartTime = 0;\n                    } else {\n                        if (shortDurationStartTime === 0) {\n                            shortDurationStartTime = filteredMoofStartTimeData[i].timestamp;\n                            shortDurationBytesReceived = 0;\n                        }\n                        let cumulatedChunkDownloadTime = filteredMdatEndTimeData[i].timestamp - shortDurationStartTime;\n                        if (cumulatedChunkDownloadTime > 1) {\n                            shortDurationBytesReceived += filteredMdatEndTimeData[i].bytes;\n                            const throughput = _getThroughputInBitPerMs(shortDurationBytesReceived, cumulatedChunkDownloadTime);\n                            chunkThroughputValues.push(throughput);\n                            shortDurationStartTime = 0;\n                        } else {\n                            // continue cumulating short duration data\n                            shortDurationBytesReceived += filteredMdatEndTimeData[i].bytes;\n                        }\n                    }\n                }\n            }\n\n            if (chunkThroughputValues.length > 0) {\n                const sumOfChunkThroughputValues = chunkThroughputValues.reduce((a, b) => a + b, 0);\n                return sumOfChunkThroughputValues / chunkThroughputValues.length;\n            }\n\n            return null;\n        } catch (e) {\n            return null;\n        }\n    }\n\n    function _getThroughputInBitPerMs(bytes, timeInMs) {\n        return (8 * bytes) / timeInMs\n    }\n\n    setup();\n\n    instance = {\n        abort,\n        calculateDownloadedTime,\n        load,\n        reset,\n        setConfig,\n    };\n\n    return instance;\n}\n\nFetchLoader.__dashjs_factory_name = 'FetchLoader';\n\nconst factory = FactoryMaker.getClassFactory(FetchLoader);\nexport default factory;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nclass AdaptationSet {\n    constructor() {\n        this.period = null;\n        this.index = -1;\n        this.type = null;\n    }\n}\n\nexport default AdaptationSet;","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\n\nconst DEFAULT_DVB_PRIORITY = 1;\nconst DEFAULT_DVB_WEIGHT = 1;\n\nclass BaseURL {\n    constructor(url, serviceLocation, priority, weight) {\n        this.url = url || '';\n        this.serviceLocation = serviceLocation || url || '';\n\n        // DVB extensions\n        this.dvbPriority = priority || DEFAULT_DVB_PRIORITY;\n        this.dvbWeight = weight || DEFAULT_DVB_WEIGHT;\n\n        this.availabilityTimeOffset = 0;\n        this.availabilityTimeComplete = true;\n        this.queryParams = {}; // This is an attribute that might be set when synthesizing BaseURLs with content steering\n\n        /* currently unused:\n         * byteRange,\n         */\n    }\n}\n\nBaseURL.DEFAULT_DVB_PRIORITY = DEFAULT_DVB_PRIORITY;\nBaseURL.DEFAULT_DVB_WEIGHT = DEFAULT_DVB_WEIGHT;\n\nexport default BaseURL;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2023, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nimport DashConstants from '../constants/DashConstants.js'\n\nclass DescriptorType {\n    constructor() {\n        this.schemeIdUri = null;\n        this.value = null;\n        this.id = null;\n    }\n\n    init(data) {\n        if (data) {\n            this.schemeIdUri = data.schemeIdUri ? data.schemeIdUri : null;\n            this.value = data.value ? data.value.toString() : null;\n            this.id = data.id ? data.id : null;\n            // Only add the DVB extensions if they exist\n            if (data[DashConstants.DVB_URL]) {\n                this.dvbUrl = data[DashConstants.DVB_URL]\n            }\n            if (data[DashConstants.DVB_MIMETYPE]) {\n                this.dvbMimeType = data[DashConstants.DVB_MIMETYPE]\n            }\n            if (data[DashConstants.DVB_FONTFAMILY]) {\n                this.dvbFontFamily = data[DashConstants.DVB_FONTFAMILY]\n            }\n        }\n    }\n\n    inArray(arr) {\n        if (arr) {\n            return arr.some((entry) => {\n                return (\n                    this.schemeIdUri === entry.schemeIdUri && (\n                        this.value ?\n                            (this.value.toString().match(entry.value)) : // check if provided value matches RegExp\n                            (''.match(entry.value)) // check if RegExp allows absent value   \n                    )\n                );\n            })\n        }\n        return false;\n    }\n}\n\nexport default DescriptorType;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2024, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport DescriptorType from './DescriptorType.js';\n\n/**\n * @class\n * @ignore\n */\nclass CMCDParameters extends DescriptorType {\n    constructor() {\n        super();\n        this.version = null;\n        this.sessionID = null;\n        this.contentID = null;\n        this.mode = null;\n        this.keys = null;\n        this.includeInRequests = null;\n    }\n\n    init(data) {\n        super.init(data);\n\n        if (data) {\n            this.version = data.version;\n            this.sessionID = data.sessionID;\n            this.contentID = data.contentID;\n            this.mode = data.mode ?? 'query';\n            this.keys = data.keys ? data.keys.split(' ') : null;\n            this.includeInRequests = data.includeInRequests ? data.includeInRequests.split(' ') : ['segment'];\n            this.schemeIdUri = data.schemeIdUri;\n        }\n    }\n}\n\nexport default CMCDParameters;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2024, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nclass ClientDataReporting {\n    constructor() {\n        this.adaptationSets = null;\n        this.adaptationSetsArray = [];\n        this.cmcdParameters = null;\n        this.serviceLocations = null;\n        this.serviceLocationsArray = [];\n    }\n}\n\nexport default ClientDataReporting;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2023, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport DescriptorType from './DescriptorType.js'\nimport DashConstants from '../constants/DashConstants.js';\n\n/**\n * @class\n * @ignore\n */\nclass ContentProtection extends DescriptorType {\n\n    constructor() {\n        super();\n        this.ref = null;\n        this.refId = null;\n        this.robustness = null;\n        this.keyId = null;\n        this.cencDefaultKid = null;\n        this.pssh = null;\n        this.pro = null;\n        this.laUrl = null;\n    }\n\n    init(data) {\n        super.init(data);\n\n        if (data) {\n            this.ref = data.hasOwnProperty(DashConstants.REF) ? data[DashConstants.REF] : null;\n            this.refId = data.hasOwnProperty(DashConstants.REF_ID) ? data[DashConstants.REF_ID] : null;\n            this.robustness = data.hasOwnProperty(DashConstants.ROBUSTNESS) ? data[DashConstants.ROBUSTNESS] : null;\n            this.cencDefaultKid = data.hasOwnProperty(DashConstants.CENC_DEFAULT_KID) ? data[DashConstants.CENC_DEFAULT_KID] : null;\n            this.pssh = data.hasOwnProperty(DashConstants.PSSH) ? data[DashConstants.PSSH] : null;\n            this.pro = data.hasOwnProperty(DashConstants.PRO) ? data[DashConstants.PRO] : null;\n            this.laUrl = data.hasOwnProperty(DashConstants.LA_URL) ? data[DashConstants.LA_URL] : data.hasOwnProperty(DashConstants.LA_URL_LOWER_CASE) ? data[DashConstants.LA_URL_LOWER_CASE] : null;\n        }\n    }\n\n    mergeAttributesFromReference(reference) {\n        let attributesToBeMerged = ['schemeIdUri', 'value', 'id', 'robustness', 'cencDefaultKid', 'pro', 'pssh', 'laUrl']\n        attributesToBeMerged.forEach((attribute) => {\n            if (this[attribute] === null) {\n                this[attribute] = reference[attribute]\n            }\n        })\n    }\n}\n\nexport default ContentProtection;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nclass ContentSteering {\n    constructor() {\n        this.defaultServiceLocation = null;\n        this.defaultServiceLocationArray = [];\n        this.queryBeforeStart = false;\n        this.serverUrl = null;\n        this.clientRequirement = true;\n    }\n}\n\nexport default ContentSteering;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nclass Event {\n    constructor() {\n        this.type = '';\n        this.duration = NaN;\n        this.presentationTime = NaN;\n        this.id = NaN;\n        this.messageData = '';\n        this.eventStream = null;\n        this.presentationTimeDelta = NaN; // Specific EMSG Box parameter\n        this.parsedMessageData = null; // Parsed value of the event message\n    }\n}\n\nexport default Event;","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nclass EventStream {\n    constructor() {\n        this.adaptionSet = null;\n        this.representation = null;\n        this.period = null;\n        this.timescale = 1;\n        this.value = '';\n        this.schemeIdUri = '';\n        this.presentationTimeOffset = 0;\n    }\n}\n\nexport default EventStream;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nclass Mpd {\n    constructor() {\n        this.availabilityEndTime = Number.POSITIVE_INFINITY;\n        this.availabilityStartTime = null;\n        this.manifest = null;\n        this.maxSegmentDuration = Number.POSITIVE_INFINITY;\n        this.mediaPresentationDuration = NaN;\n        this.minimumUpdatePeriod = NaN;\n        this.publishTime = null;\n        this.suggestedPresentationDelay = 0;\n        this.timeShiftBufferDepth = Number.POSITIVE_INFINITY;\n    }\n}\n\nexport default Mpd;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2023, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nclass MpdLocation {\n    constructor(url, serviceLocation) {\n        this.url = url || '';\n        this.serviceLocation = serviceLocation || null;\n        this.queryParams = {}; // This is an attribute that might be set when synthesizing Locations with content steering\n    }\n}\n\nexport default MpdLocation;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2023, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nclass PatchLocation {\n    constructor(url, serviceLocation, ttl) {\n        this.url = url || '';\n        this.serviceLocation = serviceLocation || null;\n        this.ttl = ttl || NaN;\n        this.queryParams = {}; // This is an attribute that might be set when synthesizing Locations with content steering\n    }\n}\n\nexport default PatchLocation;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nclass Period {\n    constructor() {\n        this.id = null;\n        this.index = -1;\n        this.duration = NaN;\n        this.start = NaN;\n        this.mpd = null;\n        this.nextPeriodId = null;\n        this.isEncrypted = false;\n    }\n}\n\nPeriod.DEFAULT_ID = 'defaultId';\n\nexport default Period;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nclass ProducerReferenceTime {\n    constructor() {\n        this.id = null;\n        this.inband = false;\n        this.type = 'encoder';\n        this.applicationScheme = null;\n        this.wallClockTime = null;\n        this.presentationTime = NaN;\n        this.UTCTiming = null;\n    }\n}\n\nexport default ProducerReferenceTime;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\n\nimport DashConstants from '../constants/DashConstants.js';\n\nclass Representation {\n\n    constructor() {\n        this.absoluteIndex = NaN;\n        this.adaptation = null;\n        this.availabilityTimeComplete = true;\n        this.availabilityTimeOffset = 0;\n        this.bandwidth = NaN;\n        this.bitrateInKbit = NaN;\n        this.bitsPerPixel = NaN;\n        this.codecFamily = null;\n        this.codecPrivateData = null;\n        this.codecs = null;\n        this.essentialProperties = [];\n        this.fragmentDuration = null;\n        this.frameRate = null;\n        this.height = NaN;\n        this.id = null;\n        this.indexRange = null;\n        this.initialization = null;\n        this.maxPlayoutRate = NaN;\n        this.mediaFinishedInformation = { numberOfSegments: 0, mediaTimeOfLastSignaledSegment: NaN };\n        this.mediaInfo = null;\n        this.mimeType = null;\n        this.mseTimeOffset = NaN;\n        this.pixelsPerSecond = NaN;\n        this.presentationTimeOffset = 0;\n        this.qualityRanking = NaN;\n        this.range = null;\n        this.scanType = null;\n        this.segments = null;\n        this.segmentDuration = NaN;\n        this.segmentInfoType = null;\n        this.supplementalProperties = [];\n        this.startNumber = 1;\n        this.timescale = 1;\n        this.width = NaN;\n    }\n\n    hasInitialization() {\n        return (this.initialization !== null || this.range !== null);\n    }\n\n    hasSegments() {\n        return this.segmentInfoType !== DashConstants.BASE_URL &&\n            this.segmentInfoType !== DashConstants.SEGMENT_BASE &&\n            !this.indexRange;\n    }\n}\n\nexport default Representation;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport AdaptationSet from '../vo/AdaptationSet.js';\nimport BaseURL from '../vo/BaseURL.js';\nimport CMCDParameters from '../vo/CMCDParameters.js';\nimport ClientDataReporting from '../vo/ClientDataReporting.js';\nimport Constants from '../../streaming/constants/Constants.js';\nimport ContentProtection from '../vo/ContentProtection.js';\nimport ContentSteering from '../vo/ContentSteering.js';\nimport DashConstants from '../constants/DashConstants.js';\nimport DashJSError from '../../streaming/vo/DashJSError.js';\nimport Debug from '../../core/Debug.js';\nimport DescriptorType from '../vo/DescriptorType.js';\nimport Errors from '../../core/errors/Errors.js';\nimport Event from '../vo/Event.js';\nimport EventStream from '../vo/EventStream.js';\nimport FactoryMaker from '../../core/FactoryMaker.js';\nimport Mpd from '../vo/Mpd.js';\nimport MpdLocation from '../vo/MpdLocation.js';\nimport ObjectUtils from '../../streaming/utils/ObjectUtils.js';\nimport PatchLocation from '../vo/PatchLocation.js';\nimport Period from '../vo/Period.js';\nimport ProducerReferenceTime from '../vo/ProducerReferenceTime.js';\nimport Representation from '../vo/Representation.js';\nimport URLUtils from '../../streaming/utils/URLUtils.js';\nimport UTCTiming from '../vo/UTCTiming.js';\nimport Utils from '../../core/Utils.js';\n\nfunction DashManifestModel() {\n    let instance,\n        logger,\n        errHandler,\n        BASE64;\n\n    const context = this.context;\n    const urlUtils = URLUtils(context).getInstance();\n\n    const isInteger = Number.isInteger || function (value) {\n        return typeof value === 'number' &&\n            isFinite(value) &&\n            Math.floor(value) === value;\n    };\n\n    function setup() {\n        logger = Debug(context).getInstance().getLogger(instance);\n    }\n\n    function getIsTypeOf(adaptation, type) {\n        if (!adaptation) {\n            throw new Error('adaptation is not defined');\n        }\n\n        if (!type) {\n            throw new Error('type is not defined');\n        }\n\n        // Check for thumbnail images\n        if (adaptation.Representation && adaptation.Representation.length) {\n            const essentialProperties = getEssentialPropertiesForRepresentation(adaptation.Representation[0]);\n            if (essentialProperties && essentialProperties.some(essentialProperty => Constants.THUMBNAILS_SCHEME_ID_URIS.indexOf(essentialProperty.schemeIdUri) >= 0)) {\n                return (type === Constants.IMAGE);\n            }\n        }\n\n        // Check ContentComponent.contentType\n        if (adaptation.ContentComponent && adaptation.ContentComponent.length > 0) {\n            if (adaptation.ContentComponent.length > 1) {\n                return (type === Constants.MUXED);\n            } else if (adaptation.ContentComponent[0].contentType === type) {\n                return true;\n            }\n        }\n\n        const mimeTypeRegEx = (type === Constants.TEXT) ? new RegExp('(ttml|vtt|wvtt|stpp)') : new RegExp(type);\n\n        // Check codecs\n        if (adaptation.Representation && adaptation.Representation.length) {\n            const codecs = adaptation.Representation[0].codecs;\n            if (mimeTypeRegEx.test(codecs)) {\n                return true;\n            }\n        }\n\n        // Check Adaptation's mimeType\n        if (adaptation.hasOwnProperty(DashConstants.MIME_TYPE)) {\n            return mimeTypeRegEx.test(adaptation.mimeType);\n        }\n\n        // Check Representation's mimeType\n        if (adaptation.Representation) {\n            let representation;\n            for (let i = 0; i < adaptation.Representation.length; i++) {\n                representation = adaptation.Representation[i];\n                if (representation.hasOwnProperty(DashConstants.MIME_TYPE)) {\n                    return mimeTypeRegEx.test(representation.mimeType);\n                }\n            }\n        }\n\n        return false;\n    }\n\n    function getIsFragmented(adaptation) {\n        if (!adaptation) {\n            throw new Error('adaptation is not defined');\n        }\n        if (adaptation.hasOwnProperty(DashConstants.SEGMENT_TEMPLATE) ||\n            adaptation.hasOwnProperty(DashConstants.SEGMENT_TIMELINE) ||\n            adaptation.hasOwnProperty(DashConstants.SEGMENT_LIST) ||\n            adaptation.hasOwnProperty(DashConstants.SEGMENT_BASE)) {\n            return true;\n        }\n        if (adaptation.Representation && adaptation.Representation.length > 0) {\n            const representation = adaptation.Representation[0];\n            if (representation.hasOwnProperty(DashConstants.SEGMENT_TEMPLATE) ||\n                representation.hasOwnProperty(DashConstants.SEGMENT_TIMELINE) ||\n                representation.hasOwnProperty(DashConstants.SEGMENT_LIST) ||\n                representation.hasOwnProperty(DashConstants.SEGMENT_BASE)) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    function getIsAudio(adaptation) {\n        return getIsTypeOf(adaptation, Constants.AUDIO);\n    }\n\n    function getIsVideo(adaptation) {\n        return getIsTypeOf(adaptation, Constants.VIDEO);\n    }\n\n    function getIsText(adaptation) {\n        return getIsTypeOf(adaptation, Constants.TEXT);\n    }\n\n    function getIsMuxed(adaptation) {\n        return getIsTypeOf(adaptation, Constants.MUXED);\n    }\n\n    function getIsImage(adaptation) {\n        return getIsTypeOf(adaptation, Constants.IMAGE);\n    }\n\n    function getProducerReferenceTimesForAdaptation(adaptation) {\n        const prtArray = adaptation && adaptation.hasOwnProperty(DashConstants.PRODUCER_REFERENCE_TIME) ? adaptation[DashConstants.PRODUCER_REFERENCE_TIME] : [];\n\n        // ProducerReferenceTime elements can also be contained in Representations\n        const representationsArray = adaptation && adaptation.hasOwnProperty(DashConstants.REPRESENTATION) ? adaptation[DashConstants.REPRESENTATION] : [];\n\n        representationsArray.forEach((rep) => {\n            if (rep.hasOwnProperty(DashConstants.PRODUCER_REFERENCE_TIME)) {\n                prtArray.push(...rep[DashConstants.PRODUCER_REFERENCE_TIME]);\n            }\n        });\n\n        const prtsForAdaptation = [];\n\n        // Unlikely to have multiple ProducerReferenceTimes.\n        prtArray.forEach((prt) => {\n            const entry = new ProducerReferenceTime();\n\n            if (prt.hasOwnProperty(DashConstants.ID)) {\n                entry[DashConstants.ID] = parseInt(prt[DashConstants.ID]);\n            } else {\n                // Ignore. Missing mandatory attribute\n                return;\n            }\n\n            if (prt.hasOwnProperty(DashConstants.WALL_CLOCK_TIME)) {\n                entry[DashConstants.WALL_CLOCK_TIME] = prt[DashConstants.WALL_CLOCK_TIME];\n            } else {\n                // Ignore. Missing mandatory attribute\n                return;\n            }\n\n            if (prt.hasOwnProperty(DashConstants.PRESENTATION_TIME)) {\n                entry[DashConstants.PRESENTATION_TIME] = prt[DashConstants.PRESENTATION_TIME];\n            } else {\n                // Ignore. Missing mandatory attribute\n                return;\n            }\n\n            if (prt.hasOwnProperty(DashConstants.INBAND)) {\n                entry[DashConstants.INBAND] = prt[DashConstants.INBAND] !== 'false';\n            }\n\n            if (prt.hasOwnProperty(DashConstants.TYPE)) {\n                entry[DashConstants.TYPE] = prt[DashConstants.TYPE];\n            }\n\n            // Not interested in other attributes for now\n            // UTC element contained must be same as that in the MPD\n            prtsForAdaptation.push(entry);\n        })\n\n        return prtsForAdaptation;\n    }\n\n    function getLanguageForAdaptation(adaptation) {\n        let lang = '';\n\n        if (adaptation && adaptation.hasOwnProperty(DashConstants.LANG)) {\n            lang = adaptation.lang;\n        }\n\n        return lang;\n    }\n\n    function getViewpointForAdaptation(adaptation) {\n        if (!adaptation || !adaptation.hasOwnProperty(DashConstants.VIEWPOINT) || !adaptation[DashConstants.VIEWPOINT].length) {\n            return [];\n        }\n        return adaptation[DashConstants.VIEWPOINT].map(viewpoint => {\n            const vp = new DescriptorType();\n            vp.init(viewpoint);\n            return vp\n        });\n    }\n\n    function getRolesForAdaptation(adaptation) {\n        if (!adaptation || !adaptation.hasOwnProperty(DashConstants.ROLE) || !adaptation[DashConstants.ROLE].length) {\n            return [];\n        }\n        return adaptation[DashConstants.ROLE].map(role => {\n            const r = new DescriptorType();\n            r.init(role);\n            return r\n        });\n    }\n\n    function getAccessibilityForAdaptation(adaptation) {\n        if (!adaptation || !adaptation.hasOwnProperty(DashConstants.ACCESSIBILITY) || !adaptation[DashConstants.ACCESSIBILITY].length) {\n            return [];\n        }\n        return adaptation[DashConstants.ACCESSIBILITY].map(accessibility => {\n            const a = new DescriptorType();\n            a.init(accessibility);\n            return a\n        });\n    }\n\n    function getAudioChannelConfigurationForAdaptation(adaptation) {\n        if (!adaptation || !adaptation.hasOwnProperty(DashConstants.AUDIO_CHANNEL_CONFIGURATION) || !adaptation[DashConstants.AUDIO_CHANNEL_CONFIGURATION].length) {\n            return [];\n        }\n        return adaptation[DashConstants.AUDIO_CHANNEL_CONFIGURATION].map(audioChanCfg => {\n            const acc = new DescriptorType();\n            acc.init(audioChanCfg);\n            return acc\n        });\n    }\n\n    function getAudioChannelConfigurationForRepresentation(representation) {\n        if (!representation || !representation.hasOwnProperty(DashConstants.AUDIO_CHANNEL_CONFIGURATION) || !representation[DashConstants.AUDIO_CHANNEL_CONFIGURATION].length) {\n            return [];\n        }\n        return representation[DashConstants.AUDIO_CHANNEL_CONFIGURATION].map(audioChanCfg => {\n            const acc = new DescriptorType();\n            acc.init(audioChanCfg);\n            return acc\n        });\n    }\n\n    function getRepresentationSortFunction() {\n        return (a, b) => a.bandwidth - b.bandwidth;\n    }\n\n    function processAdaptation(realAdaptation) {\n        if (realAdaptation && realAdaptation.Representation) {\n            realAdaptation.Representation.sort(getRepresentationSortFunction());\n        }\n\n        return realAdaptation;\n    }\n\n    function getRealAdaptations(manifest, periodIndex) {\n        return manifest && manifest.Period && isInteger(periodIndex) ? manifest.Period[periodIndex] ? manifest.Period[periodIndex].AdaptationSet : [] : [];\n    }\n\n    function getRealPeriods(manifest) {\n        return manifest && manifest.Period ? manifest.Period : [];\n    }\n\n    function getRealPeriodForIndex(index, manifest) {\n        const realPeriods = getRealPeriods(manifest);\n        if (realPeriods.length > 0 && isInteger(index)) {\n            return realPeriods[index];\n        } else {\n            return null;\n        }\n    }\n\n    function getAdaptationForId(id, manifest, periodIndex) {\n        const realAdaptations = getRealAdaptations(manifest, periodIndex);\n        let i,\n            len;\n\n        for (i = 0, len = realAdaptations.length; i < len; i++) {\n            if (realAdaptations[i].hasOwnProperty(DashConstants.ID) && realAdaptations[i].id === id) {\n                return realAdaptations[i];\n            }\n        }\n\n        return null;\n    }\n\n    function getAdaptationForIndex(index, manifest, periodIndex) {\n        const realAdaptations = getRealAdaptations(manifest, periodIndex);\n        if (realAdaptations.length > 0 && isInteger(index)) {\n            return realAdaptations[index];\n        } else {\n            return null;\n        }\n    }\n\n    function getIndexForAdaptation(realAdaptation, manifest, periodIndex) {\n        if (!realAdaptation) {\n            return -1;\n        }\n\n        const realAdaptations = getRealAdaptations(manifest, periodIndex);\n\n        for (let i = 0; i < realAdaptations.length; i++) {\n            let objectUtils = ObjectUtils(context).getInstance();\n            if (objectUtils.areEqual(realAdaptations[i], realAdaptation)) {\n                return i;\n            }\n        }\n\n        return -1;\n    }\n\n    function getAdaptationsForType(manifest, periodIndex, type) {\n        const realAdaptations = getRealAdaptations(manifest, periodIndex);\n        let i,\n            len;\n        const adaptations = [];\n\n        for (i = 0, len = realAdaptations.length; i < len; i++) {\n            if (getIsTypeOf(realAdaptations[i], type)) {\n                adaptations.push(processAdaptation(realAdaptations[i]));\n            }\n        }\n\n        return adaptations;\n    }\n\n    function getCodec(adaptation, representationIndex, addResolutionInfo) {\n        let codec = null;\n\n        if (adaptation && adaptation.Representation && adaptation.Representation.length > 0) {\n            const representation = isInteger(representationIndex) && representationIndex >= 0 && representationIndex < adaptation.Representation.length ?\n                adaptation.Representation[representationIndex] : adaptation.Representation[0];\n            if (representation) {\n                codec = representation.mimeType + ';codecs=\"' + representation.codecs + '\"';\n                if (addResolutionInfo && representation.width !== undefined) {\n                    codec += ';width=\"' + representation.width + '\";height=\"' + representation.height + '\"';\n                }\n            }\n        }\n\n        // If the codec contains a profiles parameter we remove it. Otherwise, it will cause problems when checking for codec capabilities of the platform\n        if (codec) {\n            codec = codec.replace(/\\sprofiles=[^;]*/g, '');\n        }\n\n        return codec;\n    }\n\n    function getMimeType(adaptation) {\n        return adaptation && adaptation.Representation && adaptation.Representation.length > 0 ? adaptation.Representation[0].mimeType : null;\n    }\n\n    function getSegmentAlignment(adaptation) {\n        if (adaptation && adaptation.hasOwnProperty(DashConstants.SEGMENT_ALIGNMENT)) {\n            return adaptation[DashConstants.SEGMENT_ALIGNMENT] === 'true'\n        }\n\n        return false\n    }\n\n    function getSubSegmentAlignment(adaptation) {\n        if (adaptation && adaptation.hasOwnProperty(DashConstants.SUB_SEGMENT_ALIGNMENT)) {\n            return adaptation[DashConstants.SUB_SEGMENT_ALIGNMENT] === 'true'\n        }\n\n        return false\n    }\n\n    function getLabelsForAdaptation(adaptation) {\n        if (!adaptation || !adaptation.Label) {\n            return [];\n        }\n\n        const labelArray = [];\n\n        for (let i = 0; i < adaptation.Label.length; i++) {\n            labelArray.push({\n                lang: adaptation.Label[i].lang,\n                text: adaptation.Label[i].__text || adaptation.Label[i]\n            });\n        }\n\n        return labelArray;\n    }\n\n    function isPeriodEncrypted(period) {\n        const contentProtectionElements = getContentProtectionByPeriod(period);\n\n        return contentProtectionElements && contentProtectionElements.length > 0;\n    }\n\n    function getContentProtectionByManifest(manifest) {\n        let protectionElements = [];\n\n        if (!manifest) {\n            return protectionElements\n        }\n\n        const mpdElements = _getContentProtectionFromElement(manifest);\n        protectionElements = protectionElements.concat(mpdElements);\n\n        if (manifest.hasOwnProperty(DashConstants.PERIOD) && manifest[DashConstants.PERIOD].length > 0) {\n            manifest[DashConstants.PERIOD].forEach((period) => {\n                const curr = getContentProtectionByPeriod(period)\n                protectionElements = protectionElements.concat(curr);\n            })\n        }\n\n        return protectionElements\n    }\n\n    function getContentProtectionByPeriod(period) {\n        let protectionElements = [];\n\n        if (!period) {\n            return protectionElements\n        }\n\n        const periodProtectionElements = _getContentProtectionFromElement(period);\n        protectionElements = protectionElements.concat(periodProtectionElements);\n\n        if (period.hasOwnProperty(DashConstants.ADAPTATION_SET) && period[DashConstants.ADAPTATION_SET].length > 0) {\n            period[DashConstants.ADAPTATION_SET].forEach((as) => {\n                const curr = _getContentProtectionFromElement(as);\n                protectionElements = protectionElements.concat(curr);\n            })\n        }\n\n        return protectionElements\n    }\n\n    function getContentProtectionByAdaptation(adaptation) {\n        return _getContentProtectionFromElement(adaptation);\n    }\n\n    function _getContentProtectionFromElement(element) {\n        if (!element || !element.hasOwnProperty(DashConstants.CONTENT_PROTECTION) || element.ContentProtection.length === 0) {\n            return [];\n        }\n\n        return element[DashConstants.CONTENT_PROTECTION].map(contentProtectionData => {\n            const contentProtection = new ContentProtection();\n            contentProtection.init(contentProtectionData);\n\n            return contentProtection\n        });\n    }\n\n    function getIsDynamic(manifest) {\n        let isDynamic = false;\n        if (manifest && manifest.hasOwnProperty('type')) {\n            isDynamic = (manifest.type === DashConstants.DYNAMIC);\n        }\n        return isDynamic;\n    }\n\n    function getId(manifest) {\n        return (manifest && manifest[DashConstants.ID]) || null;\n    }\n\n    function hasProfile(manifest, profile) {\n        let has = false;\n\n        if (manifest && manifest.profiles && manifest.profiles.length > 0) {\n            has = (manifest.profiles.indexOf(profile) !== -1);\n        }\n\n        return has;\n    }\n\n    function getDuration(manifest) {\n        let mpdDuration;\n        //@mediaPresentationDuration specifies the duration of the entire Media Presentation.\n        //If the attribute is not present, the duration of the Media Presentation is unknown.\n        if (manifest && manifest.hasOwnProperty(DashConstants.MEDIA_PRESENTATION_DURATION)) {\n            mpdDuration = manifest.mediaPresentationDuration;\n        } else if (manifest && manifest.type == 'dynamic') {\n            mpdDuration = Number.POSITIVE_INFINITY;\n        } else {\n            mpdDuration = Number.MAX_SAFE_INTEGER || Number.MAX_VALUE;\n        }\n\n        return mpdDuration;\n    }\n\n    function getBandwidth(representation) {\n        return representation && representation.bandwidth ? representation.bandwidth : NaN;\n    }\n\n    function getManifestUpdatePeriod(manifest, latencyOfLastUpdate = 0) {\n        let delay = NaN;\n        if (manifest && manifest.hasOwnProperty(DashConstants.MINIMUM_UPDATE_PERIOD)) {\n            delay = manifest.minimumUpdatePeriod;\n        }\n        return isNaN(delay) ? delay : Math.max(delay - latencyOfLastUpdate, 1);\n    }\n\n    function getPublishTime(manifest) {\n        return manifest && manifest.hasOwnProperty(DashConstants.PUBLISH_TIME) ? new Date(manifest[DashConstants.PUBLISH_TIME]) : null;\n    }\n\n    function getRepresentationCount(adaptation) {\n        return adaptation && adaptation.Representation ? adaptation.Representation.length : 0;\n    }\n\n    function getBitrateListForAdaptation(realAdaptation) {\n        const processedRealAdaptation = processAdaptation(realAdaptation);\n        const realRepresentations = processedRealAdaptation && processedRealAdaptation.Representation ? processedRealAdaptation.Representation : [];\n\n        return realRepresentations.map((realRepresentation) => {\n            return {\n                bandwidth: realRepresentation.bandwidth,\n                width: realRepresentation.width || 0,\n                height: realRepresentation.height || 0,\n                scanType: realRepresentation.scanType || null,\n                id: realRepresentation.id || null\n            };\n        });\n    }\n\n    function getSelectionPriority(realAdaption) {\n        try {\n            const priority = realAdaption && typeof realAdaption.selectionPriority !== 'undefined' ? parseInt(realAdaption.selectionPriority) : 1;\n\n            return isNaN(priority) ? 1 : priority;\n        } catch (e) {\n            return 1;\n        }\n    }\n\n    // propertyType is one of { DashConstants.ESSENTIAL_PROPERTY, DashConstants.SUPPLEMENTAL_PROPERTY }\n    function _getProperties(propertyType, element) {\n        if (!element || !element.hasOwnProperty(propertyType) || !element[propertyType].length) {\n            return [];\n        }\n\n        return element[propertyType].map((property) => {\n            const s = new DescriptorType();\n            s.init(property);\n            return s\n        });\n    }\n\n    function _getPropertiesCommonToAllRepresentations(propertyType, repr) {\n        if (!repr || !repr.length) {\n            return [];\n        }\n        \n        let propertiesOfFirstRepresentation = repr[0][propertyType] || [];\n\n        if (propertiesOfFirstRepresentation.length === 0) {\n            return [];\n        }\n\n        if (repr.length === 1) {\n            return propertiesOfFirstRepresentation;\n        }\n        \n        // now, only return properties present on all Representations\n        // repr.legth is always >= 2\n        return propertiesOfFirstRepresentation.filter( prop => {\n            return repr.slice(1).every( currRep => {\n                return currRep.hasOwnProperty(propertyType) && currRep[propertyType].some( e => {\n                    return e.schemeIdUri === prop.schemeIdUri && e.value === prop.value;\n                });\n            });\n        })\n    }\n\n    function _getCombinedPropertiesForAdaptationSet(propertyType, adaptation) {\n        if (!adaptation) {\n            return [];\n        }\n\n        let allProperties = _getPropertiesCommonToAllRepresentations(propertyType, adaptation[DashConstants.REPRESENTATION]);\n        if (adaptation.hasOwnProperty(propertyType) && adaptation[propertyType].length) {\n            allProperties.push(...adaptation[propertyType])\n        }\n        // we don't check whether there are duplicates on AdaptationSets and Representations\n\n        return allProperties.map(essentialProperty => {\n            const s = new DescriptorType();\n            s.init(essentialProperty);\n            return s\n        });\n    }\n\n    function getEssentialPropertiesForAdaptationSet(adaptation) {\n        return _getProperties(DashConstants.ESSENTIAL_PROPERTY, adaptation);\n    }\n    \n    function getCombinedEssentialPropertiesForAdaptationSet(adaptation) {\n        return _getCombinedPropertiesForAdaptationSet(DashConstants.ESSENTIAL_PROPERTY, adaptation);\n    }\n\n    function getEssentialPropertiesForRepresentation(realRepresentation) {\n        return _getProperties(DashConstants.ESSENTIAL_PROPERTY, realRepresentation);\n    }\n\n    function getSupplementalPropertiesForAdaptationSet(adaptation) {\n        return _getProperties(DashConstants.SUPPLEMENTAL_PROPERTY, adaptation);\n    }\n\n    function getCombinedSupplementalPropertiesForAdaptationSet(adaptation) {\n        return _getCombinedPropertiesForAdaptationSet(DashConstants.SUPPLEMENTAL_PROPERTY, adaptation);\n    }\n\n    function getSupplementalPropertiesForRepresentation(representation) {\n        return _getProperties(DashConstants.SUPPLEMENTAL_PROPERTY, representation);\n    }\n\n    function getRepresentationFor(index, adaptation) {\n        return adaptation && adaptation.Representation && adaptation.Representation.length > 0 &&\n        isInteger(index) ? adaptation.Representation[index] : null;\n    }\n\n    function getRealAdaptationFor(voAdaptation) {\n        if (voAdaptation && voAdaptation.period && isInteger(voAdaptation.period.index)) {\n            const periodArray = voAdaptation.period.mpd.manifest.Period[voAdaptation.period.index];\n            if (periodArray && periodArray.AdaptationSet && isInteger(voAdaptation.index)) {\n                return processAdaptation(periodArray.AdaptationSet[voAdaptation.index]);\n            }\n        }\n    }\n\n    function getRepresentationsForAdaptation(voAdaptation, mediaInfo) {\n        const voRepresentations = [];\n        const processedRealAdaptation = getRealAdaptationFor(voAdaptation);\n        let segmentInfo,\n            baseUrl;\n\n        if (processedRealAdaptation && processedRealAdaptation.Representation) {\n            // TODO: TO BE REMOVED. We should get just the baseUrl elements that affects to the representations\n            // that we are processing. Making it works properly will require much further changes and given\n            // parsing base Urls parameters is needed for our ultra low latency examples, we will\n            // keep this \"tricky\" code until the real (and good) solution comes\n            if (voAdaptation && voAdaptation.period && isInteger(voAdaptation.period.index)) {\n                const baseUrls = getBaseURLsFromElement(voAdaptation.period.mpd.manifest);\n                if (baseUrls) {\n                    baseUrl = baseUrls[0];\n                }\n            }\n            for (let i = 0, len = processedRealAdaptation.Representation.length; i < len; ++i) {\n                const realRepresentation = processedRealAdaptation.Representation[i];\n                const voRepresentation = new Representation();\n                voRepresentation.index = i;\n                voRepresentation.adaptation = voAdaptation;\n                voRepresentation.mediaInfo = mediaInfo;\n\n                if (realRepresentation.hasOwnProperty(DashConstants.ID)) {\n                    voRepresentation.id = realRepresentation.id;\n                }\n                if (realRepresentation.hasOwnProperty(DashConstants.CODECS)) {\n                    voRepresentation.codecs = realRepresentation.codecs;\n                    voRepresentation.codecFamily = Utils.getCodecFamily(voRepresentation.codecs);\n                }\n                if (realRepresentation.hasOwnProperty(DashConstants.MIME_TYPE)) {\n                    voRepresentation.mimeType = realRepresentation[DashConstants.MIME_TYPE];\n                }\n                if (realRepresentation.hasOwnProperty(DashConstants.CODEC_PRIVATE_DATA)) {\n                    voRepresentation.codecPrivateData = realRepresentation.codecPrivateData;\n                }\n                if (realRepresentation.hasOwnProperty(DashConstants.BANDWITH)) {\n                    voRepresentation.bandwidth = realRepresentation.bandwidth;\n                    voRepresentation.bitrateInKbit = realRepresentation.bandwidth / 1000;\n                }\n                if (realRepresentation.hasOwnProperty(DashConstants.WIDTH)) {\n                    voRepresentation.width = realRepresentation.width;\n                }\n                if (realRepresentation.hasOwnProperty(DashConstants.HEIGHT)) {\n                    voRepresentation.height = realRepresentation.height;\n                }\n                if (realRepresentation.hasOwnProperty(DashConstants.SCAN_TYPE)) {\n                    voRepresentation.scanType = realRepresentation.scanType;\n                }\n                if (realRepresentation.hasOwnProperty(DashConstants.FRAMERATE)) {\n                    const frameRate = realRepresentation[DashConstants.FRAMERATE];\n                    if (isNaN(frameRate) && frameRate.includes('/')) {\n                        const parts = frameRate.split('/');\n                        if (parts.length === 2) {\n                            const numerator = parseFloat(parts[0]);\n                            const denominator = parseFloat(parts[1]);\n\n                            if (!isNaN(numerator) && !isNaN(denominator) && denominator !== 0) {\n                                voRepresentation.frameRate = numerator / denominator;\n                            }\n                        }\n                    } else {\n                        voRepresentation.frameRate = frameRate\n                    }\n                }\n                if (realRepresentation.hasOwnProperty(DashConstants.QUALITY_RANKING)) {\n                    voRepresentation.qualityRanking = realRepresentation[DashConstants.QUALITY_RANKING];\n                }\n                if (realRepresentation.hasOwnProperty(DashConstants.MAX_PLAYOUT_RATE)) {\n                    voRepresentation.maxPlayoutRate = realRepresentation.maxPlayoutRate;\n                }\n\n                if (realRepresentation.hasOwnProperty(DashConstants.SEGMENT_BASE)) {\n                    segmentInfo = realRepresentation.SegmentBase;\n                    voRepresentation.segmentInfoType = DashConstants.SEGMENT_BASE;\n                } else if (realRepresentation.hasOwnProperty(DashConstants.SEGMENT_LIST)) {\n                    segmentInfo = realRepresentation.SegmentList;\n\n                    if (segmentInfo.hasOwnProperty(DashConstants.SEGMENT_TIMELINE)) {\n                        voRepresentation.segmentInfoType = DashConstants.SEGMENT_TIMELINE;\n                    } else {\n                        voRepresentation.segmentInfoType = DashConstants.SEGMENT_LIST;\n                    }\n                } else if (realRepresentation.hasOwnProperty(DashConstants.SEGMENT_TEMPLATE)) {\n                    segmentInfo = realRepresentation.SegmentTemplate;\n\n                    if (segmentInfo.hasOwnProperty(DashConstants.SEGMENT_TIMELINE)) {\n                        voRepresentation.segmentInfoType = DashConstants.SEGMENT_TIMELINE;\n                    } else {\n                        voRepresentation.segmentInfoType = DashConstants.SEGMENT_TEMPLATE;\n                    }\n\n                    if (segmentInfo.hasOwnProperty(DashConstants.INITIALIZATION_MINUS)) {\n                        voRepresentation.initialization = segmentInfo.initialization.split('$Bandwidth$')\n                            .join(realRepresentation.bandwidth).split('$RepresentationID$').join(realRepresentation.id);\n                    }\n                } else {\n                    voRepresentation.segmentInfoType = DashConstants.BASE_URL;\n                }\n\n                voRepresentation.essentialProperties = getEssentialPropertiesForRepresentation(realRepresentation);\n                voRepresentation.supplementalProperties = getSupplementalPropertiesForRepresentation(realRepresentation);\n\n                if (segmentInfo) {\n                    if (segmentInfo.hasOwnProperty(DashConstants.INITIALIZATION)) {\n                        const initialization = segmentInfo.Initialization;\n\n                        if (initialization.hasOwnProperty(DashConstants.SOURCE_URL)) {\n                            voRepresentation.initialization = initialization.sourceURL;\n                        }\n\n                        if (initialization.hasOwnProperty(DashConstants.RANGE)) {\n                            voRepresentation.range = initialization.range;\n                            // initialization source url will be determined from\n                            // BaseURL when resolved at load time.\n                        }\n                    } else if (getIsText(processedRealAdaptation) &&\n                        getIsFragmented(processedRealAdaptation) &&\n                        processedRealAdaptation.mimeType &&\n                        processedRealAdaptation.mimeType.indexOf('application/mp4') === -1) {\n                        voRepresentation.range = 0;\n                    }\n\n                    if (segmentInfo.hasOwnProperty(DashConstants.TIMESCALE)) {\n                        voRepresentation.timescale = segmentInfo.timescale;\n                    }\n                    if (segmentInfo.hasOwnProperty(DashConstants.DURATION)) {\n                        // TODO according to the spec @maxSegmentDuration specifies the maximum duration of any Segment in any Representation in the Media Presentation\n                        // It is also said that for a SegmentTimeline any @d value shall not exceed the value of MPD@maxSegmentDuration, but nothing is said about\n                        // SegmentTemplate @duration attribute. We need to find out if @maxSegmentDuration should be used instead of calculated duration if the the duration\n                        // exceeds @maxSegmentDuration\n                        voRepresentation.segmentDuration = segmentInfo.duration / voRepresentation.timescale;\n                    } else if (realRepresentation.hasOwnProperty(DashConstants.SEGMENT_TEMPLATE)) {\n                        segmentInfo = realRepresentation.SegmentTemplate;\n\n                        if (segmentInfo.hasOwnProperty(DashConstants.SEGMENT_TIMELINE)) {\n                            voRepresentation.segmentDuration = calcSegmentDuration(segmentInfo.SegmentTimeline) / voRepresentation.timescale;\n                        }\n                    }\n                    if (segmentInfo.hasOwnProperty(DashConstants.MEDIA)) {\n                        voRepresentation.media = segmentInfo.media;\n                    }\n                    if (segmentInfo.hasOwnProperty(DashConstants.START_NUMBER)) {\n                        voRepresentation.startNumber = parseInt(segmentInfo.startNumber);\n                    }\n                    if (segmentInfo.hasOwnProperty(DashConstants.INDEX_RANGE)) {\n                        voRepresentation.indexRange = segmentInfo.indexRange;\n                    }\n                    if (segmentInfo.hasOwnProperty(DashConstants.PRESENTATION_TIME_OFFSET)) {\n                        voRepresentation.presentationTimeOffset = segmentInfo.presentationTimeOffset / voRepresentation.timescale;\n                    }\n                    if (segmentInfo.hasOwnProperty(DashConstants.AVAILABILITY_TIME_OFFSET)) {\n                        voRepresentation.availabilityTimeOffset = segmentInfo.availabilityTimeOffset;\n                    } else if (baseUrl && baseUrl.availabilityTimeOffset !== undefined) {\n                        voRepresentation.availabilityTimeOffset = baseUrl.availabilityTimeOffset;\n                    }\n                    if (segmentInfo.hasOwnProperty(DashConstants.AVAILABILITY_TIME_COMPLETE)) {\n                        voRepresentation.availabilityTimeComplete = segmentInfo.availabilityTimeComplete !== 'false';\n                    } else if (baseUrl && baseUrl.availabilityTimeComplete !== undefined) {\n                        voRepresentation.availabilityTimeComplete = baseUrl.availabilityTimeComplete;\n                    }\n                }\n\n                voRepresentation.mseTimeOffset = calcMseTimeOffset(voRepresentation);\n                voRepresentation.path = [voAdaptation.period.index, voAdaptation.index, i];\n\n                if (!isNaN(voRepresentation.width) && !isNaN(voRepresentation.height) && !isNaN(voRepresentation.frameRate)) {\n                    voRepresentation.pixelsPerSecond = Math.max(1, voRepresentation.width * voRepresentation.height * voRepresentation.frameRate)\n                    if (!isNaN(voRepresentation.bandwidth)) {\n                        voRepresentation.bitsPerPixel = voRepresentation.bandwidth / voRepresentation.pixelsPerSecond\n                    }\n                }\n\n                voRepresentations.push(voRepresentation);\n            }\n        }\n\n        return voRepresentations;\n    }\n\n    function calcSegmentDuration(segmentTimeline) {\n        if (!segmentTimeline || !segmentTimeline.S) {\n            return NaN;\n        }\n        let s0 = segmentTimeline.S[0];\n        let s1 = segmentTimeline.S[1];\n        return s0.hasOwnProperty('d') ? s0.d : (s1.t - s0.t);\n    }\n\n    function calcMseTimeOffset(representation) {\n        // The MSEOffset is offset from AST for media. It is Period@start - presentationTimeOffset\n        const presentationOffset = representation.presentationTimeOffset;\n        const periodStart = representation.adaptation.period.start;\n        return (periodStart - presentationOffset);\n    }\n\n    function getAdaptationsForPeriod(voPeriod) {\n        const realPeriod = voPeriod && isInteger(voPeriod.index) ? voPeriod.mpd.manifest.Period[voPeriod.index] : null;\n        const voAdaptations = [];\n        let voAdaptationSet,\n            realAdaptationSet,\n            i;\n\n        if (realPeriod && realPeriod.AdaptationSet) {\n            for (i = 0; i < realPeriod.AdaptationSet.length; i++) {\n                realAdaptationSet = realPeriod.AdaptationSet[i];\n                voAdaptationSet = new AdaptationSet();\n                if (realAdaptationSet.hasOwnProperty(DashConstants.ID)) {\n                    voAdaptationSet.id = realAdaptationSet.id;\n                }\n                voAdaptationSet.index = i;\n                voAdaptationSet.period = voPeriod;\n\n                if (getIsMuxed(realAdaptationSet)) {\n                    voAdaptationSet.type = Constants.MUXED;\n                } else if (getIsAudio(realAdaptationSet)) {\n                    voAdaptationSet.type = Constants.AUDIO;\n                } else if (getIsVideo(realAdaptationSet)) {\n                    voAdaptationSet.type = Constants.VIDEO;\n                } else if (getIsText(realAdaptationSet)) {\n                    voAdaptationSet.type = Constants.TEXT;\n                } else if (getIsImage(realAdaptationSet)) {\n                    voAdaptationSet.type = Constants.IMAGE;\n                } else {\n                    logger.warn('Unknown Adaptation stream type');\n                }\n                voAdaptations.push(voAdaptationSet);\n            }\n        }\n\n        return voAdaptations;\n    }\n\n    function getRegularPeriods(mpd) {\n        const isDynamic = mpd ? getIsDynamic(mpd.manifest) : false;\n        const voPeriods = [];\n        let realPreviousPeriod = null;\n        let realPeriod = null;\n        let voPreviousPeriod = null;\n        let voPeriod = null;\n        let len,\n            i;\n\n        for (i = 0, len = mpd && mpd.manifest && mpd.manifest.Period ? mpd.manifest.Period.length : 0; i < len; i++) {\n            realPeriod = mpd.manifest.Period[i];\n\n            // If the attribute @start is present in the Period, then the\n            // Period is a regular Period and the PeriodStart is equal\n            // to the value of this attribute.\n            if (realPeriod.hasOwnProperty(DashConstants.START)) {\n                voPeriod = new Period();\n                voPeriod.start = realPeriod.start;\n            }\n            // If the @start attribute is absent, but the previous Period element contains a @duration attribute then this new Period is also a regular Period. The start time of the new Period PeriodStart is the sum of the start time of the previous Period PeriodStart and the value of the attribute @duration of the previous Period.\n            else if (realPreviousPeriod !== null && realPreviousPeriod.hasOwnProperty(DashConstants.DURATION) && voPreviousPeriod !== null) {\n                voPeriod = new Period();\n                voPeriod.start = parseFloat((voPreviousPeriod.start + voPreviousPeriod.duration).toFixed(5));\n            }\n            // If (i) @start attribute is absent, and (ii) the Period element is the first in the MPD, and (iii) the MPD@type is 'static', then the PeriodStart time shall be set to zero.\n            else if (i === 0 && !isDynamic) {\n                voPeriod = new Period();\n                voPeriod.start = 0;\n            }\n\n            // The Period extends until the PeriodStart of the next Period.\n            // The difference between the PeriodStart time of a Period and\n            // the PeriodStart time of the following Period.\n            if (voPreviousPeriod !== null && isNaN(voPreviousPeriod.duration)) {\n                if (voPeriod !== null) {\n                    voPreviousPeriod.duration = parseFloat((voPeriod.start - voPreviousPeriod.start).toFixed(5));\n                } else {\n                    logger.warn('First period duration could not be calculated because lack of start and duration period properties. This will cause timing issues during playback');\n                }\n            }\n\n            if (voPeriod !== null) {\n                voPeriod.id = getPeriodId(realPeriod, i);\n                voPeriod.index = i;\n                voPeriod.mpd = mpd;\n                voPeriod.isEncrypted = isPeriodEncrypted(realPeriod);\n\n                if (realPeriod.hasOwnProperty(DashConstants.DURATION)) {\n                    voPeriod.duration = realPeriod.duration;\n                }\n\n                if (voPreviousPeriod) {\n                    voPreviousPeriod.nextPeriodId = voPeriod.id;\n                }\n\n                voPeriods.push(voPeriod);\n                realPreviousPeriod = realPeriod;\n                voPreviousPeriod = voPeriod;\n            }\n\n            realPeriod = null;\n            voPeriod = null;\n        }\n\n        if (voPeriods.length === 0) {\n            return voPeriods;\n        }\n\n        // The last Period extends until the end of the Media Presentation.\n        // The difference between the PeriodStart time of the last Period\n        // and the mpd duration\n        if (voPreviousPeriod !== null && isNaN(voPreviousPeriod.duration)) {\n            voPreviousPeriod.duration = parseFloat((getEndTimeForLastPeriod(voPreviousPeriod) - voPreviousPeriod.start).toFixed(5));\n        }\n\n        return voPeriods;\n    }\n\n    function getPeriodId(realPeriod, i) {\n        if (!realPeriod) {\n            throw new Error('Period cannot be null or undefined');\n        }\n\n        let id = Period.DEFAULT_ID + '_' + i;\n\n        if (realPeriod.hasOwnProperty(DashConstants.ID) && realPeriod.id.toString().length > 0 && realPeriod.id !== '__proto__') {\n            id = realPeriod.id.toString();\n        }\n\n        return id;\n    }\n\n    function getMpd(manifest) {\n        const mpd = new Mpd();\n\n        if (manifest) {\n            mpd.manifest = manifest;\n\n            if (manifest.hasOwnProperty(DashConstants.AVAILABILITY_START_TIME)) {\n                mpd.availabilityStartTime = new Date(manifest.availabilityStartTime.getTime());\n            } else {\n                if (manifest.loadedTime) {\n                    mpd.availabilityStartTime = new Date(manifest.loadedTime.getTime());\n                }\n            }\n\n            if (manifest.hasOwnProperty(DashConstants.AVAILABILITY_END_TIME)) {\n                mpd.availabilityEndTime = new Date(manifest.availabilityEndTime.getTime());\n            }\n\n            if (manifest.hasOwnProperty(DashConstants.MINIMUM_UPDATE_PERIOD)) {\n                mpd.minimumUpdatePeriod = manifest.minimumUpdatePeriod;\n            }\n\n            if (manifest.hasOwnProperty(DashConstants.MEDIA_PRESENTATION_DURATION)) {\n                mpd.mediaPresentationDuration = manifest.mediaPresentationDuration;\n            }\n\n            if (manifest.hasOwnProperty(DashConstants.SUGGESTED_PRESENTATION_DELAY)) {\n                mpd.suggestedPresentationDelay = manifest.suggestedPresentationDelay;\n            }\n\n            if (manifest.hasOwnProperty(DashConstants.TIMESHIFT_BUFFER_DEPTH)) {\n                mpd.timeShiftBufferDepth = manifest.timeShiftBufferDepth;\n            }\n\n            if (manifest.hasOwnProperty(DashConstants.MAX_SEGMENT_DURATION)) {\n                mpd.maxSegmentDuration = manifest.maxSegmentDuration;\n            }\n\n            if (manifest.hasOwnProperty(DashConstants.PUBLISH_TIME)) {\n                mpd.publishTime = new Date(manifest.publishTime);\n            }\n        }\n\n        return mpd;\n    }\n\n    function checkConfig() {\n        if (!errHandler || !errHandler.hasOwnProperty('error')) {\n            throw new Error(Constants.MISSING_CONFIG_ERROR);\n        }\n    }\n\n    function getEndTimeForLastPeriod(voPeriod) {\n        checkConfig();\n        const isDynamic = getIsDynamic(voPeriod.mpd.manifest);\n\n        let periodEnd;\n        if (voPeriod.mpd.manifest.mediaPresentationDuration) {\n            periodEnd = voPeriod.mpd.manifest.mediaPresentationDuration;\n        } else if (voPeriod.duration) {\n            periodEnd = voPeriod.duration;\n        } else if (isDynamic) {\n            periodEnd = Number.POSITIVE_INFINITY;\n        } else {\n            errHandler.error(new DashJSError(Errors.MANIFEST_ERROR_ID_PARSE_CODE, 'Must have @mediaPresentationDuration on MPD or an explicit @duration on the last period.', voPeriod));\n        }\n\n        return periodEnd;\n    }\n\n    function getEventsForPeriod(period) {\n        const manifest = period && period.mpd && period.mpd.manifest ? period.mpd.manifest : null;\n        const periodArray = manifest ? manifest.Period : null;\n        const eventStreams = periodArray && period && isInteger(period.index) ? periodArray[period.index].EventStream : null;\n        const events = [];\n        let i,\n            j;\n\n        if (eventStreams) {\n            for (i = 0; i < eventStreams.length; i++) {\n                const eventStream = new EventStream();\n                eventStream.period = period;\n                eventStream.timescale = 1;\n\n                if (eventStreams[i].hasOwnProperty(Constants.SCHEME_ID_URI)) {\n                    eventStream.schemeIdUri = eventStreams[i][Constants.SCHEME_ID_URI];\n                } else {\n                    throw new Error('Invalid EventStream. SchemeIdUri has to be set');\n                }\n                if (eventStreams[i].hasOwnProperty(DashConstants.TIMESCALE)) {\n                    eventStream.timescale = eventStreams[i][DashConstants.TIMESCALE];\n                }\n                if (eventStreams[i].hasOwnProperty(DashConstants.VALUE)) {\n                    eventStream.value = eventStreams[i][DashConstants.VALUE];\n                }\n                if (eventStreams[i].hasOwnProperty(DashConstants.PRESENTATION_TIME_OFFSET)) {\n                    eventStream.presentationTimeOffset = eventStreams[i][DashConstants.PRESENTATION_TIME_OFFSET];\n                }\n                for (j = 0; eventStreams[i].Event && j < eventStreams[i].Event.length; j++) {\n                    const currentMpdEvent = eventStreams[i].Event[j];\n                    const event = new Event();\n                    event.presentationTime = 0;\n                    event.eventStream = eventStream;\n\n                    if (currentMpdEvent.hasOwnProperty(DashConstants.PRESENTATION_TIME)) {\n                        event.presentationTime = currentMpdEvent.presentationTime;\n                    }\n                    const presentationTimeOffset = eventStream.presentationTimeOffset ? eventStream.presentationTimeOffset / eventStream.timescale : 0;\n                    event.calculatedPresentationTime = event.presentationTime / eventStream.timescale + period.start - presentationTimeOffset;\n\n                    if (currentMpdEvent.hasOwnProperty(DashConstants.DURATION)) {\n                        event.duration = currentMpdEvent.duration / eventStream.timescale;\n                    }\n                    if (currentMpdEvent.hasOwnProperty(DashConstants.ID)) {\n                        event.id = parseInt(currentMpdEvent.id);\n                    } else {\n                        event.id = null;\n                    }\n\n                    if (currentMpdEvent.Signal && currentMpdEvent.Signal.Binary) {\n                        // toString is used to manage both regular and namespaced tags\n                        event.messageData = BASE64.decodeArray(currentMpdEvent.Signal.Binary.toString());\n                    } else {\n                        // From Cor.1: 'NOTE: this attribute is an alternative\n                        // to specifying a complete XML element(s) in the Event.\n                        // It is useful when an event leans itself to a compact\n                        // string representation'.\n                        event.messageData =\n                            currentMpdEvent.messageData ||\n                            currentMpdEvent.__cdata ||\n                            currentMpdEvent.__text;\n                    }\n\n                    events.push(event);\n                }\n            }\n        }\n\n        return events;\n    }\n\n    function getEventStreams(inbandStreams, representation, period) {\n        const eventStreams = [];\n        let i;\n\n        if (!inbandStreams) {\n            return eventStreams;\n        }\n\n        for (i = 0; i < inbandStreams.length; i++) {\n            const eventStream = new EventStream();\n            eventStream.timescale = 1;\n            eventStream.representation = representation;\n\n            if (inbandStreams[i].hasOwnProperty(Constants.SCHEME_ID_URI)) {\n                eventStream.schemeIdUri = inbandStreams[i].schemeIdUri;\n            } else {\n                throw new Error('Invalid EventStream. SchemeIdUri has to be set');\n            }\n            if (inbandStreams[i].hasOwnProperty(DashConstants.TIMESCALE)) {\n                eventStream.timescale = inbandStreams[i].timescale;\n            }\n            if (inbandStreams[i].hasOwnProperty(DashConstants.VALUE)) {\n                eventStream.value = inbandStreams[i].value;\n            }\n            eventStreams.push(eventStream);\n            eventStream.period = period;\n        }\n\n        return eventStreams;\n    }\n\n    function getEventStreamForAdaptationSet(manifest, adaptation, period) {\n        let inbandStreams,\n            periodArray,\n            adaptationArray;\n\n        if (manifest && manifest.Period && adaptation && adaptation.period && isInteger(adaptation.period.index)) {\n            periodArray = manifest.Period[adaptation.period.index];\n            if (periodArray && periodArray.AdaptationSet && isInteger(adaptation.index)) {\n                adaptationArray = periodArray.AdaptationSet[adaptation.index];\n                if (adaptationArray) {\n                    inbandStreams = adaptationArray.InbandEventStream;\n                }\n            }\n        }\n\n        return getEventStreams(inbandStreams, null, period);\n    }\n\n    function getEventStreamForRepresentation(manifest, representation, period) {\n        let inbandStreams,\n            periodArray,\n            adaptationArray,\n            representationArray;\n\n        if (manifest && manifest.Period && representation && representation.adaptation && representation.adaptation.period && isInteger(representation.adaptation.period.index)) {\n            periodArray = manifest.Period[representation.adaptation.period.index];\n            if (periodArray && periodArray.AdaptationSet && isInteger(representation.adaptation.index)) {\n                adaptationArray = periodArray.AdaptationSet[representation.adaptation.index];\n                if (adaptationArray && adaptationArray.Representation && isInteger(representation.index)) {\n                    representationArray = adaptationArray.Representation[representation.index];\n                    if (representationArray) {\n                        inbandStreams = representationArray.InbandEventStream;\n                    }\n                }\n            }\n        }\n\n        return getEventStreams(inbandStreams, representation, period);\n    }\n\n    function getUTCTimingSources(manifest) {\n        const isDynamic = getIsDynamic(manifest);\n        const hasAST = manifest ? manifest.hasOwnProperty(DashConstants.AVAILABILITY_START_TIME) : false;\n        const utcTimingsArray = manifest ? manifest.UTCTiming : null;\n        const utcTimingEntries = [];\n\n        // do not bother synchronizing the clock unless MPD is live,\n        // or it is static and has availabilityStartTime attribute\n        if ((isDynamic || hasAST)) {\n            if (utcTimingsArray) {\n                // the order is important here - 23009-1 states that the order\n                // in the manifest \"indicates relative preference, first having\n                // the highest, and the last the lowest priority\".\n                utcTimingsArray.forEach(function (utcTiming) {\n                    const entry = new UTCTiming();\n\n                    if (utcTiming.hasOwnProperty(Constants.SCHEME_ID_URI)) {\n                        entry.schemeIdUri = utcTiming.schemeIdUri;\n                    } else {\n                        // entries of type DescriptorType with no schemeIdUri\n                        // are meaningless. let's just ignore this entry and\n                        // move on.\n                        return;\n                    }\n\n                    // this is (incorrectly) interpreted as a number - schema\n                    // defines it as a string\n                    if (utcTiming.hasOwnProperty(DashConstants.VALUE)) {\n                        entry.value = utcTiming.value.toString();\n                    } else {\n                        // without a value, there's not a lot we can do with\n                        // this entry. let's just ignore this one and move on\n                        return;\n                    }\n\n                    // we're not interested in the optional id or any other\n                    // attributes which might be attached to the entry\n\n                    utcTimingEntries.push(entry);\n                });\n            }\n        }\n\n        return utcTimingEntries;\n    }\n\n    function getBaseURLsFromElement(node) {\n        const baseUrls = [];\n        // if node.BaseURL and node.baseUri are undefined entries\n        // will be [undefined] which entries.some will just skip\n        const entries = node.BaseURL || [node.baseUri];\n        let earlyReturn = false;\n\n        entries.some(entry => {\n            if (entry) {\n                const baseUrl = new BaseURL();\n                let text = entry.__text || entry;\n\n                if (urlUtils.isRelative(text)) {\n                    // it doesn't really make sense to have relative and\n                    // absolute URLs at the same level, or multiple\n                    // relative URLs at the same level, so assume we are\n                    // done from this level of the MPD\n                    earlyReturn = true;\n\n                    // deal with the specific case where the MPD@BaseURL\n                    // is specified and is relative. when no MPD@BaseURL\n                    // entries exist, that case is handled by the\n                    // [node.baseUri] in the entries definition.\n                    if (node.baseUri) {\n                        text = urlUtils.resolve(text, node.baseUri);\n                    }\n                }\n\n                baseUrl.url = text;\n\n                // serviceLocation is optional, but we need it in order\n                // to blacklist correctly. if it's not available, use\n                // anything unique since there's no relationship to any\n                // other BaseURL and, in theory, the url should be\n                // unique so use this instead.\n                if (entry.hasOwnProperty(DashConstants.SERVICE_LOCATION) &&\n                    entry.serviceLocation.length) {\n                    baseUrl.serviceLocation = entry.serviceLocation;\n                } else {\n                    baseUrl.serviceLocation = text;\n                }\n\n                if (entry.hasOwnProperty(DashConstants.DVB_PRIORITY)) {\n                    baseUrl.dvbPriority = entry[DashConstants.DVB_PRIORITY];\n                }\n\n                if (entry.hasOwnProperty(DashConstants.DVB_WEIGHT)) {\n                    baseUrl.dvbWeight = entry[DashConstants.DVB_WEIGHT];\n                }\n\n                if (entry.hasOwnProperty(DashConstants.AVAILABILITY_TIME_OFFSET)) {\n                    baseUrl.availabilityTimeOffset = entry[DashConstants.AVAILABILITY_TIME_OFFSET];\n                }\n\n                if (entry.hasOwnProperty(DashConstants.AVAILABILITY_TIME_COMPLETE)) {\n                    baseUrl.availabilityTimeComplete = entry[DashConstants.AVAILABILITY_TIME_COMPLETE] !== 'false';\n                }\n                /* NOTE: byteRange currently unused\n                 */\n\n                baseUrls.push(baseUrl);\n\n                return earlyReturn;\n            }\n        });\n\n        return baseUrls;\n    }\n\n    function getContentSteering(manifest) {\n        if (manifest && manifest.hasOwnProperty(DashConstants.CONTENT_STEERING)) {\n            // Only one ContentSteering element is supported on MPD level\n            const element = manifest[DashConstants.CONTENT_STEERING][0];\n            return _createContentSteeringInstance(element);\n        }\n\n        return undefined;\n    }\n\n    function _createContentSteeringInstance(element) {\n        const entry = new ContentSteering();\n\n        entry.serverUrl = element.__text;\n\n        if (element.hasOwnProperty(DashConstants.DEFAULT_SERVICE_LOCATION)) {\n            entry.defaultServiceLocation = element[DashConstants.DEFAULT_SERVICE_LOCATION];\n            entry.defaultServiceLocationArray = entry.defaultServiceLocation.split(' ');\n        }\n\n        if (element.hasOwnProperty(DashConstants.QUERY_BEFORE_START)) {\n            entry.queryBeforeStart = element[DashConstants.QUERY_BEFORE_START].toLowerCase() === 'true';\n        }\n\n        if (element.hasOwnProperty(DashConstants.CLIENT_REQUIREMENT)) {\n            entry.clientRequirement = element[DashConstants.CLIENT_REQUIREMENT].toLowerCase() !== 'false';\n        }\n\n        return entry;\n    }\n\n    function _createClientDataReportingInstance(element) {\n        const entry = new ClientDataReporting();\n\n        if (element.hasOwnProperty(DashConstants.CMCD_PARAMETERS) && element[DashConstants.CMCD_PARAMETERS].schemeIdUri === Constants.CTA_5004_2023_SCHEME) {\n            entry.cmcdParameters = new CMCDParameters();\n            entry.cmcdParameters.init(element[DashConstants.CMCD_PARAMETERS]);\n        }\n\n        if (element.hasOwnProperty(DashConstants.SERVICE_LOCATIONS) && element[DashConstants.SERVICE_LOCATIONS] !== '') {\n            entry.serviceLocations = element[DashConstants.SERVICE_LOCATIONS];\n            entry.serviceLocationsArray = entry.serviceLocations.toString().split(' ');\n        }\n\n        if (element.hasOwnProperty(DashConstants.ADAPTATION_SETS) && element[DashConstants.ADAPTATION_SETS] !== '') {\n            entry.adaptationSets = element[DashConstants.ADAPTATION_SETS];\n            entry.adaptationSetsArray = entry.adaptationSets.toString().split(' ');\n        }\n\n        return entry;\n    }\n\n    function getLocation(manifest) {\n        if (manifest && manifest.hasOwnProperty(DashConstants.LOCATION)) {\n            return manifest[DashConstants.LOCATION].map((entry) => {\n                const text = entry.__text || entry;\n                const serviceLocation = entry.hasOwnProperty(DashConstants.SERVICE_LOCATION) ? entry[DashConstants.SERVICE_LOCATION] : null;\n\n                return new MpdLocation(text, serviceLocation)\n            })\n        }\n\n        return [];\n    }\n\n    function getPatchLocation(manifest) {\n        if (manifest && manifest.hasOwnProperty(DashConstants.PATCH_LOCATION)) {\n            return manifest[DashConstants.PATCH_LOCATION].map((entry) => {\n                const text = entry.__text || entry;\n                const serviceLocation = entry.hasOwnProperty(DashConstants.SERVICE_LOCATION) ? entry[DashConstants.SERVICE_LOCATION] : null;\n                let ttl = entry.hasOwnProperty(DashConstants.TTL) ? parseFloat(entry[DashConstants.TTL]) * 1000 : NaN;\n\n                return new PatchLocation(text, serviceLocation, ttl)\n            })\n        }\n\n        return [];\n    }\n\n    function getSuggestedPresentationDelay(mpd) {\n        return mpd && mpd.hasOwnProperty(DashConstants.SUGGESTED_PRESENTATION_DELAY) ? mpd.suggestedPresentationDelay : null;\n    }\n\n    function getAvailabilityStartTime(mpd) {\n        return mpd && mpd.hasOwnProperty(DashConstants.AVAILABILITY_START_TIME) && mpd.availabilityStartTime !== null ? mpd.availabilityStartTime.getTime() : null;\n    }\n\n    function getServiceDescriptions(manifest) {\n        const serviceDescriptions = [];\n        if (manifest && manifest.hasOwnProperty(DashConstants.SERVICE_DESCRIPTION)) {\n            for (const sd of manifest.ServiceDescription) {\n                // Convert each of the properties defined in\n                let id = null,\n                    schemeIdUri = null,\n                    latency = null,\n                    playbackRate = null,\n                    operatingQuality = null,\n                    operatingBandwidth = null,\n                    contentSteering = null,\n                    clientDataReporting = null;\n\n                for (const prop in sd) {\n                    if (sd.hasOwnProperty(prop)) {\n                        if (prop === DashConstants.ID) {\n                            id = sd[prop];\n                        } else if (prop === DashConstants.SERVICE_DESCRIPTION_SCOPE) {\n                            schemeIdUri = sd[prop].schemeIdUri;\n                        } else if (prop === DashConstants.SERVICE_DESCRIPTION_LATENCY) {\n                            latency = {\n                                target: parseInt(sd[prop].target),\n                                max: parseInt(sd[prop].max),\n                                min: parseInt(sd[prop].min),\n                                referenceId: parseInt(sd[prop].referenceId)\n                            };\n                        } else if (prop === DashConstants.SERVICE_DESCRIPTION_PLAYBACK_RATE) {\n                            playbackRate = {\n                                max: parseFloat(sd[prop].max),\n                                min: parseFloat(sd[prop].min)\n                            };\n                        } else if (prop === DashConstants.SERVICE_DESCRIPTION_OPERATING_QUALITY) {\n                            operatingQuality = {\n                                mediaType: sd[prop].mediaType,\n                                max: parseInt(sd[prop].max),\n                                min: parseInt(sd[prop].min),\n                                target: parseInt(sd[prop].target),\n                                type: sd[prop].type,\n                                maxQualityDifference: parseInt(sd[prop].maxQualityDifference)\n                            }\n                        } else if (prop === DashConstants.SERVICE_DESCRIPTION_OPERATING_BANDWIDTH) {\n                            operatingBandwidth = {\n                                mediaType: sd[prop].mediaType,\n                                max: parseInt(sd[prop].max),\n                                min: parseInt(sd[prop].min),\n                                target: parseInt(sd[prop].target)\n                            }\n                        } else if (prop === DashConstants.CONTENT_STEERING) {\n                            let element = sd[prop];\n                            element = Array.isArray(element) ? element.at(element.length - 1) : element;\n                            contentSteering = _createContentSteeringInstance(element);\n                        } else if (prop === DashConstants.CLIENT_DATA_REPORTING) {\n                            clientDataReporting = _createClientDataReportingInstance(sd[prop]);\n                        }\n                    }\n                }\n\n                serviceDescriptions.push({\n                    id,\n                    schemeIdUri,\n                    latency,\n                    playbackRate,\n                    operatingQuality,\n                    operatingBandwidth,\n                    contentSteering,\n                    clientDataReporting\n                });\n            }\n        }\n\n        return serviceDescriptions;\n    }\n\n    function setConfig(config) {\n        if (!config) {\n            return;\n        }\n\n        if (config.errHandler) {\n            errHandler = config.errHandler;\n        }\n\n        if (config.BASE64) {\n            BASE64 = config.BASE64;\n        }\n    }\n\n    instance = {\n        getAccessibilityForAdaptation,\n        getAdaptationForId,\n        getAdaptationForIndex,\n        getAdaptationsForPeriod,\n        getAdaptationsForType,\n        getAudioChannelConfigurationForAdaptation,\n        getAudioChannelConfigurationForRepresentation,\n        getAvailabilityStartTime,\n        getBandwidth,\n        getBaseURLsFromElement,\n        getBitrateListForAdaptation,\n        getCodec,\n        getCombinedEssentialPropertiesForAdaptationSet,\n        getCombinedSupplementalPropertiesForAdaptationSet,\n        getContentProtectionByAdaptation,\n        getContentProtectionByManifest,\n        getContentProtectionByPeriod,\n        getContentSteering,\n        getDuration,\n        getEssentialPropertiesForAdaptationSet,\n        getEssentialPropertiesForRepresentation,\n        getEventStreamForAdaptationSet,\n        getEventStreamForRepresentation,\n        getEventsForPeriod,\n        getId,\n        getIndexForAdaptation,\n        getIsDynamic,\n        getIsFragmented,\n        getIsText,\n        getIsTypeOf,\n        getLabelsForAdaptation,\n        getLanguageForAdaptation,\n        getLocation,\n        getManifestUpdatePeriod,\n        getMimeType,\n        getMpd,\n        getPatchLocation,\n        getProducerReferenceTimesForAdaptation,\n        getPublishTime,\n        getRealPeriodForIndex,\n        getRealPeriods,\n        getRegularPeriods,\n        getRepresentationCount,\n        getRepresentationFor,\n        getRepresentationSortFunction,\n        getRepresentationsForAdaptation,\n        getRolesForAdaptation,\n        getSegmentAlignment,\n        getSelectionPriority,\n        getServiceDescriptions,\n        getSubSegmentAlignment,\n        getSuggestedPresentationDelay,\n        getSupplementalPropertiesForAdaptationSet,\n        getSupplementalPropertiesForRepresentation,\n        getUTCTimingSources,\n        getViewpointForAdaptation,\n        hasProfile,\n        isPeriodEncrypted,\n        setConfig\n    };\n\n    setup();\n\n    return instance;\n}\n\nDashManifestModel.__dashjs_factory_name = 'DashManifestModel';\nexport default FactoryMaker.getSingletonFactory(DashManifestModel);\n","/**\n * CMCD parameter name.\n *\n * @group CMCD\n *\n * @beta\n */\nexport const CMCD_PARAM = 'CMCD';\n","import type { ValueOf } from '../utils/ValueOf.js';\n\n/**\n * Common Media Object Type\n *\n * @internal\n */\nexport const CmObjectType = {\n\t/**\n\t * text file, such as a manifest or playlist\n\t */\n\tMANIFEST: 'm',\n\n\t/**\n\t * audio only\n\t */\n\tAUDIO: 'a',\n\n\t/**\n\t * video only\n\t */\n\tVIDEO: 'v',\n\n\t/**\n\t * muxed audio and video\n\t */\n\tMUXED: 'av',\n\n\t/**\n\t * init segment\n\t */\n\tINIT: 'i',\n\n\t/**\n\t * caption or subtitle\n\t */\n\tCAPTION: 'c',\n\n\t/**\n\t * ISOBMFF timed text track\n\t */\n\tTIMED_TEXT: 'tt',\n\n\t/**\n\t * cryptographic key, license or certificate.\n\t */\n\tKEY: 'k',\n\n\t/**\n\t * other\n\t */\n\tOTHER: 'o',\n} as const;\n\n/**\n * Common Media Object Type\n *\n * @see {@link CmcdEncoding}\n * @internal\n */\nexport type CmObjectType = ValueOf<typeof CmObjectType>;\n","import { CmObjectType } from '../cta/CmObjectType.js';\n\n/**\n * Common Media Client Data Object Type\n *\n * @group CMCD\n *\n * @beta\n *\n * @enum\n */\nexport const CmcdObjectType = CmObjectType as typeof CmObjectType;\n\n/**\n * @beta\n */\nexport type CmcdObjectType = CmObjectType;\n","import { CmStreamType } from '../cta/CmStreamType.js';\n\n/**\n * Common Media Client Data Stream Type\n *\n * @group CMCD\n *\n * @enum\n *\n * @beta\n */\nexport const CmcdStreamType = CmStreamType as typeof CmStreamType;\n\n/**\n * @beta\n */\nexport type CmcdStreamType = CmStreamType;\n","import type { ValueOf } from '../utils/ValueOf.js';\n\n/**\n * Common Media Stream Type\n *\n * @internal\n */\nexport const CmStreamType = {\n\t/**\n\t *  All segments are available – e.g., VOD\n\t */\n\tVOD: 'v',\n\n\t/**\n\t * Segments become available over time – e.g., LIVE\n\t */\n\tLIVE: 'l',\n} as const;\n\n/**\n * Common Media Stream Type\n *\n * @internal\n * @see {@link CmcdEncoding}\n */\nexport type CmStreamType = ValueOf<typeof CmStreamType>;\n","import { CmStreamingFormat } from '../cta/CmStreamingFormat.js';\n\n/**\n * Common Media Client Data Streaming Format\n *\n * @group CMCD\n *\n * @enum\n *\n * @beta\n */\nexport const CmcdStreamingFormat = CmStreamingFormat as typeof CmStreamingFormat;\n\n/**\n * @beta\n */\nexport type CmcdStreamingFormat = CmStreamingFormat\n","import type { ValueOf } from '../utils/ValueOf.js';\n\n/**\n * Common Media Streaming Format\n *\n * @internal\n */\nexport const CmStreamingFormat = {\n\t/**\n\t * MPEG DASH\n\t */\n\tDASH: 'd',\n\n\t/**\n\t * HTTP Live Streaming (HLS)\n\t */\n\tHLS: 'h',\n\n\t/**\n\t * Smooth Streaming\n\t */\n\tSMOOTH: 's',\n\n\t/**\n\t * Other\n\t */\n\tOTHER: 'o',\n} as const;\n\n/**\n * Common Media Streaming Format\n *\n * @see {@link CmcdEncoding}\n * @internal\n */\nexport type CmStreamingFormat = ValueOf<typeof CmStreamingFormat>;\n","import type { SfBareItem } from './SfBareItem.js';\nimport type { SfParameters } from './SfParameters.js';\n\n/**\n * Structured Field Item\n *\n * @group Structured Field\n *\n * @beta\n */\nexport class SfItem {\n\n\tvalue: SfBareItem;\n\n\tparams?: SfParameters;\n\n\tconstructor(value: any, params?: SfParameters) {\n\t\tif (Array.isArray(value)) {\n\t\t\tvalue = value.map((v) => (v instanceof SfItem) ? v : new SfItem(v));\n\t\t}\n\n\t\tthis.value = value;\n\t\tthis.params = params;\n\t}\n}\n","export const DICT = 'Dict';\n","function format(value: any) {\n\tif (Array.isArray(value)) {\n\t\treturn JSON.stringify(value);\n\t}\n\tif (value instanceof Map) {\n\t\treturn 'Map{}';\n\t}\n\tif (value instanceof Set) {\n\t\treturn 'Set{}';\n\t}\n\tif (typeof value === 'object') {\n\t\treturn JSON.stringify(value);\n\t}\n\treturn String(value);\n}\n\nexport function throwError(action: string, src: any, type: string, cause?: any): Error {\n\treturn new Error(`failed to ${action} \"${format(src)}\" as ${type}`, { cause });\n}\n","import { throwError } from '../utils/throwError.js';\n\nexport function serializeError(src: any, type: string, cause?: any): Error {\n\treturn throwError('serialize', src, type, cause);\n}\n","/**\n * A class to represent structured field tokens when `Symbol` is not available.\n *\n * @group Structured Field\n *\n * @beta\n */\nexport class SfToken {\n\tconstructor(public description: string) { }\n}\n","export const BARE_ITEM = 'Bare Item';\n","export const BOOLEAN = 'Boolean';\n","export const BYTES = 'Byte Sequence';\n","export const INTEGER: string = 'Integer';\n","export function isInvalidInt(value: number): boolean {\n\treturn value < -999999999999999 || 999999999999999 < value;\n}\n","import { INTEGER } from '../utils/INTEGER.js';\nimport { isInvalidInt } from '../utils/isInvalidInt.js';\nimport { serializeError } from './serializeError.js';\n\n// 4.1.4.  Serializing an Integer\n//\n// Given an Integer as input_integer, return an ASCII string suitable\n// for use in a HTTP field value.\n//\n// 1.  If input_integer is not an integer in the range of\n//     -999,999,999,999,999 to 999,999,999,999,999 inclusive, fail\n//     serialization.\n//\n// 2.  Let output be an empty string.\n//\n// 3.  If input_integer is less than (but not equal to) 0, append \"-\" to\n//     output.\n//\n// 4.  Append input_integer's numeric value represented in base 10 using\n//     only decimal digits to output.\n//\n// 5.  Return output.\nexport function serializeInteger(value: number): string {\n\tif (isInvalidInt(value)) {\n\t\tthrow serializeError(value, INTEGER);\n\t}\n\n\treturn value.toString();\n}\n","/**\n * This implements the rounding procedure described in step 2 of the \"Serializing a Decimal\" specification.\n * This rounding style is known as \"even rounding\", \"banker's rounding\", or \"commercial rounding\".\n *\n * @param value - The value to round\n * @param precision - The number of decimal places to round to\n * @returns The rounded value\n *\n * @group Utils\n *\n * @beta\n */\nexport function roundToEven(value: number, precision: number): number {\n\tif (value < 0) {\n\t\treturn -roundToEven(-value, precision);\n\t}\n\n\tconst decimalShift = Math.pow(10, precision);\n\tconst isEquidistant = Math.abs(((value * decimalShift) % 1) - 0.5) < Number.EPSILON;\n\n\tif (isEquidistant) {\n\t\t// If the tail of the decimal place is 'equidistant' we round to the nearest even value\n\t\tconst flooredValue = Math.floor(value * decimalShift);\n\t\treturn (flooredValue % 2 === 0 ? flooredValue : flooredValue + 1) / decimalShift;\n\t}\n\telse {\n\t\t// Otherwise, proceed as normal\n\t\treturn Math.round(value * decimalShift) / decimalShift;\n\t}\n}\n","export const DECIMAL: string = 'Decimal';\n","import { roundToEven } from '../../utils/roundToEven.js';\nimport { DECIMAL } from '../utils/DECIMAL.js';\nimport { serializeError } from './serializeError.js';\n\n// 4.1.5.  Serializing a Decimal\n//\n// Given a decimal number as input_decimal, return an ASCII string\n// suitable for use in a HTTP field value.\n//\n// 1.   If input_decimal is not a decimal number, fail serialization.\n//\n// 2.   If input_decimal has more than three significant digits to the\n//      right of the decimal point, round it to three decimal places,\n//      rounding the final digit to the nearest value, or to the even\n//      value if it is equidistant.\n//\n// 3.   If input_decimal has more than 12 significant digits to the left\n//      of the decimal point after rounding, fail serialization.\n//\n// 4.   Let output be an empty string.\n//\n// 5.   If input_decimal is less than (but not equal to) 0, append \"-\"\n//      to output.\n//\n// 6.   Append input_decimal's integer component represented in base 10\n//      (using only decimal digits) to output; if it is zero, append\n//      \"0\".\n//\n// 7.   Append \".\" to output.\n//\n// 8.   If input_decimal's fractional component is zero, append \"0\" to\n//      output.\n//\n// 9.   Otherwise, append the significant digits of input_decimal's\n//      fractional component represented in base 10 (using only decimal\n//      digits) to output.\n//\n// 10.  Return output.\nexport function serializeDecimal(value: number): string {\n\tconst roundedValue = roundToEven(value, 3); // round to 3 decimal places\n\tif (Math.floor(Math.abs(roundedValue)).toString().length > 12) {\n\t\tthrow serializeError(value, DECIMAL);\n\t}\n\tconst stringValue = roundedValue.toString();\n\treturn stringValue.includes('.') ? stringValue : `${stringValue}.0`;\n}\n","export const STRING = 'String';\n","export const STRING_REGEX: RegExp = /[\\x00-\\x1f\\x7f]+/; // eslint-disable-line no-control-regex\n","import type { SfToken } from '../../structuredfield/SfToken.js';\n\n/**\n * Converts a symbol to a string.\n *\n * @param symbol - The symbol to convert.\n *\n * @returns The string representation of the symbol.\n *\n * @internal\n */\nexport function symbolToStr(symbol: symbol | SfToken): string {\n\treturn symbol.description || symbol.toString().slice(7, -1);\n}\n","export const TOKEN = 'Token';\n","import { symbolToStr } from '../../cta/utils/symbolToStr.js';\nimport type { SfToken } from '../SfToken.js';\nimport { TOKEN } from '../utils/TOKEN.js';\nimport { serializeError } from './serializeError.js';\n\n// 4.1.7.  Serializing a Token\n//\n// Given a Token as input_token, return an ASCII string suitable for use\n// in a HTTP field value.\n//\n// 1.  Convert input_token into a sequence of ASCII characters; if\n//     conversion fails, fail serialization.\n//\n// 2.  If the first character of input_token is not ALPHA or \"*\", or the\n//     remaining portion contains a character not in tchar, \":\" or \"/\",\n//     fail serialization.\n//\n// 3.  Let output be an empty string.\n//\n// 4.  Append input_token to output.\n//\n// 5.  Return output.\nexport function serializeToken(token: symbol): string;\nexport function serializeToken(token: SfToken): string;\nexport function serializeToken(token: symbol | SfToken) {\n\tconst value = symbolToStr(token);\n\tif (/^([a-zA-Z*])([!#$%&'*+\\-.^_`|~\\w:/]*)$/.test(value) === false) {\n\t\tthrow serializeError(value, TOKEN);\n\t}\n\treturn value;\n}\n","import { SfToken } from '../SfToken.js';\nimport { BARE_ITEM } from '../utils/BARE_ITEM.js';\nimport { serializeBoolean } from './serializeBoolean.js';\nimport { serializeByteSequence } from './serializeByteSequence.js';\nimport { serializeDate } from './serializeDate.js';\nimport { serializeDecimal } from './serializeDecimal.js';\nimport { serializeError } from './serializeError.js';\nimport { serializeInteger } from './serializeInteger.js';\nimport { serializeString } from './serializeString.js';\nimport { serializeToken } from './serializeToken.js';\n\n// 4.1.3.1.  Serializing a Bare Item\n//\n// Given an Item as input_item, return an ASCII string suitable for use\n// in a HTTP field value.\n//\n// 1.  If input_item is an Integer, return the result of running\n//     Serializing an Integer (Section 4.1.4) with input_item.\n//\n// 2.  If input_item is a Decimal, return the result of running\n//     Serializing a Decimal (Section 4.1.5) with input_item.\n//\n// 3.  If input_item is a String, return the result of running\n//     Serializing a String (Section 4.1.6) with input_item.\n//\n// 4.  If input_item is a Token, return the result of running\n//     Serializing a Token (Section 4.1.7) with input_item.\n//\n// 5.  If input_item is a Boolean, return the result of running\n//     Serializing a Boolean (Section 4.1.9) with input_item.\n//\n// 6.  If input_item is a Byte Sequence, return the result of running\n//     Serializing a Byte Sequence (Section 4.1.8) with input_item.\n//\n// 7.  If input_item is a Date, return the result of running Serializing\n//     a Date (Section 4.1.10) with input_item.\n//\n// 8.  Otherwise, fail serialization.\nexport function serializeBareItem(value: any): string {\n\tswitch (typeof value) {\n\t\tcase 'number':\n\t\t\tif (!Number.isFinite(value)) {\n\t\t\t\tthrow serializeError(value, BARE_ITEM);\n\t\t\t}\n\n\t\t\tif (Number.isInteger(value)) {\n\t\t\t\treturn serializeInteger(value);\n\t\t\t}\n\t\t\treturn serializeDecimal(value);\n\t\tcase 'string':\n\t\t\treturn serializeString(value);\n\t\tcase 'symbol':\n\t\t\treturn serializeToken(value);\n\t\tcase 'boolean':\n\t\t\treturn serializeBoolean(value);\n\t\tcase 'object':\n\t\t\tif (value instanceof Date) {\n\t\t\t\treturn serializeDate(value);\n\t\t\t}\n\t\t\tif (value instanceof Uint8Array) {\n\t\t\t\treturn serializeByteSequence(value);\n\t\t\t}\n\t\t\tif (value instanceof SfToken) {\n\t\t\t\treturn serializeToken(value);\n\t\t\t}\n\t\tdefault:\n\t\t\t// fail\n\t\t\tthrow serializeError(value, BARE_ITEM);\n\t}\n}\n","import { STRING } from '../utils/STRING.js';\nimport { STRING_REGEX } from '../utils/STRING_REGEX.js';\nimport { serializeError } from './serializeError.js';\n\n// 4.1.6.  Serializing a String\n//\n// Given a String as input_string, return an ASCII string suitable for\n// use in a HTTP field value.\n//\n// 1.  Convert input_string into a sequence of ASCII characters; if\n//     conversion fails, fail serialization.\n//\n// 2.  If input_string contains characters in the range %x00-1f or %x7f\n//     (i.e., not in VCHAR or SP), fail serialization.\n//\n// 3.  Let output be the string DQUOTE.\n//\n// 4.  For each character char in input_string:\n//\n//     1.  If char is \"\\\" or DQUOTE:\n//\n//         1.  Append \"\\\" to output.\n//\n//     2.  Append char to output.\n//\n// 5.  Append DQUOTE to output.\n//\n// 6.  Return output.\nexport function serializeString(value: string) {\n\tif (STRING_REGEX.test(value)) {\n\t\tthrow serializeError(value, STRING);\n\t}\n\n\treturn `\"${value.replace(/\\\\/g, `\\\\\\\\`).replace(/\"/g, `\\\\\"`)}\"`;\n}\n","import { BOOLEAN } from '../utils/BOOLEAN.js';\nimport { serializeError } from './serializeError.js';\n\n// 4.1.9.  Serializing a Boolean\n//\n// Given a Boolean as input_boolean, return an ASCII string suitable for\n// use in a HTTP field value.\n//\n// 1.  If input_boolean is not a boolean, fail serialization.\n//\n// 2.  Let output be an empty string.\n//\n// 3.  Append \"?\" to output.\n//\n// 4.  If input_boolean is true, append \"1\" to output.\n//\n// 5.  If input_boolean is false, append \"0\" to output.\n//\n// 6.  Return output.\nexport function serializeBoolean(value: boolean): string {\n\tif (typeof value !== 'boolean') {\n\t\tthrow serializeError(value, BOOLEAN);\n\t}\n\treturn value ? '?1' : '?0';\n}\n","import { serializeInteger } from './serializeInteger.js';\n\n// 4.1.10.  Serializing a Date\n//\n// Given a Date as input_integer, return an ASCII string suitable for\n// use in an HTTP field value.\n// 1.  Let output be \"@\".\n// 2.  Append to output the result of running Serializing an Integer\n//     with input_date (Section 4.1.4).\n// 3.  Return output.\nexport function serializeDate(value: Date) {\n\treturn `@${serializeInteger(value.getTime() / 1000)}`;\n}\n","import { base64encode } from '../../utils/base64encode.js';\nimport { BYTES } from '../utils/BYTES.js';\nimport { serializeError } from './serializeError.js';\n\n// 4.1.8.  Serializing a Byte Sequence\n//\n// Given a Byte Sequence as input_bytes, return an ASCII string suitable\n// for use in a HTTP field value.\n//\n// 1.  If input_bytes is not a sequence of bytes, fail serialization.\n//\n// 2.  Let output be an empty string.\n//\n// 3.  Append \":\" to output.\n//\n// 4.  Append the result of base64-encoding input_bytes as per\n//     [RFC4648], Section 4, taking account of the requirements below.\n//\n// 5.  Append \":\" to output.\n//\n// 6.  Return output.\n//\n// The encoded data is required to be padded with \"=\", as per [RFC4648],\n// Section 3.2.\n//\n// Likewise, encoded data SHOULD have pad bits set to zero, as per\n// [RFC4648], Section 3.5, unless it is not possible to do so due to\n// implementation constraints.\nexport function serializeByteSequence(value: Uint8Array) {\n\tif (ArrayBuffer.isView(value) === false) {\n\t\tthrow serializeError(value, BYTES);\n\t}\n\treturn `:${base64encode(value)}:`;\n}\n","/**\n * Encodes binary data to base64\n *\n * @param binary - The binary data to encode\n * @returns The base64 encoded string\n *\n * @group Utils\n *\n * @beta\n */\nexport function base64encode(binary: Uint8Array): string {\n\treturn btoa(String.fromCharCode(...binary));\n}\n","export const KEY = 'Key';\n","import { KEY } from '../utils/KEY.js';\nimport { serializeError } from './serializeError.js';\n\n// 4.1.1.3.  Serializing a Key\n//\n// Given a key as input_key, return an ASCII string suitable for use in\n// a HTTP field value.\n//\n// 1.  Convert input_key into a sequence of ASCII characters; if\n//     conversion fails, fail serialization.\n//\n// 2.  If input_key contains characters not in lcalpha, DIGIT, \"_\", \"-\",\n//     \".\", or \"*\" fail serialization.\n//\n// 3.  If the first character of input_key is not lcalpha or \"*\", fail\n//     serialization.\n//\n// 4.  Let output be an empty string.\n//\n// 5.  Append input_key to output.\n//\n// 6.  Return output.\nexport function serializeKey(value: string): string {\n\tif (/^[a-z*][a-z0-9\\-_.*]*$/.test(value) === false) {\n\t\tthrow serializeError(value, KEY);\n\t}\n\treturn value;\n}\n","import { serializeBareItem } from './serializeBareItem.js';\nimport { serializeKey } from './serializeKey.js';\n\n// 4.1.1.2.  Serializing Parameters\n//\n// Given an ordered Dictionary as input_parameters (each member having a\n// param_name and a param_value), return an ASCII string suitable for\n// use in a HTTP field value.\n//\n// 1.  Let output be an empty string.\n//\n// 2.  For each param_name with a value of param_value in\n//     input_parameters:\n//\n//     1.  Append \";\" to output.\n//\n//     2.  Append the result of running Serializing a Key\n//         (Section 4.1.1.3) with param_name to output.\n//\n//     3.  If param_value is not Boolean true:\n//\n//         1.  Append \"=\" to output.\n//\n//         2.  Append the result of running Serializing a bare Item\n//             (Section 4.1.3.1) with param_value to output.\n//\n// 3.  Return output.\nexport function serializeParams(params?: Record<string, any>): string {\n\tif (params == null) {\n\t\treturn '';\n\t}\n\n\treturn Object.entries(params)\n\t\t.map(([key, value]) => {\n\t\t\tif (value === true) {\n\t\t\t\treturn `;${serializeKey(key)}`; // omit true\n\t\t\t}\n\n\t\t\treturn `;${serializeKey(key)}=${serializeBareItem(value)}`;\n\t\t})\n\t\t.join('');\n}\n","import type { SfBareItem } from '../SfBareItem.js';\nimport { SfItem } from '../SfItem.js';\nimport { serializeBareItem } from './serializeBareItem.js';\nimport { serializeParams } from './serializeParams.js';\n\n// 4.1.3.  Serializing an Item\n//\n// Given an Item as bare_item and Parameters as item_parameters, return\n// an ASCII string suitable for use in a HTTP field value.\n//\n// 1.  Let output be an empty string.\n//\n// 2.  Append the result of running Serializing a Bare Item\n//     Section 4.1.3.1 with bare_item to output.\n//\n// 3.  Append the result of running Serializing Parameters\n//     Section 4.1.1.2 with item_parameters to output.\n//\n// 4.  Return output.\nexport function serializeItem(value: SfItem | SfBareItem): string {\n\tif (value instanceof SfItem) {\n\t\treturn `${serializeBareItem(value.value)}${serializeParams(value.params)}`;\n\t}\n\telse {\n\t\treturn serializeBareItem(value);\n\t}\n}\n","import { urlToRelativePath } from '../utils/urlToRelativePath.js';\nimport type { CmcdEncodeOptions } from './CmcdEncodeOptions.js';\nimport type { CmcdFormatter } from './CmcdFormatter.js';\nimport type { CmcdValue } from './CmcdValue.js';\n\nconst toRounded = (value: CmcdValue) => Math.round(value as number);\nconst toUrlSafe = (value: CmcdValue, options?: CmcdEncodeOptions) => {\n\tif (options?.baseUrl) {\n\t\tvalue = urlToRelativePath(value as string, options.baseUrl);\n\t}\n\treturn encodeURIComponent(value as string);\n};\nconst toHundred = (value: CmcdValue) => toRounded(value as number / 100) * 100;\n\n/**\n * The default formatters for CMCD values.\n *\n * @group CMCD\n *\n * @beta\n */\nexport const CmcdFormatters: Record<string, CmcdFormatter> = {\n\t/**\n\t * Bitrate (kbps) rounded integer\n\t */\n\tbr: toRounded,\n\n\t/**\n\t * Duration (milliseconds) rounded integer\n\t */\n\td: toRounded,\n\n\t/**\n\t * Buffer Length (milliseconds) rounded nearest 100ms\n\t */\n\tbl: toHundred,\n\n\t/**\n\t * Deadline (milliseconds) rounded nearest 100ms\n\t */\n\tdl: toHundred,\n\n\t/**\n\t * Measured Throughput (kbps) rounded nearest 100kbps\n\t */\n\tmtp: toHundred,\n\n\t/**\n\t * Next Object Request URL encoded\n\t */\n\tnor: toUrlSafe,\n\n\t/**\n\t * Requested maximum throughput (kbps) rounded nearest 100kbps\n\t */\n\trtp: toHundred,\n\n\t/**\n\t * Top Bitrate (kbps) rounded integer\n\t */\n\ttb: toRounded,\n};\n","/**\n * Constructs a relative path from a URL.\n *\n * @param url - The destination URL\n * @param base - The base URL\n * @returns The relative path\n *\n * @group Utils\n *\n * @beta\n */\nexport function urlToRelativePath(url: string, base: string): string {\n\tconst to = new URL(url);\n\tconst from = new URL(base);\n\n\tif (to.origin !== from.origin) {\n\t\treturn url;\n\t}\n\n\tconst toPath = to.pathname.split('/').slice(1);\n\tconst fromPath = from.pathname.split('/').slice(1, -1);\n\n\t// remove common parents\n\twhile (toPath[0] === fromPath[0]) {\n\t\ttoPath.shift();\n\t\tfromPath.shift();\n\t}\n\n\t// add back paths\n\twhile (fromPath.length) {\n\t\tfromPath.shift();\n\t\ttoPath.unshift('..');\n\t}\n\n\treturn toPath.join('/');\n}\n","import { encodeSfDict } from '../structuredfield/encodeSfDict.js';\nimport type { Cmcd } from './Cmcd.js';\nimport type { CmcdEncodeOptions } from './CmcdEncodeOptions.js';\nimport { processCmcd } from './utils/processCmcd.js';\n\n/**\n * Encode a CMCD object to a string.\n *\n * @param cmcd - The CMCD object to encode.\n * @param options - Options for encoding.\n *\n * @returns The encoded CMCD string.\n *\n * @group CMCD\n *\n * @beta\n */\nexport function encodeCmcd(cmcd: Cmcd, options: CmcdEncodeOptions = {}): string {\n\tif (!cmcd) {\n\t\treturn '';\n\t}\n\n\treturn encodeSfDict(processCmcd(cmcd, options), Object.assign({ whitespace: false }, options));\n}\n","import type { SfEncodeOptions } from './SfEncodeOptions.js';\nimport { serializeDict } from './serialize/serializeDict.js';\n\n/**\n * Encode an object into a structured field dictionary\n *\n * @param value - The structured field dictionary to encode\n * @param options - Encoding options\n *\n * @returns The structured field string\n *\n * @group Structured Field\n *\n * @beta\n */\nexport function encodeSfDict(value: Record<string, any> | Map<string, any>, options?: SfEncodeOptions): string {\n\treturn serializeDict(value, options);\n}\n","import type { SfEncodeOptions } from '../SfEncodeOptions.js';\nimport { SfItem } from '../SfItem.js';\nimport { DICT } from '../utils/DICT.js';\nimport { serializeError } from './serializeError.js';\nimport { serializeInnerList } from './serializeInnerList.js';\nimport { serializeItem } from './serializeItem.js';\nimport { serializeKey } from './serializeKey.js';\nimport { serializeParams } from './serializeParams.js';\n\n// 4.1.2.  Serializing a Dictionary\n//\n// Given an ordered Dictionary as input_dictionary (each member having a\n// member_name and a tuple value of (member_value, parameters)), return\n// an ASCII string suitable for use in a HTTP field value.\n//\n// 1.  Let output be an empty string.\n//\n// 2.  For each member_name with a value of (member_value, parameters)\n//     in input_dictionary:\n//\n//     1.  Append the result of running Serializing a Key\n//         (Section 4.1.1.3) with member's member_name to output.\n//\n//     2.  If member_value is Boolean true:\n//\n//         1.  Append the result of running Serializing Parameters\n//             (Section 4.1.1.2) with parameters to output.\n//\n//     3.  Otherwise:\n//\n//         1.  Append \"=\" to output.\n//\n//         2.  If member_value is an array, append the result of running\n//             Serializing an Inner List (Section 4.1.1.1) with\n//             (member_value, parameters) to output.\n//\n//         3.  Otherwise, append the result of running Serializing an\n//             Item (Section 4.1.3) with (member_value, parameters) to\n//             output.\n//\n//     4.  If more members remain in input_dictionary:\n//\n//         1.  Append \",\" to output.\n//\n//         2.  Append a single SP to output.\n//\n// 3.  Return output.\nexport function serializeDict(dict: Record<string, any> | Map<string, any>, options: SfEncodeOptions = { whitespace: true }): string {\n\tif (typeof dict !== 'object') {\n\t\tthrow serializeError(dict, DICT);\n\t}\n\n\tconst entries = dict instanceof Map ? dict.entries() : Object.entries(dict);\n\tconst optionalWhiteSpace = options?.whitespace ? ' ' : '';\n\n\treturn Array.from(entries)\n\t\t.map(([key, item]) => {\n\t\t\tif (item instanceof SfItem === false) {\n\t\t\t\titem = new SfItem(item);\n\t\t\t}\n\t\t\tlet output = serializeKey(key);\n\t\t\tif (item.value === true) {\n\t\t\t\toutput += serializeParams(item.params);\n\t\t\t}\n\t\t\telse {\n\t\t\t\toutput += '=';\n\t\t\t\tif (Array.isArray(item.value)) {\n\t\t\t\t\toutput += serializeInnerList(item);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\toutput += serializeItem(item);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn output;\n\t\t})\n\t\t.join(`,${optionalWhiteSpace}`);\n}\n","import type { SfInnerList } from '../SfInnerList.js';\nimport { serializeItem } from './serializeItem.js';\nimport { serializeParams } from './serializeParams.js';\n\n// 4.1.1.1.  Serializing an Inner List\n//\n// Given an array of (member_value, parameters) tuples as inner_list,\n// and parameters as list_parameters, return an ASCII string suitable\n// for use in a HTTP field value.\n//\n// 1.  Let output be the string \"(\".\n//\n// 2.  For each (member_value, parameters) of inner_list:\n//\n//     1.  Append the result of running Serializing an Item\n//         (Section 4.1.3) with (member_value, parameters) to output.\n//\n//     2.  If more values remain in inner_list, append a single SP to\n//         output.\n//\n// 3.  Append \")\" to output.\n//\n// 4.  Append the result of running Serializing Parameters\n//     (Section 4.1.1.2) with list_parameters to output.\n//\n// 5.  Return output.\nexport function serializeInnerList(value: SfInnerList) {\n\treturn `(${value.value.map(serializeItem).join(' ')})${serializeParams(value.params)}`;\n}\n","import { isTokenField } from '../../cta/utils/isTokenField.js';\nimport { isValid } from '../../cta/utils/isValid.js';\nimport { SfToken } from '../../structuredfield/SfToken.js';\nimport type { Cmcd } from '../Cmcd.js';\nimport type { CmcdEncodeOptions } from '../CmcdEncodeOptions.js';\nimport { CmcdFormatters } from '../CmcdFormatters.js';\nimport type { CmcdKey } from '../CmcdKey.js';\nimport type { CmcdValue } from '../CmcdValue.js';\n\n/**\n * Internal CMCD processing function.\n *\n * @param obj - The CMCD object to process.\n * @param map - The mapping function to use.\n * @param options - Options for encoding.\n *\n * @internal\n *\n * @group CMCD\n */\nexport function processCmcd(obj: Cmcd | null | undefined, options?: CmcdEncodeOptions): Cmcd {\n\tconst results: Cmcd = {};\n\n\tif (obj == null || typeof obj !== 'object') {\n\t\treturn results;\n\t}\n\n\tconst keys = Object.keys(obj).sort() as CmcdKey[];\n\tconst formatters = Object.assign({}, CmcdFormatters, options?.formatters);\n\tconst filter = options?.filter;\n\n\tkeys.forEach(key => {\n\t\tif (filter?.(key)) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet value = obj[key] as CmcdValue;\n\n\t\tconst formatter = formatters[key];\n\t\tif (formatter) {\n\t\t\tvalue = formatter(value, options);\n\t\t}\n\n\t\t// Version should only be reported if not equal to 1.\n\t\tif (key === 'v' && value === 1) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Playback rate should only be sent if not equal to 1.\n\t\tif (key == 'pr' && value === 1) {\n\t\t\treturn;\n\t\t}\n\n\t\t// ignore invalid values\n\t\tif (!isValid(value)) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (isTokenField(key) && typeof value === 'string') {\n\t\t\tvalue = new SfToken(value);\n\t\t}\n\n\t\tresults[key as any] = value as any;\n\t});\n\n\treturn results;\n}\n","import type { CmValue } from '../CmValue.js';\n\n/**\n * Checks if the given value is valid\n *\n * @param value - The value to check.\n *\n * @returns `true` if the key is a value is valid.\n *\n * @internal\n */\nexport function isValid(value: CmValue): boolean {\n\tif (typeof value === 'number') {\n\t\treturn Number.isFinite(value);\n\t}\n\n\treturn value != null && value !== '' && value !== false;\n}\n","/**\n * Checks if the given key is a token field.\n *\n * @param key - The key to check.\n *\n * @returns `true` if the key is a token field.\n *\n * @internal\n */\nexport function isTokenField(key: string): boolean {\n\treturn key === 'ot' || key === 'sf' || key === 'st';\n}\n","/**\n * CMCD object header name.\n *\n * @group CMCD\n *\n * @beta\n */\nexport const CMCD_OBJECT = 'CMCD-Object';\n","import type { ValueOf } from '../utils/ValueOf.js';\nimport { CMCD_OBJECT } from './CMCD_OBJECT.js';\nimport { CMCD_REQUEST } from './CMCD_REQUEST.js';\nimport { CMCD_SESSION } from './CMCD_SESSION.js';\nimport { CMCD_STATUS } from './CMCD_STATUS.js';\n\n/**\n * CMCD header fields.\n *\n * @group CMCD\n *\n * @enum\n *\n * @beta\n */\nexport const CmcdHeaderField = {\n\t/**\n\t * keys whose values vary with the object being requested.\n\t */\n\tOBJECT: CMCD_OBJECT as typeof CMCD_OBJECT,\n\n\t/**\n\t * keys whose values vary with each request.\n\t */\n\tREQUEST: CMCD_REQUEST as typeof CMCD_REQUEST,\n\n\t/**\n\t * keys whose values are expected to be invariant over the life of the session.\n\t */\n\tSESSION: CMCD_SESSION as typeof CMCD_SESSION,\n\n\t/**\n\t * keys whose values do not vary with every request or object.\n\t */\n\tSTATUS: CMCD_STATUS as typeof CMCD_STATUS,\n} as const;\n\n/**\n * @beta\n */\nexport type CmcdHeaderField = ValueOf<typeof CmcdHeaderField>;\n","/**\n * CMCD request header name.\n *\n * @group CMCD\n *\n * @beta\n */\nexport const CMCD_REQUEST = 'CMCD-Request';\n","/**\n * CMCD session header name.\n *\n * @group CMCD\n *\n * @beta\n */\nexport const CMCD_SESSION = 'CMCD-Session';\n","/**\n * CMCD status header name.\n *\n * @group CMCD\n *\n * @beta\n */\nexport const CMCD_STATUS = 'CMCD-Status';\n","import { CmcdHeaderField } from './CmcdHeaderField.js';\nimport type { CmcdHeadersMap } from './CmcdHeadersMap.js';\n\n/**\n * The map of CMCD header fields to official CMCD keys.\n *\n * @internal\n *\n * @group CMCD\n */\nexport const CmcdHeaderMap: CmcdHeadersMap = {\n\t[CmcdHeaderField.OBJECT]: ['br', 'd', 'ot', 'tb'],\n\t[CmcdHeaderField.REQUEST]: ['bl', 'dl', 'mtp', 'nor', 'nrr', 'su'],\n\t[CmcdHeaderField.SESSION]: ['cid', 'pr', 'sf', 'sid', 'st', 'v'],\n\t[CmcdHeaderField.STATUS]: ['bs', 'rtp'],\n};\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport EventBus from '../../core/EventBus.js';\nimport MediaPlayerEvents from '../MediaPlayerEvents.js';\nimport MetricsReportingEvents from '../metrics/MetricsReportingEvents.js';\nimport FactoryMaker from '../../core/FactoryMaker.js';\nimport Settings from '../../core/Settings.js';\nimport Constants from '../../streaming/constants/Constants.js';\nimport {HTTPRequest} from '../vo/metrics/HTTPRequest.js';\nimport DashManifestModel from '../../dash/models/DashManifestModel.js';\nimport Debug from '../../core/Debug.js';\nimport Utils from '../../core/Utils.js';\nimport {CMCD_PARAM} from '@svta/common-media-library/cmcd/CMCD_PARAM';\nimport {CmcdObjectType} from '@svta/common-media-library/cmcd/CmcdObjectType';\nimport {CmcdStreamType} from '@svta/common-media-library/cmcd/CmcdStreamType';\nimport {CmcdStreamingFormat} from '@svta/common-media-library/cmcd/CmcdStreamingFormat';\nimport {encodeCmcd} from '@svta/common-media-library/cmcd/encodeCmcd';\nimport {toCmcdHeaders} from '@svta/common-media-library/cmcd/toCmcdHeaders';\nimport {CmcdHeaderField} from '@svta/common-media-library/cmcd/CmcdHeaderField';\nconst DEFAULT_CMCD_VERSION = 1;\nconst DEFAULT_INCLUDE_IN_REQUESTS = 'segment';\nconst RTP_SAFETY_FACTOR = 5;\n\nfunction CmcdModel() {\n\n    let dashManifestModel,\n        instance,\n        logger,\n        internalData,\n        abrController,\n        dashMetrics,\n        playbackController,\n        serviceDescriptionController,\n        throughputController,\n        streamProcessors,\n        _lastMediaTypeRequest,\n        _isStartup,\n        _bufferLevelStarved,\n        _initialMediaRequestsDone,\n        _playbackStartedTime,\n        _msdSent;\n\n    let context = this.context;\n    let eventBus = EventBus(context).getInstance();\n    let settings = Settings(context).getInstance();\n    let debug = Debug(context).getInstance();\n\n    function setup() {\n        dashManifestModel = DashManifestModel(context).getInstance();\n        logger = debug.getLogger(instance);\n        _resetInitialSettings();\n    }\n\n    function initialize(autoPlay) {\n        eventBus.on(MediaPlayerEvents.PLAYBACK_RATE_CHANGED, _onPlaybackRateChanged, instance);\n        eventBus.on(MediaPlayerEvents.MANIFEST_LOADED, _onManifestLoaded, instance);\n        eventBus.on(MediaPlayerEvents.BUFFER_LEVEL_STATE_CHANGED, _onBufferLevelStateChanged, instance);\n        eventBus.on(MediaPlayerEvents.PLAYBACK_SEEKED, _onPlaybackSeeked, instance);\n        eventBus.on(MediaPlayerEvents.PERIOD_SWITCH_COMPLETED, _onPeriodSwitchComplete, instance);\n        if (autoPlay) {\n            eventBus.on(MediaPlayerEvents.MANIFEST_LOADING_STARTED, _onPlaybackStarted, instance);\n        }\n        else {\n            eventBus.on(MediaPlayerEvents.PLAYBACK_STARTED, _onPlaybackStarted, instance);\n        }\n        eventBus.on(MediaPlayerEvents.PLAYBACK_PLAYING, _onPlaybackPlaying, instance);\n    }\n\n    function setConfig(config) {\n        if (!config) {\n            return;\n        }\n\n        if (config.abrController) {\n            abrController = config.abrController;\n        }\n\n        if (config.dashMetrics) {\n            dashMetrics = config.dashMetrics;\n        }\n\n        if (config.throughputController) {\n            throughputController = config.throughputController;\n        }\n\n        if (config.playbackController) {\n            playbackController = config.playbackController;\n        }\n\n        if (config.serviceDescriptionController) {\n            serviceDescriptionController = config.serviceDescriptionController;\n        }\n    }\n\n    function _resetInitialSettings() {\n        internalData = {\n            pr: 1,\n            nor: null,\n            st: null,\n            sf: null,\n            sid: `${Utils.generateUuid()}`,\n            cid: null\n        };\n        _bufferLevelStarved = {};\n        _isStartup = {};\n        _initialMediaRequestsDone = {};\n        _lastMediaTypeRequest = undefined;\n        _playbackStartedTime = undefined;\n        _msdSent = false;\n        _updateStreamProcessors();\n    }\n\n    function _onPeriodSwitchComplete() {\n        _updateStreamProcessors();\n    }\n\n    function _onPlaybackStarted() {\n        if (!_playbackStartedTime) {\n            _playbackStartedTime = Date.now();\n        }\n    }\n\n    function _onPlaybackPlaying() {\n        if (!_playbackStartedTime || internalData.msd) {\n            return;\n        }\n\n        internalData.msd = Date.now() - _playbackStartedTime;\n    }\n\n    function _updateStreamProcessors() {\n        if (!playbackController) {\n            return;\n        }\n        const streamController = playbackController.getStreamController();\n        if (!streamController) {\n            return;\n        }\n        if (typeof streamController.getActiveStream !== 'function') {\n            return;\n        }\n        const activeStream = streamController.getActiveStream();\n        if (!activeStream) {\n            return;\n        }\n        streamProcessors = activeStream.getStreamProcessors();\n    }\n\n    function getQueryParameter(request) {\n        try {\n            if (isCmcdEnabled()) {\n                const cmcdData = getCmcdData(request);\n                const filteredCmcdData = _applyWhitelist(cmcdData);\n                const finalPayloadString = encodeCmcd(filteredCmcdData);\n\n                eventBus.trigger(MetricsReportingEvents.CMCD_DATA_GENERATED, {\n                    url: request.url,\n                    mediaType: request.mediaType,\n                    cmcdData,\n                    cmcdString: finalPayloadString\n                });\n                return {\n                    key: CMCD_PARAM,\n                    value: finalPayloadString\n                };\n            }\n\n            return null;\n        } catch (e) {\n            return null;\n        }\n    }\n\n    function _applyWhitelist(cmcdData) {\n        try {\n            const cmcdParametersFromManifest = getCmcdParametersFromManifest();\n            const enabledCMCDKeys = cmcdParametersFromManifest.version ? cmcdParametersFromManifest.keys : settings.get().streaming.cmcd.enabledKeys;\n\n            return Object.keys(cmcdData)\n                .filter(key => enabledCMCDKeys.includes(key))\n                .reduce((obj, key) => {\n                    obj[key] = cmcdData[key];\n                    return obj;\n                }, {});\n        } catch (e) {\n            return cmcdData;\n        }\n    }\n\n    function getHeaderParameters(request) {\n        try {\n            if (isCmcdEnabled()) {\n                const cmcdData = getCmcdData(request);\n                const filteredCmcdData = _applyWhitelist(cmcdData);\n                const options = _createCmcdV2HeadersCustomMap();\n                const headers = toCmcdHeaders(filteredCmcdData, options);\n\n                eventBus.trigger(MetricsReportingEvents.CMCD_DATA_GENERATED, {\n                    url: request.url,\n                    mediaType: request.mediaType,\n                    cmcdData,\n                    headers\n                });\n                return headers;\n            }\n\n            return null;\n        } catch (e) {\n            return null;\n        }\n    }\n\n    function isCmcdEnabled() {\n        const cmcdParametersFromManifest = getCmcdParametersFromManifest();\n        return _canBeEnabled(cmcdParametersFromManifest) && _checkIncludeInRequests(cmcdParametersFromManifest) && _checkAvailableKeys(cmcdParametersFromManifest);\n    }\n\n    function _canBeEnabled(cmcdParametersFromManifest) {\n        if (Object.keys(cmcdParametersFromManifest).length) {\n            if (parseInt(cmcdParametersFromManifest.version) !== 1) {\n                logger.error(`version parameter must be defined in 1.`);\n                return false;\n            }\n            if (!cmcdParametersFromManifest.keys) {\n                logger.error(`keys parameter must be defined.`);\n                return false;\n            }\n        }\n        const isEnabledFromManifest = cmcdParametersFromManifest.version;\n        const isEnabledFromSettings = settings.get().streaming.cmcd && settings.get().streaming.cmcd.enabled;\n        return isEnabledFromManifest || isEnabledFromSettings;\n    }\n\n    function _checkIncludeInRequests(cmcdParametersFromManifest) {\n        let enabledRequests = settings.get().streaming.cmcd.includeInRequests;\n\n        if (cmcdParametersFromManifest.version) {\n            enabledRequests = cmcdParametersFromManifest.includeInRequests ?? [DEFAULT_INCLUDE_IN_REQUESTS];\n        }\n\n        const defaultAvailableRequests = Constants.CMCD_AVAILABLE_REQUESTS;\n        const invalidRequests = enabledRequests.filter(k => !defaultAvailableRequests.includes(k));\n\n        if (invalidRequests.length === enabledRequests.length) {\n            logger.error(`None of the request types are supported.`);\n            return false;\n        }\n\n        invalidRequests.map((k) => {\n            logger.warn(`request type ${k} is not supported.`);\n        });\n\n        return true;\n    }\n\n    function _checkAvailableKeys(cmcdParametersFromManifest) {\n        const defaultAvailableKeys = Constants.CMCD_AVAILABLE_KEYS;\n        const defaultV2AvailableKeys = Constants.CMCD_V2_AVAILABLE_KEYS;\n        const enabledCMCDKeys = cmcdParametersFromManifest.version ? cmcdParametersFromManifest.keys : settings.get().streaming.cmcd.enabledKeys;\n        const cmcdVersion = settings.get().streaming.cmcd.version;\n        const invalidKeys = enabledCMCDKeys.filter(k => !defaultAvailableKeys.includes(k) && !(cmcdVersion === 2 && defaultV2AvailableKeys.includes(k)));\n\n        if (invalidKeys.length === enabledCMCDKeys.length && enabledCMCDKeys.length > 0) {\n            logger.error(`None of the keys are implemented for CMCD version ${cmcdVersion}.`);\n            return false;\n        }\n        invalidKeys.map((k) => {\n            logger.warn(`key parameter ${k} is not implemented for CMCD version ${cmcdVersion}.`);\n        });\n\n        return true;\n    }\n\n    function getCmcdParametersFromManifest() {\n        let cmcdParametersFromManifest = {};\n        if (serviceDescriptionController) {\n            const serviceDescription = serviceDescriptionController.getServiceDescriptionSettings();\n            if (\n                settings.get().streaming.cmcd.applyParametersFromMpd &&\n                serviceDescription.clientDataReporting &&\n                serviceDescription.clientDataReporting.cmcdParameters\n            ) {\n                cmcdParametersFromManifest = serviceDescription.clientDataReporting.cmcdParameters;\n            }\n        }\n        return cmcdParametersFromManifest;\n    }\n\n    function _isIncludedInRequestFilter(type) {\n        const cmcdParametersFromManifest = getCmcdParametersFromManifest();\n        let includeInRequestsArray = settings.get().streaming.cmcd.includeInRequests;\n\n        if (cmcdParametersFromManifest.version) {\n            includeInRequestsArray = cmcdParametersFromManifest.includeInRequests ? cmcdParametersFromManifest.includeInRequests : [DEFAULT_INCLUDE_IN_REQUESTS];\n        }\n\n        const filtersTypes = {\n            [HTTPRequest.INIT_SEGMENT_TYPE]: 'segment',\n            [HTTPRequest.MEDIA_SEGMENT_TYPE]: 'segment',\n            [HTTPRequest.XLINK_EXPANSION_TYPE]: 'xlink',\n            [HTTPRequest.MPD_TYPE]: 'mpd',\n            [HTTPRequest.CONTENT_STEERING_TYPE]: 'steering',\n            [HTTPRequest.OTHER_TYPE]: 'other',\n        };\n\n        return includeInRequestsArray.some(t => filtersTypes[type] === t);\n    }\n\n    function getCmcdData(request) {\n        try {\n            let cmcdData = null;\n\n            _updateLastMediaTypeRequest(request.type, request.mediaType);\n\n            if (_isIncludedInRequestFilter(request.type)) {\n                if (request.type === HTTPRequest.MPD_TYPE) {\n                    return _getCmcdDataForMpd(request);\n                } else if (request.type === HTTPRequest.MEDIA_SEGMENT_TYPE) {\n                    _initForMediaType(request.mediaType);\n                    return _getCmcdDataForMediaSegment(request, request.mediaType);\n                } else if (request.type === HTTPRequest.INIT_SEGMENT_TYPE) {\n                    return _getCmcdDataForInitSegment(request);\n                } else if (request.type === HTTPRequest.OTHER_TYPE || request.type === HTTPRequest.XLINK_EXPANSION_TYPE) {\n                    return _getCmcdDataForOther(request);\n                } else if (request.type === HTTPRequest.LICENSE) {\n                    return _getCmcdDataForLicense(request);\n                } else if (request.type === HTTPRequest.CONTENT_STEERING_TYPE) {\n                    return _getCmcdDataForSteering(request);\n                }\n            }\n            return cmcdData;\n        } catch (e) {\n            return null;\n        }\n    }\n\n    function _updateLastMediaTypeRequest(type, mediatype) {\n        // Video > Audio > None\n        if (mediatype === Constants.VIDEO || mediatype === Constants.AUDIO) {\n            if (!_lastMediaTypeRequest || _lastMediaTypeRequest == Constants.AUDIO) {\n                _lastMediaTypeRequest = mediatype;\n            }\n        }\n    }\n\n    function _getCmcdDataForSteering(request) {\n        const data = !_lastMediaTypeRequest ? _getGenericCmcdData(request) : _getCmcdDataForMediaSegment(request, _lastMediaTypeRequest);\n\n        data.ot = CmcdObjectType.OTHER;\n\n        return data;\n    }\n\n    function _getCmcdDataForLicense(request) {\n        const data = _getGenericCmcdData(request);\n\n        data.ot = CmcdObjectType.KEY;\n\n        return data;\n    }\n\n    function _getCmcdDataForMpd() {\n        const data = _getGenericCmcdData();\n\n        data.ot = CmcdObjectType.MANIFEST;\n\n        return data;\n    }\n\n    function _getCmcdDataForMediaSegment(request, mediaType) {\n        _initForMediaType(mediaType);\n        const data = _getGenericCmcdData();\n        const encodedBitrate = _getBitrateByRequest(request);\n        const d = _getObjectDurationByRequest(request);\n        const mtp = _getMeasuredThroughputByType(mediaType);\n        const dl = _getDeadlineByType(mediaType);\n        const bl = _getBufferLevelByType(mediaType);\n        const tb = _getTopBitrateByType(request.representation?.mediaInfo);\n        const pr = internalData.pr;\n\n        const nextRequest = _probeNextRequest(mediaType);\n\n        let ot;\n        if (mediaType === Constants.VIDEO) {\n            ot = CmcdObjectType.VIDEO;\n        }\n        if (mediaType === Constants.AUDIO) {\n            ot = CmcdObjectType.AUDIO;\n        }\n        if (mediaType === Constants.TEXT) {\n            if (request.representation.mediaInfo.mimeType === 'application/mp4') {\n                ot = CmcdObjectType.TIMED_TEXT;\n            } else {\n                ot = CmcdObjectType.CAPTION;\n            }\n        }\n\n        let rtp = settings.get().streaming.cmcd.rtp;\n        if (!rtp) {\n            rtp = _calculateRtp(request);\n        }\n        if (!isNaN(rtp)) {\n            data.rtp = rtp;\n        }\n\n        if (nextRequest) {\n            if (request.url !== nextRequest.url) {\n                data.nor = encodeURIComponent(Utils.getRelativeUrl(request.url, nextRequest.url));\n            } else if (nextRequest.range) {\n                data.nrr = nextRequest.range;\n            }\n        }\n\n        if (encodedBitrate) {\n            data.br = encodedBitrate;\n        }\n\n        if (ot) {\n            data.ot = ot;\n        }\n\n        if (!isNaN(d)) {\n            data.d = d;\n        }\n\n        if (!isNaN(mtp)) {\n            data.mtp = mtp;\n        }\n\n        if (!isNaN(dl)) {\n            data.dl = dl;\n        }\n\n        if (!isNaN(bl)) {\n            data.bl = bl;\n        }\n\n        if (!isNaN(tb)) {\n            data.tb = tb;\n        }\n\n        if (!isNaN(pr) && pr !== 1) {\n            data.pr = pr;\n        }\n\n        if (_bufferLevelStarved[mediaType]) {\n            data.bs = true;\n            _bufferLevelStarved[mediaType] = false;\n        }\n\n        if (_isStartup[mediaType] || !_initialMediaRequestsDone[mediaType]) {\n            data.su = true;\n            _isStartup[mediaType] = false;\n            _initialMediaRequestsDone[mediaType] = true;\n        }\n\n        return data;\n    }\n\n    function _initForMediaType(mediaType) {\n\n        if (!_initialMediaRequestsDone.hasOwnProperty(mediaType)) {\n            _initialMediaRequestsDone[mediaType] = false;\n        }\n\n        if (!_isStartup.hasOwnProperty(mediaType)) {\n            _isStartup[mediaType] = false;\n        }\n\n        if (!_bufferLevelStarved.hasOwnProperty(mediaType)) {\n            _bufferLevelStarved[mediaType] = false;\n        }\n    }\n\n    function _getCmcdDataForInitSegment() {\n        const data = _getGenericCmcdData();\n\n        data.ot = CmcdObjectType.INIT;\n        data.su = true;\n\n        return data;\n    }\n\n    function _getCmcdDataForOther() {\n        const data = _getGenericCmcdData();\n\n        data.ot = CmcdObjectType.OTHER;\n\n        return data;\n    }\n\n\n    function _getGenericCmcdData() {\n        const cmcdParametersFromManifest = getCmcdParametersFromManifest();\n        const data = {};\n\n        let cid = settings.get().streaming.cmcd.cid ? settings.get().streaming.cmcd.cid : internalData.cid;\n        cid = cmcdParametersFromManifest.contentID ? cmcdParametersFromManifest.contentID : cid;\n\n        data.v = settings.get().streaming.cmcd.version ?? DEFAULT_CMCD_VERSION;\n\n        data.sid = settings.get().streaming.cmcd.sid ? settings.get().streaming.cmcd.sid : internalData.sid;\n        data.sid = cmcdParametersFromManifest.sessionID ? cmcdParametersFromManifest.sessionID : data.sid;\n\n        data.sid = `${data.sid}`;\n\n        if (cid) {\n            data.cid = `${cid}`;\n        }\n\n        if (!isNaN(internalData.pr) && internalData.pr !== 1 && internalData.pr !== null) {\n            data.pr = internalData.pr;\n        }\n\n        if (internalData.st) {\n            data.st = internalData.st;\n        }\n\n        if (internalData.sf) {\n            data.sf = internalData.sf;\n        }\n\n        if (data.v === 2) {\n            let ltc = playbackController.getCurrentLiveLatency() * 1000;\n            if (!isNaN(ltc)) {\n                data.ltc = ltc;\n            }\n            const msd = internalData.msd;\n            if (!_msdSent && !isNaN(msd)) {\n                data.msd = msd;\n                _msdSent = true;\n            }\n        }\n\n        \n\n        return data;\n    }\n\n    function _createCmcdV2HeadersCustomMap() {\n        const cmcdVersion = settings.get().streaming.cmcd.version;\n        return cmcdVersion === 1 ? {} : { \n            customHeaderMap: { \n                [CmcdHeaderField.REQUEST]: ['ltc'],\n                [CmcdHeaderField.SESSION]: ['msd']\n            }\n        };\n    }\n\n    function _getBitrateByRequest(request) {\n        try {\n            return parseInt(request.bandwidth / 1000);\n        } catch (e) {\n            return null;\n        }\n    }\n\n    function _getTopBitrateByType(mediaInfo) {\n        try {\n            const bitrates = abrController.getPossibleVoRepresentationsFilteredBySettings(mediaInfo).map((rep) => {\n                return rep.bitrateInKbit\n            });\n            return Math.max(...bitrates)\n        } catch (e) {\n            return null;\n        }\n    }\n\n    function _getObjectDurationByRequest(request) {\n        try {\n            return !isNaN(request.duration) ? Math.round(request.duration * 1000) : NaN;\n        } catch (e) {\n            return null;\n        }\n    }\n\n    function _getMeasuredThroughputByType(mediaType) {\n        try {\n            return parseInt(throughputController.getSafeAverageThroughput(mediaType) / 100) * 100;\n        } catch (e) {\n            return null;\n        }\n    }\n\n    function _getDeadlineByType(mediaType) {\n        try {\n            const playbackRate = internalData.pr;\n            const bufferLevel = dashMetrics.getCurrentBufferLevel(mediaType);\n\n            if (!isNaN(playbackRate) && !isNaN(bufferLevel)) {\n                return parseInt((bufferLevel / playbackRate) * 10) * 100;\n            }\n\n            return null;\n        } catch (e) {\n            return null;\n        }\n    }\n\n    function _getBufferLevelByType(mediaType) {\n        try {\n            const bufferLevel = dashMetrics.getCurrentBufferLevel(mediaType);\n\n            if (!isNaN(bufferLevel)) {\n                return parseInt(bufferLevel * 10) * 100;\n            }\n\n            return null;\n        } catch (e) {\n            return null;\n        }\n    }\n\n    function _onPlaybackRateChanged(data) {\n        try {\n            internalData.pr = data.playbackRate;\n        } catch (e) {\n\n        }\n    }\n\n    function _onManifestLoaded(data) {\n        try {\n            const isDynamic = dashManifestModel.getIsDynamic(data.data);\n            const st = isDynamic ? CmcdStreamType.LIVE : CmcdStreamType.VOD;\n            const sf = data.protocol && data.protocol === 'MSS' ? CmcdStreamingFormat.SMOOTH : CmcdStreamingFormat.DASH;\n\n            internalData.st = `${st}`;\n            internalData.sf = `${sf}`;\n        } catch (e) {\n        }\n    }\n\n    function _onBufferLevelStateChanged(data) {\n        try {\n            if (data.state && data.mediaType) {\n                if (data.state === MediaPlayerEvents.BUFFER_EMPTY) {\n\n                    if (!_bufferLevelStarved[data.mediaType]) {\n                        _bufferLevelStarved[data.mediaType] = true;\n                    }\n                    if (!_isStartup[data.mediaType]) {\n                        _isStartup[data.mediaType] = true;\n                    }\n                }\n            }\n        } catch (e) {\n\n        }\n    }\n\n    function _onPlaybackSeeked() {\n        for (let key in _bufferLevelStarved) {\n            if (_bufferLevelStarved.hasOwnProperty(key)) {\n                _bufferLevelStarved[key] = true;\n            }\n        }\n\n        for (let key in _isStartup) {\n            if (_isStartup.hasOwnProperty(key)) {\n                _isStartup[key] = true;\n            }\n        }\n    }\n\n    function _probeNextRequest(mediaType) {\n        if (!streamProcessors || streamProcessors.length === 0) {\n            return;\n        }\n        for (let streamProcessor of streamProcessors) {\n            if (streamProcessor.getType() === mediaType) {\n                return streamProcessor.probeNextRequest();\n            }\n        }\n    }\n\n    function _calculateRtp(request) {\n        try {\n            // Get the values we need\n            let playbackRate = playbackController.getPlaybackRate();\n            if (!playbackRate) {\n                playbackRate = 1;\n            }\n            let { bandwidth, mediaType, representation, duration } = request;\n            const mediaInfo = representation.mediaInfo;\n\n            if (!mediaInfo) {\n                return NaN;\n            }\n            let currentBufferLevel = _getBufferLevelByType(mediaType);\n            if (currentBufferLevel === 0) {\n                currentBufferLevel = 500;\n            }\n\n            // Calculate RTP\n            let segmentSize = (bandwidth * duration) / 1000; // Calculate file size in kilobits\n            let timeToLoad = (currentBufferLevel / playbackRate) / 1000; // Calculate time available to load file in seconds\n            let minBandwidth = segmentSize / timeToLoad; // Calculate the exact bandwidth required\n            let rtpSafetyFactor = settings.get().streaming.cmcd.rtpSafetyFactor && !isNaN(settings.get().streaming.cmcd.rtpSafetyFactor) ? settings.get().streaming.cmcd.rtpSafetyFactor : RTP_SAFETY_FACTOR;\n            let maxBandwidth = minBandwidth * rtpSafetyFactor; // Include a safety buffer\n\n\n            // Round to the next multiple of 100\n            return (parseInt(maxBandwidth / 100) + 1) * 100;\n        } catch (e) {\n            return NaN;\n        }\n    }\n\n    function reset() {\n        eventBus.off(MediaPlayerEvents.PLAYBACK_RATE_CHANGED, _onPlaybackRateChanged, this);\n        eventBus.off(MediaPlayerEvents.MANIFEST_LOADED, _onManifestLoaded, this);\n        eventBus.off(MediaPlayerEvents.BUFFER_LEVEL_STATE_CHANGED, _onBufferLevelStateChanged, instance);\n        eventBus.off(MediaPlayerEvents.PLAYBACK_SEEKED, _onPlaybackSeeked, instance);\n        eventBus.off(MediaPlayerEvents.PLAYBACK_STARTED, _onPlaybackStarted, instance);\n        eventBus.off(MediaPlayerEvents.PLAYBACK_PLAYING, _onPlaybackPlaying, instance);\n\n        _resetInitialSettings();\n    }\n\n    instance = {\n        getCmcdData,\n        getQueryParameter,\n        getHeaderParameters,\n        getCmcdParametersFromManifest,\n        setConfig,\n        reset,\n        initialize,\n        isCmcdEnabled,\n    };\n\n    setup();\n\n    return instance;\n}\n\nCmcdModel.__dashjs_factory_name = 'CmcdModel';\nexport default FactoryMaker.getSingletonFactory(CmcdModel);\n","import type { Cmcd } from './Cmcd.js';\nimport type { CmcdEncodeOptions } from './CmcdEncodeOptions.js';\nimport { CmcdHeaderField } from './CmcdHeaderField.js';\nimport { CmcdHeaderMap } from './CmcdHeaderMap.js';\nimport type { CmcdKey } from './CmcdKey.js';\nimport { encodeCmcd } from './encodeCmcd.js';\n\n/**\n * Convert a CMCD data object to request headers\n *\n * @param cmcd - The CMCD data object to convert.\n * @param options - Options for encoding the CMCD object.\n *\n * @returns The CMCD header shards.\n *\n * @group CMCD\n *\n * @beta\n */\nexport function toCmcdHeaders(cmcd: Cmcd, options: CmcdEncodeOptions = {}): Record<CmcdHeaderField, string> {\n\tconst result = {} as Record<CmcdHeaderField, string>;\n\n\tif (!cmcd) {\n\t\treturn result;\n\t}\n\n\tconst entries = Object.entries(cmcd);\n\tconst headerMap = Object.entries(CmcdHeaderMap)\n\t\t.concat(Object.entries(options?.customHeaderMap || {}));\n\tconst shards = entries.reduce((acc, entry) => {\n\t\tconst [key, value] = entry as [CmcdKey, Cmcd[CmcdKey]];\n\t\tconst field = headerMap.find(entry => entry[1].includes(key))?.[0] as CmcdHeaderField || CmcdHeaderField.REQUEST;\n\t\tacc[field] ??= {};\n\t\tacc[field][key as any] = value as any;\n\t\treturn acc;\n\t}, {} as Record<CmcdHeaderField, Cmcd>);\n\n\treturn Object.entries(shards)\n\t\t.reduce((acc, [field, value]) => {\n\t\t\tacc[field as CmcdHeaderField] = encodeCmcd(value, options);\n\t\t\treturn acc;\n\t\t}, result);\n}\n","/**\n * CMSD dynamic header name.\n *\n * @group CMSD\n *\n * @beta\n */\nexport const CMSD_DYNAMIC = 'CMSD-Dynamic';\n","/**\n * CMSD static header name.\n *\n * @group CMSD\n *\n * @beta\n */\nexport const CMSD_STATIC = 'CMSD-Static';\n","import { CmObjectType } from '../cta/CmObjectType.js';\n\n/**\n * Common Media Server Data Object Type\n *\n * @group CMSD\n *\n * @enum\n *\n * @beta\n */\nexport const CmsdObjectType = CmObjectType as typeof CmObjectType;\n\n/**\n * @beta\n */\nexport type CmsdObjectType = CmObjectType;\n","import { throwError } from '../utils/throwError.js';\n\nexport function parseError(src: any, type: string, cause?: any): Error {\n\treturn throwError('parse', src, type, cause);\n}\n","export const LIST = 'List';\n","export type ParsedValue<T> = {\n\tvalue: T;\n\tsrc: string;\n}\n\nexport function parsedValue<T>(value: T, src: string): ParsedValue<T> {\n\treturn { value, src };\n}\n","export const INNER = 'Inner List';\n","export const DATE = 'Date';\n","import { DECIMAL } from './DECIMAL.js';\nimport { INTEGER } from './INTEGER.js';\n\nexport const INTEGER_DECIMAL: string = `${INTEGER} or ${DECIMAL}`;\n","import { INTEGER_DECIMAL } from '../utils/INTEGER_DECIMAL.js';\nimport { isInvalidInt } from '../utils/isInvalidInt.js';\nimport type { ParsedValue } from './ParsedValue.js';\nimport { parsedValue } from './ParsedValue.js';\nimport { parseError } from './parseError.js';\n\n// 4.2.4.  Parsing an Integer or Decimal\n//\n// Given an ASCII string as input_string, return an Integer or Decimal.\n// input_string is modified to remove the parsed value.\n//\n// NOTE: This algorithm parses both Integers (Section 3.3.1) and\n// Decimals (Section 3.3.2), and returns the corresponding structure.\n//\n// 1.   Let type be \"integer\".\n//\n// 2.   Let sign be 1.\n//\n// 3.   Let input_number be an empty string.\n//\n// 4.   If the first character of input_string is \"-\", consume it and\n//      set sign to -1.\n//\n// 5.   If input_string is empty, there is an empty integer; fail\n//      parsing.\n//\n// 6.   If the first character of input_string is not a DIGIT, fail\n//      parsing.\n//\n// 7.   While input_string is not empty:\n//\n//      1.  Let char be the result of consuming the first character of\n//          input_string.\n//\n//      2.  If char is a DIGIT, append it to input_number.\n//\n//      3.  Else, if type is \"integer\" and char is \".\":\n//\n//          1.  If input_number contains more than 12 characters, fail\n//              parsing.\n//\n//          2.  Otherwise, append char to input_number and set type to\n//              \"decimal\".\n//\n//      4.  Otherwise, prepend char to input_string, and exit the loop.\n//\n//      5.  If type is \"integer\" and input_number contains more than 15\n//          characters, fail parsing.\n//\n//      6.  If type is \"decimal\" and input_number contains more than 16\n//          characters, fail parsing.\n//\n// 8.   If type is \"integer\":\n//\n//      1.  Parse input_number as an integer and let output_number be\n//          the product of the result and sign.\n//\n//      2.  If output_number is outside the range -999,999,999,999,999\n//          to 999,999,999,999,999 inclusive, fail parsing.\n//\n// 9.   Otherwise:\n//\n//      1.  If the final character of input_number is \".\", fail parsing.\n//\n//      2.  If the number of characters after \".\" in input_number is\n//          greater than three, fail parsing.\n//\n//      3.  Parse input_number as a decimal number and let output_number\n//          be the product of the result and sign.\n//\n// 10.  Return output_number.\nexport function parseIntegerOrDecimal(src: string): ParsedValue<number> {\n\tconst orig = src;\n\tlet sign = 1;\n\tlet num = '';\n\tlet value;\n\tconst i = 0;\n\tconst error = parseError(orig, INTEGER_DECIMAL);\n\n\tif (src[i] === '-') {\n\t\tsign = -1;\n\t\tsrc = src.substring(1);\n\t}\n\n\tif (src.length <= 0) {\n\t\tthrow error;\n\t}\n\n\tconst re_integer = /^(\\d+)?/g;\n\tconst result_integer = re_integer.exec(src) as any;\n\tif (result_integer[0].length === 0) {\n\t\tthrow error;\n\t}\n\tnum += result_integer[1];\n\tsrc = src.substring(re_integer.lastIndex);\n\n\tif (src[0] === '.') {\n\t\t// decimal\n\t\tif (num.length > 12) {\n\t\t\tthrow error;\n\t\t}\n\n\t\tconst re_decimal = /^(\\.\\d+)?/g;\n\t\tconst result_decimal = re_decimal.exec(src) as any;\n\t\tsrc = src.substring(re_decimal.lastIndex);\n\t\t// 9.2.  If the number of characters after \".\" in input_number is greater than three, fail parsing.\n\t\tif (result_decimal[0].length === 0 || result_decimal[1].length > 4) {\n\t\t\tthrow error;\n\t\t}\n\n\t\tnum += result_decimal[1];\n\t\t// 7.6.  If type is \"decimal\" and input_number contains more than 16 characters, fail parsing.\n\t\tif (num.length > 16) {\n\t\t\tthrow error;\n\t\t}\n\n\t\tvalue = parseFloat(num) * sign;\n\t}\n\telse {\n\t\t// integer\n\t\t// 7.5.  If type is \"integer\" and input_number contains more than 15 characters, fail parsing.\n\t\tif (num.length > 15) {\n\t\t\tthrow error;\n\t\t}\n\n\t\tvalue = parseInt(num) * sign;\n\t\tif (isInvalidInt(value)) {\n\t\t\tthrow parseError(num, INTEGER_DECIMAL);\n\t\t}\n\t}\n\n\treturn parsedValue(value, src);\n}\n","import type { SfBareItem } from '../SfBareItem.js';\nimport type { SfDecodeOptions } from '../SfDecodeOptions.js';\nimport { BARE_ITEM } from '../utils/BARE_ITEM.js';\nimport type { ParsedValue } from './ParsedValue.js';\nimport { parseBoolean } from './parseBoolean.js';\nimport { parseByteSequence } from './parseByteSequence.js';\nimport { parseDate } from './parseDate.js';\nimport { parseError } from './parseError.js';\nimport { parseIntegerOrDecimal } from './parseIntegerOrDecimal.js';\nimport { parseString } from './parseString.js';\nimport { parseToken } from './parseToken.js';\n\n// 4.2.3.1.  Parsing a Bare Item\n//\n// Given an ASCII string as input_string, return a bare Item.\n// input_string is modified to remove the parsed value.\n//\n// 1.  If the first character of input_string is a \"-\" or a DIGIT,\n//     return the result of running Parsing an Integer or Decimal\n//     (Section 4.2.4) with input_string.\n//\n// 2.  If the first character of input_string is a DQUOTE, return the\n//     result of running Parsing a String (Section 4.2.5) with\n//     input_string.\n//\n// 3.  If the first character of input_string is \":\", return the result\n//     of running Parsing a Byte Sequence (Section 4.2.7) with\n//     input_string.\n//\n// 4.  If the first character of input_string is \"?\", return the result\n//     of running Parsing a Boolean (Section 4.2.8) with input_string.\n//\n// 5.  If the first character of input_string is an ALPHA or \"*\", return\n//     the result of running Parsing a Token (Section 4.2.6) with\n//     input_string.\n//\n// 6.  If the first character of input_string is \"@\", return the result\n//     of running Parsing a Date (Section 4.2.9) with input_string.\n//\n// 7.  Otherwise, the item type is unrecognized; fail parsing.\nexport function parseBareItem(src: string, options?: SfDecodeOptions): ParsedValue<SfBareItem> {\n\tconst first = src[0];\n\tif (first === `\"`) {\n\t\treturn parseString(src);\n\t}\n\tif (/^[-0-9]/.test(first)) {\n\t\treturn parseIntegerOrDecimal(src);\n\t}\n\tif (first === `?`) {\n\t\treturn parseBoolean(src);\n\t}\n\tif (first === `:`) {\n\t\treturn parseByteSequence(src);\n\t}\n\tif (/^[a-zA-Z*]/.test(first)) {\n\t\treturn parseToken(src, options);\n\t}\n\tif (first === `@`) {\n\t\treturn parseDate(src);\n\t}\n\tthrow parseError(src, BARE_ITEM);\n}\n","import { STRING } from '../utils/STRING.js';\nimport { STRING_REGEX } from '../utils/STRING_REGEX.js';\nimport type { ParsedValue } from './ParsedValue.js';\nimport { parsedValue } from './ParsedValue.js';\nimport { parseError } from './parseError.js';\n\n// 4.2.5.  Parsing a String\n//\n// Given an ASCII string as input_string, return an unquoted String.\n// input_string is modified to remove the parsed value.\n//\n// 1.  Let output_string be an empty string.\n//\n// 2.  If the first character of input_string is not DQUOTE, fail\n//     parsing.\n//\n// 3.  Discard the first character of input_string.\n//\n// 4.  While input_string is not empty:\n//\n//     1.  Let char be the result of consuming the first character of\n//         input_string.\n//\n//     2.  If char is a backslash (\"\\\"):\n//\n//         1.  If input_string is now empty, fail parsing.\n//\n//         2.  Let next_char be the result of consuming the first\n//             character of input_string.\n//\n//         3.  If next_char is not DQUOTE or \"\\\", fail parsing.\n//\n//         4.  Append next_char to output_string.\n//\n//     3.  Else, if char is DQUOTE, return output_string.\n//\n//     4.  Else, if char is in the range %x00-1f or %x7f (i.e., is not\n//         in VCHAR or SP), fail parsing.\n//\n//     5.  Else, append char to output_string.\n//\n// 5.  Reached the end of input_string without finding a closing DQUOTE;\n//     fail parsing.\nexport function parseString(src: string): ParsedValue<string> {\n\tlet output = '';\n\tlet i = 0;\n\n\tif (src[i] !== `\"`) {\n\t\tthrow parseError(src, STRING);\n\t}\n\n\ti++;\n\n\twhile (src.length > i) {\n\t\tif (src[i] === `\\\\`) {\n\t\t\tif (src.length <= i + 1) {\n\t\t\t\tthrow parseError(src, STRING);\n\t\t\t}\n\n\t\t\ti++;\n\n\t\t\tif (src[i] !== `\"` && src[i] !== `\\\\`) {\n\t\t\t\tthrow parseError(src, STRING);\n\t\t\t}\n\n\t\t\toutput += src[i];\n\t\t}\n\t\telse if (src[i] === `\"`) {\n\t\t\treturn parsedValue(output, src.substring(++i));\n\t\t}\n\t\telse if (STRING_REGEX.test(src[i])) {\n\t\t\tthrow parseError(src, STRING);\n\t\t}\n\t\telse {\n\t\t\toutput += src[i];\n\t\t}\n\n\t\ti++;\n\t}\n\n\tthrow parseError(src, STRING);\n}\n","import { BOOLEAN } from '../utils/BOOLEAN.js';\nimport type { ParsedValue } from './ParsedValue.js';\nimport { parsedValue } from './ParsedValue.js';\nimport { parseError } from './parseError.js';\n\n// 4.2.8.  Parsing a Boolean\n//\n// Given an ASCII string as input_string, return a Boolean. input_string\n// is modified to remove the parsed value.\n//\n// 1.  If the first character of input_string is not \"?\", fail parsing.\n//\n// 2.  Discard the first character of input_string.\n//\n// 3.  If the first character of input_string matches \"1\", discard the\n//     first character, and return true.\n//\n// 4.  If the first character of input_string matches \"0\", discard the\n//     first character, and return false.\n//\n// 5.  No value has matched; fail parsing.\nexport function parseBoolean(src: string): ParsedValue<boolean> {\n\tlet i = 0;\n\tif (src[i] !== '?') {\n\t\tthrow parseError(src, BOOLEAN);\n\t}\n\n\ti++;\n\n\tif (src[i] === '1') {\n\t\treturn parsedValue(true, src.substring(++i));\n\t}\n\n\tif (src[i] === '0') {\n\t\treturn parsedValue(false, src.substring(++i));\n\t}\n\n\tthrow parseError(src, BOOLEAN);\n}\n","import { base64decode } from '../../utils/base64decode.js';\nimport { BYTES } from '../utils/BYTES.js';\nimport type { ParsedValue } from './ParsedValue.js';\nimport { parsedValue } from './ParsedValue.js';\nimport { parseError } from './parseError.js';\n\n// 4.2.7.  Parsing a Byte Sequence\n//\n// Given an ASCII string as input_string, return a Byte Sequence.\n// input_string is modified to remove the parsed value.\n//\n// 1.  If the first character of input_string is not \":\", fail parsing.\n//\n// 2.  Discard the first character of input_string.\n//\n// 3.  If there is not a \":\" character before the end of input_string,\n//     fail parsing.\n//\n// 4.  Let b64_content be the result of consuming content of\n//     input_string up to but not including the first instance of the\n//     character \":\".\n//\n// 5.  Consume the \":\" character at the beginning of input_string.\n//\n// 6.  If b64_content contains a character not included in ALPHA, DIGIT,\n//     \"+\", \"/\" and \"=\", fail parsing.\n//\n// 7.  Let binary_content be the result of Base 64 Decoding [RFC4648]\n//     b64_content, synthesizing padding if necessary (note the\n//     requirements about recipient behavior below).\n//\n// 8.  Return binary_content.\n//\n// Because some implementations of base64 do not allow rejection of\n// encoded data that is not properly \"=\" padded (see [RFC4648],\n// Section 3.2), parsers SHOULD NOT fail when \"=\" padding is not\n// present, unless they cannot be configured to do so.\n//\n// Because some implementations of base64 do not allow rejection of\n// encoded data that has non-zero pad bits (see [RFC4648], Section 3.5),\n// parsers SHOULD NOT fail when non-zero pad bits are present, unless\n// they cannot be configured to do so.\n//\n// This specification does not relax the requirements in [RFC4648],\n// Section 3.1 and 3.3; therefore, parsers MUST fail on characters\n// outside the base64 alphabet, and on line feeds in encoded data.\nexport function parseByteSequence(src: string): ParsedValue<Uint8Array> {\n\tif (src[0] !== ':') {\n\t\tthrow parseError(src, BYTES);\n\t}\n\n\tsrc = src.substring(1);\n\tif (src.includes(':') === false) {\n\t\tthrow parseError(src, BYTES);\n\t}\n\n\tconst re = /(^.*?)(:)/g;\n\tconst b64_content = (re.exec(src) as any)[1];\n\tsrc = src.substring(re.lastIndex);\n\n\t// pass b64_content char check step 6\n\treturn parsedValue(\n\t\tbase64decode(b64_content),\n\t\tsrc,\n\t);\n}\n","/**\n * Decodes a base64 encoded string into binary data\n *\n * @param str - The base64 encoded string to decode\n * @returns The decoded binary data\n *\n * @group Utils\n *\n * @beta\n */\nexport function base64decode(str: string): Uint8Array {\n\treturn new Uint8Array([...atob(str)].map((a) => a.charCodeAt(0)));\n}\n","import type { SfDecodeOptions } from '../SfDecodeOptions.js';\nimport { SfToken } from '../SfToken.js';\nimport { TOKEN } from '../utils/TOKEN.js';\nimport type { ParsedValue } from './ParsedValue.js';\nimport { parsedValue } from './ParsedValue.js';\nimport { parseError } from './parseError.js';\n\n// 4.2.6.  Parsing a Token\n//\n// Given an ASCII string as input_string, return a Token. input_string\n// is modified to remove the parsed value.\n//\n// 1.  If the first character of input_string is not ALPHA or \"*\", fail\n//     parsing.\n//\n// 2.  Let output_string be an empty string.\n//\n// 3.  While input_string is not empty:\n//\n//     1.  If the first character of input_string is not in tchar, \":\"\n//         or \"/\", return output_string.\n//\n//     2.  Let char be the result of consuming the first character of\n//         input_string.\n//\n//     3.  Append char to output_string.\n//\n// 4.  Return output_string.\nexport function parseToken(src: string, options?: SfDecodeOptions): ParsedValue<symbol | SfToken> {\n\tif (/^[a-zA-Z*]$/.test(src[0]) === false) {\n\t\tthrow parseError(src, TOKEN);\n\t}\n\n\tconst re = /^([!#$%&'*+\\-.^_`|~\\w:/]+)/g;\n\tconst value = (re.exec(src) as any)[1];\n\tsrc = src.substring(re.lastIndex);\n\n\treturn parsedValue(\n\t\toptions?.useSymbol === false ? new SfToken(value) : Symbol.for(value),\n\t\tsrc,\n\t);\n}\n","import { DATE } from '../utils/DATE.js';\nimport type { ParsedValue } from './ParsedValue.js';\nimport { parsedValue } from './ParsedValue.js';\nimport { parseError } from './parseError.js';\nimport { parseIntegerOrDecimal } from './parseIntegerOrDecimal.js';\n\n// 4.2.9.  Parsing a Date\n//\n// Given an ASCII string as input_string, return a Date. input_string is\n// modified to remove the parsed value.\n//\n// 1.  If the first character of input_string is not \"@\", fail parsing.\n//\n// 2.  Discard the first character of input_string.\n//\n// 3.  Let output_date be the result of running Parsing an Integer or\n//     Decimal (Section 4.2.4) with input_string.\n//\n// 4.  If output_date is a Decimal, fail parsing.\n//\n// 5.  Return output_date.\nexport function parseDate(src: string): ParsedValue<Date> {\n\tlet i = 0;\n\tif (src[i] !== '@') {\n\t\tthrow parseError(src, DATE);\n\t}\n\n\ti++;\n\tconst date = parseIntegerOrDecimal(src.substring(i));\n\n\tif (Number.isInteger(date.value) === false) {\n\t\tthrow parseError(src, DATE);\n\t}\n\n\treturn parsedValue(\n\t\tnew Date(date.value * 1000),\n\t\tdate.src,\n\t);\n}\n","import { KEY } from '../utils/KEY.js';\nimport type { ParsedValue } from './ParsedValue.js';\nimport { parsedValue } from './ParsedValue.js';\nimport { parseError } from './parseError.js';\n\n// 4.2.3.3.  Parsing a Key\n//\n// Given an ASCII string as input_string, return a key. input_string is\n// modified to remove the parsed value.\n//\n// 1.  If the first character of input_string is not lcalpha or \"*\",\n//     fail parsing.\n//\n// 2.  Let output_string be an empty string.\n//\n// 3.  While input_string is not empty:\n//\n//     1.  If the first character of input_string is not one of lcalpha,\n//         DIGIT, \"_\", \"-\", \".\", or \"*\", return output_string.\n//\n//     2.  Let char be the result of consuming the first character of\n//         input_string.\n//\n//     3.  Append char to output_string.\n//\n// 4.  Return output_string.\nexport function parseKey(src: string): ParsedValue<string> {\n\tlet i = 0;\n\tif (/^[a-z*]$/.test(src[i]) === false) {\n\t\tthrow parseError(src, KEY);\n\t}\n\n\tlet value = '';\n\n\twhile (src.length > i) {\n\t\tif (/^[a-z0-9_\\-.*]$/.test(src[i]) === false) {\n\t\t\treturn parsedValue(value, src.substring(i));\n\t\t}\n\n\t\tvalue += src[i];\n\t\ti++;\n\t}\n\n\treturn parsedValue(value, src.substring(i));\n}\n","import type { SfDecodeOptions } from '../SfDecodeOptions.js';\nimport type { SfParameters } from '../SfParameters.js';\nimport type { ParsedValue } from './ParsedValue.js';\nimport { parsedValue } from './ParsedValue.js';\nimport { parseBareItem } from './parseBareItem.js';\nimport { parseKey } from './parseKey.js';\n\n// 4.2.3.2.  Parsing Parameters\n//\n// Given an ASCII string as input_string, return an ordered map whose\n// values are bare Items. input_string is modified to remove the parsed\n// value.\n//\n// 1.  Let parameters be an empty, ordered map.\n//\n// 2.  While input_string is not empty:\n//\n//     1.  If the first character of input_string is not \";\", exit the\n//         loop.\n//\n//     2.  Consume a \";\" character from the beginning of input_string.\n//\n//     3.  Discard any leading SP characters from input_string.\n//\n//     4.  let param_name be the result of running Parsing a Key\n//         (Section 4.2.3.3) with input_string.\n//\n//     5.  Let param_value be Boolean true.\n//\n//     6.  If the first character of input_string is \"=\":\n//\n//         1.  Consume the \"=\" character at the beginning of\n//             input_string.\n//\n//         2.  Let param_value be the result of running Parsing a Bare\n//             Item (Section 4.2.3.1) with input_string.\n//\n//     7.  Append key param_name with value param_value to parameters.\n//         If parameters already contains a name param_name (comparing\n//         character-for-character), overwrite its value.\n//\n// 3.  Return parameters.\n//\n// Note that when duplicate Parameter keys are encountered, this has the\n// effect of ignoring all but the last instance.\nexport function parseParameters(src: string, options?: SfDecodeOptions): ParsedValue<SfParameters | undefined> {\n\tlet parameters: SfParameters | undefined = undefined;\n\twhile (src.length > 0) {\n\t\tif (src[0] !== ';') {\n\t\t\tbreak;\n\t\t}\n\n\t\tsrc = src.substring(1).trim();\n\t\tconst parsedKey = parseKey(src);\n\t\tconst key = parsedKey.value;\n\t\tlet value = true;\n\t\tsrc = parsedKey.src;\n\n\t\tif (src[0] === '=') {\n\t\t\tsrc = src.substring(1);\n\t\t\tconst parsedBareItem = parseBareItem(src, options);\n\t\t\tvalue = parsedBareItem.value as any;\n\t\t\tsrc = parsedBareItem.src;\n\t\t}\n\n\t\t// initialize as object when params exists\n\t\tif (parameters == null) {\n\t\t\tparameters = {};\n\t\t}\n\n\t\t// override if param_name exists\n\t\tparameters[key] = value;\n\t}\n\treturn parsedValue(parameters, src);\n}\n","import type { SfDecodeOptions } from '../SfDecodeOptions.js';\nimport { SfItem } from '../SfItem.js';\nimport type { ParsedValue } from './ParsedValue.js';\nimport { parsedValue } from './ParsedValue.js';\nimport { parseBareItem } from './parseBareItem.js';\nimport { parseParameters } from './parseParameters.js';\n\n// 4.2.3.  Parsing an Item\n//\n// Given an ASCII string as input_string, return a (bare_item,\n// parameters) tuple. input_string is modified to remove the parsed\n// value.\n//\n// 1.  Let bare_item be the result of running Parsing a Bare Item\n//     (Section 4.2.3.1) with input_string.\n//\n// 2.  Let parameters be the result of running Parsing Parameters\n//     (Section 4.2.3.2) with input_string.\n//\n// 3.  Return the tuple (bare_item, parameters).\nexport function parseItem(src: string, options?: SfDecodeOptions): ParsedValue<SfItem> {\n\tconst parsedBareItem = parseBareItem(src, options);\n\tsrc = parsedBareItem.src;\n\n\tconst parsedParameters = parseParameters(src, options);\n\tsrc = parsedParameters.src;\n\n\treturn parsedValue(\n\t\tnew SfItem(parsedBareItem.value, parsedParameters.value),\n\t\tsrc,\n\t);\n}\n","import type { SfDecodeOptions } from '../SfDecodeOptions.js';\nimport type { SfInnerList } from '../SfInnerList.js';\nimport type { SfItem } from '../SfItem.js';\nimport type { ParsedValue } from './ParsedValue.js';\nimport { parseInnerList } from './parseInnerList.js';\nimport { parseItem } from './parseItem.js';\n\n// 4.2.1.1.  Parsing an Item or Inner List\n//\n// Given an ASCII string as input_string, return the tuple\n// (item_or_inner_list, parameters), where item_or_inner_list can be\n// either a single bare item, or an array of (bare_item, parameters)\n// tuples. input_string is modified to remove the parsed value.\n//\n// 1.  If the first character of input_string is \"(\", return the result\n//     of running Parsing an Inner List (Section 4.2.1.2) with\n//     input_string.\n//\n// 2.  Return the result of running Parsing an Item (Section 4.2.3) with\n//     input_string.\nexport function parseItemOrInnerList(src: string, options?: SfDecodeOptions): ParsedValue<SfItem | SfInnerList> {\n\tif (src[0] === '(') {\n\t\treturn parseInnerList(src, options);\n\t}\n\n\treturn parseItem(src, options);\n}\n","import type { SfDecodeOptions } from '../SfDecodeOptions.js';\nimport type { SfInnerList } from '../SfInnerList.js';\nimport { SfItem } from '../SfItem.js';\nimport { INNER } from '../utils/INNER.js';\nimport type { ParsedValue } from './ParsedValue.js';\nimport { parsedValue } from './ParsedValue.js';\nimport { parseError } from './parseError.js';\nimport { parseItem } from './parseItem.js';\nimport { parseParameters } from './parseParameters.js';\n\n// 4.2.1.2.  Parsing an Inner List\n//\n// Given an ASCII string as input_string, return the tuple (inner_list,\n// parameters), where inner_list is an array of (bare_item, parameters)\n// tuples. input_string is modified to remove the parsed value.\n//\n// 1.  Consume the first character of input_string; if it is not \"(\",\n//     fail parsing.\n//\n// 2.  Let inner_list be an empty array.\n//\n// 3.  While input_string is not empty:\n//\n//     1.  Discard any leading SP characters from input_string.\n//\n//     2.  If the first character of input_string is \")\":\n//\n//         1.  Consume the first character of input_string.\n//\n//         2.  Let parameters be the result of running Parsing\n//             Parameters (Section 4.2.3.2) with input_string.\n//\n//         3.  Return the tuple (inner_list, parameters).\n//\n//     3.  Let item be the result of running Parsing an Item\n//         (Section 4.2.3) with input_string.\n//\n//     4.  Append item to inner_list.\n//\n//     5.  If the first character of input_string is not SP or \")\", fail\n//         parsing.\n//\n// 4.  The end of the inner list was not found; fail parsing.\nexport function parseInnerList(src: string, options?: SfDecodeOptions): ParsedValue<SfInnerList> {\n\tif (src[0] !== '(') {\n\t\tthrow parseError(src, INNER);\n\t}\n\n\tsrc = src.substring(1);\n\tconst innerList: SfItem[] = [];\n\twhile (src.length > 0) {\n\t\tsrc = src.trim();\n\t\tif (src[0] === ')') {\n\t\t\tsrc = src.substring(1);\n\t\t\tconst parsedParameters = parseParameters(src, options);\n\n\t\t\treturn parsedValue(\n\t\t\t\tnew SfItem(innerList, parsedParameters.value) as any,\n\t\t\t\tparsedParameters.src,\n\t\t\t);\n\t\t}\n\n\t\tconst parsedItem = parseItem(src, options);\n\t\tinnerList.push(parsedItem.value);\n\t\tsrc = parsedItem.src;\n\n\t\tif (src[0] !== ' ' && src[0] !== ')') {\n\t\t\tthrow parseError(src, INNER);\n\t\t}\n\t}\n\n\tthrow parseError(src, INNER);\n}\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2022, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport FactoryMaker from '../../core/FactoryMaker.js';\nimport EventBus from '../../core/EventBus.js';\nimport Events from '../../core/events/Events.js';\nimport Debug from '../../core/Debug.js';\nimport { CMSD_DYNAMIC } from '@svta/common-media-library/cmsd/CMSD_DYNAMIC.js';\nimport { CMSD_STATIC } from '@svta/common-media-library/cmsd/CMSD_STATIC.js';\nimport { CmsdObjectType } from '@svta/common-media-library/cmsd/CmsdObjectType.js';\nimport { decodeCmsdDynamic } from '@svta/common-media-library/cmsd/decodeCmsdDynamic.js';\nimport { decodeCmsdStatic } from '@svta/common-media-library/cmsd/decodeCmsdStatic.js';\n\n// Note: in modern browsers, the header names are returned in all lower case\nconst CMSD_STATIC_RESPONSE_FIELD_NAME = CMSD_STATIC.toLowerCase();\nconst CMSD_DYNAMIC_RESPONSE_FIELD_NAME = CMSD_DYNAMIC.toLowerCase();\nconst CMSD_KEYS = {\n    AVAILABILITY_TIME: 'at',\n    DURESS: 'du',\n    ENCODED_BITRATE: 'br',\n    ESTIMATED_THROUGHPUT: 'etp',\n    HELD_TIME: 'ht',\n    INTERMEDIARY_IDENTIFIER: 'n',\n    MAX_SUGGESTED_BITRATE: 'mb',\n    NEXT_OBJECT_RESPONSE: 'nor',\n    NEXT_RANGE_RESPONSE: 'nrr',\n    OBJECT_DURATION: 'd',\n    OBJECT_TYPE: 'ot',\n    RESPONSE_DELAY: 'rd',\n    ROUND_TRIP_TIME: 'rtt',\n    STARTUP: 'su',\n    STREAM_TYPE: 'st',\n    STREAMING_FORMAT: 'sf',\n    VERSION: 'v'\n}\n\nconst PERSISTENT_PARAMS = [\n    CMSD_KEYS.MAX_SUGGESTED_BITRATE,\n    CMSD_KEYS.STREAM_TYPE,\n    CMSD_KEYS.STREAMING_FORMAT,\n    CMSD_KEYS.VERSION\n];\n\nconst STREAM = 'stream'\n\nconst MEDIATYPE_TO_OBJECTTYPE = {\n    'video': CmsdObjectType.VIDEO,\n    'audio': CmsdObjectType.AUDIO,\n    'text': CmsdObjectType.TIMED_TEXT,\n    'stream': STREAM // Specific value for parameters without object type, which apply for all media/objects\n}\n\nfunction CmsdModel() {\n\n    const context = this.context;\n    const eventBus = EventBus(context).getInstance();\n\n    let instance,\n        logger,\n        _staticParamsDict,\n        _dynamicParamsDict;\n\n    function setup() {\n        logger = Debug(context).getInstance().getLogger(instance);\n        _resetInitialSettings();\n    }\n\n    function initialize() {}\n\n    function setConfig(/*config*/) {}\n\n    function _resetInitialSettings() {\n        _staticParamsDict = {};\n        _dynamicParamsDict = {};\n    }\n\n    function _clearParams(params) {\n        if (!params) {\n            return;\n        }\n        Object.keys(params).forEach(key => {\n            if (!PERSISTENT_PARAMS.includes(key)) {\n                delete params[key];\n            }\n        })\n    }\n\n    function _parseCMSDStatic(value) {\n        try {\n            return decodeCmsdStatic(value);\n        } catch (e) {\n            logger.error('Failed to parse CMSD-Static response header value:', e);\n        }\n    }\n\n    function _parseCMSDDynamic(value) {\n        try {\n            const items = decodeCmsdDynamic(value);\n            const last = items[items.length - 1];\n            return last?.params || {};\n        } catch (e) {\n            logger.error('Failed to parse CMSD-Dynamic response header value:', e);\n            return {};\n        }\n    }\n\n    function _mediaTypetoObjectType(mediaType) {\n        return MEDIATYPE_TO_OBJECTTYPE[mediaType] || CmsdObjectType.OTHER;\n    }\n\n    function _getParamValueForObjectType(paramsType, ot, key) {\n        const params = paramsType === CMSD_STATIC ? _staticParamsDict : _dynamicParamsDict;\n        const otParams = params[ot] || {};\n        const streamParams = params[STREAM] || {};\n        const value = otParams[key] || streamParams[key];\n        return value;\n    }\n\n    function parseResponseHeaders(responseHeaders, mediaType) {\n        let staticParams = null;\n        let dynamicParams = null;\n\n        // Note: responseHeaders as a record of key:value\n        for (const key in responseHeaders) {\n            const value = responseHeaders[key];\n            switch (key) {\n                case CMSD_STATIC_RESPONSE_FIELD_NAME:\n                    staticParams = _parseCMSDStatic(value);\n                    eventBus.trigger(Events.CMSD_STATIC_HEADER, staticParams);\n                    break;\n                case CMSD_DYNAMIC_RESPONSE_FIELD_NAME:\n                    if (!dynamicParams) {\n                        dynamicParams = _parseCMSDDynamic(value);\n                    }\n                    break;\n                default:\n                    break;\n            }\n        }\n\n        // Get object type\n        let ot = STREAM;\n        if (staticParams && staticParams[CMSD_KEYS.OBJECT_TYPE]) {\n            ot = staticParams[CMSD_KEYS.OBJECT_TYPE];\n        } else if (mediaType) {\n            ot = _mediaTypetoObjectType(mediaType)\n        }\n\n        // Clear previously received params except persistent ones\n        _clearParams(_staticParamsDict[ot]);\n        _clearParams(_dynamicParamsDict[ot]);\n\n        // Merge params with previously received params\n        if (staticParams) {\n            _staticParamsDict[ot] = Object.assign(_staticParamsDict[ot] || {}, staticParams);\n        }\n        if (dynamicParams) {\n            _dynamicParamsDict[ot] = Object.assign(_dynamicParamsDict[ot] || {}, dynamicParams);\n        }\n\n        return {\n            static: staticParams,\n            dynamic: dynamicParams\n        }\n    }\n\n    function getMaxBitrate(type) {\n        let ot = _mediaTypetoObjectType(type);\n        let mb = _getParamValueForObjectType(CMSD_DYNAMIC, ot, CMSD_KEYS.MAX_SUGGESTED_BITRATE);\n        return mb ? mb : -1\n    }\n\n    function getEstimatedThroughput(type) {\n        let ot = _mediaTypetoObjectType(type);\n        let etp = _getParamValueForObjectType(CMSD_DYNAMIC, ot, CMSD_KEYS.ESTIMATED_THROUGHPUT);\n        return etp ? etp : null\n    }\n\n    function getResponseDelay(type) {\n        let ot = _mediaTypetoObjectType(type);\n        let rd = _getParamValueForObjectType(CMSD_DYNAMIC, ot, CMSD_KEYS.RESPONSE_DELAY);\n        return rd ? rd : null\n    }\n\n    function getRoundTripTime(type) {\n        let ot = _mediaTypetoObjectType(type);\n        let rd = _getParamValueForObjectType(CMSD_DYNAMIC, ot, CMSD_KEYS.ROUND_TRIP_TIME);\n        return rd ? rd : null\n    }\n\n    function reset() {\n        _resetInitialSettings();\n    }\n\n    instance = {\n        setConfig,\n        initialize,\n        reset,\n        parseResponseHeaders,\n        getMaxBitrate,\n        getEstimatedThroughput,\n        getResponseDelay,\n        getRoundTripTime,\n    };\n\n    setup();\n\n    return instance;\n}\n\nCmsdModel.__dashjs_factory_name = 'CmsdModel';\nexport default FactoryMaker.getSingletonFactory(CmsdModel);\n","import { symbolToStr } from '../cta/utils/symbolToStr.js';\nimport { decodeSfDict } from '../structuredfield/decodeSfDict.js';\nimport type { CmsdStatic } from './CmsdStatic.js';\n\n/**\n * Decode a CMSD Static dict string to an object.\n *\n * @param cmsd - The CMSD string to decode.\n *\n * @returns The decoded CMSD object.\n *\n * @group CMSD\n *\n * @beta\n */\nexport function decodeCmsdStatic(cmsd: string): CmsdStatic {\n\tif (!cmsd) {\n\t\treturn {};\n\t}\n\n\treturn Object\n\t\t.entries(decodeSfDict(cmsd))\n\t\t.reduce((acc, [key, item]) => {\n\t\t\tconst { value }: any = item;\n\t\t\tacc[key as any] = (typeof value === 'symbol' ? symbolToStr(value) : value) as any;\n\t\t\treturn acc;\n\t\t}, {} as CmsdStatic);\n}\n","import type { SfDecodeOptions } from './SfDecodeOptions.js';\nimport type { SfDictionary } from './SfDictionary.js';\nimport { parseDict } from './parse/parseDict.js';\nimport { parseError } from './parse/parseError.js';\nimport { DICT } from './utils/DICT.js';\n\n/**\n * Decode a structured field string into a structured field dictionary\n *\n * @param input - The structured field string to decode\n * @returns The structured field dictionary\n *\n * @group Structured Field\n *\n * @beta\n */\nexport function decodeSfDict(input: string, options?: SfDecodeOptions): SfDictionary {\n\ttry {\n\t\tconst { src, value } = parseDict(input.trim(), options);\n\t\tif (src !== '') {\n\t\t\tthrow parseError(src, DICT);\n\t\t}\n\t\treturn value;\n\t}\n\tcatch (cause) {\n\t\tthrow parseError(input, DICT, cause);\n\t}\n}\n","import type { SfDecodeOptions } from '../SfDecodeOptions.js';\nimport type { SfDictionary } from '../SfDictionary.js';\nimport type { SfInnerList } from '../SfInnerList.js';\nimport { SfItem } from '../SfItem.js';\nimport { DICT } from '../utils/DICT.js';\nimport type { ParsedValue } from './ParsedValue.js';\nimport { parsedValue } from './ParsedValue.js';\nimport { parseError } from './parseError.js';\nimport { parseItemOrInnerList } from './parseItemOrInnerList.js';\nimport { parseKey } from './parseKey.js';\nimport { parseParameters } from './parseParameters.js';\n\n// 4.2.2.  Parsing a Dictionary\n//\n// Given an ASCII string as input_string, return an ordered map whose\n// values are (item_or_inner_list, parameters) tuples. input_string is\n// modified to remove the parsed value.\n//\n// 1.  Let dictionary be an empty, ordered map.\n//\n// 2.  While input_string is not empty:\n//\n//     1.  Let this_key be the result of running Parsing a Key\n//         (Section 4.2.3.3) with input_string.\n//\n//     2.  If the first character of input_string is \"=\":\n//\n//         1.  Consume the first character of input_string.\n//\n//         2.  Let member be the result of running Parsing an Item or\n//             Inner List (Section 4.2.1.1) with input_string.\n//\n//     3.  Otherwise:\n//\n//         1.  Let value be Boolean true.\n//\n//         2.  Let parameters be the result of running Parsing\n//             Parameters Section 4.2.3.2 with input_string.\n//\n//         3.  Let member be the tuple (value, parameters).\n//\n//     4.  Add name this_key with value member to dictionary.  If\n//         dictionary already contains a name this_key (comparing\n//         character-for-character), overwrite its value.\n//\n//     5.  Discard any leading OWS characters from input_string.\n//\n//     6.  If input_string is empty, return dictionary.\n//\n//     7.  Consume the first character of input_string; if it is not\n//         \",\", fail parsing.\n//\n//     8.  Discard any leading OWS characters from input_string.\n//\n//     9.  If input_string is empty, there is a trailing comma; fail\n//         parsing.\n//\n// 3.  No structured data has been found; return dictionary (which is\n//     empty).\n//\n// Note that when duplicate Dictionary keys are encountered, this has\n// the effect of ignoring all but the last instance.\nexport function parseDict(src: string, options?: SfDecodeOptions): ParsedValue<SfDictionary> {\n\tconst value: SfDictionary = {};\n\n\twhile (src.length > 0) {\n\t\tlet member: SfItem | SfInnerList;\n\t\tconst parsedKey = parseKey(src);\n\t\tconst key = parsedKey.value;\n\t\tsrc = parsedKey.src;\n\n\t\tif (src[0] === '=') {\n\t\t\tconst parsedItemOrInnerList = parseItemOrInnerList(src.substring(1), options);\n\t\t\tmember = parsedItemOrInnerList.value;\n\t\t\tsrc = parsedItemOrInnerList.src;\n\t\t}\n\t\telse {\n\t\t\tconst parsedParameters = parseParameters(src, options);\n\t\t\tmember = new SfItem(true, parsedParameters.value);\n\t\t\tsrc = parsedParameters.src;\n\t\t}\n\n\t\tvalue[key] = member;\n\n\t\tsrc = src.trim();\n\t\tif (src.length === 0) {\n\t\t\treturn parsedValue(value, src);\n\t\t}\n\n\t\tif (src[0] !== ',') {\n\t\t\tthrow parseError(src, DICT);\n\t\t}\n\n\t\tsrc = src.substring(1).trim();\n\t\tif (src.length === 0 || src[0] === ',') {\n\t\t\tthrow parseError(src, DICT);\n\t\t}\n\t}\n\n\treturn parsedValue(value, src);\n}\n","import { decodeSfList } from '../structuredfield/decodeSfList.js';\nimport type { CmsdDynamic } from './CmsdDynamic.js';\n\n/**\n * Decode a CMSD dynamic string to an object.\n *\n * @param cmsd - The CMSD string to decode.\n *\n * @returns The decoded CMSD object.\n *\n * @group CMSD\n *\n * @beta\n */\nexport function decodeCmsdDynamic(cmsd: string): CmsdDynamic[] {\n\tif (!cmsd) {\n\t\treturn [];\n\t}\n\n\tconst sfDict = decodeSfList(cmsd);\n\n\treturn sfDict as CmsdDynamic[];\n}\n","import type { SfDecodeOptions } from './SfDecodeOptions.js';\nimport type { SfMember } from './SfMember.js';\nimport { parseError } from './parse/parseError.js';\nimport { parseList } from './parse/parseList.js';\nimport { LIST } from './utils/LIST.js';\n\n/**\n * Decode a structured field string into a structured field list\n *\n * @param input - The structured field string to decode\n * @returns The structured field list\n *\n * @group Structured Field\n *\n * @beta\n */\nexport function decodeSfList(input: string, options?: SfDecodeOptions): SfMember[] {\n\ttry {\n\t\tconst { src, value } = parseList(input.trim(), options);\n\t\tif (src !== '') {\n\t\t\tthrow parseError(src, LIST);\n\t\t}\n\t\treturn value;\n\t}\n\tcatch (cause) {\n\t\tthrow parseError(input, LIST, cause);\n\t}\n}\n","import type { SfDecodeOptions } from '../SfDecodeOptions.js';\nimport type { SfMember } from '../SfMember.js';\nimport { LIST } from '../utils/LIST.js';\nimport type { ParsedValue } from './ParsedValue.js';\nimport { parsedValue } from './ParsedValue.js';\nimport { parseError } from './parseError.js';\nimport { parseItemOrInnerList } from './parseItemOrInnerList.js';\n\n// 4.2.1.  Parsing a List\n//\n// Given an ASCII string as input_string, return an array of\n// (item_or_inner_list, parameters) tuples. input_string is modified to\n// remove the parsed value.\n//\n// 1.  Let members be an empty array.\n//\n// 2.  While input_string is not empty:\n//\n//     1.  Append the result of running Parsing an Item or Inner List\n//         (Section 4.2.1.1) with input_string to members.\n//\n//     2.  Discard any leading OWS characters from input_string.\n//\n//     3.  If input_string is empty, return members.\n//\n//     4.  Consume the first character of input_string; if it is not\n//         \",\", fail parsing.\n//\n//     5.  Discard any leading OWS characters from input_string.\n//\n//     6.  If input_string is empty, there is a trailing comma; fail\n//         parsing.\n//\n// 3.  No structured data has been found; return members (which is\n//     empty).\nexport function parseList(src: string, options?: SfDecodeOptions): ParsedValue<SfMember[]> {\n\tconst value: SfMember[] = [];\n\twhile (src.length > 0) {\n\t\tconst parsedItemOrInnerList = parseItemOrInnerList(src, options);\n\t\tvalue.push(parsedItemOrInnerList.value);\n\n\t\tsrc = parsedItemOrInnerList.src.trim();\n\t\tif (src.length === 0) {\n\t\t\treturn parsedValue(value, src);\n\t\t}\n\n\t\tif (src[0] !== ',') {\n\t\t\tthrow parseError(src, LIST);\n\t\t}\n\n\t\tsrc = src.substring(1).trim();\n\t\tif (src.length === 0 || src[0] === ',') {\n\t\t\tthrow parseError(src, LIST);\n\t\t}\n\t}\n\treturn parsedValue(value, src);\n}\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport FactoryMaker from '../../core/FactoryMaker.js';\nimport Constants from '../constants/Constants.js';\nimport Utils from '../../core/Utils.js';\n\nfunction CommonAccessTokenController() {\n\n    let instance,\n        hostTokenMap;\n\n    function processResponseHeaders(httpResponse) {\n        if (!httpResponse || !httpResponse.headers || !httpResponse.request || !httpResponse.request.url) {\n            return\n        }\n\n        const commonAccessTokenHeader = httpResponse.headers[Constants.COMMON_ACCESS_TOKEN_HEADER]\n        if (commonAccessTokenHeader) {\n            const host = Utils.getHostFromUrl(httpResponse.request.url)\n            if (host) {\n                hostTokenMap[host] = commonAccessTokenHeader\n            }\n        }\n    }\n\n    function getCommonAccessTokenForUrl(url) {\n        if (!url) {\n            return null\n        }\n\n        const host = Utils.getHostFromUrl(url);\n        if (host) {\n            return hostTokenMap[host] ? hostTokenMap[host] : null;\n        }\n    }\n\n    function setup() {\n        _resetInitialSettings();\n    }\n\n    function reset() {\n        _resetInitialSettings()\n    }\n\n    function _resetInitialSettings() {\n        hostTokenMap = {}\n    }\n\n    instance = {\n        reset,\n        processResponseHeaders,\n        getCommonAccessTokenForUrl\n    };\n\n    setup();\n    return instance;\n}\n\nCommonAccessTokenController.__dashjs_factory_name = 'CommonAccessTokenController';\nexport default FactoryMaker.getSingletonFactory(CommonAccessTokenController);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2024, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport FactoryMaker from '../../core/FactoryMaker.js';\nimport {HTTPRequest} from '../vo/metrics/HTTPRequest.js';\n\nfunction ClientDataReportingController() {\n\n    let instance,\n        serviceDescriptionController;\n\n    function setConfig(config) {\n        if (!config) {\n            return;\n        }\n\n        if (config.serviceDescriptionController) {\n            serviceDescriptionController = config.serviceDescriptionController;\n        }\n    }\n\n    function isServiceLocationIncluded(requestType, serviceLocation) {\n\n        if (requestType === HTTPRequest.CONTENT_STEERING_TYPE) {\n            return true;\n        }\n\n        const { serviceLocationsArray } = serviceDescriptionController?.getServiceDescriptionSettings()?.clientDataReporting ?? {};\n        const isIncluded = serviceLocationsArray ? (serviceLocationsArray?.length === 0 || serviceLocationsArray.includes(serviceLocation)) : true;\n        return isIncluded;\n    }\n\n    function isAdaptationsIncluded(adaptationSet) {\n        const { adaptationSetsArray } = serviceDescriptionController?.getServiceDescriptionSettings()?.clientDataReporting ?? {};\n        const isIncluded = adaptationSetsArray ? (adaptationSetsArray?.length === 0 || adaptationSetsArray.includes(adaptationSet)) : true;\n        return isIncluded;\n    }\n\n    instance = {\n        setConfig,\n        isAdaptationsIncluded,\n        isServiceLocationIncluded,\n    };\n\n    return instance;\n}\n\nClientDataReportingController.__dashjs_factory_name = 'ClientDataReportingController';\nexport default FactoryMaker.getSingletonFactory(ClientDataReportingController);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport FactoryMaker from '../../core/FactoryMaker.js';\nimport Utils from '../../core/Utils.js';\nimport DashConstants from '../../dash/constants/DashConstants.js';\nimport Constants from '../constants/Constants.js';\nimport {HTTPRequest} from '../vo/metrics/HTTPRequest.js';\nimport Debug from '../../core/Debug.js';\n\nfunction ExtUrlQueryInfoController() {\n    let instance,\n        logger,\n        mpdQueryStringInformation;\n    const context = this.context;\n\n    function setup() {\n        logger = Debug(context).getInstance().getLogger(instance);\n    }\n\n    function _generateQueryParams(resultObject, manifestObject, mpdUrlQuery, parentLevelInfo, mpdElement) {\n        const property = _getDescriptorTypeFromManifestObject(manifestObject, mpdElement);\n\n        _generateInitialQueryString(property, parentLevelInfo.initialQueryString, resultObject, mpdUrlQuery);\n        _generateFinalQueryString(property, resultObject, parentLevelInfo.finalQueryString);\n\n        resultObject.sameOriginOnly = property?.ExtUrlQueryInfo?.sameOriginOnly;\n        resultObject.queryParams = Utils.parseQueryParams(resultObject?.finalQueryString);\n        resultObject.includeInRequests = _getIncludeInRequestFromProperty(property, parentLevelInfo.includeInRequests);\n    }\n\n    function _getDescriptorTypeFromManifestObject(manifestObject, mpdElement) {\n        let properties = [];\n        if (mpdElement === DashConstants.PERIOD) {\n            properties = manifestObject[DashConstants.SUPPLEMENTAL_PROPERTY] || [];\n        } else {\n            properties = [\n                ...(manifestObject[DashConstants.ESSENTIAL_PROPERTY] || []),\n                ...(manifestObject[DashConstants.SUPPLEMENTAL_PROPERTY] || [])\n            ];\n        }\n        return properties.find((prop) => (\n            (prop.schemeIdUri === Constants.URL_QUERY_INFO_SCHEME && prop.UrlQueryInfo) ||\n            (prop.schemeIdUri === Constants.EXT_URL_QUERY_INFO_SCHEME && prop.ExtUrlQueryInfo)\n        ));\n    }\n\n    function _generateInitialQueryString(property, defaultInitialString, dst, mpdUrlQuery) {\n        dst.initialQueryString = '';\n        let initialQueryString = '';\n\n        const queryInfo = property?.ExtUrlQueryInfo || property?.UrlQueryInfo;\n\n        if (queryInfo && queryInfo.queryString) {\n            if (defaultInitialString && defaultInitialString.length > 0) {\n                initialQueryString = defaultInitialString + '&' + queryInfo.queryString;\n            } else {\n                initialQueryString = queryInfo.queryString;\n            }\n        } else {\n            initialQueryString = defaultInitialString;\n        }\n        if (queryInfo?.useMPDUrlQuery === 'true' && mpdUrlQuery) {\n            initialQueryString = initialQueryString ? initialQueryString + '&' + mpdUrlQuery : mpdUrlQuery;\n        }\n        dst.initialQueryString = initialQueryString;\n    }\n\n    // The logic for supporting templates with queryTemplate=$query:<param>$ is not in place yet, this only support queryTemplate=\"$querypart$\".\n    function _generateFinalQueryString(property, resultObject, parentQueryString) {\n        if (!property) {\n            resultObject.finalQueryString = parentQueryString;\n            return;\n        }\n        const queryTemplate = property?.ExtUrlQueryInfo?.queryTemplate || property?.UrlQueryInfo?.queryTemplate || '';\n        resultObject.finalQueryString = queryTemplate === DashConstants.QUERY_PART ? resultObject?.initialQueryString : '';\n    }\n\n    function _getIncludeInRequestFromProperty(property, parentIncludeInRequests) {\n        if (!property) {\n            return parentIncludeInRequests;\n        }\n\n        if (property.ExtUrlQueryInfo?.includeInRequests) {\n            return property.ExtUrlQueryInfo.includeInRequests.split(' ');\n        } else {\n            return [DashConstants.SEGMENT_TYPE];\n        }\n    }\n\n    function createFinalQueryStrings(manifest) {\n        mpdQueryStringInformation = {\n            origin: new URL(manifest.url).origin,\n            period: []\n        };\n\n        const mpdUrlQuery = manifest.url.split('?')[1];\n        const initialMpdObject = { initialQueryString: '', includeInRequests: [] };\n\n        _generateQueryParams(mpdQueryStringInformation, manifest, mpdUrlQuery, initialMpdObject, DashConstants.MPD);\n\n        manifest.Period.forEach((period) => {\n            const periodObject = {\n                adaptation: []\n            };\n            _generateQueryParams(periodObject, period, mpdUrlQuery, mpdQueryStringInformation, DashConstants.PERIOD);\n\n            period.AdaptationSet.forEach((adaptationSet) => {\n                const adaptationObject = {\n                    representation: []\n                };\n                _generateQueryParams(adaptationObject, adaptationSet, mpdUrlQuery, periodObject, DashConstants.ADAPTATION_SET);\n\n                adaptationSet.Representation.forEach((representation) => {\n                    const representationObject = {};\n                    _generateQueryParams(representationObject, representation, mpdUrlQuery, adaptationObject, DashConstants.REPRESENTATION);\n\n                    adaptationObject.representation.push(representationObject);\n                });\n                periodObject.adaptation.push(adaptationObject);\n            });\n            mpdQueryStringInformation.period.push(periodObject);\n        });\n    }\n\n    function getFinalQueryString(request) {\n        try {\n            if (!mpdQueryStringInformation) {\n                return null;\n            }\n            if (request.type === HTTPRequest.MEDIA_SEGMENT_TYPE || request.type === HTTPRequest.INIT_SEGMENT_TYPE) {\n                const representation = request.representation;\n\n                if (!representation) {\n                    return null;\n                }\n                const adaptation = representation.adaptation;\n                const period = adaptation.period;\n                const queryInfo = mpdQueryStringInformation\n                    .period[period.index]\n                    .adaptation[adaptation.index]\n                    .representation[representation.index];\n                const requestUrl = new URL(request.url);\n                const canSendToOrigin = !queryInfo.sameOriginOnly || mpdQueryStringInformation.origin === requestUrl.origin;\n                const inRequest = queryInfo.includeInRequests.includes(DashConstants.SEGMENT_TYPE);\n                if (inRequest && canSendToOrigin) {\n                    return queryInfo.queryParams;\n                }\n            } else if (request.type === HTTPRequest.MPD_TYPE) {\n                const inRequest = [DashConstants.MPD_TYPE, DashConstants.MPD_PATCH_TYPE].some(r => mpdQueryStringInformation.includeInRequests.includes(r));\n                if (inRequest) {\n                    return mpdQueryStringInformation.queryParams;\n                }\n            } else if (request.type === HTTPRequest.CONTENT_STEERING_TYPE) {\n                const inRequest = mpdQueryStringInformation.includeInRequests.includes(DashConstants.STEERING_TYPE);\n                if (inRequest) {\n                    return mpdQueryStringInformation.queryParams;\n                }\n            }\n        } catch (e) {\n            logger.error(e);\n            return null\n        }\n    }\n\n    setup();\n\n    instance = {\n        getFinalQueryString,\n        createFinalQueryStrings\n    };\n    return instance;\n}\n\nExtUrlQueryInfoController.__dashjs_factory_name = 'ExtUrlQueryInfoController';\nexport default FactoryMaker.getSingletonFactory(ExtUrlQueryInfoController);\n","class CommonMediaRequest {\n    /**\n     * @param {Object} params\n     * @param {string} params.url\n     * @param {string} params.method\n     * @param {string} [params.responseType]\n     * @param {Object<string, string>} [params.headers]\n     * @param {RequestCredentials} [params.credentials]\n     * @param {RequestMode} [params.mode]\n     * @param {number} [params.timeout]\n     * @param {Cmcd} [params.cmcd]\n     * @param {any} [params.customData]\n     */\n    constructor(params) {\n        this.url = params.url;\n        this.method = params.method;\n        this.responseType = params.responseType !== undefined ? params.responseType : null;\n        this.headers = params.headers !== undefined ? params.headers : {};\n        this.credentials = params.credentials !== undefined ? params.credentials : null;\n        this.mode = params.mode !== undefined ? params.mode : null;\n        this.timeout = params.timeout !== undefined ? params.timeout : 0;\n        this.cmcd = params.cmcd !== undefined ? params.cmcd : null;\n        this.customData = params.customData !== undefined ? params.customData : null;\n    }\n}\n\nexport default CommonMediaRequest;\n","class CommonMediaResponse {\n    /**\n     * @param {Object} params\n     * @param {CommonMediaRequest} params.request\n     * @param {string} [params.url]\n     * @param {boolean} [params.redirected]\n     * @param {number} [params.status]\n     * @param {string} [params.statusText]\n     * @param {string} [params.type]\n     * @param {Object<string, string>} [params.headers]\n     * @param {any} [params.data]\n     * @param {ResourceTiming} [params.resourceTiming]\n     */\n    constructor(params) {\n        this.request = params.request;\n        this.url = params.url !== undefined ? params.url : null;\n        this.redirected = params.redirected !== undefined ? params.redirected : false;\n        this.status = params.status !== undefined ? params.status : null;\n        this.statusText = params.statusText !== undefined ? params.statusText : '';\n        this.type = params.type !== undefined ? params.type : '';\n        this.headers = params.headers !== undefined ? params.headers : {};\n        this.data = params.data !== undefined ? params.data : null;\n        this.resourceTiming = params.resourceTiming !== undefined ? params.resourceTiming : null;\n    }\n}\n\nexport default CommonMediaResponse;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport XHRLoader from './XHRLoader.js';\nimport FetchLoader from './FetchLoader.js';\nimport {HTTPRequest} from '../vo/metrics/HTTPRequest.js';\nimport FactoryMaker from '../../core/FactoryMaker.js';\nimport DashJSError from '../vo/DashJSError.js';\nimport CmcdModel from '../models/CmcdModel.js';\nimport CmsdModel from '../models/CmsdModel.js';\nimport Utils from '../../core/Utils.js';\nimport Debug from '../../core/Debug.js';\nimport EventBus from '../../core/EventBus.js';\nimport Events from '../../core/events/Events.js';\nimport Settings from '../../core/Settings.js';\nimport Constants from '../constants/Constants.js';\nimport CustomParametersModel from '../models/CustomParametersModel.js';\nimport CommonAccessTokenController from '../controllers/CommonAccessTokenController.js';\nimport ClientDataReportingController from '../controllers/ClientDataReportingController.js';\nimport ExtUrlQueryInfoController from '../controllers/ExtUrlQueryInfoController.js';\nimport CommonMediaRequest from '../vo/CommonMediaRequest.js';\nimport CommonMediaResponse from '../vo/CommonMediaResponse.js';\n\n/**\n * @module HTTPLoader\n * @ignore\n * @description Manages download of resources via HTTP.\n * @param {Object} cfg - dependencies from parent\n */\nfunction HTTPLoader(cfg) {\n\n    cfg = cfg || {};\n\n    const context = this.context;\n    const errHandler = cfg.errHandler;\n    const dashMetrics = cfg.dashMetrics;\n    const mediaPlayerModel = cfg.mediaPlayerModel;\n    const boxParser = cfg.boxParser;\n    const errors = cfg.errors;\n    const requestTimeout = cfg.requestTimeout || 0;\n    const eventBus = EventBus(context).getInstance();\n    const settings = Settings(context).getInstance();\n\n    let instance,\n        httpRequests,\n        delayedRequests,\n        retryRequests,\n        downloadErrorToRequestTypeMap,\n        cmcdModel,\n        cmsdModel,\n        xhrLoader,\n        fetchLoader,\n        customParametersModel,\n        commonAccessTokenController,\n        clientDataReportingController,\n        extUrlQueryInfoController,\n        logger;\n\n    function setup() {\n        logger = Debug(context).getInstance().getLogger(instance);\n        httpRequests = [];\n        delayedRequests = [];\n        retryRequests = [];\n        cmcdModel = CmcdModel(context).getInstance();\n        clientDataReportingController = ClientDataReportingController(context).getInstance();\n        cmsdModel = CmsdModel(context).getInstance();\n        customParametersModel = CustomParametersModel(context).getInstance();\n        commonAccessTokenController = CommonAccessTokenController(context).getInstance();\n        extUrlQueryInfoController = ExtUrlQueryInfoController(context).getInstance();\n\n        downloadErrorToRequestTypeMap = {\n            [HTTPRequest.MPD_TYPE]: errors.DOWNLOAD_ERROR_ID_MANIFEST_CODE,\n            [HTTPRequest.XLINK_EXPANSION_TYPE]: errors.DOWNLOAD_ERROR_ID_XLINK_CODE,\n            [HTTPRequest.INIT_SEGMENT_TYPE]: errors.DOWNLOAD_ERROR_ID_INITIALIZATION_CODE,\n            [HTTPRequest.MEDIA_SEGMENT_TYPE]: errors.DOWNLOAD_ERROR_ID_CONTENT_CODE,\n            [HTTPRequest.INDEX_SEGMENT_TYPE]: errors.DOWNLOAD_ERROR_ID_CONTENT_CODE,\n            [HTTPRequest.BITSTREAM_SWITCHING_SEGMENT_TYPE]: errors.DOWNLOAD_ERROR_ID_CONTENT_CODE,\n            [HTTPRequest.OTHER_TYPE]: errors.DOWNLOAD_ERROR_ID_CONTENT_CODE\n        };\n    }\n\n    function setConfig(config) {\n        if (!config) {\n            return;\n        }\n\n        if (config.commonAccessTokenController) {\n            commonAccessTokenController = config.commonAccessTokenController\n        }\n\n        if (config.extUrlQueryInfoController) {\n            extUrlQueryInfoController = config.extUrlQueryInfoController;\n        }\n    }\n\n    /**\n     * Initiates a download of the resource described by config.request.\n     * @param {Object} config - contains request (FragmentRequest or derived type), and callbacks\n     * @memberof module:HTTPLoader\n     * @instance\n     */\n    function load(config) {\n        if (config.request) {\n            const retryAttempts = mediaPlayerModel.getRetryAttemptsForType(config.request.type);\n            return _internalLoad(config, retryAttempts);\n        } else {\n            if (config.error) {\n                config.error(config.request, 'error');\n            }\n            return Promise.resolve();\n        }\n    }\n\n    /**\n     * Initiates or re-initiates a download of the resource\n     * @param {object} config\n     * @param {number} remainingAttempts\n     * @private\n     */\n    function _internalLoad(config, remainingAttempts) {\n\n        /**\n         * Fired when a request has completed, whether successfully (after load) or unsuccessfully (after abort, timeout or error).\n         */\n        const _onloadend = function () {\n            _onRequestEnd();\n        };\n\n        /**\n         * Fired when a request has started to load data.\n         * @param event\n         */\n        const _onprogress = function (event) {\n            const currentTime = new Date();\n\n            // If we did not transfer all data yet and this is the first time we are getting a progress event we use this time as firstByteDate.\n            if (firstProgress) {\n                firstProgress = false;\n                // event.loaded: the amount of data currently transferred\n                // event.total: the total amount of data to be transferred.\n                // If lengthComputable is false within the XMLHttpRequestProgressEvent, that means the server never sent a Content-Length header in the response.\n                if (!event.lengthComputable ||\n                    (event.lengthComputable && event.total !== event.loaded)) {\n                    requestObject.firstByteDate = currentTime;\n                    commonMediaResponse.resourceTiming.responseStart = currentTime.getTime();\n                }\n            }\n\n            // lengthComputable indicating if the resource concerned by the ProgressEvent has a length that can be calculated. If not, the ProgressEvent.total property has no significant value.\n            if (event.lengthComputable) {\n                requestObject.bytesLoaded = commonMediaResponse.length = event.loaded;\n                requestObject.bytesTotal = commonMediaResponse.resourceTiming.encodedBodySize = event.total;\n                commonMediaResponse.length = event.total;\n                commonMediaResponse.resourceTiming.encodedBodySize = event.loaded;\n            }\n\n            if (!event.noTrace) {\n                traces.push({\n                    s: lastTraceTime,\n                    d: event.time ? event.time : currentTime.getTime() - lastTraceTime.getTime(),\n                    b: [event.loaded ? event.loaded - lastTraceReceivedCount : 0], // event.loaded: When downloading a resource using HTTP, this value is specified in bytes (not bits), and only represents the part of the content itself, not headers and other overhead\n                    t: event.throughput\n                });\n\n                requestObject.traces = traces;\n                lastTraceTime = currentTime;\n                lastTraceReceivedCount = event.loaded;\n            }\n\n            if (progressTimeout) {\n                clearTimeout(progressTimeout);\n                progressTimeout = null;\n            }\n\n            if (settings.get().streaming.fragmentRequestProgressTimeout > 0) {\n                progressTimeout = setTimeout(function () {\n                    // No more progress => abort request and treat as an error\n                    logger.warn('Abort request ' + commonMediaRequest.url + ' due to progress timeout');\n                    loader.abort(commonMediaRequest);\n                    _onloadend();\n                }, settings.get().streaming.fragmentRequestProgressTimeout);\n            }\n\n            if (config.progress && event) {\n                config.progress(event);\n            }\n        };\n\n        /**\n         * Fired when a request has been aborted, for example because the program called XMLHttpRequest.abort().\n         */\n        const _onabort = function () {\n            _onRequestEnd(true)\n        };\n\n        /**\n         * Fired when progress is terminated due to preset time expiring.\n         * @param event\n         */\n        const _ontimeout = function (event) {\n            let timeoutMessage;\n            // We know how much we already downloaded by looking at the timeout event\n            if (event.lengthComputable) {\n                let percentageComplete = (event.loaded / event.total) * 100;\n                timeoutMessage = 'Request timeout: loaded: ' + event.loaded + ', out of: ' + event.total + ' : ' + percentageComplete.toFixed(3) + '% Completed';\n            } else {\n                timeoutMessage = 'Request timeout: non-computable download size';\n            }\n            logger.warn(timeoutMessage);\n        };\n\n        const _onRequestEnd = function (aborted = false) {\n            // Remove the request from our list of requests\n            if (httpRequests.indexOf(commonMediaRequest) !== -1) {\n                httpRequests.splice(httpRequests.indexOf(commonMediaRequest), 1);\n            }\n\n            if (progressTimeout) {\n                clearTimeout(progressTimeout);\n                progressTimeout = null;\n            }\n\n            commonAccessTokenController.processResponseHeaders(commonMediaResponse);\n\n            _updateRequestTimingInfo();\n            _updateResourceTimingInfo();\n\n            _applyResponseInterceptors(commonMediaResponse).then((_httpResponse) => {\n                commonMediaResponse = _httpResponse;\n\n                _addHttpRequestMetric(commonMediaRequest, commonMediaResponse, traces);\n\n                // Ignore aborted requests\n                if (aborted) {\n                    if (config.abort) {\n                        config.abort(requestObject);\n                    }\n                    return;\n                }\n\n                if (requestObject.type === HTTPRequest.MPD_TYPE) {\n                    dashMetrics.addManifestUpdate(requestObject);\n                    eventBus.trigger(Events.MANIFEST_LOADING_FINISHED, { requestObject });\n                }\n\n                if (commonMediaResponse.status >= 200 && commonMediaResponse.status <= 299 && commonMediaResponse.data) {\n                    if (config.success) {\n                        config.success(commonMediaResponse.data, commonMediaResponse.statusText, commonMediaResponse.url);\n                    }\n\n                    if (config.complete) {\n                        config.complete(requestObject, commonMediaResponse.statusText);\n                    }\n                } else {\n                    // If we get a 404 to a media segment we should check the client clock again and perform a UTC sync in the background.\n                    try {\n                        if (commonMediaResponse.status === 404 && settings.get().streaming.utcSynchronization.enableBackgroundSyncAfterSegmentDownloadError && requestObject.type === HTTPRequest.MEDIA_SEGMENT_TYPE) {\n                            // Only trigger a sync if the loading failed for the first time\n                            const initialNumberOfAttempts = mediaPlayerModel.getRetryAttemptsForType(HTTPRequest.MEDIA_SEGMENT_TYPE);\n                            if (initialNumberOfAttempts === remainingAttempts) {\n                                eventBus.trigger(Events.ATTEMPT_BACKGROUND_SYNC);\n                            }\n                        }\n                    } catch (e) {\n                    }\n\n                    _retriggerRequest();\n                }\n            });\n        };\n\n        const _updateRequestTimingInfo = function () {\n            requestObject.startDate = requestStartTime;\n            requestObject.endDate = new Date();\n            requestObject.firstByteDate = requestObject.firstByteDate || requestStartTime;\n        }\n\n        const _updateResourceTimingInfo = function () {\n            commonMediaResponse.resourceTiming.responseEnd = Date.now();\n\n            // If enabled the ResourceTimingApi we add the corresponding information to the request object.\n            // These values are more accurate and can be used by the ThroughputController later\n            _addResourceTimingValues(commonMediaRequest, commonMediaResponse);\n        }\n\n        const _loadRequest = function (loader, httpRequest, httpResponse) {\n            return new Promise((resolve) => {\n                _applyRequestInterceptors(httpRequest).then((_httpRequest) => {\n                    httpRequest = _httpRequest;\n\n                    httpRequest.customData.onloadend = _onloadend;\n                    httpRequest.customData.onprogress = _onprogress;\n                    httpRequest.customData.onabort = _onabort;\n                    httpRequest.customData.ontimeout = _ontimeout;\n\n                    httpResponse.resourceTiming.startTime = Date.now();\n                    loader.load(httpRequest, httpResponse);\n                    resolve();\n                });\n            });\n        }\n\n        /**\n         * Retriggers the request in case we did not exceed the number of retry attempts\n         * @private\n         */\n        const _retriggerRequest = function () {\n            if (remainingAttempts > 0) {\n                remainingAttempts--;\n                let retryRequest = { config: config };\n                retryRequests.push(retryRequest);\n                retryRequest.timeout = setTimeout(function () {\n                    if (retryRequests.indexOf(retryRequest) === -1) {\n                        return;\n                    } else {\n                        retryRequests.splice(retryRequests.indexOf(retryRequest), 1);\n                    }\n                    _internalLoad(config, remainingAttempts);\n                }, mediaPlayerModel.getRetryIntervalsForType(requestObject.type));\n            } else {\n                if (requestObject.type === HTTPRequest.MSS_FRAGMENT_INFO_SEGMENT_TYPE) {\n                    return;\n                }\n\n                errHandler.error(new DashJSError(downloadErrorToRequestTypeMap[requestObject.type], requestObject.url + ' is not available', {\n                    request: requestObject,\n                    response: commonMediaResponse\n                }));\n\n                if (config.error) {\n                    config.error(requestObject, 'error', commonMediaResponse.statusText, commonMediaResponse);\n                }\n\n                if (config.complete) {\n                    config.complete(requestObject, commonMediaResponse.statusText);\n                }\n            }\n        }\n\n        // Main code after inline functions\n        const requestObject = config.request;\n        const traces = [];\n        let firstProgress, requestStartTime, lastTraceTime, lastTraceReceivedCount, progressTimeout;\n\n        let commonMediaRequest;\n        let commonMediaResponse;\n\n        requestObject.bytesLoaded = NaN;\n        requestObject.bytesTotal = NaN;\n        requestObject.firstByteDate = null;\n        requestObject.traces = [];\n        firstProgress = true;\n        requestStartTime = new Date();\n        lastTraceTime = requestStartTime;\n        lastTraceReceivedCount = 0;\n        progressTimeout = null;\n\n        if (!dashMetrics || !errHandler) {\n            throw new Error('config object is not correct or missing');\n        }\n\n        const loaderInformation = _getLoader(requestObject);\n        const loader = loaderInformation.loader;\n        requestObject.fileLoaderType = loaderInformation.fileLoaderType;\n\n        requestObject.headers = {};\n        _updateRequestUrlAndHeaders(requestObject);\n        if (requestObject.range) {\n            requestObject.headers['Range'] = 'bytes=' + requestObject.range;\n        }\n        const withCredentials = customParametersModel.getXHRWithCredentialsForType(requestObject.type);\n\n\n        commonMediaRequest = new CommonMediaRequest({\n            url: requestObject.url,\n            method: HTTPRequest.GET,\n            responseType: requestObject.responseType,\n            headers: requestObject.headers,\n            credentials: withCredentials ? 'include' : 'omit',\n            timeout: requestTimeout,\n            cmcd: cmcdModel.getCmcdData(requestObject),\n            customData: { request: requestObject }\n        });\n\n        commonMediaResponse = new CommonMediaResponse({\n            request: commonMediaRequest,\n            resourceTiming: {\n                startTime: Date.now(),\n                encodedBodySize: 0\n            },\n            status: 0\n        });\n\n        // Adds the ability to delay single fragment loading time to control buffer.\n        let now = new Date().getTime();\n        if (isNaN(requestObject.delayLoadingTime) || now >= requestObject.delayLoadingTime) {\n            // no delay - just send\n            httpRequests.push(commonMediaRequest);\n            return _loadRequest(loader, commonMediaRequest, commonMediaResponse);\n        } else {\n            // delay\n            let delayedRequest = {\n                httpRequest: commonMediaRequest,\n                httpResponse: commonMediaResponse\n            };\n            delayedRequests.push(delayedRequest);\n            delayedRequest.delayTimeout = setTimeout(function () {\n                if (delayedRequests.indexOf(delayedRequest) === -1) {\n                    return;\n                } else {\n                    delayedRequests.splice(delayedRequests.indexOf(delayedRequest), 1);\n                }\n                try {\n                    requestStartTime = new Date();\n                    lastTraceTime = requestStartTime;\n                    httpRequests.push(delayedRequest.httpRequest);\n                    _loadRequest(loader, delayedRequest.httpRequest, delayedRequest.httpResponse);\n                } catch (e) {\n                    delayedRequest.httpRequest.onloadend();\n                }\n            }, (requestObject.delayLoadingTime - now));\n\n            return Promise.resolve();\n        }\n    }\n\n    function _applyRequestInterceptors(httpRequest) {\n        const interceptors = customParametersModel.getRequestInterceptors();\n        if (!interceptors) {\n            return Promise.resolve(httpRequest);\n        }\n\n        return interceptors.reduce((prev, next) => {\n            return prev.then((request) => {\n                return next(request);\n            });\n        }, Promise.resolve(httpRequest));\n    }\n\n    function _applyResponseInterceptors(response) {\n        const interceptors = customParametersModel.getResponseInterceptors();\n        if (!interceptors) {\n            return Promise.resolve(response);\n        }\n\n        return interceptors.reduce((prev, next) => {\n            return prev.then(resp => {\n                return next(resp);\n            });\n        }, Promise.resolve(response));\n    }\n\n    function _addHttpRequestMetric(httpRequest, httpResponse, traces) {\n        const requestObject = httpRequest.customData.request;\n        const cmsd = settings.get().streaming.cmsd && settings.get().streaming.cmsd.enabled ? cmsdModel.parseResponseHeaders(httpResponse.headers, requestObject.mediaType) : null;\n        dashMetrics.addHttpRequest(requestObject, httpResponse.url, httpResponse.status, httpResponse.headers, traces, cmsd);\n    }\n\n    /**\n     * Adds the values from the Resource Timing API, see https://developer.mozilla.org/en-US/docs/Web/API/Resource_Timing_API/Using_the_Resource_Timing_API\n     * @param requestObject\n     * @private\n     */\n    function _addResourceTimingValues(httpRequest, httpResponse) {\n        if (!settings.get().streaming.abr.throughput.useResourceTimingApi) {\n            return;\n        }\n        // Check performance support. We do not support range requests, needs to figure out how to find the right resource here.\n        if (typeof performance === 'undefined' || httpRequest.range) {\n            return;\n        }\n\n        // Get a list of \"resource\" performance entries\n        const resources = performance.getEntriesByType('resource');\n        if (resources === undefined || resources.length <= 0) {\n            return;\n        }\n\n        // Find the right resource\n        let i = 0;\n        let resource = null;\n        while (i < resources.length) {\n            if (resources[i].name === httpRequest.url) {\n                resource = resources[i];\n                break;\n            }\n            i += 1;\n        }\n\n        // Check if PerformanceResourceTiming values are usable\n        // Note: to allow seeing cross-origin timing information, the Timing-Allow-Origin HTTP response header needs to be set\n        // See https://developer.mozilla.org/en-US/docs/Web/API/PerformanceResourceTiming#cross-origin_timing_information\n        if (!_areResourceTimingValuesUsable(resource)) {\n            return;\n        }\n\n        httpRequest.customData.request.resourceTimingValues = resource;\n\n        // Update CommonMediaResponse Resource Timing info\n        httpResponse.resourceTiming.startTime = resource.startTime;\n        httpResponse.resourceTiming.encodedBodySize = resource.encodedBodySize;\n        httpResponse.resourceTiming.responseStart = resource.startTime;\n        httpResponse.resourceTiming.responseEnd = resource.responseEnd;\n        httpResponse.resourceTiming.duration = resource.duration;\n    }\n\n    /**\n     * Checks if we got usable ResourceTimingAPI values\n     * @param httpRequest\n     * @returns {boolean}\n     * @private\n     */\n    function _areResourceTimingValuesUsable(resource) {\n        return resource &&\n            !isNaN(resource.responseStart) && resource.responseStart > 0 &&\n            !isNaN(resource.responseEnd) && resource.responseEnd > 0 &&\n            !isNaN(resource.transferSize) && resource.transferSize > 0\n    }\n\n    /**\n     * Returns either the FetchLoader or the XHRLoader depending on the request type and playback mode.\n     * @param {object} request\n     * @return {*}\n     * @private\n     */\n    function _getLoader(request) {\n        let loader;\n        let fileLoaderType;\n\n        if (request.hasOwnProperty('availabilityTimeComplete') && request.availabilityTimeComplete === false && window.fetch && request.responseType === 'arraybuffer' && request.type === HTTPRequest.MEDIA_SEGMENT_TYPE) {\n            if (!fetchLoader) {\n                fetchLoader = FetchLoader(context).create();\n                fetchLoader.setConfig({\n                    dashMetrics,\n                    boxParser\n                });\n            }\n            loader = fetchLoader;\n            fileLoaderType = Constants.FILE_LOADER_TYPES.FETCH;\n        } else {\n            if (!xhrLoader) {\n                xhrLoader = XHRLoader(context).create();\n            }\n            loader = xhrLoader;\n            fileLoaderType = Constants.FILE_LOADER_TYPES.XHR;\n        }\n\n        return { loader, fileLoaderType };\n    }\n\n    /**\n     * Updates the request url and headers according to CMCD and content steering (pathway cloning)\n     * @param request\n     * @private\n     */\n    function _updateRequestUrlAndHeaders(request) {\n        _updateRequestUrlAndHeadersWithCmcd(request);\n        _addExtUrlQueryParameters(request);\n        _addPathwayCloningParameters(request);\n        _addCommonAccessToken(request);\n    }\n\n    function _addExtUrlQueryParameters(request) {\n        // Add ExtUrlQueryInfo parameters\n        let finalQueryString = extUrlQueryInfoController.getFinalQueryString(request);\n        if (finalQueryString) {\n            request.url = Utils.addAdditionalQueryParameterToUrl(request.url, finalQueryString);\n        }\n    }\n\n    function _addPathwayCloningParameters(request) {\n        // Add queryParams that came from pathway cloning\n        if (request.queryParams) {\n            const queryParams = Object.keys(request.queryParams).map((key) => {\n                return {\n                    key,\n                    value: request.queryParams[key]\n                }\n            })\n            request.url = Utils.addAdditionalQueryParameterToUrl(request.url, queryParams);\n        }\n    }\n\n    function _addCommonAccessToken(request) {\n        const commonAccessToken = commonAccessTokenController.getCommonAccessTokenForUrl(request.url)\n        if (commonAccessToken) {\n            request.headers[Constants.COMMON_ACCESS_TOKEN_HEADER] = commonAccessToken\n        }\n    }\n\n    /**\n     * Updates the request url and headers with CMCD data\n     * @param request\n     * @private\n     */\n    function _updateRequestUrlAndHeadersWithCmcd(request) {\n        const currentServiceLocation = request?.serviceLocation;\n        const currentAdaptationSetId = request?.mediaInfo?.id?.toString();\n        const isIncludedFilters = clientDataReportingController.isServiceLocationIncluded(request.type, currentServiceLocation) &&\n            clientDataReportingController.isAdaptationsIncluded(currentAdaptationSetId);\n\n        if (isIncludedFilters && cmcdModel.isCmcdEnabled()) {\n            const cmcdParameters = cmcdModel.getCmcdParametersFromManifest();\n            const cmcdMode = cmcdParameters.mode ? cmcdParameters.mode : settings.get().streaming.cmcd.mode;\n            if (cmcdMode === Constants.CMCD_MODE_QUERY) {\n                request.url = Utils.removeQueryParameterFromUrl(request.url, Constants.CMCD_QUERY_KEY);\n                const additionalQueryParameter = _getAdditionalQueryParameter(request);\n                request.url = Utils.addAdditionalQueryParameterToUrl(request.url, additionalQueryParameter);\n            } else if (cmcdMode === Constants.CMCD_MODE_HEADER) {\n                request.headers = Object.assign(request.headers, cmcdModel.getHeaderParameters(request));\n            }\n        }\n    }\n\n    /**\n     * Generates the additional query parameters to be appended to the request url\n     * @param {object} request\n     * @return {array}\n     * @private\n     */\n    function _getAdditionalQueryParameter(request) {\n        try {\n            const additionalQueryParameter = [];\n            const cmcdQueryParameter = cmcdModel.getQueryParameter(request);\n\n            if (cmcdQueryParameter) {\n                additionalQueryParameter.push(cmcdQueryParameter);\n            }\n\n            return additionalQueryParameter;\n        } catch (e) {\n            return [];\n        }\n    }\n\n    /**\n     * Aborts any inflight downloads\n     * @memberof module:HTTPLoader\n     * @instance\n     */\n    function abort() {\n        retryRequests.forEach(t => {\n            clearTimeout(t.timeout);\n            // abort request in order to trigger LOADING_ABANDONED event\n            if (t.config.request && t.config.abort) {\n                t.config.abort(t.config.request);\n            }\n        });\n        retryRequests = [];\n\n        delayedRequests.forEach(x => clearTimeout(x.delayTimeout));\n        delayedRequests = [];\n\n        httpRequests.forEach(req => {\n            const reqData = req.customData\n            if (!reqData) {\n                return\n            }\n            // MSS patch: ignore FragmentInfo requests\n            if (reqData.request && reqData.request.type === HTTPRequest.MSS_FRAGMENT_INFO_SEGMENT_TYPE) {\n                return;\n            }\n\n            // abort will trigger onloadend which we don't want\n            // when deliberately aborting inflight requests -\n            // set them to undefined so they are not called\n            reqData.onloadend = reqData.onprogress = undefined;\n            if (reqData.abort) {\n                reqData.abort();\n            }\n        });\n        httpRequests = [];\n    }\n\n    function resetInitialSettings() {\n        if (xhrLoader) {\n            xhrLoader.resetInitialSettings();\n        }\n    }\n\n    function reset() {\n        httpRequests = [];\n        delayedRequests = [];\n        retryRequests = [];\n        if (xhrLoader) {\n            xhrLoader.reset();\n        }\n        if (fetchLoader) {\n            fetchLoader.reset();\n        }\n        xhrLoader = null;\n        fetchLoader = null;\n    }\n\n    instance = {\n        abort,\n        load,\n        reset,\n        resetInitialSettings,\n        setConfig,\n    };\n\n    setup();\n\n    return instance;\n}\n\nHTTPLoader.__dashjs_factory_name = 'HTTPLoader';\n\nconst factory = FactoryMaker.getClassFactory(HTTPLoader);\nexport default factory;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport FactoryMaker from '../../core/FactoryMaker.js';\nimport HTTPLoader from '../../streaming/net/HTTPLoader.js';\n\n/**\n * @module\n * @description Choose right url loader for scheme\n * @ignore\n */\nfunction SchemeLoaderFactory() {\n\n    let instance;\n\n    let schemeLoaderMap;\n\n    function registerLoader(scheme, loader) {\n        schemeLoaderMap[scheme] = loader;\n    }\n\n    function unregisterLoader(scheme) {\n        if (schemeLoaderMap[scheme]) {\n            delete schemeLoaderMap[scheme];\n        }\n    }\n\n    function unregisterAllLoader() {\n        schemeLoaderMap = {};\n    }\n\n    function getLoader(url) {\n\n        // iterates through schemeLoaderMap to find a loader for the scheme\n        for (var scheme in schemeLoaderMap) {\n            if (schemeLoaderMap.hasOwnProperty(scheme) && url.startsWith(scheme)) {\n                return schemeLoaderMap[scheme];\n            }\n        }\n\n        return HTTPLoader;\n    }\n\n    function reset() {\n        unregisterAllLoader();\n    }\n\n    function setup() {\n        reset();\n    }\n\n    setup();\n\n    instance = {\n        getLoader,\n        registerLoader,\n        unregisterLoader,\n        unregisterAllLoader,\n        reset\n    };\n\n    return instance;\n}\n\nSchemeLoaderFactory.__dashjs_factory_name = 'SchemeLoaderFactory';\nconst factory = FactoryMaker.getSingletonFactory(SchemeLoaderFactory);\nexport default factory;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport FactoryMaker from '../../core/FactoryMaker.js';\nimport SchemeLoaderFactory from '../../streaming/net/SchemeLoaderFactory.js';\n\n/**\n * @class URLLoader\n * @description  Call Offline Loader or Online Loader depending on URL\n * @param {Object} cfg - dependencies\n * @ignore\n */\nfunction URLLoader(cfg) {\n\n    cfg = cfg || {};\n    const context = this.context;\n\n    let instance,\n        schemeLoaderFactory,\n        loader;\n\n    schemeLoaderFactory = SchemeLoaderFactory(context).getInstance();\n\n    function load(config) {\n        if (!loader) {\n            let loaderFactory = schemeLoaderFactory.getLoader(config && config.request ? config.request.url : null);\n            loader = loaderFactory(context).create({\n                errHandler: cfg.errHandler,\n                mediaPlayerModel: cfg.mediaPlayerModel,\n                dashMetrics: cfg.dashMetrics,\n                boxParser: cfg.boxParser ? cfg.boxParser : null,\n                constants: cfg.constants ? cfg.constants : null,\n                dashConstants: cfg.dashConstants ? cfg.dashConstants : null,\n                urlUtils: cfg.urlUtils ? cfg.urlUtils : null,\n                requestTimeout: !isNaN(cfg.requestTimeout) ? cfg.requestTimeout : 0,\n                errors: cfg.errors\n            });\n        }\n        loader.load(config);\n    }\n\n    function abort() {\n        if (loader) {\n            loader.abort();\n        }\n    }\n\n    function resetInitialSettings() {\n        if (loader && typeof loader.resetInitialSettings === 'function') {\n            loader.resetInitialSettings();\n        }\n    }\n\n    function reset() {\n        if (schemeLoaderFactory) {\n            schemeLoaderFactory.reset();\n            schemeLoaderFactory = null;\n        }\n        if (loader && typeof loader.reset === 'function') {\n            loader.reset();\n        }\n        loader = null;\n    }\n\n    instance = {\n        abort,\n        load,\n        reset,\n        resetInitialSettings\n    };\n\n    return instance;\n\n}\n\nURLLoader.__dashjs_factory_name = 'URLLoader';\n\nconst factory = FactoryMaker.getClassFactory(URLLoader);\nexport default factory;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nimport FragmentRequest from './FragmentRequest.js';\n\nclass HeadRequest extends FragmentRequest {\n    constructor(url) {\n        super(url);\n        this.checkForExistenceOnly = true;\n    }\n}\n\nexport default HeadRequest;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport Constants from './constants/Constants.js';\nimport URLLoader from './net/URLLoader.js';\nimport HeadRequest from './vo/HeadRequest.js';\nimport DashJSError from './vo/DashJSError.js';\nimport FactoryMaker from '../core/FactoryMaker.js';\n\nfunction FragmentLoader(config) {\n\n    config = config || {};\n    const context = this.context;\n    const eventBus = config.eventBus;\n    const events = config.events;\n    const urlUtils = config.urlUtils;\n    const errors = config.errors;\n    const streamId = config.streamId;\n\n    let instance,\n        urlLoader;\n\n    function setup() {\n        urlLoader = URLLoader(context).create({\n            errHandler: config.errHandler,\n            errors: errors,\n            dashMetrics: config.dashMetrics,\n            mediaPlayerModel: config.mediaPlayerModel,\n            urlUtils: urlUtils,\n            constants: Constants,\n            boxParser: config.boxParser,\n            dashConstants: config.dashConstants,\n            requestTimeout: config.settings.get().streaming.fragmentRequestTimeout\n        });\n    }\n\n    function checkForExistence(request) {\n        const report = function (success) {\n            eventBus.trigger(events.CHECK_FOR_EXISTENCE_COMPLETED, { request: request, exists: success }\n            );\n        };\n\n        if (request) {\n            let headRequest = new HeadRequest(request.url);\n            urlLoader.load({\n                request: headRequest,\n                success: function () {\n                    report(true);\n                },\n                error: function () {\n                    report(false);\n                }\n            });\n        } else {\n            report(false);\n        }\n    }\n\n    function load(request) {\n        const report = function (data, error) {\n            eventBus.trigger(events.LOADING_COMPLETED, {\n                request: request,\n                response: data || null,\n                error: error || null,\n                sender: instance\n            });\n        };\n\n        if (request) {\n            urlLoader.load({\n                request: request,\n                progress: function (event) {\n                    eventBus.trigger(events.LOADING_PROGRESS, {\n                        request: request,\n                        stream: event.stream,\n                        streamId\n                    });\n\n                    // Only in case of FetchAPI and low latency streaming. XHR does not have data attribute.\n                    if (event.data) {\n                        eventBus.trigger(events.LOADING_DATA_PROGRESS, {\n                            request: request,\n                            response: event.data || null,\n                            error: null,\n                            sender: instance\n                        });\n                    }\n                },\n                success: function (data) {\n                    report(data);\n                },\n                error: function (request, statusText, errorText) {\n                    report(\n                        undefined,\n                        new DashJSError(\n                            errors.FRAGMENT_LOADER_LOADING_FAILURE_ERROR_CODE,\n                            errorText,\n                            statusText\n                        )\n                    );\n                },\n                abort: function (request) {\n                    if (request) {\n                        eventBus.trigger(events.LOADING_ABANDONED, {\n                            mediaType: request.mediaType,\n                            request: request,\n                            sender: instance\n                        });\n                    }\n                }\n            });\n        } else {\n            report(\n                undefined,\n                new DashJSError(\n                    errors.FRAGMENT_LOADER_NULL_REQUEST_ERROR_CODE,\n                    errors.FRAGMENT_LOADER_NULL_REQUEST_ERROR_MESSAGE\n                )\n            );\n        }\n    }\n\n    function abort() {\n        if (urlLoader) {\n            urlLoader.abort();\n        }\n    }\n\n    function resetInitialSettings() {\n        if (urlLoader) {\n            urlLoader.resetInitialSettings();\n        }\n    }\n\n    function reset() {\n        if (urlLoader) {\n            urlLoader.abort();\n            urlLoader.reset();\n            urlLoader = null;\n        }\n    }\n\n    instance = {\n        abort,\n        checkForExistence,\n        load,\n        reset,\n        resetInitialSettings\n    };\n\n    setup();\n\n    return instance;\n}\n\nFragmentLoader.__dashjs_factory_name = 'FragmentLoader';\nexport default FactoryMaker.getClassFactory(FragmentLoader);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport Constants from '../constants/Constants.js';\nimport DataChunk from '../vo/DataChunk.js';\nimport FragmentModel from '../models/FragmentModel.js';\nimport FragmentLoader from '../FragmentLoader.js';\nimport EventBus from '../../core/EventBus.js';\nimport Events from '../../core/events/Events.js';\nimport MediaPlayerEvents from '../MediaPlayerEvents.js';\nimport Errors from '../../core/errors/Errors.js';\nimport FactoryMaker from '../../core/FactoryMaker.js';\nimport Debug from '../../core/Debug.js';\n\nfunction FragmentController(config) {\n\n    config = config || {};\n    const context = this.context;\n    const eventBus = EventBus(context).getInstance();\n\n    const errHandler = config.errHandler;\n    const mediaPlayerModel = config.mediaPlayerModel;\n    const dashMetrics = config.dashMetrics;\n    const debug = Debug(context).getInstance();\n    const streamInfo = config.streamInfo;\n\n    let instance,\n        logger,\n        fragmentModels;\n\n    function setup() {\n        logger = debug.getLogger(instance);\n        resetInitialSettings();\n        eventBus.on(MediaPlayerEvents.FRAGMENT_LOADING_COMPLETED, onFragmentLoadingCompleted, instance);\n        eventBus.on(MediaPlayerEvents.FRAGMENT_LOADING_PROGRESS, onFragmentLoadingCompleted, instance);\n    }\n\n    function getStreamId() {\n        return streamInfo.id;\n    }\n\n    function getModel(type) {\n        let model = fragmentModels[type];\n        if (!model) {\n            model = FragmentModel(context).create({\n                streamInfo: streamInfo,\n                type: type,\n                dashMetrics: dashMetrics,\n                fragmentLoader: FragmentLoader(context).create({\n                    dashMetrics: dashMetrics,\n                    mediaPlayerModel: mediaPlayerModel,\n                    errHandler: errHandler,\n                    settings: config.settings,\n                    boxParser: config.boxParser,\n                    eventBus: eventBus,\n                    events: Events,\n                    errors: Errors,\n                    dashConstants: config.dashConstants,\n                    urlUtils: config.urlUtils,\n                    streamId: getStreamId()\n                }),\n                debug: debug,\n                eventBus: eventBus,\n                events: Events\n            });\n\n            fragmentModels[type] = model;\n        }\n\n        return model;\n    }\n\n    function resetInitialSettings() {\n        for (let model in fragmentModels) {\n            fragmentModels[model].reset();\n        }\n        fragmentModels = {};\n    }\n\n    function reset() {\n        eventBus.off(MediaPlayerEvents.FRAGMENT_LOADING_COMPLETED, onFragmentLoadingCompleted, this);\n        eventBus.off(MediaPlayerEvents.FRAGMENT_LOADING_PROGRESS, onFragmentLoadingCompleted, this);\n        resetInitialSettings();\n    }\n\n    function createDataChunk(bytes, request, streamId, endFragment) {\n        const chunk = new DataChunk();\n\n        chunk.streamId = streamId;\n        chunk.segmentType = request.type;\n        chunk.start = request.startTime;\n        chunk.duration = request.duration;\n        chunk.end = chunk.start + chunk.duration;\n        chunk.bytes = bytes;\n        chunk.index = request.index;\n        chunk.quality = request.quality;\n        chunk.representation = request.representation;\n        chunk.endFragment = endFragment;\n\n        return chunk;\n    }\n\n    function onFragmentLoadingCompleted(e) {\n        // Event propagation may have been stopped (see MssHandler)\n        if (!e.sender) {\n            return;\n        }\n\n        const request = e.request;\n        const bytes = e.response;\n        const isInit = request.isInitializationRequest();\n        const strInfo = request.representation.mediaInfo.streamInfo;\n\n        if (e.error) {\n            if (request.mediaType === Constants.AUDIO || request.mediaType === Constants.VIDEO || (request.mediaType === Constants.TEXT && request.representation.mediaInfo.isFragmented)) {\n                // add service location to blacklist controller - only for audio or video. text should not set errors\n                eventBus.trigger(Events.SERVICE_LOCATION_BASE_URL_BLACKLIST_ADD, { entry: e.request.serviceLocation });\n            }\n        }\n\n        if (!bytes || !strInfo) {\n            logger.warn('No ' + request.mediaType + ' bytes to push or stream is inactive.');\n            return;\n        }\n        const chunk = createDataChunk(bytes, request, streamInfo.id, e.type !== Events.FRAGMENT_LOADING_PROGRESS);\n        eventBus.trigger(isInit ? Events.INIT_FRAGMENT_LOADED : Events.MEDIA_FRAGMENT_LOADED,\n            { chunk, request },\n            { streamId: strInfo.id, mediaType: request.mediaType }\n        );\n    }\n\n    instance = {\n        getStreamId,\n        getModel,\n        reset\n    };\n\n    setup();\n\n    return instance;\n}\n\nFragmentController.__dashjs_factory_name = 'FragmentController';\nexport default FactoryMaker.getClassFactory(FragmentController);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nclass Thumbnail {\n    constructor() {\n        this.url = null;\n        this.width = null;\n        this.height = null;\n        this.x = null;\n        this.y = null;\n    }\n}\n\nexport default Thumbnail;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nclass ThumbnailTrackInfo {\n    constructor() {\n        this.bitrate = 0;\n        this.width = 0;\n        this.height = 0;\n        this.tilesHor = 0;\n        this.tilesVert = 0;\n        this.widthPerTile = 0;\n        this.heightPerTile = 0;\n        this.startNumber = 0;\n        this.segmentDuration = 0;\n        this.timescale = 0;\n        this.templateUrl = '';\n        this.id = '';\n    }\n}\n\nexport default ThumbnailTrackInfo;","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nclass IsoBox {\n    constructor(boxData) {\n        this.offset = boxData._offset;\n        this.type = boxData.type;\n        this.size = boxData.size;\n        this.boxes = [];\n        if (boxData.boxes) {\n            for (let i = 0; i < boxData.boxes.length; i++) {\n                this.boxes.push(new IsoBox(boxData.boxes[i]));\n            }\n        }\n        this.isComplete = true;\n\n        switch (boxData.type) {\n            case 'sidx':\n                this.timescale = boxData.timescale;\n                this.earliest_presentation_time = boxData.earliest_presentation_time;\n                this.first_offset = boxData.first_offset;\n                this.references = boxData.references;\n                if (boxData.references) {\n                    this.references = [];\n                    for (let i = 0; i < boxData.references.length; i++) {\n                        let reference = {\n                            reference_type: boxData.references[i].reference_type,\n                            referenced_size: boxData.references[i].referenced_size,\n                            subsegment_duration: boxData.references[i].subsegment_duration\n                        };\n                        this.references.push(reference);\n                    }\n                }\n                break;\n            case 'emsg':\n                this.id = boxData.id;\n                this.version = boxData.version === 1 ? 1 : 0;\n                this.value = boxData.value;\n                this.timescale = boxData.timescale;\n                this.scheme_id_uri = boxData.scheme_id_uri;\n                this.presentation_time_delta = boxData.version === 1 ? boxData.presentation_time : boxData.presentation_time_delta;\n                this.event_duration = boxData.event_duration;\n                this.message_data = boxData.message_data;\n                break;\n            case 'mdhd':\n                this.timescale = boxData.timescale;\n                break;\n            case 'mfhd':\n                this.sequence_number = boxData.sequence_number;\n                break;\n            case 'subs':\n                this.entry_count = boxData.entry_count;\n                this.entries = boxData.entries;\n                break;\n            case 'tfhd':\n                this.base_data_offset = boxData.base_data_offset;\n                this.sample_description_index = boxData.sample_description_index;\n                this.default_sample_duration = boxData.default_sample_duration;\n                this.default_sample_size = boxData.default_sample_size;\n                this.default_sample_flags = boxData.default_sample_flags;\n                this.flags = boxData.flags;\n                break;\n            case 'tfdt':\n                this.version = boxData.version;\n                this.baseMediaDecodeTime = boxData.baseMediaDecodeTime;\n                this.flags = boxData.flags;\n                break;\n            case 'trun':\n                this.sample_count = boxData.sample_count;\n                this.first_sample_flags = boxData.first_sample_flags;\n                this.data_offset = boxData.data_offset;\n                this.flags = boxData.flags;\n                this.samples = boxData.samples;\n                if (boxData.samples) {\n                    this.samples = [];\n                    for (let i = 0, ln = boxData.samples.length; i < ln; i++) {\n                        let sample = {\n                            sample_size: boxData.samples[i].sample_size,\n                            sample_duration: boxData.samples[i].sample_duration,\n                            sample_composition_time_offset: boxData.samples[i].sample_composition_time_offset\n                        };\n                        this.samples.push(sample);\n                    }\n                }\n                break;\n            case 'prft':\n                this.version = boxData.version;\n                this.reference_track_ID = boxData.reference_track_ID;\n                this.ntp_timestamp_sec = boxData.ntp_timestamp_sec;\n                this.ntp_timestamp_frac = boxData.ntp_timestamp_frac;\n                this.media_time = boxData.media_time;\n                this.flags = boxData.flags;\n                break;\n        }\n    }\n\n    getChildBox(type) {\n        for (let i = 0; i < this.boxes.length; i++) {\n            if (this.boxes[i].type === type) {\n                return this.boxes[i];\n            }\n        }\n    }\n\n    getChildBoxes(type) {\n        let boxes = [];\n        for (let i = 0; i < this.boxes.length; i++) {\n            if (this.boxes[i].type === type) {\n                boxes.push(this.boxes[i]);\n            }\n        }\n        return boxes;\n    }\n\n}\n\nexport default IsoBox;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport IsoBox from '../vo/IsoBox.js';\nimport FactoryMaker from '../../core/FactoryMaker.js';\n\nfunction IsoFile() {\n\n    let instance,\n        parsedIsoFile;\n\n    /**\n     * @param {string} type\n     * @returns {IsoBox|null}\n     * @memberof IsoFile#\n     */\n    function getBox(type) {\n        if (!type || !parsedIsoFile || !parsedIsoFile.boxes || (parsedIsoFile.boxes.length === 0) || typeof parsedIsoFile.fetch !== 'function') {\n            return null;\n        }\n\n        return convertToDashIsoBox(parsedIsoFile.fetch(type));\n    }\n\n    /**\n     * @param {string} type\n     * @returns {Array|null} array of {@link IsoBox}\n     * @memberof IsoFile#\n     */\n    function getBoxes(type) {\n        let boxes = [];\n\n        if (!type || !parsedIsoFile || typeof parsedIsoFile.fetchAll !== 'function') {\n            return boxes;\n        }\n\n        let boxData = parsedIsoFile.fetchAll(type);\n        let box;\n\n        for (let i = 0, ln = boxData.length; i < ln; i++) {\n            box = convertToDashIsoBox(boxData[i]);\n\n            if (box) {\n                boxes.push(box);\n            }\n        }\n\n        return boxes;\n    }\n\n    /**\n     * @param {string} value\n     * @memberof IsoFile#\n     */\n    function setData(value) {\n        parsedIsoFile = value;\n    }\n\n    /**\n     * @returns {IsoBox|null}\n     * @memberof IsoFile#\n     */\n    function getLastBox() {\n        if (!parsedIsoFile || !parsedIsoFile.boxes || !parsedIsoFile.boxes.length) {\n            return null;\n        }\n\n        let type = parsedIsoFile.boxes[parsedIsoFile.boxes.length - 1].type;\n        let boxes = getBoxes(type);\n\n        return boxes.length > 0 ? boxes[boxes.length - 1] : null;\n    }\n\n    function convertToDashIsoBox(boxData) {\n        if (!boxData) {\n            return null;\n        }\n\n        let box = new IsoBox(boxData);\n\n        if (boxData.hasOwnProperty('_incomplete')) {\n            box.isComplete = !boxData._incomplete;\n        }\n\n        return box;\n    }\n\n    instance = {\n        getBox: getBox,\n        getBoxes: getBoxes,\n        setData: setData,\n        getLastBox: getLastBox\n    };\n\n    return instance;\n}\n\nIsoFile.__dashjs_factory_name = 'IsoFile';\nexport default FactoryMaker.getClassFactory(IsoFile);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nclass IsoBoxSearchInfo {\n    constructor({\n        found,\n        sizeOfLastCompletedBox,\n        sizeOfLastFoundTargetBox,\n        startOffsetOfLastCompletedBox,\n        startOffsetOfLastFoundTargetBox,\n        typeOfLastCompletedBox,\n        typeOfLastTargetBox,\n    }) {\n        this.found = found !== undefined ? found : false;\n        this.sizeOfLastCompletedBox = sizeOfLastCompletedBox !== undefined ? sizeOfLastCompletedBox : 0;\n        this.sizeOfLastFoundTargetBox = sizeOfLastFoundTargetBox !== undefined ? sizeOfLastFoundTargetBox : 0;\n        this.startOffsetOfLastCompletedBox = startOffsetOfLastCompletedBox !== undefined ? startOffsetOfLastCompletedBox : 0;\n        this.startOffsetOfLastFoundTargetBox = startOffsetOfLastFoundTargetBox !== undefined ? startOffsetOfLastFoundTargetBox : 0;\n        this.typeOfLastCompletedBox = typeOfLastCompletedBox !== undefined ? typeOfLastCompletedBox : null;\n        this.typeOfLastTargetBox = typeOfLastTargetBox !== undefined ? typeOfLastTargetBox : null;\n    }\n}\n\nexport default IsoBoxSearchInfo;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport Debug from '../../core/Debug.js';\nimport IsoFile from './IsoFile.js';\nimport FactoryMaker from '../../core/FactoryMaker.js';\nimport ISOBoxer from 'codem-isoboxer';\n\nimport IsoBoxSearchInfo from '../vo/IsoBoxSearchInfo.js';\n\nfunction BoxParser(/*config*/) {\n\n    let logger,\n        instance;\n    let context = this.context;\n\n    function setup() {\n        logger = Debug(context).getInstance().getLogger(instance);\n    }\n\n    /**\n     * @param {ArrayBuffer} data\n     * @returns {IsoFile|null}\n     * @memberof BoxParser#\n     */\n    function parse(data) {\n        if (!data) {\n            return null;\n        }\n\n        if (data.fileStart === undefined) {\n            data.fileStart = 0;\n        }\n\n        let parsedFile = ISOBoxer.parseBuffer(data);\n        let dashIsoFile = IsoFile(context).create();\n\n        dashIsoFile.setData(parsedFile);\n\n        return dashIsoFile;\n    }\n\n    /**\n     * From the list of type boxes to look for, returns the latest one that is fully completed (header + payload). This\n     * method only looks into the list of top boxes and doesn't analyze nested boxes.\n     * @param {string[]} boxTypesToSearchFor\n     * @param {ArrayBuffer|uint8Array} buffer\n     * @param {number} offset\n     * @returns {IsoBoxSearchInfo}\n     * @memberof BoxParser#\n     */\n    function findLastTopIsoBoxCompleted(boxTypesToSearchFor, buffer, offset) {\n        if (offset === undefined) {\n            offset = 0;\n        }\n\n        // 8 = size (uint32) + type (4 characters)\n        if (!buffer || offset + 8 >= buffer.byteLength) {\n            return new IsoBoxSearchInfo({ found: false });\n        }\n\n        const data = (buffer instanceof ArrayBuffer) ? new Uint8Array(buffer) : buffer;\n        let boxInfo;\n        let startOffsetOfLastCompletedBox = 0;\n        let sizeOfLastCompletedBox = 0;\n        let typeOfLastCompletedBox = null;\n        while (offset < data.byteLength) {\n            const boxSize = parseUint32(data, offset);\n            const boxType = parseIsoBoxType(data, offset + 4);\n\n            if (boxSize === 0) {\n                break;\n            }\n\n            if (offset + boxSize <= data.byteLength) {\n                if (boxTypesToSearchFor.indexOf(boxType) >= 0) {\n                    boxInfo = new IsoBoxSearchInfo({\n                        found: true,\n                        startOffsetOfLastFoundTargetBox: offset,\n                        sizeOfLastFoundTargetBox: boxSize,\n                        typeOfLastTargetBox: boxType\n                    });\n                } else {\n                    startOffsetOfLastCompletedBox = offset;\n                    sizeOfLastCompletedBox = boxSize;\n                    typeOfLastCompletedBox = boxType;\n                }\n            }\n\n            offset += boxSize;\n        }\n\n        if (!boxInfo) {\n            return new IsoBoxSearchInfo({\n                found: false,\n                startOffsetOfLastCompletedBox,\n                sizeOfLastCompletedBox,\n                typeOfLastCompletedBox\n            });\n        }\n\n        return boxInfo;\n    }\n\n    function getSamplesInfo(ab) {\n        if (!ab || ab.byteLength === 0) {\n            return { sampleList: [], lastSequenceNumber: NaN, totalDuration: NaN, numSequences: NaN };\n        }\n        let isoFile = parse(ab);\n        // zero or more moofs\n        let moofBoxes = isoFile.getBoxes('moof');\n        // exactly one mfhd per moof\n        let mfhdBoxes = isoFile.getBoxes('mfhd');\n\n        let sampleDuration,\n            sampleCompositionTimeOffset,\n            sampleCount,\n            sampleSize,\n            sampleDts,\n            sampleList,\n            sample,\n            i, j, k, l, m, n,\n            dataOffset,\n            lastSequenceNumber,\n            numSequences,\n            totalDuration;\n\n        numSequences = isoFile.getBoxes('moof').length;\n        lastSequenceNumber = mfhdBoxes[mfhdBoxes.length - 1].sequence_number;\n        sampleCount = 0;\n\n        sampleList = [];\n        let subsIndex = -1;\n        let nextSubsSample = -1;\n        for (l = 0; l < moofBoxes.length; l++) {\n            let moofBox = moofBoxes[l];\n            // zero or more trafs per moof\n            let trafBoxes = moofBox.getChildBoxes('traf');\n            for (j = 0; j < trafBoxes.length; j++) {\n                let trafBox = trafBoxes[j];\n                // exactly one tfhd per traf\n                let tfhdBox = trafBox.getChildBox('tfhd');\n                // zero or one tfdt per traf\n                let tfdtBox = trafBox.getChildBox('tfdt');\n                sampleDts = tfdtBox.baseMediaDecodeTime;\n                // zero or more truns per traf\n                let trunBoxes = trafBox.getChildBoxes('trun');\n                // zero or more subs per traf\n                let subsBoxes = trafBox.getChildBoxes('subs');\n                for (k = 0; k < trunBoxes.length; k++) {\n                    let trunBox = trunBoxes[k];\n                    sampleCount = trunBox.sample_count;\n                    dataOffset = (tfhdBox.base_data_offset || 0) + (trunBox.data_offset || 0);\n\n                    for (i = 0; i < sampleCount; i++) {\n                        sample = trunBox.samples[i];\n                        sampleDuration = (sample.sample_duration !== undefined) ? sample.sample_duration : tfhdBox.default_sample_duration;\n                        sampleSize = (sample.sample_size !== undefined) ? sample.sample_size : tfhdBox.default_sample_size;\n                        sampleCompositionTimeOffset = (sample.sample_composition_time_offset !== undefined) ? sample.sample_composition_time_offset : 0;\n                        let sampleData = {\n                            'dts': sampleDts,\n                            'cts': (sampleDts + sampleCompositionTimeOffset),\n                            'duration': sampleDuration,\n                            'offset': moofBox.offset + dataOffset,\n                            'size': sampleSize,\n                            'subSizes': [sampleSize]\n                        };\n                        if (subsBoxes) {\n                            for (m = 0; m < subsBoxes.length; m++) {\n                                let subsBox = subsBoxes[m];\n                                if (subsIndex < (subsBox.entry_count - 1) && i > nextSubsSample) {\n                                    subsIndex++;\n                                    nextSubsSample += subsBox.entries[subsIndex].sample_delta;\n                                }\n                                if (i == nextSubsSample) {\n                                    sampleData.subSizes = [];\n                                    let entry = subsBox.entries[subsIndex];\n                                    for (n = 0; n < entry.subsample_count; n++) {\n                                        sampleData.subSizes.push(entry.subsamples[n].subsample_size);\n                                    }\n                                }\n                            }\n                        }\n                        sampleList.push(sampleData);\n                        dataOffset += sampleSize;\n                        sampleDts += sampleDuration;\n                    }\n                }\n                totalDuration = sampleDts - tfdtBox.baseMediaDecodeTime;\n            }\n        }\n        return {\n            sampleList: sampleList,\n            lastSequenceNumber: lastSequenceNumber,\n            totalDuration: totalDuration,\n            numSequences: numSequences\n        };\n    }\n\n    function getMediaTimescaleFromMoov(ab) {\n        let isoFile = parse(ab);\n        let mdhdBox = isoFile ? isoFile.getBox('mdhd') : undefined;\n\n        return mdhdBox ? mdhdBox.timescale : NaN;\n    }\n\n    function parseUint32(data, offset) {\n        return data[offset + 3] >>> 0 |\n            (data[offset + 2] << 8) >>> 0 |\n            (data[offset + 1] << 16) >>> 0 |\n            (data[offset] << 24) >>> 0;\n    }\n\n    function parseIsoBoxType(data, offset) {\n        return String.fromCharCode(data[offset++]) +\n            String.fromCharCode(data[offset++]) +\n            String.fromCharCode(data[offset++]) +\n            String.fromCharCode(data[offset]);\n    }\n\n    function findInitRange(data) {\n        let initRange = null;\n        let start,\n            end;\n\n        const isoFile = parse(data);\n\n        if (!isoFile) {\n            return initRange;\n        }\n\n        const ftyp = isoFile.getBox('ftyp');\n        const moov = isoFile.getBox('moov');\n\n        logger.debug('Searching for initialization.');\n\n        if (moov && moov.isComplete) {\n            start = ftyp ? ftyp.offset : moov.offset;\n            end = moov.offset + moov.size - 1;\n            initRange = start + '-' + end;\n\n            logger.debug('Found the initialization.  Range: ' + initRange);\n        }\n\n        return initRange;\n    }\n\n    instance = {\n        findInitRange,\n        findLastTopIsoBoxCompleted,\n        getMediaTimescaleFromMoov,\n        getSamplesInfo,\n        parse,\n    };\n\n    setup();\n\n    return instance;\n}\n\nBoxParser.__dashjs_factory_name = 'BoxParser';\nexport default FactoryMaker.getSingletonFactory(BoxParser);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport Constants from '../constants/Constants.js';\nimport DashConstants from '../../dash/constants/DashConstants.js';\nimport FactoryMaker from '../../core/FactoryMaker.js';\nimport ThumbnailTrackInfo from '../vo/ThumbnailTrackInfo.js';\nimport URLUtils from '../../streaming/utils/URLUtils.js';\nimport {replaceIDForTemplate, getTimeBasedSegment} from '../../dash/utils/SegmentsUtils.js';\nimport BoxParser from '../../streaming/utils/BoxParser.js';\nimport XHRLoader from '../../streaming/net/XHRLoader.js';\nimport DashHandler from '../../dash/DashHandler.js';\nimport SegmentsController from '../../dash/controllers/SegmentsController.js';\n\nfunction ThumbnailTracks(config) {\n    const context = this.context;\n    const adapter = config.adapter;\n    const baseURLController = config.baseURLController;\n    const streamInfo = config.streamInfo;\n    const timelineConverter = config.timelineConverter;\n    const debug = config.debug;\n    const eventBus = config.eventBus;\n    const events = config.events;\n    const dashConstants = config.dashConstants;\n\n    const urlUtils = URLUtils(context).getInstance();\n\n    let instance,\n        tracks,\n        representations,\n        dashHandler,\n        currentTrackIndex,\n        mediaInfo,\n        segmentsController,\n        loader,\n        boxParser;\n\n    function setup() {\n        reset();\n        loader = XHRLoader(context).create({});\n        boxParser = BoxParser(context).getInstance();\n\n        segmentsController = SegmentsController(context).create({\n            events,\n            eventBus,\n            streamInfo,\n            timelineConverter,\n            dashConstants,\n            dashMetrics: config.dashMetrics,\n            segmentBaseController: config.segmentBaseController,\n            type: Constants.IMAGE\n        });\n\n        dashHandler = DashHandler(context).create({\n            streamInfo,\n            type: Constants.IMAGE,\n            timelineConverter,\n            segmentsController,\n            baseURLController,\n            debug,\n            eventBus,\n            events,\n            dashConstants,\n            urlUtils\n        });\n\n        // initialize controllers\n        dashHandler.initialize(adapter ? adapter.getIsDynamic() : false);\n    }\n\n    function addTracks() {\n        if (!streamInfo || !adapter) {\n            return;\n        }\n\n        // Extract thumbnail tracks\n        mediaInfo = adapter.getMediaInfoForType(streamInfo, Constants.IMAGE);\n        if (!mediaInfo) {\n            return;\n        }\n\n        const voReps = adapter.getVoRepresentations(mediaInfo);\n\n        if (voReps && voReps.length > 0) {\n            voReps.forEach((rep) => {\n                if ((rep.segmentInfoType === DashConstants.SEGMENT_TEMPLATE && rep.segmentDuration > 0 && rep.media) ||\n                    rep.segmentInfoType === DashConstants.SEGMENT_TIMELINE) {\n                    _createTrack(rep);\n                }\n                if (rep.segmentInfoType === DashConstants.SEGMENT_BASE) {\n                    _createTrack(rep, true);\n                }\n\n                representations.push(rep);\n            });\n        }\n\n        if (tracks.length > 0) {\n            // Sort bitrates and select the lowest bitrate rendition\n            tracks.sort((a, b) => a.bitrate - b.bitrate);\n        }\n    }\n\n    function _createTrack(representation, useSegmentBase) {\n        const track = new ThumbnailTrackInfo();\n        track.id = representation.id;\n        track.bitrate = representation.bandwidth;\n        track.width = representation.width;\n        track.height = representation.height;\n        track.tilesHor = 1;\n        track.tilesVert = 1;\n\n        if (representation.essentialProperties) {\n            representation.essentialProperties.forEach((p) => {\n                if (Constants.THUMBNAILS_SCHEME_ID_URIS.indexOf(p.schemeIdUri) >= 0 && p.value) {\n                    const vars = p.value.split('x');\n                    if (vars.length === 2 && !isNaN(vars[0]) && !isNaN(vars[1])) {\n                        track.tilesHor = parseInt(vars[0], 10);\n                        track.tilesVert = parseInt(vars[1], 10);\n                    }\n                }\n            });\n        }\n\n        if (useSegmentBase) {\n            segmentsController.updateSegmentData(representation)\n                .then((data) => {\n                    _handleUpdatedSegmentData(track, representation, data);\n                });\n\n        } else {\n            track.startNumber = representation.startNumber;\n            track.segmentDuration = representation.segmentDuration;\n            track.timescale = representation.timescale;\n            track.templateUrl = buildTemplateUrl(representation);\n        }\n\n        if (track.tilesHor > 0 && track.tilesVert > 0) {\n            // Precalculate width and heigth per tile for perf reasons\n            track.widthPerTile = track.width / track.tilesHor;\n            track.heightPerTile = track.height / track.tilesVert;\n            tracks.push(track);\n        }\n    }\n\n    function _handleUpdatedSegmentData(track, representation, data) {\n        let cache = [];\n        const segments = _normalizeSegments(data, representation);\n        representation.segments = segments;\n        representation.fragmentDuration = representation.segmentDuration || (representation.segments && representation.segments.length > 0 ? representation.segments[0].duration : NaN);\n        track.segmentDuration = representation.segments[0].duration; //assume all segments have the same duration\n\n        track.readThumbnail = function (time, callback) {\n\n            let cached = null;\n            cache.some(el => {\n                if (el.start <= time && el.end > time) {\n                    cached = el.url;\n                    return true;\n                }\n            });\n            if (cached) {\n                callback(cached);\n            } else {\n                representation.segments.some((ss) => {\n                    if (ss.mediaStartTime <= time && ss.mediaStartTime + ss.duration > time) {\n                        const baseURL = baseURLController.resolve(representation.path);\n                        loader.load({\n                            method: 'get',\n                            url: baseURL.url,\n                            request: {\n                                range: ss.mediaRange,\n                                responseType: 'arraybuffer'\n                            },\n                            onload: function (e) {\n                                let info = boxParser.getSamplesInfo(e.target.response);\n                                let blob = new Blob([e.target.response.slice(info.sampleList[0].offset, info.sampleList[0].offset + info.sampleList[0].size)], { type: 'image/jpeg' });\n                                let imageUrl = window.URL.createObjectURL(blob);\n                                cache.push({\n                                    start: ss.mediaStartTime,\n                                    end: ss.mediaStartTime + ss.duration,\n                                    url: imageUrl\n                                });\n                                if (callback) {\n                                    callback(imageUrl);\n                                }\n                            }\n                        });\n                        return true;\n                    }\n                });\n            }\n        };\n    }\n\n    function _normalizeSegments(data, representation) {\n        const segments = [];\n        let count = 0;\n\n        let i,\n            len,\n            s,\n            seg;\n\n        for (i = 0, len = data.segments.length; i < len; i++) {\n            s = data.segments[i];\n\n            seg = getTimeBasedSegment(\n                timelineConverter,\n                adapter.getIsDynamic(),\n                representation,\n                s.startTime,\n                s.duration,\n                s.timescale,\n                s.media,\n                s.mediaRange,\n                count);\n\n            if (seg) {\n                segments.push(seg);\n                seg = null;\n                count++;\n            }\n        }\n        return segments;\n    }\n\n    function buildTemplateUrl(representation) {\n        const templateUrl = urlUtils.isRelative(representation.media) ?\n            urlUtils.resolve(representation.media, baseURLController.resolve(representation.path).url) : representation.media;\n\n        if (!templateUrl) {\n            return '';\n        }\n\n        return replaceIDForTemplate(templateUrl, representation.id);\n    }\n\n    function getTracks() {\n        return tracks;\n    }\n\n    function getCurrentTrackIndex() {\n        return currentTrackIndex;\n    }\n\n    function getCurrentTrack() {\n        if (currentTrackIndex < 0) {\n            return null;\n        }\n        return tracks[currentTrackIndex];\n    }\n\n    function setTrackByIndex(index) {\n        if (!tracks || tracks.length === 0) {\n            return;\n        }\n        // select highest bitrate in case selected index is higher than bitrate list length\n        if (index >= tracks.length) {\n            index = tracks.length - 1;\n        }\n        currentTrackIndex = index;\n    }\n\n    function setTrackById(id) {\n        if (!tracks || tracks.length === 0) {\n            return;\n        }\n\n        const index = tracks.findIndex((elem) => {\n            return elem.id === id\n        })\n\n        if (index !== -1) {\n            currentTrackIndex = index;\n        }\n    }\n\n    function getThumbnailRequestForTime(time) {\n        let currentVoRep;\n        const voReps = adapter.getVoRepresentations(mediaInfo);\n        for (let i = 0; i < voReps.length; i++) {\n            if (tracks[currentTrackIndex].id === voReps[i].id) {\n                currentVoRep = voReps[i];\n                break;\n            }\n        }\n\n        return dashHandler.getSegmentRequestForTime(mediaInfo, currentVoRep, time);\n    }\n\n    function getRepresentations() {\n        return representations\n    }\n\n    function reset() {\n        tracks = [];\n        representations = [];\n        currentTrackIndex = -1;\n        mediaInfo = null;\n        if (dashHandler) {\n            dashHandler.reset();\n            dashHandler = null;\n        }\n    }\n\n    instance = {\n        addTracks,\n        getCurrentTrack,\n        getCurrentTrackIndex,\n        getRepresentations,\n        getThumbnailRequestForTime,\n        getTracks,\n        reset,\n        setTrackById,\n        setTrackByIndex,\n    };\n\n    setup();\n\n    return instance;\n}\n\nThumbnailTracks.__dashjs_factory_name = 'ThumbnailTracks';\nexport default FactoryMaker.getClassFactory(ThumbnailTracks);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport FactoryMaker from '../../core/FactoryMaker.js';\nimport Thumbnail from '../vo/Thumbnail.js';\nimport ThumbnailTracks from './ThumbnailTracks.js';\nimport {replaceTokenForTemplate, unescapeDollarsInTemplate} from '../../dash/utils/SegmentsUtils.js';\n\nfunction ThumbnailController(config) {\n\n    const context = this.context;\n    const streamInfo = config.streamInfo;\n\n    let instance,\n        thumbnailTracks;\n\n    function setup() {\n        reset();\n        thumbnailTracks = ThumbnailTracks(context).create({\n            streamInfo: streamInfo,\n            adapter: config.adapter,\n            baseURLController: config.baseURLController,\n            timelineConverter: config.timelineConverter,\n            debug: config.debug,\n            eventBus: config.eventBus,\n            events: config.events,\n            dashConstants: config.dashConstants,\n            dashMetrics: config.dashMetrics,\n            segmentBaseController: config.segmentBaseController\n        });\n    }\n\n    function initialize() {\n        thumbnailTracks.addTracks();\n        const tracks = thumbnailTracks.getTracks();\n\n        if (tracks && tracks.length > 0) {\n            setTrackByIndex(0);\n        }\n    }\n\n    function getStreamId() {\n        return streamInfo.id;\n    }\n\n    function provide(time, callback) {\n\n        if (typeof callback !== 'function') {\n            return;\n        }\n        const track = thumbnailTracks.getCurrentTrack();\n        let offset,\n            request;\n        if (!track || track.segmentDuration <= 0 || time === undefined || time === null) {\n            callback(null);\n            return;\n        }\n\n        request = thumbnailTracks.getThumbnailRequestForTime(time);\n        if (request) {\n            track.segmentDuration = request.duration;\n        }\n\n        offset = time % track.segmentDuration;\n\n        const thumbIndex = Math.floor((offset * track.tilesHor * track.tilesVert) / track.segmentDuration);\n        // Create and return the thumbnail\n        const thumbnail = new Thumbnail();\n\n        thumbnail.width = Math.floor(track.widthPerTile);\n        thumbnail.height = Math.floor(track.heightPerTile);\n        thumbnail.x = Math.floor(thumbIndex % track.tilesHor) * track.widthPerTile;\n        thumbnail.y = Math.floor(thumbIndex / track.tilesHor) * track.heightPerTile;\n\n        if ('readThumbnail' in track) {\n            return track.readThumbnail(time, (url) => {\n                thumbnail.url = url;\n                callback(thumbnail);\n            });\n        } else {\n            if (!request) {\n                const seq = Math.floor(time / track.segmentDuration);\n                thumbnail.url = _buildUrlFromTemplate(track, seq);\n            } else {\n                thumbnail.url = request.url;\n                track.segmentDuration = NaN;\n            }\n            callback(thumbnail);\n        }\n    }\n\n    function _buildUrlFromTemplate(track, seq) {\n        const seqIdx = seq + track.startNumber;\n        let url = replaceTokenForTemplate(track.templateUrl, 'Number', seqIdx);\n        url = replaceTokenForTemplate(url, 'Time', (seqIdx - 1) * track.segmentDuration * track.timescale);\n        url = replaceTokenForTemplate(url, 'Bandwidth', track.bandwidth);\n        return unescapeDollarsInTemplate(url);\n    }\n\n    function setTrackByIndex(index) {\n        thumbnailTracks.setTrackByIndex(index);\n    }\n\n    function setTrackById(id) {\n        thumbnailTracks.setTrackById(id);\n    }\n\n    function getCurrentTrackIndex() {\n        return thumbnailTracks.getCurrentTrackIndex();\n    }\n\n    function getCurrentTrack() {\n        return thumbnailTracks.getCurrentTrack();\n    }\n\n    function getPossibleVoRepresentations() {\n        return thumbnailTracks.getRepresentations();\n\n    }\n\n    function reset() {\n        if (thumbnailTracks) {\n            thumbnailTracks.reset();\n        }\n    }\n\n    instance = {\n        getCurrentTrack,\n        getCurrentTrackIndex,\n        getPossibleVoRepresentations,\n        getStreamId,\n        initialize,\n        provide,\n        reset,\n        setTrackByIndex,\n        setTrackById\n    };\n\n    setup();\n\n    return instance;\n}\n\nThumbnailController.__dashjs_factory_name = 'ThumbnailController';\nexport default FactoryMaker.getClassFactory(ThumbnailController);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport FactoryMaker from '../../core/FactoryMaker.js';\nimport EventBus from '../../core/EventBus.js';\n\nfunction BlackListController(config) {\n\n    config = config || {};\n    let instance;\n    let blacklist = [];\n\n    const eventBus = EventBus(this.context).getInstance();\n    const updateEventName = config.updateEventName;\n    const addBlacklistEventName = config.addBlacklistEventName;\n\n    function contains(query) {\n        if (!blacklist.length || !query || !query.length) {\n            return false;\n        }\n\n        return (blacklist.indexOf(query) !== -1);\n    }\n\n    function add(entry) {\n        if (blacklist.indexOf(entry) !== -1) {\n            return;\n        }\n\n        blacklist.push(entry);\n\n        eventBus.trigger(updateEventName, { entry: entry });\n    }\n\n    function remove(entry) {\n        const index = blacklist.indexOf(entry);\n        if (index !== -1) {\n            blacklist.splice(index, 1)\n        }\n    }\n\n    function onAddBlackList(e) {\n        add(e.entry);\n    }\n\n    function setup() {\n        if (addBlacklistEventName) {\n            eventBus.on(addBlacklistEventName, onAddBlackList, instance);\n        }\n    }\n\n    function reset() {\n        if (addBlacklistEventName) {\n            eventBus.off(addBlacklistEventName, onAddBlackList, instance);\n        }\n        blacklist = [];\n    }\n\n    instance = {\n        add: add,\n        remove: remove,\n        contains: contains,\n        reset: reset\n    };\n\n    setup();\n    return instance;\n}\n\nBlackListController.__dashjs_factory_name = 'BlackListController';\nexport default FactoryMaker.getClassFactory(BlackListController);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport Constants from './constants/Constants.js';\nimport DashConstants from '../dash/constants/DashConstants.js';\nimport StreamProcessor from './StreamProcessor.js';\nimport FragmentController from './controllers/FragmentController.js';\nimport ThumbnailController from './thumbnail/ThumbnailController.js';\nimport EventBus from '../core/EventBus.js';\nimport Events from '../core/events/Events.js';\nimport Debug from '../core/Debug.js';\nimport Errors from '../core/errors/Errors.js';\nimport FactoryMaker from '../core/FactoryMaker.js';\nimport DashJSError from './vo/DashJSError.js';\nimport BoxParser from './utils/BoxParser.js';\nimport URLUtils from './utils/URLUtils.js';\nimport BlacklistController from './controllers/BlacklistController.js';\nimport MediaInfoSelectionInput from './vo/MediaInfoSelectionInput.js';\n\n\nconst MEDIA_TYPES = [Constants.VIDEO, Constants.AUDIO, Constants.TEXT, Constants.MUXED, Constants.IMAGE];\n\n\nfunction Stream(config) {\n\n    config = config || {};\n    const context = this.context;\n    const eventBus = EventBus(context).getInstance();\n    const urlUtils = URLUtils(context).getInstance();\n\n    const manifestModel = config.manifestModel;\n    const mediaPlayerModel = config.mediaPlayerModel;\n    const dashMetrics = config.dashMetrics;\n    const manifestUpdater = config.manifestUpdater;\n    const adapter = config.adapter;\n    const timelineConverter = config.timelineConverter;\n    const capabilities = config.capabilities;\n    const errHandler = config.errHandler;\n    const abrController = config.abrController;\n    const playbackController = config.playbackController;\n    const throughputController = config.throughputController;\n    const eventController = config.eventController;\n    const mediaController = config.mediaController;\n    const protectionController = config.protectionController;\n    const textController = config.textController;\n    const videoModel = config.videoModel;\n    let streamInfo = config.streamInfo;\n    const settings = config.settings;\n\n\n    let instance,\n        logger,\n        streamProcessors,\n        isInitialized,\n        isActive,\n        hasFinishedBuffering,\n        hasVideoTrack,\n        hasAudioTrack,\n        fragmentController,\n        thumbnailController,\n        segmentBlacklistController,\n        preloaded,\n        boxParser,\n        debug,\n        isEndedEventSignaled,\n        trackChangedEvents;\n\n    /**\n     * Setup the stream\n     */\n    function setup() {\n        try {\n            debug = Debug(context).getInstance();\n            logger = debug.getLogger(instance);\n            resetInitialSettings();\n\n            boxParser = BoxParser(context).getInstance();\n\n            segmentBlacklistController = BlacklistController(context).create({\n                updateEventName: Events.SEGMENT_LOCATION_BLACKLIST_CHANGED,\n                addBlacklistEventName: Events.SEGMENT_LOCATION_BLACKLIST_ADD\n            });\n\n            fragmentController = FragmentController(context).create({\n                streamInfo: streamInfo,\n                mediaPlayerModel: mediaPlayerModel,\n                dashMetrics: dashMetrics,\n                errHandler: errHandler,\n                settings: settings,\n                boxParser: boxParser,\n                dashConstants: DashConstants,\n                urlUtils: urlUtils\n            });\n\n        } catch (e) {\n            throw e;\n        }\n    }\n\n    /**\n     * Initialize the events\n     */\n    function initialize() {\n        registerEvents();\n        registerProtectionEvents();\n        textController.initializeForStream(streamInfo);\n        eventBus.trigger(Events.STREAM_UPDATED, { streamInfo: streamInfo });\n    }\n\n    /**\n     * Register the streaming events\n     */\n    function registerEvents() {\n        eventBus.on(Events.BUFFERING_COMPLETED, onBufferingCompleted, instance);\n        eventBus.on(Events.INBAND_EVENTS, onInbandEvents, instance);\n    }\n\n    /**\n     * Unregister the streaming events\n     */\n    function unRegisterEvents() {\n        eventBus.off(Events.BUFFERING_COMPLETED, onBufferingCompleted, instance);\n        eventBus.off(Events.INBAND_EVENTS, onInbandEvents, instance);\n    }\n\n    /**\n     * Register the protection events\n     */\n    function registerProtectionEvents() {\n        if (protectionController) {\n            eventBus.on(Events.KEY_ERROR, _onProtectionError, instance);\n            eventBus.on(Events.SERVER_CERTIFICATE_UPDATED, _onProtectionError, instance);\n            eventBus.on(Events.LICENSE_REQUEST_COMPLETE, _onProtectionError, instance);\n            eventBus.on(Events.KEY_SYSTEM_SELECTED, _onProtectionError, instance);\n            eventBus.on(Events.KEY_SESSION_CREATED, _onProtectionError, instance);\n        }\n    }\n\n    /**\n     * Unregister the protection events\n     */\n    function unRegisterProtectionEvents() {\n        if (protectionController) {\n            eventBus.off(Events.KEY_ERROR, _onProtectionError, instance);\n            eventBus.off(Events.SERVER_CERTIFICATE_UPDATED, _onProtectionError, instance);\n            eventBus.off(Events.LICENSE_REQUEST_COMPLETE, _onProtectionError, instance);\n            eventBus.off(Events.KEY_SYSTEM_SELECTED, _onProtectionError, instance);\n            eventBus.off(Events.KEY_SESSION_CREATED, _onProtectionError, instance);\n        }\n    }\n\n    /**\n     * Returns the stream id\n     * @return {*|null}\n     */\n    function getStreamId() {\n        return streamInfo ? streamInfo.id : null;\n    }\n\n    /**\n     * Activates Stream by re-initializing some of its components\n     * @param {MediaSource} mediaSource\n     * @param {array} previousBufferSinks\n     * @param representationsFromPreviousPeriod\n     * @memberof Stream#\n     */\n    function activate(mediaSource, previousBufferSinks, representationsFromPreviousPeriod = []) {\n        return new Promise((resolve, reject) => {\n            if (isActive) {\n                resolve(previousBufferSinks);\n                return;\n            }\n\n            if (getPreloaded()) {\n                isActive = true;\n                eventBus.trigger(Events.STREAM_ACTIVATED, {\n                    streamInfo\n                });\n                resolve(previousBufferSinks);\n                return;\n            }\n\n\n            _initializeMedia(mediaSource, previousBufferSinks, representationsFromPreviousPeriod)\n                .then((bufferSinks) => {\n                    isActive = true;\n                    if (representationsFromPreviousPeriod && representationsFromPreviousPeriod.length > 0) {\n                        startScheduleControllers();\n                    }\n                    eventBus.trigger(Events.STREAM_ACTIVATED, {\n                        streamInfo\n                    });\n                    resolve(bufferSinks);\n                })\n                .catch((e) => {\n                    reject(e);\n                });\n        });\n    }\n\n    function startPreloading(mediaSource, previousBuffers, representationsFromPreviousPeriod = []) {\n        return new Promise((resolve, reject) => {\n\n            if (getPreloaded()) {\n                reject();\n                return;\n            }\n\n            logger.info(`[startPreloading] Preloading next stream with id ${getId()}`);\n            _setPreloaded(true);\n\n            _commonMediaInitialization(mediaSource, previousBuffers, representationsFromPreviousPeriod)\n                .then(() => {\n                    for (let i = 0; i < streamProcessors.length && streamProcessors[i]; i++) {\n                        streamProcessors[i].setExplicitBufferingTime(getStartTime());\n                        streamProcessors[i].getScheduleController().startScheduleTimer();\n                    }\n                    resolve();\n                })\n                .catch(() => {\n                    _setPreloaded(false);\n                    reject();\n                });\n        });\n    }\n\n    /**\n     *\n     * @param {object} mediaSource\n     * @param {array} previousBufferSinks\n     * @param representationsFromPreviousPeriod\n     * @return {Promise<Array>}\n     * @private\n     */\n    function _initializeMedia(mediaSource, previousBufferSinks, representationsFromPreviousPeriod = []) {\n        return _commonMediaInitialization(mediaSource, previousBufferSinks, representationsFromPreviousPeriod);\n    }\n\n    /**\n     *\n     * @param {object} mediaSource\n     * @param {array} previousBufferSinks\n     * @return {Promise<array>}\n     * @private\n     */\n    function _commonMediaInitialization(mediaSource, previousBufferSinks, representationsFromPreviousPeriod) {\n        return new Promise((resolve, reject) => {\n            checkConfig();\n\n            _addInlineEvents();\n\n\n            let element = videoModel.getElement();\n            const promises = [];\n            MEDIA_TYPES.forEach((mediaType) => {\n                // If we are preloading without a video element we can not start texttrack handling.\n                if (!(mediaType === Constants.TEXT && !mediaSource) && (mediaType !== Constants.VIDEO || (!element || (element && (/^VIDEO$/i).test(element.nodeName))))) {\n                    const representationFromPreviousPeriod = representationsFromPreviousPeriod.find((representation) => {\n                        return representation.mediaInfo.type === mediaType\n                    })\n                    promises.push(_initializeMediaForType(mediaType, mediaSource, representationFromPreviousPeriod));\n                }\n            });\n\n            Promise.all(promises)\n                .then(() => {\n                    return _createBufferSinks(previousBufferSinks)\n                })\n                .then((bufferSinks) => {\n                    if (streamProcessors.length === 0) {\n                        const msg = 'No streams to play.';\n                        errHandler.error(new DashJSError(Errors.MANIFEST_ERROR_ID_NOSTREAMS_CODE, msg, manifestModel.getValue()));\n                        logger.fatal(msg);\n                    } else {\n                        _initializationCompleted();\n                    }\n\n                    if (mediaSource) {\n                        // All mediaInfos for texttracks are added to the TextSourceBuffer by now. We can start creating the tracks\n                        textController.createTracks(streamInfo);\n                    }\n\n                    resolve(bufferSinks);\n                })\n                .catch((e) => {\n                    reject(e);\n                });\n        });\n    }\n\n    /**\n     * We call this function if segments have been preloaded without a video element. Once the video element is attached MSE is available\n     * @param mediaSource\n     * @returns {Promise<unknown>}\n     */\n    function initializeForTextWithMediaSource(mediaSource) {\n        return new Promise((resolve, reject) => {\n            _initializeMediaForType(Constants.TEXT, mediaSource, null)\n                .then(() => {\n                    return createBufferSinkForText()\n                })\n                .then(() => {\n                    textController.createTracks(streamInfo);\n                    resolve()\n                })\n                .catch((e) => {\n                    reject(e);\n                })\n        })\n    }\n\n    /**\n     * Initialize for a given media type. Creates a corresponding StreamProcessor\n     * @param {string} type\n     * @param {object} mediaSource\n     * @private\n     */\n    function _initializeMediaForType(type, mediaSource, representationFromPreviousPeriod) {\n        let allMediaForType = adapter.getAllMediaInfoForType(streamInfo, type);\n        let embeddedMediaInfos = [];\n\n        let mediaInfo = null;\n        let initialMediaInfo;\n\n        if (!allMediaForType || allMediaForType.length === 0) {\n            logger.info('No ' + type + ' data.');\n            return Promise.resolve();\n        }\n\n        if (type === Constants.VIDEO) {\n            hasVideoTrack = true;\n        }\n\n        if (type === Constants.AUDIO) {\n            hasAudioTrack = true;\n        }\n\n        for (let i = 0, ln = allMediaForType.length; i < ln; i++) {\n            mediaInfo = allMediaForType[i];\n\n            if (type === Constants.TEXT && !!mediaInfo.isEmbedded) {\n                textController.addEmbeddedTrack(streamInfo, mediaInfo);\n                embeddedMediaInfos.push(mediaInfo);\n            }\n            if (_isMediaSupported(mediaInfo)) {\n                mediaController.addTrack(mediaInfo);\n            }\n        }\n\n        if (embeddedMediaInfos.length > 0) {\n            mediaController.setInitialMediaSettingsForType(type, streamInfo);\n            textController.addMediaInfosToBuffer(streamInfo, type, embeddedMediaInfos);\n        }\n\n        // Filter out embedded text track before creating StreamProcessor\n        allMediaForType = allMediaForType.filter(mediaInfo => {\n            return !mediaInfo.isEmbedded;\n        });\n        if (allMediaForType.length === 0) {\n            return Promise.resolve();\n        }\n\n        if (type === Constants.IMAGE) {\n            thumbnailController = ThumbnailController(context).create({\n                streamInfo: streamInfo,\n                adapter: adapter,\n                baseURLController: config.baseURLController,\n                timelineConverter: config.timelineConverter,\n                debug: debug,\n                eventBus: eventBus,\n                events: Events,\n                dashConstants: DashConstants,\n                dashMetrics: config.dashMetrics,\n                segmentBaseController: config.segmentBaseController\n            });\n            thumbnailController.initialize();\n            return Promise.resolve();\n        }\n\n        eventBus.trigger(Events.STREAM_INITIALIZING, {\n            streamInfo: streamInfo,\n            mediaInfo: mediaInfo\n        });\n\n        mediaController.setInitialMediaSettingsForType(type, streamInfo);\n\n        let streamProcessor = _createStreamProcessor(allMediaForType, mediaSource);\n\n        initialMediaInfo = mediaController.getCurrentTrackFor(type, streamInfo.id);\n\n        if (initialMediaInfo) {\n            // In case of mixed fragmented and embedded text tracks, check if initial selected text track is not an embedded track\n            const newMediaInfo = type !== Constants.TEXT || !initialMediaInfo.isEmbedded ? initialMediaInfo : allMediaForType[0];\n            const mediaInfoSelectionInput = new MediaInfoSelectionInput({\n                newMediaInfo,\n                previouslySelectedRepresentation: representationFromPreviousPeriod\n            });\n            return streamProcessor.selectMediaInfo(mediaInfoSelectionInput);\n        }\n\n        return Promise.resolve();\n    }\n\n    function _isMediaSupported(mediaInfo) {\n        const type = mediaInfo ? mediaInfo.type : null;\n        let msg;\n\n        if (type === Constants.MUXED) {\n            msg = 'Multiplexed representations are intentionally not supported, as they are not compliant with the DASH-AVC/264 guidelines';\n            logger.fatal(msg);\n            errHandler.error(new DashJSError(Errors.MANIFEST_ERROR_ID_MULTIPLEXED_CODE, msg, manifestModel.getValue()));\n            return false;\n        }\n\n        if (type === Constants.TEXT || type === Constants.IMAGE) {\n            return true;\n        }\n\n        if (!!mediaInfo.contentProtection && mediaInfo.contentProtection.length > 0 && !capabilities.supportsEncryptedMedia()) {\n            errHandler.error(new DashJSError(Errors.CAPABILITY_MEDIAKEYS_ERROR_CODE, Errors.CAPABILITY_MEDIAKEYS_ERROR_MESSAGE));\n            return false;\n        }\n\n        return true;\n    }\n\n    /**\n     * Creates the StreamProcessor for a given media type.\n     * @param {array} allMediaForType\n     * @param {object} mediaSource\n     * @private\n     */\n    function _createStreamProcessor(allMediaForType, mediaSource) {\n\n        const mediaInfo = (allMediaForType && allMediaForType.length > 0) ? allMediaForType[0] : null;\n        let fragmentModel = fragmentController.getModel(mediaInfo ? mediaInfo.type : null);\n        const type = mediaInfo ? mediaInfo.type : null;\n        const mimeType = mediaInfo ? mediaInfo.mimeType : null;\n        const isFragmented = mediaInfo ? mediaInfo.isFragmented : null;\n\n        let streamProcessor = StreamProcessor(context).create({\n            abrController,\n            adapter,\n            baseURLController: config.baseURLController,\n            boxParser,\n            capabilities,\n            dashMetrics: config.dashMetrics,\n            errHandler,\n            fragmentModel,\n            manifestModel,\n            mediaController,\n            mediaPlayerModel,\n            mimeType,\n            playbackController,\n            segmentBaseController: config.segmentBaseController,\n            segmentBlacklistController,\n            settings,\n            streamInfo,\n            textController,\n            throughputController,\n            timelineConverter,\n            type,\n        });\n\n        streamProcessor.initialize(mediaSource, hasVideoTrack, isFragmented);\n        streamProcessors.push(streamProcessor);\n        streamProcessor.setMediaInfoArray(allMediaForType);\n\n        if (type === Constants.TEXT) {\n            textController.addMediaInfosToBuffer(streamInfo, type, allMediaForType, fragmentModel);\n        }\n\n        return streamProcessor;\n    }\n\n    /**\n     * Creates the SourceBufferSink objects for all StreamProcessors\n     * @param {array} previousBuffersSinks\n     * @return {Promise<object>}\n     * @private\n     */\n    function _createBufferSinks(previousBuffersSinks) {\n        return new Promise((resolve) => {\n            const buffers = {};\n            const promises = streamProcessors.map((sp) => {\n                const oldRepresentation = sp.getRepresentation();\n                return sp.createBufferSinks(previousBuffersSinks, oldRepresentation);\n            });\n\n            Promise.all(promises)\n                .then((bufferSinks) => {\n                    bufferSinks.forEach((sink) => {\n                        if (sink) {\n                            buffers[sink.getType()] = sink;\n                        }\n                    });\n                    resolve(buffers);\n                })\n                .catch(() => {\n                    resolve(buffers);\n                });\n        });\n    }\n\n    function createBufferSinkForText() {\n        const sp = _getProcessorByType(Constants.TEXT);\n        if (sp) {\n            return sp.createBufferSinks()\n        }\n\n        return Promise.resolve();\n    }\n\n    /**\n     * Partially resets some of the Stream elements. This function is called when preloading of streams is canceled or a stream switch occurs.\n     * @memberof Stream#\n     * @param {boolean} keepBuffers\n     */\n    function deactivate(keepBuffers) {\n        let ln = streamProcessors ? streamProcessors.length : 0;\n        const errored = false;\n        for (let i = 0; i < ln; i++) {\n            let fragmentModel = streamProcessors[i].getFragmentModel();\n            fragmentModel.abortRequests();\n            fragmentModel.resetInitialSettings();\n            streamProcessors[i].reset(errored, keepBuffers);\n        }\n        if (textController) {\n            textController.deactivateStream(streamInfo);\n        }\n        if (thumbnailController) {\n            thumbnailController.reset();\n            thumbnailController = null;\n        }\n        streamProcessors = [];\n        isActive = false;\n        hasFinishedBuffering = false;\n        _setPreloaded(false);\n        setIsEndedEventSignaled(false);\n        eventBus.trigger(Events.STREAM_DEACTIVATED, { streamInfo });\n    }\n\n    function getIsActive() {\n        return isActive;\n    }\n\n    function setMediaSource(mediaSource) {\n        return new Promise((resolve, reject) => {\n            const promises = [];\n            for (let i = 0; i < streamProcessors.length;) {\n                if (_isMediaSupported(streamProcessors[i].getMediaInfo())) {\n                    promises.push(streamProcessors[i].setMediaSource(mediaSource));\n                    i++;\n                } else {\n                    streamProcessors[i].reset();\n                    streamProcessors.splice(i, 1);\n                }\n            }\n\n            Promise.all(promises)\n                .then(() => {\n                    for (let i = 0; i < streamProcessors.length; i++) {\n                        //Adding of new tracks to a stream processor isn't guaranteed by the spec after the METADATA_LOADED state\n                        //so do this after the buffers are created above.\n                        streamProcessors[i].dischargePreBuffer();\n                    }\n\n                    if (streamProcessors.length === 0) {\n                        const msg = 'No streams to play.';\n                        errHandler.error(new DashJSError(Errors.MANIFEST_ERROR_ID_NOSTREAMS_CODE, msg + 'nostreams', manifestModel.getValue()));\n                        logger.fatal(msg);\n                    }\n                    resolve();\n                })\n                .catch((e) => {\n                    logger.error(e);\n                    reject(e);\n                })\n        })\n    }\n\n    function resetInitialSettings(keepBuffers) {\n        deactivate(keepBuffers);\n        isInitialized = false;\n        hasVideoTrack = false;\n        hasAudioTrack = false;\n        isEndedEventSignaled = false;\n        trackChangedEvents = [];\n    }\n\n    function reset(keepBuffers) {\n\n        if (fragmentController) {\n            fragmentController.reset();\n            fragmentController = null;\n        }\n\n        if (abrController && streamInfo) {\n            abrController.clearDataForStream(streamInfo.id);\n        }\n\n        if (segmentBlacklistController) {\n            segmentBlacklistController.reset();\n            segmentBlacklistController = null;\n        }\n\n        if (textController && streamInfo) {\n            textController.clearDataForStream(streamInfo.id);\n        }\n\n        if (mediaController && streamInfo) {\n            mediaController.clearDataForStream(streamInfo.id);\n        }\n\n        resetInitialSettings(keepBuffers);\n\n        streamInfo = null;\n\n        unRegisterEvents();\n\n        unRegisterProtectionEvents();\n\n    }\n\n    function getDuration() {\n        return streamInfo ? streamInfo.duration : NaN;\n    }\n\n    function getIsEndedEventSignaled() {\n        return isEndedEventSignaled;\n    }\n\n    function setIsEndedEventSignaled(value) {\n        isEndedEventSignaled = value;\n    }\n\n    function getStartTime() {\n        return streamInfo ? streamInfo.start : NaN;\n    }\n\n    function getId() {\n        return streamInfo ? streamInfo.id : null;\n    }\n\n    function getStreamInfo() {\n        return streamInfo;\n    }\n\n    function getHasAudioTrack() {\n        return hasAudioTrack;\n    }\n\n    function getHasVideoTrack() {\n        return hasVideoTrack;\n    }\n\n    function getThumbnailController() {\n        return thumbnailController;\n    }\n\n    function checkConfig() {\n        if (!videoModel || !abrController) {\n            throw new Error(Constants.MISSING_CONFIG_ERROR);\n        }\n    }\n\n    /**\n     * @param {string} type\n     * @returns {Array}\n     * @memberof Stream#\n     */\n    function getRepresentationsByType(type) {\n        checkConfig();\n        if (type === Constants.IMAGE) {\n            if (!thumbnailController) {\n                return [];\n            }\n            return thumbnailController.getPossibleVoRepresentations();\n        }\n        const mediaInfo = _getMediaInfo(type);\n        return abrController.getPossibleVoRepresentationsFilteredBySettings(mediaInfo, true);\n    }\n\n    /**\n     * @param {string} type\n     * @param {string} id\n     * @returns {Array}\n     * @memberof Stream#\n     */\n    function getRepresentationForTypeById(type, id) {\n        let possibleVoRepresentations;\n\n        if (type === Constants.IMAGE) {\n            if (!thumbnailController) {\n                return null;\n            }\n            possibleVoRepresentations = thumbnailController.getPossibleVoRepresentations();\n        } else {\n            const mediaInfos = _getAllMediaInfos(type);\n\n            possibleVoRepresentations = mediaInfos.flatMap((mediaInfo) => {\n                return abrController.getPossibleVoRepresentationsFilteredBySettings(mediaInfo, true);\n            })\n        }\n\n        if (!possibleVoRepresentations || possibleVoRepresentations.length === 0) {\n            return null\n        }\n        const targetReps = possibleVoRepresentations.filter((rep) => {\n            return rep.id === id\n        })\n\n        return targetReps && targetReps.length > 0 ? targetReps[0] : null;\n    }\n\n    /**\n     * @param {string} type\n     * @param {number} index\n     * @returns {Array}\n     * @memberof Stream#\n     */\n    function getRepresentationForTypeByIndex(type, index) {\n        let possibleVoRepresentations;\n\n        if (type === Constants.IMAGE) {\n            if (!thumbnailController) {\n                return null;\n            }\n            possibleVoRepresentations = thumbnailController.getPossibleVoRepresentations();\n        } else {\n            const mediaInfo = _getMediaInfo(type);\n            possibleVoRepresentations = abrController.getPossibleVoRepresentationsFilteredBySettings(mediaInfo, true);\n        }\n\n        index = Math.max(Math.min(index, possibleVoRepresentations.length - 1), 0)\n\n        return possibleVoRepresentations[index];\n    }\n\n    function _onProtectionError(event) {\n        if (event.error) {\n            errHandler.error(event.error);\n            logger.fatal(event.error.message);\n        }\n    }\n\n    function triggerProtectionError(event) {\n        _onProtectionError(event);\n    }\n\n    function prepareTrackChange(e) {\n        if (!isActive || !streamInfo) {\n            return;\n        }\n\n        hasFinishedBuffering = false;\n\n        let newMediaInfo = e.newMediaInfo;\n        let manifest = manifestModel.getValue();\n\n        let processor = getProcessorForMediaInfo(newMediaInfo);\n        if (!processor) {\n            return;\n        }\n\n        let currentTime = playbackController.getTime();\n        logger.info('Stream -  Process track changed at current time ' + currentTime);\n\n        // Applies only for MSS streams\n        if (manifest.refreshManifestOnSwitchTrack) {\n            trackChangedEvents.push(e);\n            if (!manifestUpdater.getIsUpdating()) {\n                logger.debug('Stream -  Refreshing manifest for switch track');\n                manifestUpdater.refreshManifest();\n            }\n        } else {\n            processor.clearScheduleTimer();\n            processor.setTrackSwitchInProgress(true);\n            const oldRepresentation = processor.getRepresentation();\n            processor.selectMediaInfo(new MediaInfoSelectionInput({ newMediaInfo }))\n                .then(() => {\n                    const replaceBuffer = e && e.options && e.options.hasOwnProperty('replaceBuffer') ? e.options.replaceBuffer : false;\n                    return processor.prepareTrackSwitch(oldRepresentation, replaceBuffer);\n                })\n                .then(() => {\n                    processor.setTrackSwitchInProgress(false);\n                })\n        }\n    }\n\n    function prepareQualityChange(e) {\n        const processor = _getProcessorByType(e.mediaType);\n\n        if (processor) {\n            processor.prepareQualityChange(e);\n        }\n    }\n\n    function _addInlineEvents() {\n        if (eventController) {\n            const events = adapter.getEventsFor(streamInfo);\n            if (events && events.length > 0) {\n                eventController.addInlineEvents(events, streamInfo.id);\n            }\n        }\n    }\n\n    function _getMediaInfo(type) {\n        let streamProcessor = _getStreamProcessorForType(type);\n\n        if (streamProcessor) {\n            return streamProcessor.getMediaInfo();\n        }\n\n        return null;\n    }\n\n    function _getAllMediaInfos(type) {\n        let streamProcessor = _getStreamProcessorForType(type);\n\n        if (streamProcessor) {\n            return streamProcessor.getAllMediaInfos();\n        }\n\n        return [];\n    }\n\n    function _getStreamProcessorForType(type) {\n        if (!type) {\n            return null\n        }\n\n        return streamProcessors.find((streamProcessor) => {\n            return streamProcessor.getType() === type;\n        })\n    }\n\n    function onBufferingCompleted() {\n        let processors = getStreamProcessors();\n        const ln = processors.length;\n\n        if (ln === 0) {\n            logger.warn('onBufferingCompleted - can\\'t trigger STREAM_BUFFERING_COMPLETED because no streamProcessor is defined');\n            return;\n        }\n\n        // if there is at least one buffer controller that has not completed buffering yet do nothing\n        for (let i = 0; i < ln; i++) {\n            //if audio or video buffer is not buffering completed state, do not send STREAM_BUFFERING_COMPLETED\n            if (!processors[i].isBufferingCompleted() && (processors[i].getType() === Constants.AUDIO || processors[i].getType() === Constants.VIDEO)) {\n                logger.debug('onBufferingCompleted - One streamProcessor has finished but', processors[i].getType(), 'one is not buffering completed');\n                return;\n            }\n        }\n\n        logger.debug('onBufferingCompleted - trigger STREAM_BUFFERING_COMPLETED');\n        hasFinishedBuffering = true;\n        eventBus.trigger(Events.STREAM_BUFFERING_COMPLETED, { streamInfo: streamInfo }, { streamInfo });\n    }\n\n    function onInbandEvents(e) {\n        if (eventController) {\n            eventController.addInbandEvents(e.events, streamInfo.id);\n        }\n    }\n\n    function getProcessorForMediaInfo(mediaInfo) {\n        if (!mediaInfo || !mediaInfo.type) {\n            return null;\n        }\n\n        return _getProcessorByType(mediaInfo.type);\n    }\n\n    function _getProcessorByType(type) {\n        if (!type) {\n            return null;\n        }\n\n        let processors = getStreamProcessors();\n\n        return processors.filter(function (processor) {\n            return (processor.getType() === type);\n        })[0];\n    }\n\n    function getStreamProcessors() {\n        let arr = [];\n\n        let type,\n            streamProcessor;\n\n        for (let i = 0; i < streamProcessors.length; i++) {\n            streamProcessor = streamProcessors[i];\n            type = streamProcessor.getType();\n\n            if (type === Constants.AUDIO || type === Constants.VIDEO || type === Constants.TEXT) {\n                arr.push(streamProcessor);\n            }\n        }\n\n        return arr;\n    }\n\n    function startScheduleControllers() {\n        const ln = streamProcessors.length;\n        for (let i = 0; i < ln && streamProcessors[i]; i++) {\n            streamProcessors[i].getScheduleController().startScheduleTimer();\n        }\n    }\n\n    function updateData(updatedStreamInfo) {\n        return new Promise((resolve) => {\n            streamInfo = updatedStreamInfo;\n\n            if (eventController) {\n                _addInlineEvents();\n            }\n\n            let promises = [];\n            for (let i = 0, ln = streamProcessors.length; i < ln; i++) {\n                let streamProcessor = streamProcessors[i];\n                const currentMediaInfo = streamProcessor.getMediaInfo();\n                promises.push(streamProcessor.updateStreamInfo(streamInfo));\n                let allMediaForType = adapter.getAllMediaInfoForType(streamInfo, streamProcessor.getType());\n\n                // Filter out embedded text track before updating media info in  StreamProcessor\n                allMediaForType = allMediaForType.filter(mediaInfo => {\n                    return !mediaInfo.isEmbedded;\n                });\n\n                // Check if AdaptationSet has not been removed in MPD update\n                streamProcessor.setMediaInfoArray(allMediaForType);\n                if (allMediaForType) {\n                    for (let j = 0; j < allMediaForType.length; j++) {\n                        if (adapter.areMediaInfosEqual(currentMediaInfo, allMediaForType[j])) {\n                            promises.push(streamProcessor.selectMediaInfo(new MediaInfoSelectionInput({ newMediaInfo: allMediaForType[j] })))\n                        }\n                    }\n                }\n            }\n\n            let processor;\n            Promise.all(promises)\n                .then(() => {\n                    let promises = [];\n\n                    // Only relevant for MSS\n                    while (trackChangedEvents.length > 0) {\n                        let trackChangedEvent = trackChangedEvents.pop();\n                        let newMediaInfo = trackChangedEvent.newMediaInfo;\n                        processor = getProcessorForMediaInfo(trackChangedEvent.oldMediaInfo);\n                        if (!processor) {\n                            return;\n                        }\n                        const oldRepresentation = processor.getRepresentation();\n                        processor.setTrackSwitchInProgress(true);\n                        promises.push(processor.prepareTrackSwitch(oldRepresentation));\n                        promises.push(processor.selectMediaInfo(new MediaInfoSelectionInput({ newMediaInfo })));\n                    }\n\n                    return Promise.all(promises)\n                })\n                .then(() => {\n                    _initializationCompleted();\n                    if (processor) {\n                        processor.setTrackSwitchInProgress(false);\n                    }\n                    eventBus.trigger(Events.STREAM_UPDATED, { streamInfo: streamInfo });\n                    resolve();\n                })\n                .catch((e) => {\n                    errHandler.error(e);\n                })\n\n        })\n    }\n\n    function _initializationCompleted() {\n        const ln = streamProcessors.length;\n\n        if (protectionController) {\n            // Need to check if streamProcessors exists because streamProcessors\n            // could be cleared in case an error is detected while initializing DRM keysystem\n            protectionController.clearMediaInfoArray();\n            for (let i = 0; i < ln && streamProcessors[i]; i++) {\n                const type = streamProcessors[i].getType();\n                const mediaInfo = streamProcessors[i].getMediaInfo();\n                if (type === Constants.AUDIO ||\n                    type === Constants.VIDEO ||\n                    (type === Constants.TEXT && mediaInfo && mediaInfo.isFragmented)) {\n                    let mediaInfo = streamProcessors[i].getMediaInfo();\n                    if (mediaInfo) {\n                        protectionController.initializeForMedia(mediaInfo);\n                    }\n                }\n            }\n            protectionController.handleKeySystemFromManifest();\n        }\n\n        if (!isInitialized) {\n            isInitialized = true;\n            videoModel.waitForReadyState(Constants.VIDEO_ELEMENT_READY_STATES.HAVE_METADATA, () => {\n                eventBus.trigger(Events.STREAM_INITIALIZED, {\n                    streamInfo: streamInfo\n                });\n            })\n        }\n    }\n\n    function _setPreloaded(value) {\n        preloaded = value;\n    }\n\n    function getPreloaded() {\n        return preloaded;\n    }\n\n    function getHasFinishedBuffering() {\n        return hasFinishedBuffering;\n    }\n\n    function getAdapter() {\n        return adapter;\n    }\n\n    function getCurrentRepresentationForType(type) {\n        const sp = _getProcessorByType(type);\n\n        if (!sp) {\n            return null;\n        }\n\n        return sp.getRepresentation();\n    }\n\n    function getCurrentMediaInfoForType(type) {\n        const sp = _getProcessorByType(type);\n\n        if (!sp) {\n            return null;\n        }\n\n        return sp.getMediaInfo();\n    }\n\n    function checkAndHandleCompletedBuffering() {\n        if (hasFinishedBuffering) {\n            return;\n        }\n        streamProcessors.forEach((streamProcessor) => {\n            streamProcessor.checkAndHandleCompletedBuffering();\n        })\n    }\n\n    instance = {\n        activate,\n        checkAndHandleCompletedBuffering,\n        deactivate,\n        getAdapter,\n        getCurrentMediaInfoForType,\n        getCurrentRepresentationForType,\n        getDuration,\n        getHasAudioTrack,\n        getHasFinishedBuffering,\n        getHasVideoTrack,\n        getId,\n        getIsActive,\n        getIsEndedEventSignaled,\n        getPreloaded,\n        getRepresentationForTypeById,\n        getRepresentationForTypeByIndex,\n        getRepresentationsByType,\n        getStartTime,\n        getStreamId,\n        getStreamInfo,\n        getStreamProcessors,\n        getThumbnailController,\n        initialize,\n        initializeForTextWithMediaSource,\n        prepareQualityChange,\n        prepareTrackChange,\n        reset,\n        setIsEndedEventSignaled,\n        setMediaSource,\n        startPreloading,\n        startScheduleControllers,\n        triggerProtectionError,\n        updateData,\n    };\n\n    setup();\n    return instance;\n}\n\nStream.__dashjs_factory_name = 'Stream';\nexport default FactoryMaker.getClassFactory(Stream);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\n\nimport {HTTPRequest} from '../../streaming/vo/metrics/HTTPRequest.js';\n\nclass ContentSteeringRequest {\n    constructor(url) {\n        this.url = url || null;\n        this.type = HTTPRequest.CONTENT_STEERING_TYPE;\n        this.responseType = 'json';\n    }\n}\n\nexport default ContentSteeringRequest;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nclass ContentSteeringResponse {\n    constructor() {\n        this.version = null;\n        this.ttl = 300;\n        this.reloadUri = null;\n        this.pathwayPriority = [];\n        this.pathwayClones = [];\n    }\n}\n\nexport default ContentSteeringResponse;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport FactoryMaker from '../../core/FactoryMaker.js';\nimport Debug from '../../core/Debug.js';\nimport URLLoader from '../../streaming/net/URLLoader.js';\nimport Errors from '../../core/errors/Errors.js';\nimport ContentSteeringRequest from '../vo/ContentSteeringRequest.js';\nimport ContentSteeringResponse from '../vo/ContentSteeringResponse.js';\nimport DashConstants from '../constants/DashConstants.js';\nimport MediaPlayerEvents from '../../streaming/MediaPlayerEvents.js';\nimport URLUtils from '../../streaming/utils/URLUtils.js';\nimport BaseURL from '../vo/BaseURL.js';\nimport MpdLocation from '../vo/MpdLocation.js';\nimport Utils from '../../core/Utils.js';\n\nconst QUERY_PARAMETER_KEYS = {\n    THROUGHPUT: '_DASH_throughput',\n    PATHWAY: '_DASH_pathway',\n    URL: 'url'\n};\n\nconst THROUGHPUT_SAMPLES = 4;\n\nfunction ContentSteeringController() {\n    const context = this.context;\n    const urlUtils = URLUtils(context).getInstance();\n\n    let instance,\n        logger,\n        currentSteeringResponseData,\n        serviceLocationList,\n        throughputList,\n        nextRequestTimer,\n        urlLoader,\n        errHandler,\n        dashMetrics,\n        mediaPlayerModel,\n        manifestModel,\n        serviceDescriptionController,\n        throughputController,\n        eventBus,\n        adapter;\n\n    function setup() {\n        logger = Debug(context).getInstance().getLogger(instance);\n        _resetInitialSettings();\n    }\n\n    function setConfig(config) {\n        if (!config) {\n            return;\n        }\n\n        if (config.adapter) {\n            adapter = config.adapter;\n        }\n        if (config.errHandler) {\n            errHandler = config.errHandler;\n        }\n        if (config.dashMetrics) {\n            dashMetrics = config.dashMetrics;\n        }\n        if (config.mediaPlayerModel) {\n            mediaPlayerModel = config.mediaPlayerModel;\n        }\n        if (config.manifestModel) {\n            manifestModel = config.manifestModel;\n        }\n        if (config.serviceDescriptionController) {\n            serviceDescriptionController = config.serviceDescriptionController;\n        }\n        if (config.throughputController) {\n            throughputController = config.throughputController;\n        }\n        if (config.eventBus) {\n            eventBus = config.eventBus;\n        }\n    }\n\n    /**\n     * Initialize the steering controller by instantiating classes and registering observer callback\n     */\n    function initialize() {\n        urlLoader = URLLoader(context).create({\n            errHandler,\n            dashMetrics,\n            mediaPlayerModel,\n            errors: Errors\n        });\n        eventBus.on(MediaPlayerEvents.FRAGMENT_LOADING_STARTED, _onFragmentLoadingStarted, instance);\n        eventBus.on(MediaPlayerEvents.MANIFEST_LOADING_STARTED, _onManifestLoadingStarted, instance);\n        eventBus.on(MediaPlayerEvents.THROUGHPUT_MEASUREMENT_STORED, _onThroughputMeasurementStored, instance);\n\n    }\n\n    /**\n     * When loading of a fragment starts we store its serviceLocation in our list\n     * @param {object} e\n     * @private\n     */\n    function _onFragmentLoadingStarted(e) {\n        _addToServiceLocationList(e, 'baseUrl');\n    }\n\n    /**\n     * When loading of a manifest starts we store its serviceLocation in our list\n     * @param {object} e\n     * @private\n     */\n    function _onManifestLoadingStarted(e) {\n        _addToServiceLocationList(e, 'location')\n    }\n\n    /**\n     * When a throughput measurement  was stored in ThroughputModel we save it\n     * @param {object} e\n     * @private\n     */\n    function _onThroughputMeasurementStored(e) {\n        if (!e || !e.throughputValues || !e.throughputValues.serviceLocation) {\n            return;\n        }\n\n        _storeThroughputForServiceLocation(e.throughputValues.serviceLocation, e.throughputValues);\n    }\n\n    /**\n     * Helper function to store a throughput value from the corresponding serviceLocation\n     * @param {string} serviceLocation\n     * @param {number} throughput\n     * @private\n     */\n    function _storeThroughputForServiceLocation(serviceLocation, throughput) {\n        if (!throughputList[serviceLocation]) {\n            throughputList[serviceLocation] = [];\n        }\n        throughputList[serviceLocation].push(throughput)\n        if (throughputList[serviceLocation].length > THROUGHPUT_SAMPLES) {\n            throughputList[serviceLocation].shift();\n        }\n    }\n\n    /**\n     * Adds a new service location entry to our list\n     * @param {object} e\n     * @param {string} type\n     * @private\n     */\n    function _addToServiceLocationList(e, type) {\n        if (e && e.request && e.request.serviceLocation) {\n            const serviceLocation = e.request.serviceLocation;\n            if (serviceLocationList[type].all.indexOf(serviceLocation) === -1) {\n                serviceLocationList[type].all.push(serviceLocation)\n            }\n            serviceLocationList[type].current = serviceLocation;\n        }\n    }\n\n    /**\n     * Query DashAdapter and Service Description Controller to get the steering information defined in the manifest\n     * @returns {object}\n     */\n    function getSteeringDataFromManifest() {\n        const manifest = manifestModel.getValue()\n        let contentSteeringData = adapter.getContentSteering(manifest);\n\n        if (!contentSteeringData) {\n            contentSteeringData = serviceDescriptionController.getServiceDescriptionSettings().contentSteering;\n        }\n\n        return contentSteeringData;\n    }\n\n    /**\n     * Should query steering server prior to playback start\n     * @returns {boolean}\n     */\n    function shouldQueryBeforeStart() {\n        const steeringDataFromManifest = getSteeringDataFromManifest();\n        return !!steeringDataFromManifest && steeringDataFromManifest.queryBeforeStart;\n    }\n\n    /**\n     * Load the steering data from the steering server\n     * @returns {Promise}\n     */\n    function loadSteeringData() {\n        return new Promise((resolve) => {\n            try {\n                const steeringDataFromManifest = getSteeringDataFromManifest();\n                if (!steeringDataFromManifest || !steeringDataFromManifest.serverUrl) {\n                    resolve();\n                    return;\n                }\n\n                const url = _getSteeringServerUrl(steeringDataFromManifest);\n                const request = new ContentSteeringRequest(url);\n                urlLoader.load({\n                    request: request,\n                    success: (data) => {\n                        _handleSteeringResponse(data);\n                        eventBus.trigger(MediaPlayerEvents.CONTENT_STEERING_REQUEST_COMPLETED, {\n                            currentSteeringResponseData,\n                            url\n                        });\n                        resolve();\n                    },\n                    error: (e, error, statusText, response) => {\n                        _handleSteeringResponseError(e, response);\n                        resolve(e);\n                    },\n                    complete: () => {\n                        // Clear everything except for the current entry\n                        serviceLocationList.baseUrl.all = _getClearedServiceLocationListAfterSteeringRequest(serviceLocationList.baseUrl);\n                        serviceLocationList.location.all = _getClearedServiceLocationListAfterSteeringRequest(serviceLocationList.location);\n                    }\n                });\n            } catch (e) {\n                resolve(e);\n            }\n        })\n    }\n\n    /**\n     * Return the cleared data of our serviceLocationList after the steering request was completed\n     * @param {object} data\n     * @returns {Object[]}\n     * @private\n     */\n    function _getClearedServiceLocationListAfterSteeringRequest(data) {\n        if (!data.all || data.all.length === 0 || !data.current) {\n            return [];\n        }\n        return data.all.filter((entry) => {\n            return entry === data.current;\n        })\n    }\n\n    /**\n     * Returns the adjusted steering server url enhanced by pathway and throughput parameter\n     * @param {object} steeringDataFromManifest\n     * @returns {string}\n     * @private\n     */\n    function _getSteeringServerUrl(steeringDataFromManifest) {\n        let url = steeringDataFromManifest.serverUrl;\n        if (currentSteeringResponseData && currentSteeringResponseData.reloadUri) {\n            if (urlUtils.isRelative(currentSteeringResponseData.reloadUri)) {\n                url = urlUtils.resolve(currentSteeringResponseData.reloadUri, steeringDataFromManifest.serverUrl);\n            } else {\n                url = currentSteeringResponseData.reloadUri;\n            }\n        }\n\n        const additionalQueryParameter = [];\n\n\n        const serviceLocations = serviceLocationList.baseUrl.all.concat(serviceLocationList.location.all);\n        if (serviceLocations.length > 0) {\n\n            // Derive throughput for each service Location\n            const data = serviceLocations.map((serviceLocation) => {\n                const throughput = _calculateThroughputForServiceLocation(serviceLocation);\n                return {\n                    serviceLocation,\n                    throughput\n                }\n            })\n\n            // Sort in descending order to put all elements without throughput (-1) in the end\n            data.sort((a, b) => {\n                return b.throughput - a.throughput\n            })\n\n            let pathwayString = '';\n            let throughputString = '';\n\n            data.forEach((entry, index) => {\n                if (index !== 0) {\n                    pathwayString = `${pathwayString},`;\n                    if (entry.throughput > -1) {\n                        throughputString = `${throughputString},`;\n                    }\n                }\n                pathwayString = `${pathwayString}${entry.serviceLocation}`;\n                if (entry.throughput > -1) {\n                    throughputString = `${throughputString}${entry.throughput}`;\n                }\n            })\n\n            additionalQueryParameter.push({\n                key: QUERY_PARAMETER_KEYS.PATHWAY,\n                value: `\"${pathwayString}\"`\n            });\n            additionalQueryParameter.push({\n                key: QUERY_PARAMETER_KEYS.THROUGHPUT,\n                value: throughputString\n            });\n        }\n\n        url = Utils.addAdditionalQueryParameterToUrl(url, additionalQueryParameter);\n        return url;\n    }\n\n    /**\n     * Calculate the arithmetic mean of the last throughput samples\n     * @param {string} serviceLocation\n     * @returns {number}\n     * @private\n     */\n    function _calculateThroughputForServiceLocation(serviceLocation) {\n        if (!serviceLocation || !throughputList[serviceLocation] || throughputList[serviceLocation].length === 0) {\n            return -1;\n        }\n        const throughput = throughputController.getArithmeticMean(throughputList[serviceLocation], throughputList[serviceLocation].length, true);\n\n        return parseInt(throughput * 1000);\n    }\n\n\n    /**\n     * Parse the steering response and create instance of model ContentSteeringResponse\n     * @param {object} data\n     * @private\n     */\n    function _handleSteeringResponse(data) {\n        if (!data || !data[DashConstants.CONTENT_STEERING_RESPONSE.VERSION] || parseInt(data[DashConstants.CONTENT_STEERING_RESPONSE.VERSION]) !== 1) {\n            return;\n        }\n\n        // Update the data for other classes to use\n        currentSteeringResponseData = new ContentSteeringResponse();\n        currentSteeringResponseData.version = data[DashConstants.CONTENT_STEERING_RESPONSE.VERSION];\n\n        if (data[DashConstants.CONTENT_STEERING_RESPONSE.TTL] && !isNaN(data[DashConstants.CONTENT_STEERING_RESPONSE.TTL])) {\n            currentSteeringResponseData.ttl = data[DashConstants.CONTENT_STEERING_RESPONSE.TTL];\n        }\n        if (data[DashConstants.CONTENT_STEERING_RESPONSE.RELOAD_URI]) {\n            currentSteeringResponseData.reloadUri = data[DashConstants.CONTENT_STEERING_RESPONSE.RELOAD_URI]\n        }\n        if (data[DashConstants.CONTENT_STEERING_RESPONSE.PATHWAY_PRIORITY]) {\n            currentSteeringResponseData.pathwayPriority = data[DashConstants.CONTENT_STEERING_RESPONSE.PATHWAY_PRIORITY]\n        }\n        if (data[DashConstants.CONTENT_STEERING_RESPONSE.PATHWAY_CLONES]) {\n            currentSteeringResponseData.pathwayClones = data[DashConstants.CONTENT_STEERING_RESPONSE.PATHWAY_CLONES]\n            currentSteeringResponseData.pathwayClones = currentSteeringResponseData.pathwayClones.filter((pathwayClone) => {\n                return _isValidPathwayClone(pathwayClone);\n            })\n        }\n\n        _startSteeringRequestTimer();\n    }\n\n    /**\n     * Checks if object is a valid PathwayClone\n     * @param {object} pathwayClone\n     * @returns {boolean}\n     * @private\n     */\n    function _isValidPathwayClone(pathwayClone) {\n        return pathwayClone[DashConstants.CONTENT_STEERING_RESPONSE.BASE_ID]\n            && pathwayClone[DashConstants.CONTENT_STEERING_RESPONSE.ID]\n            && pathwayClone[DashConstants.CONTENT_STEERING_RESPONSE.URI_REPLACEMENT]\n            && pathwayClone[DashConstants.CONTENT_STEERING_RESPONSE.URI_REPLACEMENT][DashConstants.CONTENT_STEERING_RESPONSE.HOST]\n    }\n\n    /**\n     * Returns synthesized BaseURL elements based on Pathway Cloning\n     * @param {BaseURL[]}referenceElements\n     * @returns {BaseURL[]}\n     */\n    function getSynthesizedBaseUrlElements(referenceElements) {\n        try {\n            const synthesizedElements = _getSynthesizedElements(referenceElements);\n\n            return synthesizedElements.map((element) => {\n                const synthesizedBaseUrl = new BaseURL(element.synthesizedUrl, element.serviceLocation)\n                synthesizedBaseUrl.queryParams = element.queryParams;\n                synthesizedBaseUrl.dvbPriority = element.reference.dvbPriority;\n                synthesizedBaseUrl.dvbWeight = element.reference.dvbWeight;\n                synthesizedBaseUrl.availabilityTimeOffset = element.reference.availabilityTimeOffset;\n                synthesizedBaseUrl.availabilityTimeComplete = element.reference.availabilityTimeComplete;\n\n                return synthesizedBaseUrl;\n            })\n\n        } catch (e) {\n            logger.error(e);\n            return [];\n        }\n    }\n\n    /**\n     * Returns synthesized Location elements based on Pathway Cloning\n     * @param {MpdLocation[]} referenceElements\n     * @returns {MpdLocation[]}\n     */\n    function getSynthesizedLocationElements(referenceElements) {\n        try {\n            const synthesizedElements = _getSynthesizedElements(referenceElements);\n\n            return synthesizedElements.map((element) => {\n                const synthesizedLocation = new MpdLocation(element.synthesizedUrl, element.serviceLocation)\n                synthesizedLocation.queryParams = element.queryParams;\n\n                return synthesizedLocation;\n            })\n\n        } catch (e) {\n            logger.error(e);\n            return [];\n        }\n    }\n\n    /**\n     * Helper function to synthesize elements\n     * @param {array} referenceElements\n     * @returns {array}\n     * @private\n     */\n    function _getSynthesizedElements(referenceElements) {\n        try {\n            const synthesizedElements = [];\n\n            if (!referenceElements || referenceElements.length === 0 || !currentSteeringResponseData || !currentSteeringResponseData.pathwayClones || currentSteeringResponseData.pathwayClones.length === 0) {\n                return synthesizedElements;\n            }\n\n            currentSteeringResponseData.pathwayClones.forEach((pathwayClone) => {\n                let baseElements = referenceElements.filter((source) => {\n                    return pathwayClone[DashConstants.CONTENT_STEERING_RESPONSE.BASE_ID] === source.serviceLocation;\n                })\n                let reference = null;\n                if (baseElements && baseElements.length > 0) {\n                    reference = baseElements[0];\n                }\n                if (reference) {\n                    const referenceUrl = new URL(reference.url);\n                    let host = pathwayClone[DashConstants.CONTENT_STEERING_RESPONSE.URI_REPLACEMENT][DashConstants.CONTENT_STEERING_RESPONSE.HOST];\n                    host = Utils.stringHasProtocol(host) ? host : `${referenceUrl.protocol}//${host}`;\n                    const synthesizedElement =\n                        {\n                            synthesizedUrl: `${host}${referenceUrl.pathname}`,\n                            serviceLocation: pathwayClone[DashConstants.CONTENT_STEERING_RESPONSE.ID],\n                            queryParams: pathwayClone[DashConstants.CONTENT_STEERING_RESPONSE.URI_REPLACEMENT][DashConstants.CONTENT_STEERING_RESPONSE.PARAMS],\n                            reference\n                        };\n\n                    synthesizedElements.push(synthesizedElement);\n                }\n            });\n\n            return synthesizedElements;\n        } catch (e) {\n            logger.error(e);\n            return [];\n        }\n    }\n\n    /**\n     * Start timeout for next steering request\n     * @private\n     */\n    function _startSteeringRequestTimer() {\n        // Start timer for next request\n        if (currentSteeringResponseData && currentSteeringResponseData.ttl && !isNaN(currentSteeringResponseData.ttl)) {\n            if (nextRequestTimer) {\n                clearTimeout(nextRequestTimer);\n            }\n            nextRequestTimer = setTimeout(() => {\n                loadSteeringData();\n            }, currentSteeringResponseData.ttl * 1000);\n        }\n    }\n\n    /**\n     * Stop timeout for next steering request\n     */\n    function stopSteeringRequestTimer() {\n        if (nextRequestTimer) {\n            clearTimeout(nextRequestTimer);\n        }\n        nextRequestTimer = null;\n    }\n\n    /**\n     * Handle errors that occured when querying the steering server\n     * @param {object} e\n     * @param {object} response\n     * @private\n     */\n    function _handleSteeringResponseError(e, response) {\n        try {\n            logger.warn(`Error fetching data from content steering server`, e);\n            const statusCode = response.status;\n\n            switch (statusCode) {\n                // 410 response code. Stop steering\n                case 410:\n                    break;\n                // 429 Too Many Requests. Replace existing TTL value with Retry-After header if present\n                case 429:\n                    const retryAfter = response && response.getResponseHeader ? response.getResponseHeader('retry-after') : null;\n                    if (retryAfter !== null) {\n                        if (!currentSteeringResponseData) {\n                            currentSteeringResponseData = {};\n                        }\n                        currentSteeringResponseData.ttl = parseInt(retryAfter);\n                    }\n                    _startSteeringRequestTimer();\n                    break;\n                default:\n                    _startSteeringRequestTimer();\n                    break;\n            }\n        } catch (e) {\n            logger.error(e);\n        }\n    }\n\n    /**\n     * Returns the currentSteeringResponseData\n     * @returns {ContentSteeringResponse}\n     */\n    function getCurrentSteeringResponseData() {\n        return currentSteeringResponseData;\n    }\n\n    function reset() {\n        _resetInitialSettings();\n        eventBus.off(MediaPlayerEvents.FRAGMENT_LOADING_STARTED, _onFragmentLoadingStarted, instance);\n        eventBus.off(MediaPlayerEvents.MANIFEST_LOADING_STARTED, _onManifestLoadingStarted, instance);\n        eventBus.off(MediaPlayerEvents.THROUGHPUT_MEASUREMENT_STORED, _onThroughputMeasurementStored, instance);\n    }\n\n    function _resetInitialSettings() {\n        currentSteeringResponseData = null;\n        throughputList = {};\n        serviceLocationList = {\n            baseUrl: {\n                current: null,\n                all: []\n            },\n            location: {\n                current: null,\n                all: []\n            }\n        };\n        stopSteeringRequestTimer()\n    }\n\n\n    instance = {\n        reset,\n        setConfig,\n        loadSteeringData,\n        getCurrentSteeringResponseData,\n        shouldQueryBeforeStart,\n        getSteeringDataFromManifest,\n        stopSteeringRequestTimer,\n        getSynthesizedBaseUrlElements,\n        getSynthesizedLocationElements,\n        initialize\n    };\n\n    setup();\n\n    return instance;\n}\n\nContentSteeringController.__dashjs_factory_name = 'ContentSteeringController';\nexport default FactoryMaker.getSingletonFactory(ContentSteeringController);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2023, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n\nimport Events from '../../core/events/Events.js';\nimport BlacklistController from '../controllers/BlacklistController.js';\nimport FactoryMaker from '../../core/FactoryMaker.js';\nimport Settings from '../../core/Settings.js';\nimport ContentSteeringController from '../../dash/controllers/ContentSteeringController.js';\n\nfunction LocationSelector() {\n\n    const context = this.context;\n    const settings = Settings(context).getInstance();\n\n    let instance,\n        blacklistController,\n        contentSteeringController;\n\n    function setup() {\n        blacklistController = BlacklistController(context).create({\n            updateEventName: Events.SERVICE_LOCATION_LOCATION_BLACKLIST_CHANGED,\n            addBlacklistEventName: Events.SERVICE_LOCATION_LOCATION_BLACKLIST_ADD\n        });\n        contentSteeringController = ContentSteeringController(context).getInstance();\n    }\n\n    function setConfig(config) {\n        if (config.blacklistController) {\n            blacklistController = config.blacklistController;\n        }\n        if (config.contentSteeringController) {\n            contentSteeringController = config.contentSteeringController;\n        }\n    }\n\n    /**\n     *\n     * @param {MpdLocation[]} mpdLocations\n     * @returns {*}\n     */\n    function select(mpdLocations) {\n        if (!mpdLocations || mpdLocations.length === 0) {\n            return null;\n        }\n\n        let mpdLocation = null;\n        if (settings.get().streaming.applyContentSteering) {\n            mpdLocation = _selectByContentSteering(mpdLocations)\n        }\n\n        if (!mpdLocation) {\n            mpdLocation = _selectByDefault(mpdLocations);\n        }\n\n        return mpdLocation;\n    }\n\n    function _selectByContentSteering(mpdLocations) {\n        // Search in the response data of the steering server\n        const currentSteeringResponseData = contentSteeringController.getCurrentSteeringResponseData();\n        if (currentSteeringResponseData && currentSteeringResponseData.pathwayPriority && currentSteeringResponseData.pathwayPriority.length > 0) {\n            return _findMpdLocation(currentSteeringResponseData.pathwayPriority, mpdLocations);\n        }\n\n        return null;\n    }\n\n    function _findMpdLocation(pathwayPriority = [], mpdLocations = []) {\n        let i = 0;\n        let target = null;\n        while (i < pathwayPriority.length) {\n            const curr = pathwayPriority[i];\n            const idx = mpdLocations.findIndex((elem) => {\n                return elem.serviceLocation && elem.serviceLocation === curr;\n            })\n            if (idx !== -1 && !blacklistController.contains(mpdLocations[idx].serviceLocation)) {\n                target = mpdLocations[idx]\n                break;\n            }\n            i += 1;\n        }\n        return target;\n    }\n\n    function _selectByDefault(mpdLocations) {\n        return mpdLocations[0];\n    }\n\n    function reset() {\n        blacklistController.reset();\n    }\n\n    instance = {\n        select,\n        setConfig,\n        reset\n    };\n\n    setup();\n\n    return instance;\n}\n\nLocationSelector.__dashjs_factory_name = 'LocationSelector';\nexport default FactoryMaker.getClassFactory(LocationSelector);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport EventBus from '../core/EventBus.js';\nimport Events from '../core/events/Events.js';\nimport MediaPlayerEvents from '../streaming/MediaPlayerEvents.js';\nimport FactoryMaker from '../core/FactoryMaker.js';\nimport Debug from '../core/Debug.js';\nimport Errors from '../core/errors/Errors.js';\nimport DashConstants from '../dash/constants/DashConstants.js';\nimport URLUtils from './utils/URLUtils.js';\nimport LocationSelector from './utils/LocationSelector.js';\nimport Constants from './constants/Constants.js';\nimport Utils from '../core/Utils.js';\n\nfunction ManifestUpdater() {\n\n    const context = this.context;\n    const eventBus = EventBus(context).getInstance();\n    const urlUtils = URLUtils(context).getInstance();\n\n    let instance,\n        logger,\n        refreshDelay,\n        refreshTimer,\n        isPaused,\n        isStopped,\n        isUpdating,\n        manifestLoader,\n        manifestModel,\n        locationSelector,\n        adapter,\n        errHandler,\n        contentSteeringController,\n        settings;\n\n    function setup() {\n        logger = Debug(context).getInstance().getLogger(instance);\n        locationSelector = LocationSelector(context).create();\n    }\n\n    function setConfig(config) {\n        if (!config) {\n            return;\n        }\n\n        if (config.manifestModel) {\n            manifestModel = config.manifestModel;\n        }\n        if (config.adapter) {\n            adapter = config.adapter;\n        }\n        if (config.manifestLoader) {\n            manifestLoader = config.manifestLoader;\n        }\n        if (config.errHandler) {\n            errHandler = config.errHandler;\n        }\n        if (config.locationSelector) {\n            locationSelector = config.locationSelector;\n        }\n        if (config.settings) {\n            settings = config.settings;\n        }\n        if (config.contentSteeringController) {\n            contentSteeringController = config.contentSteeringController;\n        }\n    }\n\n    function initialize() {\n        resetInitialSettings();\n\n        eventBus.on(Events.STREAMS_COMPOSED, onStreamsComposed, this);\n        eventBus.on(MediaPlayerEvents.PLAYBACK_STARTED, onPlaybackStarted, this);\n        eventBus.on(MediaPlayerEvents.PLAYBACK_PAUSED, onPlaybackPaused, this);\n        eventBus.on(Events.INTERNAL_MANIFEST_LOADED, onManifestLoaded, this);\n    }\n\n    function setManifest(manifest) {\n        update(manifest);\n    }\n\n    function resetInitialSettings() {\n        refreshDelay = NaN;\n        isUpdating = false;\n        isPaused = true;\n        isStopped = false;\n        stopManifestRefreshTimer();\n    }\n\n    function reset() {\n\n        eventBus.off(MediaPlayerEvents.PLAYBACK_STARTED, onPlaybackStarted, this);\n        eventBus.off(MediaPlayerEvents.PLAYBACK_PAUSED, onPlaybackPaused, this);\n        eventBus.off(Events.STREAMS_COMPOSED, onStreamsComposed, this);\n        eventBus.off(Events.INTERNAL_MANIFEST_LOADED, onManifestLoaded, this);\n\n        resetInitialSettings();\n    }\n\n    function stopManifestRefreshTimer() {\n        if (refreshTimer !== null) {\n            clearTimeout(refreshTimer);\n            refreshTimer = null;\n        }\n    }\n\n    function startManifestRefreshTimer(delay) {\n        stopManifestRefreshTimer();\n\n        if (isStopped) {\n            return;\n        }\n\n        if (isNaN(delay) && !isNaN(refreshDelay)) {\n            delay = refreshDelay * 1000;\n        }\n\n        if (!isNaN(delay)) {\n            logger.debug('Refresh manifest in ' + delay + ' milliseconds.');\n            refreshTimer = setTimeout(onRefreshTimer, delay);\n        }\n    }\n\n    function refreshManifest(ignorePatch = false) {\n        isUpdating = true;\n        const manifest = manifestModel.getValue();\n\n        // default to the original url in the manifest\n        let url = manifest.url;\n\n        // Remove previous CMCD parameters from URL\n        if (url) {\n            url = Utils.removeQueryParameterFromUrl(url, Constants.CMCD_QUERY_KEY);\n        }\n\n        // Check for PatchLocation and Location alternatives\n        let serviceLocation = null;\n        const availablePatchLocations = adapter.getPatchLocation(manifest);\n        const patchLocation = locationSelector.select(availablePatchLocations);\n        let queryParams = null;\n        if (patchLocation && !ignorePatch) {\n            url = patchLocation.url;\n            serviceLocation = patchLocation.serviceLocation;\n            queryParams = patchLocation.queryParams;\n        } else {\n            const availableMpdLocations = _getAvailableMpdLocations(manifest);\n            const mpdLocation = locationSelector.select(availableMpdLocations);\n            if (mpdLocation) {\n                url = mpdLocation.url;\n                serviceLocation = mpdLocation.serviceLocation;\n                queryParams = mpdLocation.queryParams;\n            }\n        }\n\n        // if one of the alternatives was relative, convert to absolute\n        if (urlUtils.isRelative(url)) {\n            url = urlUtils.resolve(url, manifest.url);\n        }\n\n        manifestLoader.load(url, serviceLocation, queryParams);\n    }\n\n    function _getAvailableMpdLocations(manifest) {\n        const manifestLocations = adapter.getLocation(manifest);\n        const synthesizedElements = contentSteeringController.getSynthesizedLocationElements(manifestLocations);\n\n        return manifestLocations.concat(synthesizedElements);\n    }\n\n    function update(manifest) {\n        if (!manifest) {\n            // successful update with no content implies existing manifest remains valid\n            manifest = manifestModel.getValue();\n\n            // override load time to avoid invalid latency tracking and ensure update cadence\n            manifest.loadedTime = new Date();\n        } else if (adapter.getIsPatch(manifest)) {\n            // with patches the in-memory manifest is our base\n            let patch = manifest;\n            manifest = manifestModel.getValue();\n\n            // check for patch validity\n            let isPatchValid = adapter.isPatchValid(manifest, patch);\n            let patchSuccessful = isPatchValid;\n\n            if (isPatchValid) {\n                // grab publish time before update\n                let publishTime = adapter.getPublishTime(manifest);\n\n                // apply validated patch to manifest\n                adapter.applyPatchToManifest(manifest, patch);\n\n                // get the updated publish time\n                let updatedPublishTime = adapter.getPublishTime(manifest);\n\n                // ensure the patch properly updated the in-memory publish time\n                patchSuccessful = publishTime.getTime() !== updatedPublishTime.getTime();\n            }\n\n            // if the patch failed to apply, force a full manifest refresh\n            if (!patchSuccessful) {\n                logger.debug('Patch provided is invalid, performing full manifest refresh');\n                refreshManifest(true);\n                return;\n            }\n\n            // override load time to avoid invalid latency tracking and ensure update cadence\n            manifest.loadedTime = new Date();\n        }\n\n        // See DASH-IF IOP v4.3 section 4.6.4 \"Transition Phase between Live and On-Demand\"\n        // Stop manifest update, ignore static manifest and signal end of dynamic stream to detect end of stream\n        if (manifestModel.getValue() && manifestModel.getValue().type === DashConstants.DYNAMIC && manifest.type === DashConstants.STATIC) {\n            eventBus.trigger(Events.DYNAMIC_TO_STATIC);\n            isUpdating = false;\n            isStopped = true;\n            return;\n        }\n\n        manifestModel.setValue(manifest);\n\n        const date = new Date();\n        const latencyOfLastUpdate = (date.getTime() - manifest.loadedTime.getTime()) / 1000;\n        refreshDelay = adapter.getManifestUpdatePeriod(manifest, latencyOfLastUpdate);\n        // setTimeout uses a 32 bit number to store the delay. Any number greater than it\n        // will cause event associated with setTimeout to trigger immediately\n        if (refreshDelay * 1000 > 0x7FFFFFFF) {\n            refreshDelay = 0x7FFFFFFF / 1000;\n        }\n        eventBus.trigger(Events.MANIFEST_UPDATED, { manifest: manifest });\n        logger.info('Manifest has been refreshed at ' + date + '[' + date.getTime() / 1000 + '] ');\n\n        if (!isPaused) {\n            startManifestRefreshTimer();\n        }\n    }\n\n    function onRefreshTimer() {\n        if (isPaused) {\n            return;\n        }\n        if (isUpdating) {\n            startManifestRefreshTimer(settings.get().streaming.manifestUpdateRetryInterval);\n            return;\n        }\n        refreshManifest();\n    }\n\n    function onManifestLoaded(e) {\n        if (!e.error) {\n            update(e.manifest);\n        } else if (e.error.code === Errors.MANIFEST_LOADER_PARSING_FAILURE_ERROR_CODE) {\n            errHandler.error(e.error);\n        }\n    }\n\n    function onPlaybackStarted(/*e*/) {\n        isPaused = false;\n        startManifestRefreshTimer();\n    }\n\n    function onPlaybackPaused(/*e*/) {\n        isPaused = !settings.get().streaming.scheduling.scheduleWhilePaused;\n\n        if (isPaused) {\n            stopManifestRefreshTimer();\n        }\n    }\n\n    function onStreamsComposed(/*e*/) {\n        // When streams are ready we can consider manifest update completed. Resolve the update promise.\n        isUpdating = false;\n    }\n\n    function getIsUpdating() {\n        return isUpdating;\n    }\n\n    instance = {\n        initialize,\n        setManifest,\n        refreshManifest,\n        getIsUpdating,\n        setConfig,\n        reset\n    };\n\n    setup();\n    return instance;\n}\n\nManifestUpdater.__dashjs_factory_name = 'ManifestUpdater';\nexport default FactoryMaker.getClassFactory(ManifestUpdater);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport DashJSError from './../vo/DashJSError.js';\nimport {HTTPRequest} from '../vo/metrics/HTTPRequest.js';\nimport EventBus from './../../core/EventBus.js';\nimport Events from './../../core/events/Events.js';\nimport Errors from './../../core/errors/Errors.js';\nimport FactoryMaker from '../../core/FactoryMaker.js';\nimport Debug from '../../core/Debug.js';\nimport URLUtils from '../utils/URLUtils.js';\n\nconst HTTP_TIMEOUT_MS = 5000;\nconst DEFAULT_MAXIMUM_ALLOWED_DRIFT = 100;\nconst DEFAULT_TIME_BETWEEN_SYNC_ATTEMPTS_ADJUSTMENT_FACTOR = 2;\nconst DEFAULT_BACKGROUND_ATTEMPTS = 2;\nconst DEFAULT_TIME_BETWEEN_SYNC_ATTEMPTS = 30;\nconst DEFAULT_MINIMUM_TIME_BETWEEN_BACKGROUND_SYNC_ATTEMPTS = 30;\nconst DEFAULT_MAXIMUM_TIME_BETWEEN_SYNC = 600;\nconst DEFAULT_MINIMUM_TIME_BETWEEN_SYNC = 2;\n\nfunction TimeSyncController() {\n\n    const context = this.context;\n    const eventBus = EventBus(context).getInstance();\n    const urlUtils = URLUtils(context).getInstance();\n\n    let instance,\n        logger,\n        isSynchronizing,\n        isBackgroundSynchronizing,\n        settings,\n        handlers,\n        dashMetrics,\n        backgroundSyncTimeOffsets,\n        timingSources,\n        timeOfLastSync,\n        timeOfLastBackgroundSync,\n        lastOffset,\n        lastTimingSource,\n        internalTimeBetweenSyncAttempts,\n        errHandler,\n        baseURLController;\n\n    function setup() {\n        logger = Debug(context).getInstance().getLogger(instance);\n\n        eventBus.on(Events.ATTEMPT_BACKGROUND_SYNC, _onAttemptBackgroundSync, instance);\n    }\n\n    function setConfig(config) {\n        if (!config) {\n            return;\n        }\n\n        if (config.dashMetrics) {\n            dashMetrics = config.dashMetrics;\n        }\n\n        if (config.baseURLController) {\n            baseURLController = config.baseURLController;\n        }\n\n        if (config.errHandler) {\n            errHandler = config.errHandler;\n        }\n\n        if (config.settings) {\n            settings = config.settings;\n        }\n    }\n\n    function _resetInitialSettings() {\n        backgroundSyncTimeOffsets = [];\n        timingSources = [];\n        timeOfLastSync = null;\n        timeOfLastBackgroundSync = null;\n        lastTimingSource = null;\n        lastOffset = NaN;\n        isSynchronizing = false;\n        isBackgroundSynchronizing = false;\n        internalTimeBetweenSyncAttempts = settings.get().streaming.utcSynchronization.timeBetweenSyncAttempts;\n    }\n\n    /**\n     * Register the timing handler depending on the schemeIdUris. This method is called once when the StreamController is initialized\n     */\n    function initialize() {\n        _resetInitialSettings();\n\n        // a list of known schemeIdUris and a method to call with @value\n        handlers = {\n            'urn:mpeg:dash:utc:http-head:2014': _httpHeadHandler,\n            'urn:mpeg:dash:utc:http-xsdate:2014': _httpHandler.bind(null, _xsdatetimeDecoder),\n            'urn:mpeg:dash:utc:http-iso:2014': _httpHandler.bind(null, _iso8601Decoder),\n            'urn:mpeg:dash:utc:direct:2014': _directHandler,\n\n            // some specs referencing early ISO23009-1 drafts incorrectly use\n            // 2012 in the URI, rather than 2014. support these for now.\n            'urn:mpeg:dash:utc:http-head:2012': _httpHeadHandler,\n            'urn:mpeg:dash:utc:http-xsdate:2012': _httpHandler.bind(null, _xsdatetimeDecoder),\n            'urn:mpeg:dash:utc:http-iso:2012': _httpHandler.bind(null, _iso8601Decoder),\n            'urn:mpeg:dash:utc:direct:2012': _directHandler,\n\n            // it isn't clear how the data returned would be formatted, and\n            // no public examples available so http-ntp not supported for now.\n            // presumably you would do an arraybuffer type xhr and decode the\n            // binary data returned but I would want to see a sample first.\n            'urn:mpeg:dash:utc:http-ntp:2014': _notSupportedHandler,\n\n            // not clear how this would be supported in javascript (in browser)\n            'urn:mpeg:dash:utc:ntp:2014': _notSupportedHandler,\n            'urn:mpeg:dash:utc:sntp:2014': _notSupportedHandler\n        };\n\n    }\n\n    /**\n     * Sync against a timing source. T\n     * @param {array} tSources\n     * @param {boolean} isDynamic\n     */\n    function attemptSync(tSources, isDynamic) {\n\n        timingSources = tSources;\n\n        // Stop if we are already synchronizing\n        if (isSynchronizing) {\n            return;\n        }\n\n        // No synchronization required we can signal the completion immediately\n        if (!_shouldPerformSynchronization(isDynamic)) {\n            eventBus.trigger(Events.TIME_SYNCHRONIZATION_COMPLETED);\n            return;\n        }\n\n        isSynchronizing = true;\n        _attemptRecursiveSync();\n    }\n\n    /**\n     * Does a synchronization in the background in case the last offset should be verified or a 404 occurs\n     */\n    function _onAttemptBackgroundSync() {\n        if (!settings.get().streaming.utcSynchronization.enabled || isSynchronizing || isBackgroundSynchronizing || !lastTimingSource || !lastTimingSource.value || !lastTimingSource.schemeIdUri || isNaN(lastOffset) || isNaN(settings.get().streaming.utcSynchronization.backgroundAttempts)) {\n            return;\n        }\n\n        if (timeOfLastBackgroundSync && ((Date.now() - timeOfLastBackgroundSync) / 1000) < DEFAULT_MINIMUM_TIME_BETWEEN_BACKGROUND_SYNC_ATTEMPTS) {\n            return;\n        }\n\n        backgroundSyncTimeOffsets = [];\n        isBackgroundSynchronizing = true;\n        const backgroundAttempts = !isNaN(settings.get().streaming.utcSynchronization.backgroundAttempts) ? settings.get().streaming.utcSynchronization.backgroundAttempts : DEFAULT_BACKGROUND_ATTEMPTS;\n        _attemptBackgroundSync(backgroundAttempts);\n    }\n\n    /**\n     * Perform a defined number of background attempts\n     * @param {number} attempts\n     * @private\n     */\n    function _attemptBackgroundSync(attempts) {\n        try {\n            if (attempts <= 0) {\n                _completeBackgroundTimeSyncSequence();\n                return;\n            }\n\n            const deviceTimeBeforeSync = Date.now();\n            handlers[lastTimingSource.schemeIdUri](\n                lastTimingSource.value,\n                function (serverTime) {\n                    // the timing source returned something useful\n                    const deviceTimeAfterSync = Date.now();\n                    const offset = _calculateOffset(deviceTimeBeforeSync, deviceTimeAfterSync, serverTime);\n\n                    backgroundSyncTimeOffsets.push(offset);\n                    _attemptBackgroundSync(attempts - 1);\n                },\n                function () {\n                    _completeBackgroundTimeSyncSequence();\n                }\n            );\n        } catch (e) {\n            _completeBackgroundTimeSyncSequence();\n        }\n    }\n\n    /**\n     * Sync against a timing source. This method is called recursively if the time sync for the first entry in timingSources fails.\n     * @param {number} sourceIndex\n     */\n    function _attemptRecursiveSync(sourceIndex = null) {\n        // if called with no sourceIndex, use zero (highest priority)\n        let index = sourceIndex || 0;\n\n        // the sources should be ordered in priority from the manifest.\n        // try each in turn, from the top, until either something\n        // sensible happens, or we run out of sources to try.\n        if (!timingSources || timingSources.length === 0 || index >= timingSources.length) {\n            _onComplete();\n            return;\n        }\n        let source = timingSources[index];\n\n        if (source) {\n            // check if there is a handler for this @schemeIdUri\n            if (handlers.hasOwnProperty(source.schemeIdUri)) {\n                // if so, call it with its @value\n                const deviceTimeBeforeSync = new Date().getTime();\n                handlers[source.schemeIdUri](\n                    source.value,\n                    function (serverTime) {\n                        // the timing source returned something useful\n                        const deviceTimeAfterSync = new Date().getTime();\n                        const offset = _calculateOffset(deviceTimeBeforeSync, deviceTimeAfterSync, serverTime);\n                        lastTimingSource = source;\n\n                        _onComplete(offset);\n                    },\n                    function () {\n                        // the timing source was probably uncontactable\n                        // or returned something we can't use - try again\n                        // with the remaining sources\n                        _attemptRecursiveSync(index + 1);\n                    }\n                );\n            } else {\n                // an unknown schemeIdUri must have been found\n                // try again with the remaining sources\n                _attemptRecursiveSync(index + 1);\n            }\n        } else {\n            // no valid time source could be found, just use device time\n            _onComplete();\n        }\n\n    }\n\n    /**\n     * Calculate the offset between client and server. Account for the roundtrip time\n     * @param {number} deviceTimeBeforeSync\n     * @param {number} deviceTimeAfterSync\n     * @param {number} serverTime\n     * @return {number}\n     * @private\n     */\n    function _calculateOffset(deviceTimeBeforeSync, deviceTimeAfterSync, serverTime) {\n        const deviceReferenceTime = deviceTimeAfterSync - ((deviceTimeAfterSync - deviceTimeBeforeSync) / 2);\n\n        return serverTime - deviceReferenceTime;\n    }\n\n    /**\n     * Checks if a synchronization is required\n     * @param {boolean} isDynamic\n     * @return {boolean}\n     * @private\n     */\n    function _shouldPerformSynchronization(isDynamic) {\n        try {\n            if (!isDynamic || !settings.get().streaming.utcSynchronization.enabled) {\n                return false;\n            }\n            const timeBetweenSyncAttempts = !isNaN(internalTimeBetweenSyncAttempts) ? internalTimeBetweenSyncAttempts : DEFAULT_TIME_BETWEEN_SYNC_ATTEMPTS;\n\n            if (!timeOfLastSync || !timeBetweenSyncAttempts || isNaN(timeBetweenSyncAttempts)) {\n                return true;\n            }\n\n            return ((Date.now() - timeOfLastSync) / 1000) >= timeBetweenSyncAttempts;\n        } catch (e) {\n            return true;\n        }\n    }\n\n    /**\n     * Callback after sync has been completed\n     * @param {number} offset\n     * @private\n     */\n    function _onComplete(offset = NaN) {\n        let failed = isNaN(offset);\n        if (failed && settings.get().streaming.utcSynchronization.useManifestDateHeaderTimeSource) {\n            //Before falling back to binary search , check if date header exists on MPD. if so, use for a time source.\n            _checkForDateHeader();\n        } else {\n            _completeTimeSyncSequence(failed, offset);\n        }\n    }\n\n    /**\n     * Takes xsdatetime and returns milliseconds since UNIX epoch. May not be necessary as xsdatetime is very similar to ISO 8601 which is natively understood by javascript Date parser\n     * @param {string} xsdatetimeStr\n     * @return {number}\n     * @private\n     */\n    function _alternateXsdatetimeDecoder(xsdatetimeStr) {\n        // taken from DashParser - should probably refactor both uses\n        const SECONDS_IN_MIN = 60;\n        const MINUTES_IN_HOUR = 60;\n        const MILLISECONDS_IN_SECONDS = 1000;\n        let datetimeRegex = /^([0-9]{4})-([0-9]{2})-([0-9]{2})T([0-9]{2}):([0-9]{2})(?::([0-9]*)(\\.[0-9]*)?)?(?:([+\\-])([0-9]{2})([0-9]{2}))?/;\n\n        let utcDate,\n            timezoneOffset;\n\n        let match = datetimeRegex.exec(xsdatetimeStr);\n\n        // If the string does not contain a timezone offset different browsers can interpret it either\n        // as UTC or as a local time so we have to parse the string manually to normalize the given date value for\n        // all browsers\n        utcDate = Date.UTC(\n            parseInt(match[1], 10),\n            parseInt(match[2], 10) - 1, // months start from zero\n            parseInt(match[3], 10),\n            parseInt(match[4], 10),\n            parseInt(match[5], 10),\n            (match[6] && (parseInt(match[6], 10) || 0)),\n            (match[7] && parseFloat(match[7]) * MILLISECONDS_IN_SECONDS) || 0\n        );\n        // If the date has timezone offset take it into account as well\n        if (match[9] && match[10]) {\n            timezoneOffset = parseInt(match[9], 10) * MINUTES_IN_HOUR + parseInt(match[10], 10);\n            utcDate += (match[8] === '+' ? -1 : +1) * timezoneOffset * SECONDS_IN_MIN * MILLISECONDS_IN_SECONDS;\n        }\n\n        return new Date(utcDate).getTime();\n    }\n\n\n    /**\n     * Try to use the built in parser, since xsdate is a constrained ISO8601 which is supported natively by Date.parse. if that fails, try a regex-based version used elsewhere in this application.\n     * @param {string} xsdatetimeStr\n     * @return {number}\n     */\n    function _xsdatetimeDecoder(xsdatetimeStr) {\n        let parsedDate = Date.parse(xsdatetimeStr);\n\n        if (isNaN(parsedDate)) {\n            parsedDate = _alternateXsdatetimeDecoder(xsdatetimeStr);\n        }\n\n        return parsedDate;\n    }\n\n    /**\n     * Takes ISO 8601 timestamp and returns milliseconds since UNIX epoch\n     * @param {string} isoStr\n     * @return {number}\n     */\n    function _iso8601Decoder(isoStr) {\n        return Date.parse(isoStr);\n    }\n\n    /**\n     * Takes RFC 1123 timestamp (which is same as ISO8601) and returns milliseconds since UNIX epoch\n     * @param {string} dateStr\n     * @return {number}\n     */\n    function _rfc1123Decoder(dateStr) {\n        return Date.parse(dateStr);\n    }\n\n    /**\n     * Handler for unsupported scheme ids.\n     * @param {string} url\n     * @param {function} onSuccessCB\n     * @param {function} onFailureCB\n     * @private\n     */\n    function _notSupportedHandler(url, onSuccessCB, onFailureCB) {\n        onFailureCB();\n    }\n\n    /**\n     * Direct handler\n     * @param {string} xsdatetimeStr\n     * @param {function} onSuccessCB\n     * @param {function} onFailureCB\n     */\n    function _directHandler(xsdatetimeStr, onSuccessCB, onFailureCB) {\n        let time = _xsdatetimeDecoder(xsdatetimeStr);\n\n        if (!isNaN(time)) {\n            onSuccessCB(time);\n            return;\n        }\n\n        onFailureCB();\n    }\n\n    /**\n     * Generic http handler\n     * @param {function} decoder\n     * @param {string} url\n     * @param {function} onSuccessCB\n     * @param {function} onFailureCB\n     * @param {boolean} isHeadRequest\n     * @private\n     */\n    function _httpHandler(decoder, url, onSuccessCB, onFailureCB, isHeadRequest) {\n        let oncomplete,\n            onload;\n        let complete = false;\n        let req = new XMLHttpRequest();\n\n        let verb = isHeadRequest ? HTTPRequest.HEAD : HTTPRequest.GET;\n        let urls = url.match(/\\S+/g);\n\n        // according to ISO 23009-1, url could be a white-space\n        // separated list of URLs. just handle one at a time.\n        url = urls.shift();\n\n        oncomplete = function () {\n            if (complete) {\n                return;\n            }\n\n            // we only want to pass through here once per xhr,\n            // regardless of whether the load was successful.\n            complete = true;\n\n            // if there are more urls to try, call self.\n            if (urls.length) {\n                _httpHandler(decoder, urls.join(' '), onSuccessCB, onFailureCB, isHeadRequest);\n            } else {\n                onFailureCB();\n            }\n        };\n\n        onload = function () {\n            let time,\n                result;\n\n            if (req.status === 200) {\n                time = isHeadRequest ?\n                    req.getResponseHeader('Date') :\n                    req.response;\n\n                result = decoder(time);\n\n                // decoder returns NaN if non-standard input\n                if (!isNaN(result)) {\n                    onSuccessCB(result);\n                    complete = true;\n                }\n            }\n        };\n\n        if (urlUtils.isRelative(url)) {\n            // passing no path to resolve will return just MPD BaseURL/baseUri\n            const baseUrl = baseURLController.resolve();\n            if (baseUrl) {\n                url = urlUtils.resolve(url, baseUrl.url);\n            }\n        }\n\n        req.open(verb, url);\n        req.timeout = HTTP_TIMEOUT_MS || 0;\n        req.onload = onload;\n        req.onloadend = oncomplete;\n        req.send();\n    }\n\n    /**\n     * Handler for http-head schemeIdUri\n     * @param {string} url\n     * @param {function} onSuccessCB\n     * @param {function} onFailureCB\n     * @private\n     */\n    function _httpHeadHandler(url, onSuccessCB, onFailureCB) {\n        _httpHandler(_rfc1123Decoder, url, onSuccessCB, onFailureCB, true);\n    }\n\n    /**\n     * Checks if a date header is present in the MPD response and calculates the offset based on the header\n     * @private\n     */\n    function _checkForDateHeader() {\n        let dateHeaderValue = dashMetrics.getLatestMPDRequestHeaderValueByID('Date');\n        let dateHeaderTime = dateHeaderValue !== null ? new Date(dateHeaderValue).getTime() : Number.NaN;\n\n        if (!isNaN(dateHeaderTime)) {\n            const offsetToDeviceTimeMs = dateHeaderTime - Date.now();\n            _completeTimeSyncSequence(false, offsetToDeviceTimeMs);\n        } else {\n            _completeTimeSyncSequence(true);\n        }\n    }\n\n    /**\n     * Triggers the event to signal that the time synchronization was completed\n     * @param {boolean} failed\n     * @param {number} offset\n     * @private\n     */\n    function _completeTimeSyncSequence(failed, offset) {\n\n        // Adjust the time of the next sync based on the drift between current offset and last offset\n        if (!isNaN(lastOffset) && !isNaN(offset) && !failed) {\n            _adjustTimeBetweenSyncAttempts(offset);\n        }\n\n        // Update the internal data\n        if (!failed && !isNaN(offset)) {\n            timeOfLastSync = Date.now();\n            isSynchronizing = false;\n\n            // if this is the first sync we are doing perform background syncs as well to confirm current offset\n            const shouldAttemptBackgroundSync = isNaN(lastOffset);\n            lastOffset = offset;\n            if (shouldAttemptBackgroundSync) {\n                _onAttemptBackgroundSync();\n            }\n            logger.debug(`Completed UTC sync. Setting client - server offset to ${offset}`);\n        }\n\n        if (failed) {\n            lastTimingSource = null;\n            isSynchronizing = false;\n            errHandler.error(new DashJSError(Errors.TIME_SYNC_FAILED_ERROR_CODE, Errors.TIME_SYNC_FAILED_ERROR_MESSAGE));\n        }\n\n        // Notify other classes\n        eventBus.trigger(Events.UPDATE_TIME_SYNC_OFFSET, {\n            offset: offset,\n        });\n        eventBus.trigger(Events.TIME_SYNCHRONIZATION_COMPLETED);\n    }\n\n    function _adjustTimeBetweenSyncAttempts(offset) {\n        try {\n            const isOffsetDriftWithinThreshold = _isOffsetDriftWithinThreshold(offset);\n            const timeBetweenSyncAttempts = !isNaN(internalTimeBetweenSyncAttempts) ? internalTimeBetweenSyncAttempts : DEFAULT_TIME_BETWEEN_SYNC_ATTEMPTS;\n            const timeBetweenSyncAttemptsAdjustmentFactor = !isNaN(settings.get().streaming.utcSynchronization.timeBetweenSyncAttemptsAdjustmentFactor) ? settings.get().streaming.utcSynchronization.timeBetweenSyncAttemptsAdjustmentFactor : DEFAULT_TIME_BETWEEN_SYNC_ATTEMPTS_ADJUSTMENT_FACTOR;\n            const maximumTimeBetweenSyncAttempts = !isNaN(settings.get().streaming.utcSynchronization.maximumTimeBetweenSyncAttempts) ? settings.get().streaming.utcSynchronization.maximumTimeBetweenSyncAttempts : DEFAULT_MAXIMUM_TIME_BETWEEN_SYNC;\n            const minimumTimeBetweenSyncAttempts = !isNaN(settings.get().streaming.utcSynchronization.minimumTimeBetweenSyncAttempts) ? settings.get().streaming.utcSynchronization.minimumTimeBetweenSyncAttempts : DEFAULT_MINIMUM_TIME_BETWEEN_SYNC;\n            let adjustedTimeBetweenSyncAttempts;\n\n            if (isOffsetDriftWithinThreshold) {\n                // The drift between the current offset and the last offset is within the allowed threshold. Increase sync time\n                adjustedTimeBetweenSyncAttempts = Math.min(timeBetweenSyncAttempts * timeBetweenSyncAttemptsAdjustmentFactor, maximumTimeBetweenSyncAttempts);\n                logger.debug(`Increasing timeBetweenSyncAttempts to ${adjustedTimeBetweenSyncAttempts}`);\n            } else {\n                // Drift between the current offset and the last offset is not within the allowed threshold. Decrease sync time\n                adjustedTimeBetweenSyncAttempts = Math.max(timeBetweenSyncAttempts / timeBetweenSyncAttemptsAdjustmentFactor, minimumTimeBetweenSyncAttempts);\n                logger.debug(`Decreasing timeBetweenSyncAttempts to ${adjustedTimeBetweenSyncAttempts}`);\n            }\n\n            internalTimeBetweenSyncAttempts = adjustedTimeBetweenSyncAttempts;\n        } catch (e) {\n\n        }\n    }\n\n    /**\n     * Callback after all background syncs have been completed.\n     * @private\n     */\n    function _completeBackgroundTimeSyncSequence() {\n        if (!backgroundSyncTimeOffsets || backgroundSyncTimeOffsets.length === 0) {\n            return;\n        }\n\n        const averageOffset = backgroundSyncTimeOffsets.reduce((acc, curr) => {\n            return acc + curr;\n        }, 0) / backgroundSyncTimeOffsets.length;\n\n        if (!_isOffsetDriftWithinThreshold(averageOffset)) {\n            logger.debug(`Completed background UTC sync. Setting client - server offset to ${averageOffset}`);\n            lastOffset = averageOffset;\n            eventBus.trigger(Events.UPDATE_TIME_SYNC_OFFSET, {\n                offset: lastOffset\n            });\n        } else {\n            logger.debug(`Completed background UTC sync. Offset is within allowed threshold and is not adjusted.`);\n        }\n\n        isBackgroundSynchronizing = false;\n        timeOfLastBackgroundSync = Date.now();\n    }\n\n    function _isOffsetDriftWithinThreshold(offset) {\n        try {\n            if (isNaN(lastOffset)) {\n                return true;\n            }\n\n            const maxAllowedDrift = settings.get().streaming.utcSynchronization.maximumAllowedDrift && !isNaN(settings.get().streaming.utcSynchronization.maximumAllowedDrift) ? settings.get().streaming.utcSynchronization.maximumAllowedDrift : DEFAULT_MAXIMUM_ALLOWED_DRIFT;\n            const lowerBound = lastOffset - maxAllowedDrift;\n            const upperBound = lastOffset + maxAllowedDrift;\n\n            return offset >= lowerBound && offset <= upperBound;\n        } catch (e) {\n            return true;\n        }\n    }\n\n    function reset() {\n        _resetInitialSettings();\n\n        eventBus.off(Events.ATTEMPT_BACKGROUND_SYNC, _onAttemptBackgroundSync, instance);\n    }\n\n    instance = {\n        initialize,\n        attemptSync,\n        setConfig,\n        reset\n    };\n\n    setup();\n\n    return instance;\n}\n\nTimeSyncController.__dashjs_factory_name = 'TimeSyncController';\nconst factory = FactoryMaker.getSingletonFactory(TimeSyncController);\nfactory.HTTP_TIMEOUT_MS = HTTP_TIMEOUT_MS;\nFactoryMaker.updateSingletonFactory(TimeSyncController.__dashjs_factory_name, factory);\nexport default factory;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport FactoryMaker from '../../core/FactoryMaker.js';\nimport Debug from '../../core/Debug.js';\nimport EventBus from '../../core/EventBus.js';\nimport MediaPlayerEvents from '../MediaPlayerEvents.js';\n\nfunction MediaSourceController() {\n\n    let instance,\n        mediaSource,\n        settings,\n        mediaSourceType,\n        logger;\n\n    const context = this.context;\n    const eventBus = EventBus(context).getInstance();\n\n    function setup() {\n        logger = Debug(context).getInstance().getLogger(instance);\n    }\n\n    function createMediaSource() {\n\n        let hasWebKit = ('WebKitMediaSource' in window);\n        let hasMediaSource = ('MediaSource' in window);\n        let hasManagedMediaSource = ('ManagedMediaSource' in window);\n\n        if (hasManagedMediaSource) {\n            mediaSource = new ManagedMediaSource();\n            mediaSourceType = 'managedMediaSource';\n            logger.info(`Created ManagedMediaSource`)\n        } else if (hasMediaSource) {\n            mediaSource = new MediaSource();\n            mediaSourceType = 'mediaSource';\n            logger.info(`Created MediaSource`)\n        } else if (hasWebKit) {\n            mediaSource = new WebKitMediaSource();\n            logger.info(`Created WebkitMediaSource`)\n        }\n\n        return mediaSource;\n    }\n\n    function attachMediaSource(videoModel) {\n\n        let objectURL = window.URL.createObjectURL(mediaSource);\n\n        videoModel.setSource(objectURL);\n\n        if (mediaSourceType === 'managedMediaSource') {\n            videoModel.setDisableRemotePlayback(true);\n            mediaSource.addEventListener('startstreaming', () => {\n                eventBus.trigger(MediaPlayerEvents.MANAGED_MEDIA_SOURCE_START_STREAMING)\n            })\n            mediaSource.addEventListener('endstreaming', () => {\n                eventBus.trigger(MediaPlayerEvents.MANAGED_MEDIA_SOURCE_END_STREAMING)\n            })\n        }\n\n        return objectURL;\n    }\n\n    function detachMediaSource(videoModel) {\n        videoModel.setSource(null);\n    }\n\n    function setDuration(value) {\n        if (!mediaSource || mediaSource.readyState !== 'open') {\n            return;\n        }\n        if (value === null && isNaN(value)) {\n            return;\n        }\n        if (mediaSource.duration === value) {\n            return;\n        }\n\n        if (value === Infinity && !settings.get().streaming.buffer.mediaSourceDurationInfinity) {\n            value = Math.pow(2, 32);\n        }\n\n        if (!isBufferUpdating(mediaSource)) {\n            logger.info('Set MediaSource duration:' + value);\n            mediaSource.duration = value;\n        } else {\n            setTimeout(setDuration.bind(null, value), 50);\n        }\n    }\n\n    function setSeekable(start, end) {\n        if (mediaSource && typeof mediaSource.setLiveSeekableRange === 'function' && typeof mediaSource.clearLiveSeekableRange === 'function' &&\n            mediaSource.readyState === 'open' && start >= 0 && start < end) {\n            mediaSource.clearLiveSeekableRange();\n            mediaSource.setLiveSeekableRange(start, end);\n        }\n    }\n\n    function signalEndOfStream(source) {\n        if (!source || source.readyState !== 'open') {\n            return;\n        }\n\n        let buffers = source.sourceBuffers;\n\n        for (let i = 0; i < buffers.length; i++) {\n            if (buffers[i].updating) {\n                return;\n            }\n            if (buffers[i].buffered.length === 0) {\n                return;\n            }\n        }\n        logger.info('call to mediaSource endOfStream');\n        source.endOfStream();\n    }\n\n    function isBufferUpdating(source) {\n        let buffers = source.sourceBuffers;\n        for (let i = 0; i < buffers.length; i++) {\n            if (buffers[i].updating) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    /**\n     * Set the config of the MediaSourceController\n     * @param {object} config\n     */\n    function setConfig(config) {\n        if (!config) {\n            return;\n        }\n        if (config.settings) {\n            settings = config.settings;\n        }\n    }\n\n    instance = {\n        attachMediaSource,\n        createMediaSource,\n        detachMediaSource,\n        setConfig,\n        setDuration,\n        setSeekable,\n        signalEndOfStream,\n    };\n\n    setup();\n\n    return instance;\n}\n\nMediaSourceController.__dashjs_factory_name = 'MediaSourceController';\nexport default FactoryMaker.getSingletonFactory(MediaSourceController);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport FactoryMaker from '../../core/FactoryMaker.js';\nimport Debug from '../../core/Debug.js';\nimport EventBus from '../../core/EventBus.js';\nimport MediaPlayerEvents from '../../streaming/MediaPlayerEvents.js';\nimport XHRLoader from '../net/XHRLoader.js';\n\nfunction EventController() {\n\n    const MPD_RELOAD_SCHEME = 'urn:mpeg:dash:event:2012';\n    const MPD_RELOAD_VALUE = 1;\n\n    const MPD_CALLBACK_SCHEME = 'urn:mpeg:dash:event:callback:2015';\n    const MPD_CALLBACK_VALUE = 1;\n\n    const REMAINING_EVENTS_THRESHOLD = 300;\n\n    const EVENT_HANDLED_STATES = {\n        DISCARDED: 'discarded',\n        UPDATED: 'updated',\n        ADDED: 'added'\n    };\n\n    const context = this.context;\n    const eventBus = EventBus(context).getInstance();\n\n    let instance,\n        logger,\n        inlineEvents, // Holds all Inline Events not triggered yet\n        inbandEvents, // Holds all Inband Events not triggered yet\n        eventInterval, // variable holding the setInterval\n        lastEventTimerCall,\n        manifestUpdater,\n        playbackController,\n        settings,\n        eventHandlingInProgress,\n        isStarted;\n\n    /**\n     * Internal setup when class is instanced\n     */\n    function _setup() {\n        logger = Debug(context).getInstance().getLogger(instance);\n        _resetInitialSettings();\n    }\n\n    /**\n     * Checks if the provded configuration is valid\n     */\n    function checkConfig() {\n        if (!manifestUpdater || !playbackController) {\n            throw new Error('setConfig function has to be called previously');\n        }\n    }\n\n    /**\n     * Reset to initial settings\n     */\n    function _resetInitialSettings() {\n        isStarted = false;\n        inlineEvents = {}; // Format inlineEvents[periodID][schemeIdUri]\n        inbandEvents = {}; // Format inbandEvents[periodID][schemeIdUri]\n        eventInterval = null;\n        eventHandlingInProgress = false;\n        lastEventTimerCall = Date.now() / 1000;\n    }\n\n    /**\n     * Stops the EventController by clearing the event interval\n     */\n    function _stop() {\n        try {\n            if (eventInterval !== null && isStarted) {\n                clearInterval(eventInterval);\n                eventInterval = null;\n                isStarted = false;\n                _onStopEventController();\n            }\n        } catch (e) {\n            throw e;\n        }\n    }\n\n    /**\n     * Starts the interval function of the EventController\n     */\n    function start() {\n        try {\n            checkConfig();\n            logger.debug('Start Event Controller');\n            const refreshDelay = settings.get().streaming.events.eventControllerRefreshDelay;\n            if (!isStarted && !isNaN(refreshDelay)) {\n                isStarted = true;\n                eventInterval = setInterval(_onEventTimer, refreshDelay);\n            }\n        } catch (e) {\n            throw e;\n        }\n    }\n\n    /**\n     * Iterate through the eventList and trigger the events\n     */\n    function _onEventTimer() {\n        try {\n            if (!eventHandlingInProgress) {\n                eventHandlingInProgress = true;\n                const currentVideoTime = playbackController.getTime();\n                let presentationTimeThreshold = (currentVideoTime - lastEventTimerCall);\n\n                // For dynamic streams lastEventTimeCall will be large in the first iteration. Avoid firing all events at once.\n                presentationTimeThreshold = lastEventTimerCall > 0 ? Math.max(0, presentationTimeThreshold) : 0;\n\n                _triggerEvents(inbandEvents, presentationTimeThreshold, currentVideoTime);\n                _triggerEvents(inlineEvents, presentationTimeThreshold, currentVideoTime);\n                _removeOutdatedEventObjects(inbandEvents);\n                _removeOutdatedEventObjects(inlineEvents);\n\n                lastEventTimerCall = currentVideoTime;\n                eventHandlingInProgress = false;\n            }\n        } catch (e) {\n            eventHandlingInProgress = false;\n            logger.error(e);\n        }\n    }\n\n    /**\n     * Iterate over a list of events and trigger the ones for which the presentation time is within the current timing interval\n     * @param {object} events\n     * @param {number} presentationTimeThreshold\n     * @param {number} currentVideoTime\n     * @private\n     */\n    function _triggerEvents(events, presentationTimeThreshold, currentVideoTime) {\n        try {\n            const callback = function (event) {\n                if (event !== undefined) {\n                    const duration = !isNaN(event.duration) ? event.duration : 0;\n                    // The event is either about to start or has already been started and we are within its duration\n                    if ((event.calculatedPresentationTime <= currentVideoTime && event.calculatedPresentationTime + presentationTimeThreshold + duration >= currentVideoTime)) {\n                        _startEvent(event, MediaPlayerEvents.EVENT_MODE_ON_START);\n                    } else if (_eventHasExpired(currentVideoTime, duration + presentationTimeThreshold, event.calculatedPresentationTime) || _eventIsInvalid(event)) {\n                        logger.debug(`Removing event ${event.id} from period ${event.eventStream.period.id} as it is expired or invalid`);\n                        _removeEvent(events, event);\n                    }\n                }\n            };\n\n            _iterateAndTriggerCallback(events, callback);\n        } catch (e) {\n            logger.error(e);\n        }\n    }\n\n    /**\n     * Iterates over the entries of the events object and deletes the entries for which no events are present\n     * @param {object} events\n     * @private\n     */\n    function _removeOutdatedEventObjects(events) {\n        try {\n            for (const key in events) {\n                if (events.hasOwnProperty(key)) {\n                    if (Object.keys(events[key]).length === 0) {\n                        delete events[key];\n                    }\n                }\n            }\n        } catch (e) {\n            logger.error(e);\n        }\n    }\n\n    /**\n     * Add MPD events to the list of events.\n     * Events that are not in the MPD anymore but not triggered yet will still be deleted.\n     * Existing events might get updated.\n     * @param {Array.<Object>} values\n     * @param {string} periodId\n     */\n    function addInlineEvents(values, periodId) {\n        try {\n            checkConfig();\n\n            if (!inlineEvents[periodId]) {\n                inlineEvents[periodId] = {};\n            }\n\n            if (values) {\n                for (let i = 0; i < values.length; i++) {\n                    let event = values[i];\n                    const currentTime = playbackController.getTime();\n                    const duration = !isNaN(event.duration) ? event.duration : 0;\n                    if (!_eventHasExpired(currentTime, duration, event.calculatedPresentationTime)) {\n                        let result = _addOrUpdateEvent(event, inlineEvents[periodId], true);\n\n                        if (result === EVENT_HANDLED_STATES.ADDED) {\n                            logger.debug(`Added inline event with id ${event.id} from period ${periodId}`);\n                            // If we see the event for the first time we trigger it in onReceive mode\n                            _startEvent(event, MediaPlayerEvents.EVENT_MODE_ON_RECEIVE);\n                        } else if (result === EVENT_HANDLED_STATES.UPDATED) {\n                            logger.debug(`Updated inline event with id ${event.id} from period ${periodId}`);\n                        }\n                    }\n                }\n            }\n        } catch (e) {\n            throw e;\n        }\n    }\n\n    /**\n     * Add EMSG events to the list of events\n     * Messages with the same id within the scope of the same scheme_id_uri and value pair are equivalent , i.e. processing of any one event message box with the same id is sufficient.\n     * @param {Array.<Object>} values\n     * @param {string} periodId\n     */\n    function addInbandEvents(values, periodId) {\n        try {\n            checkConfig();\n\n            if (!inbandEvents[periodId]) {\n                inbandEvents[periodId] = {};\n            }\n\n            for (let i = 0; i < values.length; i++) {\n                let event = values[i];\n                const currentTime = playbackController.getTime();\n                const duration = !isNaN(event.duration) ? event.duration : 0;\n                if (!_eventHasExpired(currentTime, duration, event.calculatedPresentationTime)) {\n                    let result = _addOrUpdateEvent(event, inbandEvents[periodId], false);\n\n                    if (result === EVENT_HANDLED_STATES.ADDED) {\n                        if (event.eventStream.schemeIdUri === MPD_RELOAD_SCHEME) {\n                            _handleManifestReloadEvent(event);\n                        }\n                        logger.debug(`Added inband event with id ${event.id} from period ${periodId}`);\n                        _startEvent(event, MediaPlayerEvents.EVENT_MODE_ON_RECEIVE);\n                    } else {\n                        logger.debug(`Inband event with scheme_id_uri ${event.eventStream.schemeIdUri}, value ${event.eventStream.value}, period id ${periodId} and event id ${event.id} was ignored because it has been added before.`);\n                    }\n                }\n            }\n            _onEventTimer();\n        } catch (e) {\n            throw e;\n        }\n    }\n\n    /**\n     * Adds or updates an event to/in the list of events\n     * @param {object} event\n     * @param {object} events\n     * @param {boolean} shouldOverwriteExistingEvents\n     * @return {string}\n     * @private\n     */\n    function _addOrUpdateEvent(event, events, shouldOverwriteExistingEvents = false) {\n        const schemeIdUri = event.eventStream.schemeIdUri;\n        const value = event.eventStream.value;\n        const id = event.id;\n        let eventState = EVENT_HANDLED_STATES.DISCARDED;\n\n        if (!events[schemeIdUri]) {\n            events[schemeIdUri] = [];\n        }\n\n        const indexOfExistingEvent = events[schemeIdUri].findIndex((e) => {\n            return ((!value || (e.eventStream.value && e.eventStream.value === value)) && (e.id === id));\n        });\n\n        // New event, we add it to our list of events\n        if (indexOfExistingEvent === -1) {\n            events[schemeIdUri].push(event);\n            event.triggeredReceivedEvent = false;\n            event.triggeredStartEvent = false;\n            eventState = EVENT_HANDLED_STATES.ADDED;\n        }\n\n        // We have a similar event for this period with the same schemeIdUri, value and id. Overwrite it or ignore it\n        else if (shouldOverwriteExistingEvents) {\n            const oldEvent = events[schemeIdUri][indexOfExistingEvent];\n            event.triggeredReceivedEvent = oldEvent.triggeredReceivedEvent;\n            event.triggeredStartEvent = oldEvent.triggeredStartEvent;\n            events[schemeIdUri][indexOfExistingEvent] = event;\n            eventState = EVENT_HANDLED_STATES.UPDATED;\n        }\n\n        return eventState;\n    }\n\n    /**\n     * Triggers an MPD reload\n     * @param {object} event\n     * @private\n     */\n    function _handleManifestReloadEvent(event) {\n        try {\n            if (event.eventStream.value == MPD_RELOAD_VALUE) {\n                const validUntil = event.calculatedPresentationTime;\n                let newDuration;\n                if (event.calculatedPresentationTime == 0xFFFFFFFF) {//0xFF... means remaining duration unknown\n                    newDuration = NaN;\n                } else {\n                    newDuration = event.calculatedPresentationTime + event.duration;\n                }\n                //logger.info('Manifest validity changed: Valid until: ' + validUntil + '; remaining duration: ' + newDuration);\n                eventBus.trigger(MediaPlayerEvents.MANIFEST_VALIDITY_CHANGED, {\n                    id: event.id,\n                    validUntil: validUntil,\n                    newDuration: newDuration,\n                    newManifestValidAfter: NaN //event.message_data - this is an arraybuffer with a timestring in it, but not used yet\n                }, {\n                    mode: MediaPlayerEvents.EVENT_MODE_ON_START\n                });\n            }\n        } catch (e) {\n            logger.error(e);\n        }\n    }\n\n    /**\n     * When the EventController is stopped this callback is triggered. Starts the remaining events.\n     * @private\n     */\n    function _onStopEventController() {\n        try {\n            // EventController might be stopped before the period is over. Before we stop the event controller we check for events that needs to be triggered at the period boundary.\n            _triggerRemainingEvents(inbandEvents);\n            _triggerRemainingEvents(inlineEvents);\n        } catch (e) {\n            logger.error(e);\n        }\n    }\n\n    /**\n     * Triggers the remaining events after the EventController has been stopped\n     * @param {object} events\n     * @private\n     */\n    function _triggerRemainingEvents(events) {\n        try {\n            const currentTime = playbackController.getTime();\n            const callback = function (event) {\n                const periodDuration = event.eventStream && event.eventStream.period && !isNaN(event.eventStream.period.duration) ? event.eventStream.period.duration : NaN;\n                const periodStart = event.eventStream && event.eventStream.period && !isNaN(event.eventStream.period.start) ? event.eventStream.period.start : NaN;\n\n                if (isNaN(periodDuration) || isNaN(periodStart)) {\n                    return;\n                }\n\n                const calculatedPresentationTimeInSeconds = event.calculatedPresentationTime;\n\n                if (Math.abs(calculatedPresentationTimeInSeconds - currentTime) < REMAINING_EVENTS_THRESHOLD) {\n                    _startEvent(event, MediaPlayerEvents.EVENT_MODE_ON_START);\n                }\n\n            };\n\n            _iterateAndTriggerCallback(events, callback);\n\n        } catch (e) {\n            logger.error(e);\n        }\n    }\n\n    /**\n     * Iterates over the inline/inband event object and triggers a callback for each event\n     * @param {object} events\n     * @param {function} callback\n     * @private\n     */\n    function _iterateAndTriggerCallback(events, callback) {\n        try {\n            if (events) {\n                const periodIds = Object.keys(events);\n                for (let i = 0; i < periodIds.length; i++) {\n                    const currentPeriod = events[periodIds[i]];\n                    const schemeIdUris = Object.keys(currentPeriod);\n                    for (let j = 0; j < schemeIdUris.length; j++) {\n                        const schemeIdEvents = currentPeriod[schemeIdUris[j]];\n                        schemeIdEvents.forEach((event) => {\n                            if (event !== undefined) {\n                                callback(event);\n                            }\n                        });\n                    }\n                }\n            }\n        } catch (e) {\n            logger.error(e);\n        }\n    }\n\n    /**\n     * Checks if an event is expired. For instance if the presentationTime + the duration of an event are smaller than the current video time.\n     * @param {number} currentVideoTime\n     * @param {number} threshold\n     * @param {number} calculatedPresentationTimeInSeconds\n     * @return {boolean}\n     * @private\n     */\n    function _eventHasExpired(currentVideoTime, threshold, calculatedPresentationTimeInSeconds) {\n        try {\n            return currentVideoTime - threshold > calculatedPresentationTimeInSeconds;\n        } catch (e) {\n            logger.error(e);\n            return false;\n        }\n    }\n\n    /**\n     * Checks if an event is invalid. This is the case if the end time of the parent period is smaller than the presentation time of the event.\n     * @param {object} event\n     * @return {boolean}\n     * @private\n     */\n    function _eventIsInvalid(event) {\n        try {\n            const periodEndTime = event.eventStream.period.start + event.eventStream.period.duration;\n\n            return event.calculatedPresentationTime > periodEndTime;\n        } catch (e) {\n            logger.error(e);\n            return false;\n        }\n    }\n\n    /**\n     * Starts an event. Depending on the schemeIdUri we distinguish between\n     * - MPD Reload events\n     * - MPD Callback events\n     * - Events to be dispatched to the application\n     * @param {object} event\n     * @param {String} mode\n     * @private\n     */\n    function _startEvent(event, mode) {\n        try {\n            const currentVideoTime = playbackController.getTime();\n            const eventId = event.id;\n\n            if (mode === MediaPlayerEvents.EVENT_MODE_ON_RECEIVE && !event.triggeredReceivedEvent) {\n                logger.debug(`Received event ${eventId}`);\n                event.triggeredReceivedEvent = true;\n                eventBus.trigger(event.eventStream.schemeIdUri, { event: JSON.parse(JSON.stringify(event)) }, { mode });\n                return;\n            }\n\n            if (!event.triggeredStartEvent) {\n                if (event.eventStream.schemeIdUri === MPD_RELOAD_SCHEME && event.eventStream.value == MPD_RELOAD_VALUE) {\n                    //If both are set to zero, it indicates the media is over at this point. Don't reload the manifest.\n                    if (event.duration !== 0 || event.presentationTimeDelta !== 0) {\n                        logger.debug(`Starting manifest refresh event ${eventId} at ${currentVideoTime}`);\n                        _refreshManifest();\n                    }\n                } else if (event.eventStream.schemeIdUri === MPD_CALLBACK_SCHEME && event.eventStream.value == MPD_CALLBACK_VALUE) {\n                    logger.debug(`Starting callback event ${eventId} at ${currentVideoTime}`);\n                    _sendCallbackRequest(event.messageData);\n                } else {\n                    logger.debug(`Starting event ${eventId} from period ${event.eventStream.period.id} at ${currentVideoTime}`);\n                    eventBus.trigger(event.eventStream.schemeIdUri, { event: JSON.parse(JSON.stringify(event)) }, { mode });\n                    if (settings.get().streaming.events.deleteEventMessageDataAfterEventStarted) {\n                        delete event.messageData;\n                        delete event.parsedMessageData;\n                    }\n                }\n                event.triggeredStartEvent = true;\n            }\n        } catch (e) {\n            logger.error(e);\n        }\n    }\n\n    /**\n     * Removes an event from the list. If this is the last event of type \"schemeIdUri\"  the corresponding schemeIdUri Object in the list of events is deleted.\n     * @param {object} events\n     * @param {object} event\n     * @private\n     */\n    function _removeEvent(events, event) {\n        try {\n            const schemeIdUri = event.eventStream.schemeIdUri;\n            const periodId = event.eventStream.period.id;\n            const value = event.eventStream.value;\n            const id = event.id;\n\n            events[periodId][schemeIdUri] = events[periodId][schemeIdUri].filter((e) => {\n                return (value && e.eventStream.value && e.eventStream.value !== value) || e.id !== id;\n            });\n\n            if (events[periodId][schemeIdUri].length === 0) {\n                delete events[periodId][schemeIdUri];\n            }\n        } catch (e) {\n            logger.error(e);\n        }\n    }\n\n    /**\n     * Refresh the manifest\n     * @private\n     */\n    function _refreshManifest() {\n        try {\n            checkConfig();\n            manifestUpdater.refreshManifest();\n        } catch (e) {\n            logger.error(e);\n        }\n    }\n\n    /**\n     * Send a callback request\n     * @param {String} url\n     * @private\n     */\n    function _sendCallbackRequest(url) {\n        try {\n            let loader = XHRLoader(context).create({});\n            loader.load({\n                method: 'get',\n                url: url,\n                request: {\n                    responseType: 'arraybuffer'\n                }\n            });\n        } catch (e) {\n            logger.error(e);\n        }\n    }\n\n    /**\n     * Set the config of the EventController\n     * @param {object} config\n     */\n    function setConfig(config) {\n        try {\n            if (!config) {\n                return;\n            }\n            if (config.manifestUpdater) {\n                manifestUpdater = config.manifestUpdater;\n            }\n            if (config.playbackController) {\n                playbackController = config.playbackController;\n            }\n            if (config.settings) {\n                settings = config.settings;\n            }\n\n        } catch (e) {\n            throw e;\n        }\n    }\n\n    /**\n     * Returns all inline events that have not been triggered yet\n     * @return {object}\n     */\n    function getInlineEvents() {\n        return inlineEvents;\n    }\n\n    /**\n     * Returns all inband events that have not been triggered yet\n     * @return {object}\n     */\n    function getInbandEvents() {\n        return inbandEvents;\n    }\n\n    /**\n     * Stop the EventController and reset all initial settings\n     */\n    function reset() {\n        _stop();\n        _resetInitialSettings();\n    }\n\n    instance = {\n        addInlineEvents,\n        addInbandEvents,\n        getInbandEvents,\n        getInlineEvents,\n        start,\n        setConfig,\n        reset\n    };\n\n    _setup();\n\n    return instance;\n}\n\nEventController.__dashjs_factory_name = 'EventController';\nexport default FactoryMaker.getSingletonFactory(EventController);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nexport default {\n    LEVELS: {\n        SUGGESTION: 'Suggestion',\n        WARNING: 'Warning',\n        ERROR: 'Error'\n    },\n    EVENTS: {\n        NO_UTC_TIMING_ELEMENT: {\n            key: 'NO_UTC_TIMING_ELEMENT',\n            message: 'No UTCTiming element is present in the manifest. You may experience playback failures. For a detailed validation use https://conformance.dashif.org/'\n        },\n        NON_COMPLIANT_SMPTE_IMAGE_ATTRIBUTE: {\n            key: 'NON_COMPLIANT_SMPTE_IMAGE_ATTRIBUTE',\n            message: 'SMPTE 2052-1:2013 defines the attribute name as \"imageType\" and does not define \"imagetype\"'\n        },\n        INVALID_DVR_WINDOW: {\n            key: 'INVALID_DVR_WINDOW',\n            message: 'No valid segment found when applying a specification compliant DVR window calculation. Using SegmentTimeline entries as a fallback.'\n        }\n    }\n};\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport Constants from '../constants/Constants.js';\nimport MetricsConstants from '../constants/MetricsConstants.js';\nimport Stream from '../Stream.js';\nimport ManifestUpdater from '../ManifestUpdater.js';\nimport EventBus from '../../core/EventBus.js';\nimport Events from '../../core/events/Events.js';\nimport FactoryMaker from '../../core/FactoryMaker.js';\nimport {PlayList, PlayListTrace} from '../vo/metrics/PlayList.js';\nimport Debug from '../../core/Debug.js';\nimport InitCache from '../utils/InitCache.js';\nimport MediaPlayerEvents from '../MediaPlayerEvents.js';\nimport TimeSyncController from './TimeSyncController.js';\nimport MediaSourceController from './MediaSourceController.js';\nimport DashJSError from '../vo/DashJSError.js';\nimport Errors from '../../core/errors/Errors.js';\nimport EventController from './EventController.js';\nimport ConformanceViolationConstants from '../constants/ConformanceViolationConstants.js';\nimport ExtUrlQueryInfoController from './ExtUrlQueryInfoController.js';\nimport ProtectionEvents from '../protection/ProtectionEvents.js';\nimport ProtectionErrors from '../protection/errors/ProtectionErrors.js';\n\nconst PLAYBACK_ENDED_TIMER_INTERVAL = 200;\nconst DVR_WAITING_OFFSET = 2;\n\nfunction StreamController() {\n\n    const context = this.context;\n    const eventBus = EventBus(context).getInstance();\n\n    let instance, logger, capabilities, capabilitiesFilter, manifestUpdater, manifestLoader, manifestModel, adapter,\n        dashMetrics, mediaSourceController, timeSyncController, contentSteeringController, baseURLController,\n        segmentBaseController, uriFragmentModel, abrController, throughputController, mediaController, eventController,\n        initCache, errHandler, timelineConverter, streams, activeStream, protectionController, textController,\n        protectionData, extUrlQueryInfoController,\n        autoPlay, isStreamSwitchingInProgress, hasMediaError, hasInitialisationError, mediaSource, videoModel,\n        playbackController, serviceDescriptionController, mediaPlayerModel, customParametersModel, isPaused,\n        initialPlayback, initialSteeringRequest, playbackEndedTimerInterval, bufferSinks, preloadingStreams, settings,\n        firstLicenseIsFetched, waitForPlaybackStartTimeout, providedStartTime, errorInformation;\n\n    function setup() {\n        logger = Debug(context).getInstance().getLogger(instance);\n        timeSyncController = TimeSyncController(context).getInstance();\n        mediaSourceController = MediaSourceController(context).getInstance();\n        initCache = InitCache(context).getInstance();\n\n        resetInitialSettings();\n    }\n\n    function initialize(autoPl, protData) {\n        _checkConfig();\n\n        autoPlay = autoPl;\n        protectionData = protData;\n        timelineConverter.initialize();\n\n        manifestUpdater = ManifestUpdater(context).create();\n        manifestUpdater.setConfig({\n            manifestModel,\n            adapter,\n            manifestLoader,\n            errHandler,\n            settings,\n            contentSteeringController\n        });\n        manifestUpdater.initialize();\n\n        eventController = EventController(context).getInstance();\n        eventController.setConfig({\n            manifestUpdater: manifestUpdater, playbackController: playbackController, settings\n        });\n        eventController.start();\n\n        extUrlQueryInfoController = ExtUrlQueryInfoController(context).getInstance();\n\n        timeSyncController.setConfig({\n            dashMetrics, baseURLController, errHandler, settings\n        });\n        timeSyncController.initialize();\n\n        mediaSourceController.setConfig({ settings });\n\n        if (protectionController) {\n            eventBus.trigger(Events.PROTECTION_CREATED, {\n                controller: protectionController\n            });\n            protectionController.setMediaElement(videoModel.getElement());\n            if (protectionData) {\n                protectionController.setProtectionData(protectionData);\n            }\n        }\n\n        registerEvents();\n    }\n\n    function registerEvents() {\n        eventBus.on(MediaPlayerEvents.PLAYBACK_TIME_UPDATED, _onPlaybackTimeUpdated, instance);\n        eventBus.on(MediaPlayerEvents.PLAYBACK_SEEKING, _onPlaybackSeeking, instance);\n        eventBus.on(MediaPlayerEvents.PLAYBACK_ERROR, _onPlaybackError, instance);\n        eventBus.on(MediaPlayerEvents.PLAYBACK_STARTED, _onPlaybackStarted, instance);\n        eventBus.on(MediaPlayerEvents.PLAYBACK_PAUSED, _onPlaybackPaused, instance);\n        eventBus.on(MediaPlayerEvents.PLAYBACK_ENDED, _onPlaybackEnded, instance);\n        eventBus.on(MediaPlayerEvents.METRIC_ADDED, _onMetricAdded, instance);\n        eventBus.on(MediaPlayerEvents.MANIFEST_VALIDITY_CHANGED, _onManifestValidityChanged, instance);\n        eventBus.on(MediaPlayerEvents.BUFFER_LEVEL_UPDATED, _onBufferLevelUpdated, instance);\n        eventBus.on(MediaPlayerEvents.QUALITY_CHANGE_REQUESTED, _onQualityChanged, instance);\n\n        if (Events.KEY_SESSION_UPDATED) {\n            eventBus.on(Events.KEY_SESSION_UPDATED, _onKeySessionUpdated, instance);\n        }\n\n        eventBus.on(Events.MANIFEST_UPDATED, _onManifestUpdated, instance);\n        eventBus.on(Events.STREAM_BUFFERING_COMPLETED, _onStreamBufferingCompleted, instance);\n        eventBus.on(Events.TIME_SYNCHRONIZATION_COMPLETED, _onTimeSyncCompleted, instance);\n        eventBus.on(Events.CURRENT_TRACK_CHANGED, _onCurrentTrackChanged, instance);\n        eventBus.on(Events.SETTING_UPDATED_LIVE_DELAY, _onLiveDelaySettingUpdated, instance);\n        eventBus.on(Events.SETTING_UPDATED_LIVE_DELAY_FRAGMENT_COUNT, _onLiveDelaySettingUpdated, instance);\n\n        eventBus.on(ProtectionEvents.INTERNAL_KEY_STATUSES_CHANGED, _onInternalKeyStatusesChanged, instance);\n    }\n\n    function unRegisterEvents() {\n        eventBus.off(MediaPlayerEvents.PLAYBACK_TIME_UPDATED, _onPlaybackTimeUpdated, instance);\n        eventBus.off(MediaPlayerEvents.PLAYBACK_SEEKING, _onPlaybackSeeking, instance);\n        eventBus.off(MediaPlayerEvents.PLAYBACK_ERROR, _onPlaybackError, instance);\n        eventBus.off(MediaPlayerEvents.PLAYBACK_STARTED, _onPlaybackStarted, instance);\n        eventBus.off(MediaPlayerEvents.PLAYBACK_PAUSED, _onPlaybackPaused, instance);\n        eventBus.off(MediaPlayerEvents.PLAYBACK_ENDED, _onPlaybackEnded, instance);\n        eventBus.off(MediaPlayerEvents.METRIC_ADDED, _onMetricAdded, instance);\n        eventBus.off(MediaPlayerEvents.MANIFEST_VALIDITY_CHANGED, _onManifestValidityChanged, instance);\n        eventBus.off(MediaPlayerEvents.BUFFER_LEVEL_UPDATED, _onBufferLevelUpdated, instance);\n        eventBus.off(MediaPlayerEvents.QUALITY_CHANGE_REQUESTED, _onQualityChanged, instance);\n\n        if (Events.KEY_SESSION_UPDATED) {\n            eventBus.off(Events.KEY_SESSION_UPDATED, _onKeySessionUpdated, instance);\n        }\n\n        eventBus.off(Events.MANIFEST_UPDATED, _onManifestUpdated, instance);\n        eventBus.off(Events.STREAM_BUFFERING_COMPLETED, _onStreamBufferingCompleted, instance);\n        eventBus.off(Events.TIME_SYNCHRONIZATION_COMPLETED, _onTimeSyncCompleted, instance);\n        eventBus.off(Events.CURRENT_TRACK_CHANGED, _onCurrentTrackChanged, instance);\n        eventBus.off(Events.SETTING_UPDATED_LIVE_DELAY, _onLiveDelaySettingUpdated, instance);\n        eventBus.off(Events.SETTING_UPDATED_LIVE_DELAY_FRAGMENT_COUNT, _onLiveDelaySettingUpdated, instance);\n\n        eventBus.off(ProtectionEvents.INTERNAL_KEY_STATUSES_CHANGED, _onInternalKeyStatusesChanged, instance);\n    }\n\n    function _checkConfig() {\n        if (!manifestLoader || !manifestLoader.hasOwnProperty('load') || !timelineConverter || !timelineConverter.hasOwnProperty('initialize') || !timelineConverter.hasOwnProperty('reset') || !timelineConverter.hasOwnProperty('getClientTimeOffset') || !manifestModel || !errHandler || !dashMetrics || !playbackController) {\n            throw new Error(Constants.MISSING_CONFIG_ERROR);\n        }\n    }\n\n    function _checkInitialize() {\n        if (!manifestUpdater || !manifestUpdater.hasOwnProperty('setManifest')) {\n            throw new Error('initialize function has to be called previously');\n        }\n    }\n\n    /**\n     * Start the streaming session by loading the target manifest\n     * @param {string} url\n     * @param {number} startTime\n     */\n    function load(url, startTime = NaN) {\n        _checkConfig();\n        providedStartTime = startTime;\n        manifestLoader.load(url);\n    }\n\n    /**\n     * Start the streaming session by using the provided manifest object\n     * @param {object} manifest\n     * @param {number} startTime\n     */\n    function loadWithManifest(manifest, startTime = NaN) {\n        _checkInitialize();\n        providedStartTime = startTime;\n        manifestUpdater.setManifest(manifest);\n    }\n\n    /**\n     * When the UTC snychronization is completed we can compose the streams\n     * @private\n     */\n    function _onTimeSyncCompleted( /*e*/) {\n        _composePeriods();\n    }\n\n    /**\n     *\n     * @private\n     */\n    function _onKeySessionUpdated() {\n        firstLicenseIsFetched = true;\n    }\n\n    /**\n     * Setup the stream objects after the stream start and each MPD reload. This function is called after the UTC sync has been done (TIME_SYNCHRONIZATION_COMPLETED)\n     * @private\n     */\n    function _composePeriods() {\n        try {\n            const streamsInfo = adapter.getStreamsInfo();\n\n            if (!activeStream && streamsInfo.length === 0) {\n                throw new Error('There are no periods in the MPD');\n            }\n\n            if (activeStream && streamsInfo.length > 0) {\n                dashMetrics.updateManifestUpdateInfo({\n                    currentTime: playbackController.getTime(),\n                    buffered: videoModel.getBufferRange(),\n                    presentationStartTime: streamsInfo[0].start,\n                    clientTimeOffset: timelineConverter.getClientTimeOffset()\n                });\n            }\n\n            // Filter streams that are outdated and not included in the MPD anymore\n            if (streams.length > 0) {\n                _filterOutdatedStreams(streamsInfo);\n            }\n\n            const promises = [];\n            for (let i = 0, ln = streamsInfo.length; i < ln; i++) {\n                const streamInfo = streamsInfo[i];\n                promises.push(_initializeOrUpdateStream(streamInfo));\n                dashMetrics.addManifestUpdateStreamInfo(streamInfo);\n            }\n\n            Promise.all(promises)\n                .then(() => {\n                    return new Promise((resolve, reject) => {\n                        if (!activeStream) {\n                            _initializeForFirstStream(streamsInfo, resolve, reject);\n                        } else {\n                            resolve();\n                        }\n                    });\n                })\n                .then(() => {\n                    eventBus.trigger(Events.STREAMS_COMPOSED);\n                    // Additional periods might have been added after an MPD update. Check again if we can start prebuffering.\n                    _checkIfPrebufferingCanStart();\n                })\n                .catch((e) => {\n                    throw e;\n                })\n\n        } catch (e) {\n            errHandler.error(new DashJSError(Errors.MANIFEST_ERROR_ID_NOSTREAMS_CODE, e.message + ' nostreamscomposed', manifestModel.getValue()));\n            hasInitialisationError = true;\n            reset();\n        }\n    }\n\n    /**\n     * Called for each stream when composition is performed. Either a new instance of Stream is created or the existing one is updated.\n     * @param {object} streamInfo\n     * @private\n     */\n    function _initializeOrUpdateStream(streamInfo) {\n        let stream = getStreamById(streamInfo.id);\n\n        // If the Stream object does not exist we probably loaded the manifest the first time or it was\n        // introduced in the updated manifest, so we need to create a new Stream and perform all the initialization operations\n        if (!stream) {\n            stream = Stream(context).create({\n                manifestModel,\n                mediaPlayerModel,\n                dashMetrics,\n                manifestUpdater,\n                adapter,\n                timelineConverter,\n                capabilities,\n                capabilitiesFilter,\n                errHandler,\n                baseURLController,\n                segmentBaseController,\n                textController,\n                abrController,\n                playbackController,\n                throughputController,\n                eventController,\n                mediaController,\n                protectionController,\n                videoModel,\n                streamInfo,\n                settings\n            });\n            streams.push(stream);\n            stream.initialize();\n            return Promise.resolve();\n        } else {\n            return stream.updateData(streamInfo);\n        }\n    }\n\n    /**\n     * Initialize playback for the first period.\n     * @param {array} streamsInfo\n     * @private\n     */\n    function _initializeForFirstStream(streamsInfo, resolve, reject) {\n        try {\n\n            // Add the DVR window so we can calculate the right starting point\n            addDVRMetric();\n\n            // If the start is in the future we need to wait\n            const dvrRange = dashMetrics.getCurrentDVRInfo().range;\n            if (dvrRange.end < dvrRange.start) {\n                if (waitForPlaybackStartTimeout) {\n                    clearTimeout(waitForPlaybackStartTimeout);\n                }\n                const waitingTime = Math.min((((dvrRange.end - dvrRange.start) * -1) + DVR_WAITING_OFFSET) * 1000, 2147483647);\n                logger.debug(`Waiting for ${waitingTime} ms before playback can start`);\n                eventBus.trigger(Events.AST_IN_FUTURE, { delay: waitingTime });\n                waitForPlaybackStartTimeout = setTimeout(() => {\n                    _initializeForFirstStream(streamsInfo, resolve, reject);\n                }, waitingTime);\n                return;\n            }\n\n\n            // Calculate the producer reference time offsets if given\n            if (settings.get().streaming.applyProducerReferenceTime) {\n                serviceDescriptionController.calculateProducerReferenceTimeOffsets(streamsInfo);\n            }\n\n            // Apply Service description parameters.\n            const manifestInfo = streamsInfo[0].manifestInfo;\n            if (settings.get().streaming.applyServiceDescription) {\n                serviceDescriptionController.applyServiceDescription(manifestInfo);\n            }\n\n            // Compute and set the live delay\n            if (adapter.getIsDynamic()) {\n                const fragmentDuration = _getFragmentDurationForLiveDelayCalculation(streamsInfo, manifestInfo);\n                playbackController.computeAndSetLiveDelay(fragmentDuration, manifestInfo);\n            }\n\n            // Apply content steering\n            _applyContentSteeringBeforeStart()\n                .then(() => {\n                    const manifest = manifestModel.getValue();\n                    if (manifest) {\n                        baseURLController.update(manifest)\n                    }\n                    _calculateStartTimeAndSwitchStream()\n                    resolve();\n                })\n                .catch((e) => {\n                    logger.error(e);\n                    _calculateStartTimeAndSwitchStream();\n                    resolve();\n                })\n        } catch (e) {\n            reject(e);\n        }\n    }\n\n    function _applyContentSteeringBeforeStart() {\n        if (settings.get().streaming.applyContentSteering && contentSteeringController.shouldQueryBeforeStart()) {\n            return contentSteeringController.loadSteeringData();\n        }\n        return Promise.resolve();\n    }\n\n    function _calculateStartTimeAndSwitchStream() {\n        // Figure out the correct start time and the correct start period\n        const startTime = _getInitialStartTime();\n        let initialStream = getStreamForTime(startTime);\n        const startStream = initialStream !== null ? initialStream : streams[0];\n        eventBus.trigger(Events.INITIAL_STREAM_SWITCH, { startTime });\n        _switchStream(startStream, null, startTime);\n        _startPlaybackEndedTimerInterval();\n    }\n\n    /**\n     * Switch from the current stream (period) to the next stream (period).\n     * @param {object} stream\n     * @param {object} previousStream\n     * @param {number} seekTime\n     * @private\n     */\n    function _switchStream(stream, previousStream, seekTime) {\n        try {\n            if (isStreamSwitchingInProgress || !stream || (previousStream === stream && stream.getIsActive())) {\n                return;\n            }\n\n            isStreamSwitchingInProgress = true;\n            eventBus.trigger(Events.PERIOD_SWITCH_STARTED, {\n                fromStreamInfo: previousStream ? previousStream.getStreamInfo() : null,\n                toStreamInfo: stream.getStreamInfo()\n            });\n\n            let keepBuffers = false;\n            let representationsFromPreviousPeriod = [];\n            activeStream = stream;\n\n            if (previousStream) {\n                keepBuffers = _canSourceBuffersBeKept(stream, previousStream);\n                representationsFromPreviousPeriod = _getRepresentationsFromPreviousPeriod(previousStream);\n                previousStream.deactivate(keepBuffers);\n            }\n\n            // Determine seek time when switching to new period\n            // - seek at given seek time\n            // - or seek at period start if upcoming period is not prebuffered\n            seekTime = !isNaN(seekTime) ? seekTime : (!keepBuffers && previousStream ? stream.getStreamInfo().start : NaN);\n            logger.info(`Switch to stream ${stream.getId()}. Seektime is ${seekTime}, current playback time is ${playbackController.getTime()}. Seamless period switch is set to ${keepBuffers}`);\n\n            preloadingStreams = preloadingStreams.filter((s) => {\n                return s.getId() !== activeStream.getId();\n            });\n            playbackController.initialize(getActiveStreamInfo(), !!previousStream);\n\n            // If we have a video element we are not preloading into a virtual buffer\n            if (videoModel.getElement()) {\n                _openMediaSource({ seekTime, keepBuffers, streamActivated: false, representationsFromPreviousPeriod });\n            } else {\n                _activateStream({ seekTime, keepBuffers });\n            }\n        } catch (e) {\n            isStreamSwitchingInProgress = false;\n        }\n    }\n\n    /**\n     * Setup the Media Source. Open MSE and attach event listeners\n     * @private\n     * @param inputParameters\n     */\n    function _openMediaSource(inputParameters) {\n        let sourceUrl;\n\n        function _onMediaSourceOpen() {\n            // Manage situations in which a call to reset happens while MediaSource is being opened\n            if (!mediaSource || mediaSource.readyState !== 'open') {\n                return;\n            }\n\n            logger.debug('MediaSource is open!');\n            window.URL.revokeObjectURL(sourceUrl);\n            mediaSource.removeEventListener('sourceopen', _onMediaSourceOpen);\n            mediaSource.removeEventListener('webkitsourceopen', _onMediaSourceOpen);\n\n            _setMediaDuration();\n            const dvrInfo = dashMetrics.getCurrentDVRInfo();\n            mediaSourceController.setSeekable(dvrInfo.range.start, dvrInfo.range.end);\n            if (inputParameters.streamActivated) {\n                if (!isNaN(inputParameters.seekTime)) {\n                    playbackController.seek(inputParameters.seekTime, true, true);\n                }\n                // Set the media source for all StreamProcessors\n                activeStream.setMediaSource(mediaSource)\n                    .then(() => {\n                        // Start text processing now that we have a video element\n                        activeStream.initializeForTextWithMediaSource(mediaSource);\n                    })\n            } else {\n                _activateStream(inputParameters);\n            }\n        }\n\n        function _open() {\n            mediaSource.addEventListener('sourceopen', _onMediaSourceOpen, false);\n            mediaSource.addEventListener('webkitsourceopen', _onMediaSourceOpen, false);\n            sourceUrl = mediaSourceController.attachMediaSource(videoModel);\n            logger.debug('MediaSource attached to element.  Waiting on open...');\n        }\n\n        if (!mediaSource) {\n            mediaSource = mediaSourceController.createMediaSource();\n            _open();\n        } else {\n            if (inputParameters.keepBuffers) {\n                _activateStream(inputParameters);\n            } else {\n                mediaSourceController.detachMediaSource(videoModel);\n                _open();\n            }\n        }\n    }\n\n    /**\n     * Activates a new stream.\n     * @param {number} seekTime\n     * @param {boolean} keepBuffers\n     */\n    function _activateStream(inputParameters) {\n        const representationsFromPreviousPeriod = inputParameters.representationsFromPreviousPeriod || [];\n        activeStream.activate(mediaSource, inputParameters.keepBuffers ? bufferSinks : undefined, representationsFromPreviousPeriod)\n            .then((sinks) => {\n                if (sinks) {\n                    bufferSinks = sinks;\n                }\n\n                // Set the initial time for this stream in the StreamProcessor\n                if (!isNaN(inputParameters.seekTime)) {\n                    eventBus.trigger(Events.SEEK_TARGET, { time: inputParameters.seekTime }, { streamId: activeStream.getId() });\n                    playbackController.seek(inputParameters.seekTime, false, true);\n                    activeStream.startScheduleControllers();\n                }\n\n                isStreamSwitchingInProgress = false;\n                eventBus.trigger(Events.PERIOD_SWITCH_COMPLETED, { toStreamInfo: getActiveStreamInfo() });\n            });\n    }\n\n    function _getRepresentationsFromPreviousPeriod(previousStream) {\n        const previousStreamProcessors = previousStream ? previousStream.getStreamProcessors() : [];\n        return previousStreamProcessors.map((streamProcessor) => {\n            return streamProcessor.getRepresentation();\n        })\n    }\n\n    /**\n     * A playback seeking event was triggered. We need to disable the preloading streams and call the respective seeking handler.\n     * We distinguish between inner period seeks and outer period seeks\n     * @param {object} e\n     * @private\n     */\n    function _onPlaybackSeeking(e) {\n        const newTime = e.seekTime;\n        const seekToStream = getStreamForTime(newTime);\n\n        if (!seekToStream || seekToStream === activeStream) {\n            _cancelPreloading();\n            _handleInnerPeriodSeek(e);\n        } else if (seekToStream && seekToStream !== activeStream) {\n            _cancelPreloading(seekToStream);\n            _handleOuterPeriodSeek(e, seekToStream);\n        }\n\n        _createPlaylistMetrics(PlayList.SEEK_START_REASON);\n    }\n\n    /**\n     * Cancels the preloading of certain streams based on the position we are seeking to.\n     * @param {object} seekToStream\n     * @private\n     */\n    function _cancelPreloading(seekToStream = null) {\n        // Inner period seek\n        if (!seekToStream) {\n            _deactivateAllPreloadingStreams();\n        }\n\n        // Outer period seek: Deactivate everything for now\n        else {\n            _deactivateAllPreloadingStreams();\n        }\n\n    }\n\n    /**\n     * Deactivates all preloading streams\n     * @private\n     */\n    function _deactivateAllPreloadingStreams() {\n        if (preloadingStreams && preloadingStreams.length > 0) {\n            preloadingStreams.forEach((s) => {\n                s.deactivate(true);\n            });\n            preloadingStreams = [];\n        }\n    }\n\n    /**\n     * Handle an inner period seek. Prepare all StreamProcessors for the seek.\n     * @param {object} e\n     * @private\n     */\n    function _handleInnerPeriodSeek(e) {\n        const streamProcessors = activeStream.getStreamProcessors();\n\n        streamProcessors.forEach((sp) => {\n            return sp.prepareInnerPeriodPlaybackSeeking(e);\n        });\n\n        _flushPlaylistMetrics(PlayListTrace.USER_REQUEST_STOP_REASON);\n    }\n\n    /**\n     * Handle an outer period seek. Dispatch the corresponding event to be handled in the BufferControllers and the ScheduleControllers\n     * @param {object} e\n     * @param {object} seekToStream\n     * @private\n     */\n    function _handleOuterPeriodSeek(e, seekToStream) {\n        // Stop segment requests\n        const seekTime = e && !isNaN(e.seekTime) ? e.seekTime : NaN;\n        const streamProcessors = activeStream.getStreamProcessors();\n\n        const promises = streamProcessors.map((sp) => {\n            // Cancel everything in case the active stream is still buffering\n            return sp.prepareOuterPeriodPlaybackSeeking(e);\n        });\n\n        Promise.all(promises)\n            .then(() => {\n                _switchStream(seekToStream, activeStream, seekTime);\n            })\n            .catch((e) => {\n                errHandler.error(e);\n            });\n    }\n\n    /**\n     * A track change occured. We deactivate the preloading streams\n     * @param {object} e\n     * @private\n     */\n    function _onCurrentTrackChanged(e) {\n        // Track was changed in non-active stream. No need to do anything, this only happens when a stream starts preloading\n        if (e.newMediaInfo.streamInfo.id !== activeStream.getId()) {\n            return;\n        }\n\n        // If the track was changed in the active stream we need to stop preloading and remove the already prebuffered stuff. Since we do not support preloading specific handling of specific AdaptationSets yet.\n        _deactivateAllPreloadingStreams();\n\n        if (settings.get().streaming.buffer.resetSourceBuffersForTrackSwitch && e.oldMediaInfo && e.oldMediaInfo.codec !== e.newMediaInfo.codec) {\n            const seekTime = playbackController.getTime();\n            activeStream.deactivate(false);\n            _openMediaSource({ seekTime, keepBuffers: false, streamActivated: false });\n            return;\n        }\n\n        activeStream.prepareTrackChange(e);\n    }\n\n    /**\n     * If the source buffer can be reused we can potentially start buffering the next period\n     * @param {object} nextStream\n     * @param {object} previousStream\n     * @return {boolean}\n     * @private\n     */\n    function _canSourceBuffersBeKept(nextStream, previousStream) {\n        try {\n            // Seamless period switch allowed only if:\n            // - none of the periods uses contentProtection.\n            // - AND changeType method is implemented\n            return (settings.get().streaming.buffer.reuseExistingSourceBuffers\n                && (capabilities.isProtectionCompatible(previousStream.getStreamInfo(), nextStream.getStreamInfo()) || firstLicenseIsFetched)\n                && (capabilities.supportsChangeType() && settings.get().streaming.buffer.useChangeType));\n        } catch (e) {\n            return false;\n        }\n    }\n\n    /**\n     * Initiate the preloading of the next stream\n     * @param {object} nextStream\n     * @param {object} previousStream\n     * @private\n     */\n    function _onStreamCanLoadNext(nextStream, previousStream = null) {\n\n        if (mediaSource && !nextStream.getPreloaded()) {\n            let seamlessPeriodSwitch = _canSourceBuffersBeKept(nextStream, previousStream);\n\n            if (seamlessPeriodSwitch) {\n                const representationsFromPreviousPeriod = _getRepresentationsFromPreviousPeriod(previousStream);\n                nextStream.startPreloading(mediaSource, bufferSinks, representationsFromPreviousPeriod)\n                    .then(() => {\n                        preloadingStreams.push(nextStream);\n                    });\n            }\n        }\n    }\n\n    /**\n     * Returns the corresponding stream object for a specific presentation time.\n     * @param {number} time\n     * @return {null|object}\n     */\n    function getStreamForTime(time) {\n\n        if (isNaN(time)) {\n            return null;\n        }\n\n        const ln = streams.length;\n\n        for (let i = 0; i < ln; i++) {\n            const stream = streams[i];\n            const streamEnd = parseFloat((stream.getStartTime() + stream.getDuration()).toFixed(5));\n\n            if (time < streamEnd) {\n                return stream;\n            }\n        }\n\n        return null;\n    }\n\n    /**\n     * Add the DVR window to the metric list. We need the DVR window to restrict the seeking and calculate the right start time.\n     */\n    function addDVRMetric() {\n        try {\n            const isDynamic = adapter.getIsDynamic();\n            const streamsInfo = adapter.getStreamsInfo();\n            const manifestInfo = streamsInfo[0].manifestInfo;\n            const time = playbackController.getTime();\n            const range = timelineConverter.calcTimeShiftBufferWindow(streams, isDynamic);\n            const activeStreamProcessors = getActiveStreamProcessors();\n\n            if (typeof range.start === 'undefined' || typeof range.end === 'undefined') {\n                return;\n            }\n\n            if (!activeStreamProcessors || activeStreamProcessors.length === 0) {\n                dashMetrics.addDVRInfo(Constants.VIDEO, time, manifestInfo, range);\n            } else {\n                activeStreamProcessors.forEach((sp) => {\n                    dashMetrics.addDVRInfo(sp.getType(), time, manifestInfo, range);\n                });\n            }\n        } catch (e) {\n        }\n    }\n\n    /**\n     * The buffer level for a certain media type has been updated. If this is the initial playback and we want to autoplay the content we check if we can start playback now.\n     * For livestreams we might have a drift of the target live delay compared to the current live delay because reaching the initial buffer level took time.\n     * @param {object} e\n     * @private\n     */\n    function _onBufferLevelUpdated(e) {\n\n        // check if this is the initial playback and we reached the buffer target. If autoplay is true we start playback\n        if (initialPlayback && autoPlay) {\n            const initialBufferLevel = mediaPlayerModel.getInitialBufferLevel();\n            const excludedStreamProcessors = [Constants.TEXT];\n            if (isNaN(initialBufferLevel) || initialBufferLevel <= playbackController.getBufferLevel(excludedStreamProcessors) || (adapter.getIsDynamic() && initialBufferLevel > playbackController.getLiveDelay())) {\n                initialPlayback = false;\n                _createPlaylistMetrics(PlayList.INITIAL_PLAYOUT_START_REASON);\n                playbackController.play();\n            }\n        }\n\n        if (e && e.mediaType) {\n            dashMetrics.addBufferLevel(e.mediaType, new Date(), e.bufferLevel * 1000);\n        }\n    }\n\n    /**\n     * When the quality is changed in the currently active stream we stop the prebuffering to avoid inconsistencies in the buffer settings like codec and append window\n     * @param e\n     * @private\n     */\n    function _onQualityChanged(e) {\n        if (e.streamInfo.id === activeStream.getId()) {\n            _deactivateAllPreloadingStreams();\n        }\n\n        const stream = getStreamById(e.streamInfo.id);\n\n        stream.prepareQualityChange(e);\n    }\n\n    /**\n     * A setting related to the live delay was updated. Check if one of the latency values changed. If so, recalculate the live delay.\n     * @private\n     */\n    function _onLiveDelaySettingUpdated() {\n        if (adapter.getIsDynamic() && playbackController.getOriginalLiveDelay() !== 0 && activeStream) {\n            const streamsInfo = adapter.getStreamsInfo()\n            if (streamsInfo.length > 0) {\n                const manifestInfo = streamsInfo[0].manifestInfo;\n                const fragmentDuration = _getFragmentDurationForLiveDelayCalculation(streamsInfo, manifestInfo);\n\n                playbackController.computeAndSetLiveDelay(fragmentDuration, manifestInfo);\n            }\n        }\n    }\n\n    /**\n     * When the playback time is updated we add the droppedFrames metric to the dash metric object\n     * @private\n     */\n    function _onPlaybackTimeUpdated(/*e*/) {\n        if (hasVideoTrack()) {\n            const playbackQuality = videoModel.getPlaybackQuality();\n            if (playbackQuality) {\n                dashMetrics.addDroppedFrames(playbackQuality);\n            }\n        }\n    }\n\n    /**\n     * Once playback starts add playlist metrics depending on whether this was the first playback or playback resumed after pause\n     * @private\n     */\n    function _onPlaybackStarted( /*e*/) {\n        logger.debug('[onPlaybackStarted]');\n        if (!initialPlayback && isPaused) {\n            _createPlaylistMetrics(PlayList.RESUME_FROM_PAUSE_START_REASON);\n        }\n        if (initialPlayback) {\n            initialPlayback = false;\n        }\n        if (initialSteeringRequest) {\n            initialSteeringRequest = false;\n            // If this is the initial playback attempt and we have not yet triggered content steering now is the time\n            if (settings.get().streaming.applyContentSteering && !contentSteeringController.shouldQueryBeforeStart()) {\n                contentSteeringController.loadSteeringData();\n            }\n\n        }\n        isPaused = false;\n    }\n\n    /**\n     * Once playback is paused flush metrics\n     * @param {object} e\n     * @private\n     */\n    function _onPlaybackPaused(e) {\n        logger.debug('[onPlaybackPaused]');\n        if (!e.ended) {\n            isPaused = true;\n            _flushPlaylistMetrics(PlayListTrace.USER_REQUEST_STOP_REASON);\n        }\n    }\n\n    /**\n     * Callback once a stream/period is completely buffered. We can either signal the end of the stream or start prebuffering the next period.\n     * @param {object} e\n     * @private\n     */\n    function _onStreamBufferingCompleted(e) {\n        logger.debug(`Stream with id ${e.streamInfo.id} finished buffering`);\n        const isLast = e.streamInfo.isLast;\n        if (mediaSource && isLast) {\n            logger.info('[onStreamBufferingCompleted] calls signalEndOfStream of mediaSourceController.');\n            mediaSourceController.signalEndOfStream(mediaSource);\n        } else {\n            _checkIfPrebufferingCanStart();\n        }\n    }\n\n    /**\n     * Check if we can start prebuffering the next period.\n     * @private\n     */\n    function _checkIfPrebufferingCanStart() {\n\n        if (!activeStream) {\n            return;\n        }\n\n        // Check if we are finished buffering. In case this is the case the prebuffering will be triggered automatically\n        if (!activeStream.getHasFinishedBuffering()) {\n            activeStream.checkAndHandleCompletedBuffering();\n            return;\n        }\n\n        // In case we have finished buffering already we can preload\n        const upcomingStreams = _getNextStreams(activeStream);\n        let i = 0;\n\n        while (i < upcomingStreams.length) {\n            const stream = upcomingStreams[i];\n            const previousStream = i === 0 ? activeStream : upcomingStreams[i - 1];\n\n            // If the preloading for the current stream is not scheduled, but its predecessor has finished buffering we can start prebuffering this stream\n            if (!stream.getPreloaded() && previousStream.getHasFinishedBuffering()) {\n                if (mediaSource) {\n                    _onStreamCanLoadNext(stream, previousStream);\n                }\n            }\n            i += 1;\n        }\n    }\n\n    /**\n     * In some cases we need to fire the playback ended event manually\n     * @private\n     */\n    function _startPlaybackEndedTimerInterval() {\n        if (!playbackEndedTimerInterval) {\n            playbackEndedTimerInterval = setInterval(function () {\n                if (!isStreamSwitchingInProgress && playbackController.getTimeToStreamEnd() <= 0 && !playbackController.isSeeking()) {\n                    eventBus.trigger(Events.PLAYBACK_ENDED, { 'isLast': getActiveStreamInfo().isLast });\n                }\n            }, PLAYBACK_ENDED_TIMER_INTERVAL);\n        }\n    }\n\n    /**\n     * Stop the check if the playback has ended\n     * @private\n     */\n    function _stopPlaybackEndedTimerInterval() {\n        if (playbackEndedTimerInterval) {\n            clearInterval(playbackEndedTimerInterval);\n            playbackEndedTimerInterval = null;\n        }\n    }\n\n    /**\n     * Returns a playhead time, in seconds, converted to be relative\n     * to the start of an identified stream/period or null if no such stream\n     * @param {number} time\n     * @param {string} id\n     * @returns {number|null}\n     */\n    function getTimeRelativeToStreamId(time, id) {\n        let stream = null;\n        let baseStart = 0;\n        let streamStart = 0;\n        let streamDur = null;\n\n        for (let i = 0; i < streams.length; i++) {\n            stream = streams[i];\n            streamStart = stream.getStartTime();\n            streamDur = stream.getDuration();\n\n            // use start time, if not undefined or NaN or similar\n            if (Number.isFinite(streamStart)) {\n                baseStart = streamStart;\n            }\n\n            if (stream.getId() === id) {\n                return time - baseStart;\n            } else {\n                // use duration if not undefined or NaN or similar\n                if (Number.isFinite(streamDur)) {\n                    baseStart += streamDur;\n                }\n            }\n        }\n\n        return null;\n    }\n\n    /**\n     * Returns the streamProcessors of the active stream.\n     * @return {array}\n     */\n    function getActiveStreamProcessors() {\n        return activeStream ? activeStream.getStreamProcessors() : [];\n    }\n\n    /**\n     * Once playback has ended we switch to the next stream\n     * @param {object} e\n     */\n    function _onPlaybackEnded(e) {\n        if (activeStream && !activeStream.getIsEndedEventSignaled()) {\n            activeStream.setIsEndedEventSignaled(true);\n            const nextStream = _getNextStream();\n            if (nextStream) {\n                logger.debug(`StreamController onEnded, found next stream with id ${nextStream.getStreamInfo().id}. Switching from ${activeStream.getStreamInfo().id} to ${nextStream.getStreamInfo().id}`);\n                _switchStream(nextStream, activeStream, NaN);\n            } else {\n                logger.debug('StreamController no next stream found');\n                activeStream.setIsEndedEventSignaled(false);\n            }\n            _flushPlaylistMetrics(nextStream ? PlayListTrace.END_OF_PERIOD_STOP_REASON : PlayListTrace.END_OF_CONTENT_STOP_REASON);\n        }\n        if (e && e.isLast) {\n            _stopPlaybackEndedTimerInterval();\n            contentSteeringController.stopSteeringRequestTimer();\n        }\n    }\n\n    /**\n     * Returns the next stream to be played relative to the stream provided. If no stream is provided we use the active stream.\n     * In order to avoid rounding issues we should not use the duration of the periods. Instead find the stream with starttime closest to startTime of the previous stream.\n     * @param {object} stream\n     * @return {null|object}\n     */\n    function _getNextStream(stream = null) {\n        const refStream = stream ? stream : activeStream ? activeStream : null;\n\n        if (!refStream) {\n            return null;\n        }\n\n        const refStreamInfo = refStream.getStreamInfo();\n        const start = refStreamInfo.start;\n        let i = 0;\n        let targetIndex = -1;\n        let lastDiff = NaN;\n\n        while (i < streams.length) {\n            const s = streams[i];\n            const sInfo = s.getStreamInfo();\n            const diff = sInfo.start - start;\n\n            if (diff > 0 && (isNaN(lastDiff) || diff < lastDiff) && refStreamInfo.id !== sInfo.id) {\n                lastDiff = diff;\n                targetIndex = i;\n            }\n\n            i += 1;\n        }\n\n        if (targetIndex >= 0) {\n            return streams[targetIndex];\n        }\n\n        return null;\n    }\n\n    /**\n     * Returns all upcoming streams relative to the provided stream. If no stream is provided we use the active stream.\n     * @param {object} stream\n     * @return {array}\n     */\n    function _getNextStreams(stream = null) {\n        try {\n            const refStream = stream ? stream : activeStream ? activeStream : null;\n\n            if (refStream) {\n                const refStreamInfo = refStream.getStreamInfo();\n\n                return streams.filter(function (stream) {\n                    const sInfo = stream.getStreamInfo();\n                    return sInfo.start > refStreamInfo.start && refStreamInfo.id !== sInfo.id;\n                });\n            }\n        } catch (e) {\n            return [];\n        }\n    }\n\n    /**\n     * Sets the duration attribute of the MediaSource using the MediaSourceController.\n     * @param {number} duration\n     * @private\n     */\n    function _setMediaDuration(duration) {\n        const manifestDuration = duration ? duration : getActiveStreamInfo().manifestInfo.duration;\n        mediaSourceController.setDuration(manifestDuration);\n    }\n\n    /**\n     * Returns the active stream\n     * @return {object}\n     */\n    function getActiveStream() {\n        return activeStream;\n    }\n\n    /**\n     * Initial playback indicates if we have called play() for the first time yet.\n     * @return {*}\n     */\n    function getInitialPlayback() {\n        return initialPlayback;\n    }\n\n    /**\n     * Auto Play indicates if the stream starts automatically as soon as it is initialized.\n     * @return {boolean}\n     */\n    function getAutoPlay() {\n        return autoPlay;\n    }\n\n    /**\n     * Called once the first stream has been initialized. We only use this function to seek to the right start time.\n     * @return {number}\n     * @private\n     */\n    function _getInitialStartTime() {\n        // Seek new stream in priority order:\n        // - at start time provided via the application\n        // - at start time provided in URI parameters\n        // - at stream/period start time (for static streams) or live start time (for dynamic streams)\n        let startTime;\n        const isDynamic = adapter.getIsDynamic();\n        if (isDynamic) {\n            // For dynamic stream, start by default at (live edge - live delay)\n            const dvrInfo = dashMetrics.getCurrentDVRInfo();\n            const liveEdge = dvrInfo && dvrInfo.range ? dvrInfo.range.end : 0;\n            // we are already in the right start period. so time should not be smaller than period@start and should not be larger than period@end\n            startTime = liveEdge - playbackController.getOriginalLiveDelay();\n            // If start time in URI, take min value between live edge time and time from URI (capped by DVR window range)\n            const dvrWindow = dvrInfo ? dvrInfo.range : null;\n            if (dvrWindow) {\n                // If start time was provided by the application as part of the call to initialize() or attachSource() use this value\n                if (!isNaN(providedStartTime) || providedStartTime.toString().indexOf('posix:') !== -1) {\n                    logger.info(`Start time provided by the app: ${providedStartTime}`);\n                    const providedStartTimeAsPresentationTime = _getStartTimeFromProvidedData(true, providedStartTime)\n                    if (!isNaN(providedStartTimeAsPresentationTime)) {\n                        // Do not move closer to the live edge as defined by live delay\n                        startTime = Math.min(startTime, providedStartTimeAsPresentationTime);\n                    }\n                } else {\n                    // #t shall be relative to period start\n                    const startTimeFromUri = _getStartTimeFromUriParameters(true);\n                    if (!isNaN(startTimeFromUri)) {\n                        logger.info(`Start time from URI parameters: ${startTimeFromUri}`);\n                        // Do not move closer to the live edge as defined by live delay\n                        startTime = Math.min(startTime, startTimeFromUri);\n                    }\n                }\n                // If calcFromSegmentTimeline is enabled we saw problems caused by the MSE.seekableRange when starting at dvrWindow.start. Apply a small offset to avoid this problem.\n                const offset = settings.get().streaming.timeShiftBuffer.calcFromSegmentTimeline ? 0.1 : 0;\n                startTime = Math.max(startTime, dvrWindow.start + offset);\n            }\n        } else {\n            // For static stream, start by default at period start\n            const streams = getStreams();\n            const streamInfo = streams[0].getStreamInfo();\n            startTime = streamInfo.start;\n\n            // If start time was provided by the application as part of the call to initialize() or attachSource() use this value\n            if (!isNaN(providedStartTime)) {\n                logger.info(`Start time provided by the app: ${providedStartTime}`);\n                const providedStartTimeAsPresentationTime = _getStartTimeFromProvidedData(false, providedStartTime)\n                if (!isNaN(providedStartTimeAsPresentationTime)) {\n                    // Do not play earlier than the start of the first period\n                    startTime = Math.max(startTime, providedStartTimeAsPresentationTime);\n                }\n            } else {\n                // If start time in URI, take max value between period start and time from URI (if in period range)\n                const startTimeFromUri = _getStartTimeFromUriParameters(false);\n                if (!isNaN(startTimeFromUri)) {\n                    logger.info(`Start time from URI parameters: ${startTimeFromUri}`);\n                    // Do not play earlier than the start of the first period\n                    startTime = Math.max(startTime, startTimeFromUri);\n                }\n            }\n        }\n\n        return startTime;\n    }\n\n    /**\n     * 23009-1 Annex C.4 defines MPD anchors to use URI fragment syntax to start a presentation at a given time and a given state\n     * @param {boolean} isDynamic\n     * @return {number}\n     * @private\n     */\n    function _getStartTimeFromUriParameters(isDynamic) {\n        const fragData = uriFragmentModel.getURIFragmentData();\n        if (!fragData || !fragData.t) {\n            return NaN;\n        }\n        const refStream = getStreams()[0];\n        const referenceTime = refStream.getStreamInfo().start;\n        fragData.t = fragData.t.split(',')[0];\n\n        return _getStartTimeFromString(isDynamic, fragData.t, referenceTime);\n    }\n\n    /**\n     * Calculate start time using the value that was provided via the application as part of attachSource() or initialize()\n     * @param {boolean} isDynamic\n     * @param {number | string} providedStartTime\n     * @return {number}\n     * @private\n     */\n    function _getStartTimeFromProvidedData(isDynamic, providedStartTime) {\n        let referenceTime = 0;\n\n        if (!isDynamic) {\n            const refStream = getStreams()[0];\n            referenceTime = refStream.getStreamInfo().start;\n        }\n\n        return _getStartTimeFromString(isDynamic, providedStartTime, referenceTime);\n    }\n\n\n    function _getStartTimeFromString(isDynamic, targetValue, referenceTime) {\n        // Consider only start time of MediaRange\n        // TODO: consider end time of MediaRange to stop playback at provided end time\n        // \"t=<time>\" : time is relative to 1st period start\n        // \"t=posix:<time>\" : time is absolute start time as number of seconds since 01-01-1970\n        const period = adapter.getRegularPeriods()[0];\n        const targetString = targetValue.toString();\n        const posix = targetString.indexOf('posix:') !== -1 ? targetString.substring(6) === 'now' ? Date.now() / 1000 : parseFloat(targetString.substring(6)) : NaN;\n        return (isDynamic && !isNaN(posix)) ? timelineConverter.calcPresentationTimeFromWallTime(new Date(posix * 1000), period) : parseFloat(targetString) + referenceTime;\n    }\n\n    /**\n     * Streams that are no longer in the manifest can be filtered\n     * @param {object} streamsInfo\n     * @private\n     */\n    function _filterOutdatedStreams(streamsInfo) {\n        if (streamsInfo.length === 0) {\n            logger.warn(`No periods included in the current manifest. Skipping the filtering of outdated stream objects.`);\n            return;\n        }\n\n        streams = streams.filter((stream) => {\n            const isStillIncluded = streamsInfo.filter((sInfo) => {\n                return sInfo.id === stream.getId();\n            }).length > 0;\n\n            const shouldKeepStream = isStillIncluded || stream.getId() === activeStream.getId();\n\n            if (!shouldKeepStream) {\n                logger.debug(`Removing stream ${stream.getId()}`);\n                stream.reset(true);\n                stream = null;\n            }\n\n            return shouldKeepStream;\n        });\n    }\n\n    /**\n     * In order to calculate the initial live delay we might required the duration of the segments.\n     * @param {array} streamInfos\n     * @param {object} manifestInfo\n     * @return {number}\n     * @private\n     */\n    function _getFragmentDurationForLiveDelayCalculation(streamInfos, manifestInfo) {\n        try {\n            let segmentDuration = NaN;\n\n            //  We use the maxFragmentDuration attribute if present\n            if (manifestInfo && !isNaN(manifestInfo.maxFragmentDuration) && isFinite(manifestInfo.maxFragmentDuration)) {\n                return manifestInfo.maxFragmentDuration;\n            }\n\n            return isFinite(segmentDuration) ? segmentDuration : NaN;\n        } catch (e) {\n            return NaN;\n        }\n    }\n\n    /**\n     * Callback handler after the manifest has been updated. Trigger an update in the adapter and filter unsupported stuff.\n     * Finally, attempt UTC sync\n     * @param {object} e\n     * @private\n     */\n    function _onManifestUpdated(e) {\n        if (!e.error) {\n            logger.info('Manifest updated... updating data system wide.');\n\n            //Since streams are not composed yet , need to manually look up useCalculatedLiveEdgeTime to detect if stream\n            //is SegmentTimeline to avoid using time source\n            const manifest = e.manifest;\n            adapter.updatePeriods(manifest);\n\n            // It is important to filter before initializing the baseUrlController. Otherwise we might end up with wrong references in case we remove AdaptationSets.\n            capabilitiesFilter.filterUnsupportedFeatures(manifest)\n                .then(() => {\n                    baseURLController.initialize(manifest);\n\n                    let manifestUTCTimingSources = adapter.getUTCTimingSources();\n                    if (adapter.getIsDynamic() && (!manifestUTCTimingSources || manifestUTCTimingSources.length === 0)) {\n                        eventBus.trigger(MediaPlayerEvents.CONFORMANCE_VIOLATION, {\n                            level: ConformanceViolationConstants.LEVELS.WARNING,\n                            event: ConformanceViolationConstants.EVENTS.NO_UTC_TIMING_ELEMENT\n                        });\n                    }\n\n                    let allUTCTimingSources = (!adapter.getIsDynamic()) ? manifestUTCTimingSources : manifestUTCTimingSources.concat(customParametersModel.getUTCTimingSources());\n                    timeSyncController.attemptSync(allUTCTimingSources, adapter.getIsDynamic());\n\n                    extUrlQueryInfoController.createFinalQueryStrings(manifest);\n                });\n        } else {\n            hasInitialisationError = true;\n            reset();\n        }\n    }\n\n    /**\n     * Check if the stream has a video track\n     * @return {boolean}\n     */\n    function hasVideoTrack() {\n        return activeStream ? activeStream.getHasVideoTrack() : false;\n    }\n\n    /**\n     * Check if the stream has an audio track\n     * @return {boolean}\n     */\n    function hasAudioTrack() {\n        return activeStream ? activeStream.getHasAudioTrack() : false;\n    }\n\n\n    function switchToVideoElement(seekTime) {\n        if (activeStream) {\n            playbackController.initialize(getActiveStreamInfo());\n            _openMediaSource({ seekTime, keepBuffers: false, streamActivated: true });\n        }\n    }\n\n    function _flushPlaylistMetrics(reason, time) {\n        time = time || new Date();\n\n        getActiveStreamProcessors().forEach(p => {\n            p.finalisePlayList(time, reason);\n        });\n        dashMetrics.addPlayList();\n    }\n\n    function _createPlaylistMetrics(startReason) {\n        dashMetrics.createPlaylistMetrics(playbackController.getTime() * 1000, startReason);\n    }\n\n    function _onInternalKeyStatusesChanged(e) {\n        protectionController.updateKeyStatusesMap(e);\n        _handleKeyStatuses();\n    }\n\n    function _handleKeyStatuses() {\n        const streamProcessors = getActiveStreamProcessors();\n        let hasUnusableKey = false;\n\n        streamProcessors.forEach((streamProcessor) => {\n            const currentMediaInfo = streamProcessor.getMediaInfo();\n            const areKeyIdsUsable =\n                currentMediaInfo ? capabilities.areKeyIdsUsable(currentMediaInfo) : true;\n\n            if (!areKeyIdsUsable) {\n                hasUnusableKey = true;\n                _handleUnusableKeyId(streamProcessor)\n            } else {\n                const areKeyIdsExpired = currentMediaInfo ? capabilities.areKeyIdsExpired(currentMediaInfo) : false;\n                if (areKeyIdsExpired) {\n                    _handleExpiredKeyId(streamProcessor);\n                }\n            }\n        })\n        // we observed that playback still stalls if we replace the buffer when playhead is at 0. Do a minimal seek to avoid this\n        if (hasUnusableKey) {\n            _handleUnusableKeyStall();\n        }\n    }\n\n    function _handleUnusableKeyStall() {\n        if (playbackController.getTime() === 0) {\n            eventBus.once(MediaPlayerEvents.FRAGMENT_LOADING_COMPLETED, () => {\n                _triggerUnusableKeySeek();\n            }, instance)\n        } else {\n            playbackController.isProgressing(500)\n                .then((isProgressing) => {\n                    if (!isProgressing) {\n                        _triggerUnusableKeySeek();\n                    }\n                })\n        }\n    }\n\n    function _triggerUnusableKeySeek() {\n        const time = playbackController.getTime()\n        playbackController.seek(time + 0.01, false, false);\n    }\n\n    function _handleUnusableKeyId(streamProcessor) {\n        const possibleMediaInfos = streamProcessor.getAllMediaInfos();\n        const supportedMediaInfos = possibleMediaInfos.filter((mediaInfo) => {\n            return capabilities.areKeyIdsUsable(mediaInfo);\n        })\n\n        if (!supportedMediaInfos || supportedMediaInfos.length === 0) {\n            const type = streamProcessor.getType();\n            errHandler.error(new DashJSError(Errors.NO_SUPPORTED_KEY_IDS, `Type: ${type}: ${Errors.NO_SUPPORTED_KEY_IDS_MESSAGE}`));\n            return\n        }\n\n        mediaController.setTrack(supportedMediaInfos[0], { replaceBuffer: true })\n    }\n\n    function _handleExpiredKeyId(streamProcessor) {\n        const streamId = streamProcessor.getStreamId();\n        const stream = getStreamById(streamId);\n\n        if (stream) {\n            stream.triggerProtectionError({ error: new DashJSError(ProtectionErrors.KEY_STATUS_CHANGED_EXPIRED_ERROR_CODE, ProtectionErrors.KEY_STATUS_CHANGED_EXPIRED_ERROR_MESSAGE) })\n        }\n\n    }\n\n    function _onPlaybackError(e) {\n        if (!e.error) {\n            return;\n        }\n\n        let msg;\n\n        switch (e.error.code) {\n            case 1:\n                msg = 'MEDIA_ERR_ABORTED';\n                break;\n            case 2:\n                msg = 'MEDIA_ERR_NETWORK';\n                break;\n            case 3:\n                msg = 'MEDIA_ERR_DECODE';\n                errorInformation.counts.mediaErrorDecode += 1;\n                break;\n            case 4:\n                msg = 'MEDIA_ERR_SRC_NOT_SUPPORTED';\n                break;\n            case 5:\n                msg = 'MEDIA_ERR_ENCRYPTED';\n                break;\n            default:\n                msg = 'UNKNOWN';\n                break;\n        }\n\n\n        if (msg === 'MEDIA_ERR_DECODE' && settings.get().errors.recoverAttempts.mediaErrorDecode >= errorInformation.counts.mediaErrorDecode) {\n            _handleMediaErrorDecode();\n            return;\n        }\n\n        hasMediaError = true;\n\n        if (e.error.message) {\n            msg += ' (' + e.error.message + ')';\n        }\n\n        if (e.error.msExtendedCode) {\n            msg += ' (0x' + (e.error.msExtendedCode >>> 0).toString(16).toUpperCase() + ')';\n        }\n\n        logger.fatal('Video Element Error: ' + msg);\n        if (e.error) {\n            logger.fatal(e.error);\n        }\n        errHandler.error(new DashJSError(e.error.code, msg));\n        reset();\n    }\n\n    /**\n     * Handles mediaError\n     * @private\n     */\n    function _handleMediaErrorDecode() {\n        logger.error('A MEDIA_ERR_DECODE occured: Resetting the MediaSource');\n        const seekTime = playbackController.getTime();\n        // Deactivate the current stream.\n        activeStream.deactivate(false);\n\n        // Reset MSE\n        logger.info(`MediaSource has been resetted. Resuming playback from time ${seekTime}`);\n        _openMediaSource({ seekTime, keepBuffers: false, streamActivated: false });\n    }\n\n    function getActiveStreamInfo() {\n        return activeStream ? activeStream.getStreamInfo() : null;\n    }\n\n    function getIsStreamSwitchInProgress() {\n        return isStreamSwitchingInProgress;\n    }\n\n    function getHasMediaOrInitialisationError() {\n        return hasMediaError || hasInitialisationError;\n    }\n\n    function getStreamById(id) {\n        for (let i = 0, ln = streams.length; i < ln; i++) {\n            if (streams[i].getId() === id) {\n                return streams[i];\n            }\n        }\n        return null;\n    }\n\n    function _onManifestValidityChanged(e) {\n        if (!isNaN(e.newDuration)) {\n            _setMediaDuration(e.newDuration);\n        }\n    }\n\n    function setConfig(config) {\n        if (!config) {\n            return;\n        }\n\n        if (config.capabilities) {\n            capabilities = config.capabilities;\n        }\n        if (config.capabilitiesFilter) {\n            capabilitiesFilter = config.capabilitiesFilter;\n        }\n        if (config.manifestLoader) {\n            manifestLoader = config.manifestLoader;\n        }\n        if (config.manifestModel) {\n            manifestModel = config.manifestModel;\n        }\n        if (config.mediaPlayerModel) {\n            mediaPlayerModel = config.mediaPlayerModel;\n        }\n        if (config.customParametersModel) {\n            customParametersModel = config.customParametersModel;\n        }\n        if (config.protectionController) {\n            protectionController = config.protectionController;\n        }\n        if (config.adapter) {\n            adapter = config.adapter;\n        }\n        if (config.dashMetrics) {\n            dashMetrics = config.dashMetrics;\n        }\n        if (config.errHandler) {\n            errHandler = config.errHandler;\n        }\n        if (config.timelineConverter) {\n            timelineConverter = config.timelineConverter;\n        }\n        if (config.videoModel) {\n            videoModel = config.videoModel;\n        }\n        if (config.playbackController) {\n            playbackController = config.playbackController;\n        }\n        if (config.throughputController) {\n            throughputController = config.throughputController;\n        }\n        if (config.serviceDescriptionController) {\n            serviceDescriptionController = config.serviceDescriptionController;\n        }\n        if (config.contentSteeringController) {\n            contentSteeringController = config.contentSteeringController;\n        }\n        if (config.textController) {\n            textController = config.textController;\n        }\n        if (config.abrController) {\n            abrController = config.abrController;\n        }\n        if (config.mediaController) {\n            mediaController = config.mediaController;\n        }\n        if (config.settings) {\n            settings = config.settings;\n        }\n        if (config.baseURLController) {\n            baseURLController = config.baseURLController;\n        }\n        if (config.uriFragmentModel) {\n            uriFragmentModel = config.uriFragmentModel;\n        }\n        if (config.segmentBaseController) {\n            segmentBaseController = config.segmentBaseController;\n        }\n        if (config.manifestUpdater) {\n            manifestUpdater = config.manifestUpdater;\n        }\n    }\n\n    function setProtectionData(protData) {\n        protectionData = protData;\n        if (protectionController) {\n            protectionController.setProtectionData(protectionData);\n        }\n    }\n\n    function resetInitialSettings() {\n        streams = [];\n        providedStartTime = NaN;\n        protectionController = null;\n        isStreamSwitchingInProgress = false;\n        activeStream = null;\n        hasMediaError = false;\n        hasInitialisationError = false;\n        initialPlayback = true;\n        initialSteeringRequest = true;\n        isPaused = false;\n        autoPlay = true;\n        playbackEndedTimerInterval = null;\n        firstLicenseIsFetched = false;\n        preloadingStreams = [];\n        waitForPlaybackStartTimeout = null;\n        errorInformation = {\n            counts: {\n                mediaErrorDecode: 0\n            }\n        }\n    }\n\n    function reset() {\n        _checkConfig();\n\n        timeSyncController.reset();\n\n        _flushPlaylistMetrics(hasMediaError || hasInitialisationError ? PlayListTrace.FAILURE_STOP_REASON : PlayListTrace.USER_REQUEST_STOP_REASON);\n\n        for (let i = 0, ln = streams ? streams.length : 0; i < ln; i++) {\n            const stream = streams[i];\n            stream.reset(hasMediaError);\n        }\n\n        unRegisterEvents();\n\n        baseURLController.reset();\n        manifestUpdater.reset();\n        eventController.reset();\n        dashMetrics.clearAllCurrentMetrics();\n        manifestModel.setValue(null);\n        manifestLoader.reset();\n        timelineConverter.reset();\n        initCache.reset();\n\n        if (mediaSource) {\n            mediaSourceController.detachMediaSource(videoModel);\n            mediaSource = null;\n        }\n        videoModel = null;\n        if (protectionController) {\n            protectionController = null;\n            protectionData = null;\n            if (manifestModel.getValue()) {\n                eventBus.trigger(Events.PROTECTION_DESTROYED, { data: manifestModel.getValue().url });\n            }\n        }\n\n        _stopPlaybackEndedTimerInterval();\n        eventBus.trigger(Events.STREAM_TEARDOWN_COMPLETE);\n        resetInitialSettings();\n    }\n\n    function _onMetricAdded(e) {\n        if (e.metric === MetricsConstants.DVR_INFO) {\n            //Match media type? How can DVR window be different for media types?\n            //Should we normalize and union the two?\n            const targetMediaType = hasAudioTrack() ? Constants.AUDIO : Constants.VIDEO;\n            if (e.mediaType === targetMediaType) {\n                mediaSourceController.setSeekable(e.value.range.start, e.value.range.end);\n            }\n        }\n    }\n\n    function refreshManifest() {\n        if (!manifestUpdater.getIsUpdating()) {\n            manifestUpdater.refreshManifest();\n        }\n    }\n\n    function getStreams() {\n        return streams;\n    }\n\n    instance = {\n        addDVRMetric,\n        getActiveStream,\n        getActiveStreamInfo,\n        getActiveStreamProcessors,\n        getAutoPlay,\n        getHasMediaOrInitialisationError,\n        getInitialPlayback,\n        getIsStreamSwitchInProgress,\n        getStreamById,\n        getStreamForTime,\n        getStreams,\n        getTimeRelativeToStreamId,\n        hasAudioTrack,\n        hasVideoTrack,\n        initialize,\n        load,\n        loadWithManifest,\n        refreshManifest,\n        reset,\n        setConfig,\n        setProtectionData,\n        switchToVideoElement,\n    };\n\n    setup();\n\n    return instance;\n}\n\nStreamController.__dashjs_factory_name = 'StreamController';\nexport default FactoryMaker.getSingletonFactory(StreamController);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport FactoryMaker from '../../core/FactoryMaker.js';\nimport Debug from '../../core/Debug.js';\nimport Events from '../../core/events/Events.js';\nimport EventBus from '../../core/EventBus.js';\nimport Constants from '../constants/Constants.js';\n\nconst GAP_HANDLER_INTERVAL = 100;\nconst THRESHOLD_TO_STALLS = 10;\nconst GAP_JUMP_WAITING_TIME_OFFSET = 0.1;\n\nfunction GapController() {\n    const context = this.context;\n    const eventBus = EventBus(context).getInstance();\n\n    let instance,\n        lastPlaybackTime,\n        settings,\n        wallclockTicked,\n        gapHandlerInterval,\n        lastGapJumpPosition,\n        playbackController,\n        streamController,\n        videoModel,\n        jumpTimeoutHandler,\n        trackSwitchByMediaType,\n        logger;\n\n    function initialize() {\n        _registerEvents();\n    }\n\n    function setup() {\n        logger = Debug(context).getInstance().getLogger(instance);\n\n        reset();\n    }\n\n    function reset() {\n        _stopGapHandler();\n        _unregisterEvents();\n        resetInitialSettings();\n    }\n\n    function resetInitialSettings() {\n        gapHandlerInterval = null;\n        lastGapJumpPosition = NaN;\n        wallclockTicked = 0;\n        jumpTimeoutHandler = null;\n        trackSwitchByMediaType = {};\n    }\n\n    function setConfig(config) {\n        if (!config) {\n            return;\n        }\n        if (config.settings) {\n            settings = config.settings;\n        }\n        if (config.playbackController) {\n            playbackController = config.playbackController;\n        }\n        if (config.streamController) {\n            streamController = config.streamController;\n        }\n        if (config.videoModel) {\n            videoModel = config.videoModel;\n        }\n    }\n\n    function _registerEvents() {\n        eventBus.on(Events.WALLCLOCK_TIME_UPDATED, _onWallclockTimeUpdated, this);\n        eventBus.on(Events.INITIAL_STREAM_SWITCH, _onInitialStreamSwitch, this);\n        eventBus.on(Events.PLAYBACK_SEEKING, _onPlaybackSeeking, this);\n        eventBus.on(Events.BUFFER_REPLACEMENT_STARTED, _onBufferReplacementStarted, instance);\n        eventBus.on(Events.TRACK_CHANGE_RENDERED, _onBufferReplacementEnded, instance);\n    }\n\n    function _unregisterEvents() {\n        eventBus.off(Events.WALLCLOCK_TIME_UPDATED, _onWallclockTimeUpdated, this);\n        eventBus.off(Events.INITIAL_STREAM_SWITCH, _onInitialStreamSwitch, this);\n        eventBus.off(Events.PLAYBACK_SEEKING, _onPlaybackSeeking, this);\n        eventBus.off(Events.BUFFER_REPLACEMENT_STARTED, _onBufferReplacementStarted, instance);\n        eventBus.off(Events.TRACK_CHANGE_RENDERED, _onBufferReplacementEnded, instance);\n    }\n\n    /**\n     * Clear scheduled gap jump when seeking\n     * @private\n     */\n    function _onPlaybackSeeking() {\n        if (jumpTimeoutHandler) {\n            clearTimeout(jumpTimeoutHandler);\n            jumpTimeoutHandler = null;\n        }\n    }\n\n    /**\n     *  If the track was changed in the current active period and the player might aggressively replace segments the buffer will be empty for a short period of time. Avoid gap jumping at that time.\n     *  We wait until the next media fragment of the target type has been appended before activating again\n     * @param {object} e\n     * @private\n     */\n    function _onBufferReplacementStarted(e) {\n        try {\n            if (e.streamId !== streamController.getActiveStreamInfo().id || (e.mediaType !== Constants.VIDEO && e.mediaType !== Constants.AUDIO)) {\n                return;\n            }\n\n            if (e.streamId === streamController.getActiveStreamInfo().id) {\n                trackSwitchByMediaType[e.mediaType] = true;\n            }\n        } catch (e) {\n            logger.error(e);\n        }\n    }\n\n    /**\n     * Activate gap jumping again once segment of target type has been appended\n     * @param {object} e\n     * @private\n     */\n    function _onBufferReplacementEnded(e) {\n        if (!e || !e.mediaType) {\n            return;\n        }\n\n        trackSwitchByMediaType[e.mediaType] = false;\n    }\n\n    /**\n     * Activate the gap handler after the first stream switch\n     * @private\n     */\n    function _onInitialStreamSwitch() {\n        if (!gapHandlerInterval) {\n            _startGapHandler();\n        }\n    }\n\n    /**\n     * Callback handler for when the wallclock time has been updated\n     * @private\n     */\n    function _onWallclockTimeUpdated(/*e*/) {\n        if (!_shouldCheckForGaps(settings.get().streaming.gaps.enableSeekFix)) {\n            return;\n        }\n\n        wallclockTicked++;\n        if (wallclockTicked >= THRESHOLD_TO_STALLS) {\n            const currentTime = playbackController.getTime();\n            if (lastPlaybackTime === currentTime) {\n                _jumpGap(currentTime, true);\n            } else {\n                lastPlaybackTime = currentTime;\n                lastGapJumpPosition = NaN;\n            }\n            wallclockTicked = 0;\n        }\n    }\n\n    /**\n     * Returns if we are supposed to check for gaps\n     * @param {boolean} checkSeekingState - Usually we are not checking for gaps in the videolement is in seeking state. If this flag is set to true we check for a potential exceptions of this rule.\n     * @return {boolean}\n     * @private\n     */\n    function _shouldCheckForGaps(checkSeekingState = false) {\n        if (!streamController.getActiveStream()) {\n            return false;\n        }\n        const trackSwitchInProgress = Object.keys(trackSwitchByMediaType).some((key) => {\n            return trackSwitchByMediaType[key];\n        });\n        const shouldIgnoreSeekingState = checkSeekingState ? _shouldIgnoreSeekingState() : false;\n\n        return !trackSwitchInProgress && settings.get().streaming.gaps.jumpGaps && streamController.getActiveStreamProcessors().length > 0 && (!playbackController.isSeeking() || shouldIgnoreSeekingState) && !playbackController.isPaused() && !streamController.getIsStreamSwitchInProgress() &&\n            !streamController.getHasMediaOrInitialisationError();\n    }\n\n    /**\n     * There are cases in which we never transition out of the seeking state and still need to jump a gap. For instance if the user seeks right before a gap and video element will not transition out of the seeking state.\n     * For now limit this to period boundaries. In this case the current period is completely buffered and we are right before the end of the period.\n     * @private\n     */\n    function _shouldIgnoreSeekingState() {\n        const activeStream = streamController.getActiveStream();\n        const streamEnd = parseFloat((activeStream.getStartTime() + activeStream.getDuration()).toFixed(5))\n\n        return playbackController.getTime() + settings.get().streaming.gaps.threshold >= streamEnd;\n    }\n\n    /**\n     * Returns the index of the range object that comes after the current time\n     * @param {object} ranges\n     * @param {number} currentTime\n     * @private\n     * @return {null|number}\n     */\n    function _getNextRangeIndex(ranges, currentTime) {\n        try {\n\n            if (!ranges || (ranges.length <= 1 && currentTime > 0)) {\n                return NaN;\n            }\n            let nextRangeIndex = NaN;\n            let j = 0;\n\n            while (isNaN(nextRangeIndex) && j < ranges.length) {\n                const rangeEnd = j > 0 ? ranges.end(j - 1) : 0;\n                if (currentTime < ranges.start(j) && rangeEnd - currentTime < settings.get().streaming.gaps.threshold) {\n                    nextRangeIndex = j;\n                }\n                j += 1;\n            }\n            return nextRangeIndex;\n\n        } catch (e) {\n            return null;\n        }\n    }\n\n    /**\n     * Check if the currentTime exist within the buffered range\n     * @param {object} ranges\n     * @param {number} currentTime\n     * @private\n     * @return {boolean}\n     */\n    function _isTimeBuffered(ranges, currentTime) {\n        for (let i = 0, len = ranges.length; i < len; i++) {\n            if (currentTime >= ranges.start(i) && currentTime <= ranges.end(i)) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    /**\n     * Starts the interval that checks for gaps\n     * @private\n     */\n    function _startGapHandler() {\n        try {\n            if (!gapHandlerInterval) {\n                logger.debug('Starting the gap controller');\n                gapHandlerInterval = setInterval(() => {\n                    if (!_shouldCheckForGaps()) {\n                        return;\n                    }\n                    const currentTime = playbackController.getTime();\n                    _jumpGap(currentTime);\n\n                }, GAP_HANDLER_INTERVAL);\n            }\n        } catch (e) {\n        }\n    }\n\n    /**\n     * Clears the gap interval handler\n     * @private\n     */\n    function _stopGapHandler() {\n        logger.debug('Stopping the gap controller');\n        if (gapHandlerInterval) {\n            clearInterval(gapHandlerInterval);\n            gapHandlerInterval = null;\n        }\n    }\n\n    /**\n     * Jump a gap\n     * @param {number} currentTime\n     * @param {boolean} playbackStalled\n     * @private\n     */\n    function _jumpGap(currentTime, playbackStalled = false) {\n        const enableStallFix = settings.get().streaming.gaps.enableStallFix;\n        const stallSeek = settings.get().streaming.gaps.stallSeek;\n        const smallGapLimit = settings.get().streaming.gaps.smallGapLimit;\n        const jumpLargeGaps = settings.get().streaming.gaps.jumpLargeGaps;\n        const ranges = videoModel.getBufferRange();\n        let nextRangeIndex;\n        let seekToPosition = NaN;\n        let jumpToStreamEnd = false;\n\n\n        // Get the range just after current time position\n        nextRangeIndex = _getNextRangeIndex(ranges, currentTime);\n\n        if (!isNaN(nextRangeIndex)) {\n            const start = ranges.start(nextRangeIndex);\n            const gap = start - currentTime;\n            if (gap > 0 && (gap <= smallGapLimit || jumpLargeGaps)) {\n                seekToPosition = start;\n            }\n        }\n\n        // Playback has stalled before period end. We seek to the end of the period\n        const timeToStreamEnd = playbackController.getTimeToStreamEnd();\n        if (isNaN(seekToPosition) && playbackStalled && isFinite(timeToStreamEnd) && !isNaN(timeToStreamEnd) && timeToStreamEnd < smallGapLimit) {\n            seekToPosition = parseFloat(playbackController.getStreamEndTime().toFixed(5));\n            jumpToStreamEnd = true;\n        }\n\n        if (enableStallFix && isNaN(seekToPosition) && playbackStalled && isNaN(nextRangeIndex) && _isTimeBuffered(ranges, currentTime)) {\n            if (stallSeek === 0) {\n                logger.warn(`Toggle play pause to break stall`);\n                videoModel.pause();\n                videoModel.play();\n            } else {\n                logger.warn(`Jumping ${stallSeek}s to break stall`);\n                seekToPosition = currentTime + stallSeek;\n            }\n        }\n\n        if (seekToPosition > 0 && lastGapJumpPosition !== seekToPosition && seekToPosition > currentTime && !jumpTimeoutHandler) {\n            const timeUntilGapEnd = seekToPosition - currentTime;\n\n            if (jumpToStreamEnd) {\n                const nextStream = streamController.getStreamForTime(seekToPosition);\n                const internalSeek = nextStream && !!nextStream.getPreloaded();\n\n                logger.warn(`Jumping to end of stream because of gap from ${currentTime} to ${seekToPosition}. Gap duration: ${timeUntilGapEnd}`);\n                playbackController.seek(seekToPosition, true, internalSeek);\n            } else {\n                const isDynamic = playbackController.getIsDynamic();\n                const start = nextRangeIndex > 0 ? ranges.end(nextRangeIndex - 1) : currentTime;\n                const timeToWait = !isDynamic ? 0 : Math.max(0, timeUntilGapEnd - GAP_JUMP_WAITING_TIME_OFFSET) * 1000;\n\n                jumpTimeoutHandler = window.setTimeout(() => {\n                    playbackController.seek(seekToPosition, true, true);\n                    logger.warn(`Jumping gap occuring in period ${streamController.getActiveStream().getStreamId()} starting at ${start} and ending at ${seekToPosition}. Jumping by: ${seekToPosition - start}`);\n                    jumpTimeoutHandler = null;\n                }, timeToWait);\n            }\n            lastGapJumpPosition = seekToPosition;\n        }\n    }\n\n    instance = {\n        reset,\n        setConfig,\n        initialize\n    };\n\n    setup();\n\n    return instance;\n}\n\nGapController.__dashjs_factory_name = 'GapController';\nexport default FactoryMaker.getSingletonFactory(GapController);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport FactoryMaker from '../../core/FactoryMaker.js';\nimport Debug from '../../core/Debug.js';\nimport EventBus from '../../core/EventBus.js';\nimport Constants from '../constants/Constants.js';\nimport MediaPlayerEvents from '../MediaPlayerEvents.js';\nimport Events from '../../core/events/Events.js';\nimport MetricsConstants from '../constants/MetricsConstants.js';\nimport Utils from '../../core/Utils.js';\n\nfunction CatchupController() {\n    const context = this.context;\n    const eventBus = EventBus(context).getInstance();\n\n    let instance,\n        isCatchupSeekInProgress,\n        isSafari,\n        videoModel,\n        settings,\n        streamController,\n        playbackController,\n        mediaPlayerModel,\n        playbackStalled,\n        logger;\n\n    function initialize() {\n        _registerEvents();\n        _checkPlaybackRates();\n    }\n\n    function setConfig(config) {\n        if (!config) {\n            return;\n        }\n\n        if (config.settings) {\n            settings = config.settings;\n        }\n\n        if (config.videoModel) {\n            videoModel = config.videoModel;\n        }\n\n        if (config.streamController) {\n            streamController = config.streamController;\n        }\n\n        if (config.playbackController) {\n            playbackController = config.playbackController;\n        }\n\n        if (config.mediaPlayerModel) {\n            mediaPlayerModel = config.mediaPlayerModel;\n        }\n    }\n\n    function _registerEvents() {\n        eventBus.on(MediaPlayerEvents.BUFFER_LEVEL_UPDATED, _onBufferLevelUpdated, instance);\n        eventBus.on(MediaPlayerEvents.BUFFER_LEVEL_STATE_CHANGED, _onBufferLevelStateChanged, instance);\n        eventBus.on(MediaPlayerEvents.PLAYBACK_PROGRESS, _onPlaybackProgression, instance);\n        eventBus.on(MediaPlayerEvents.PLAYBACK_TIME_UPDATED, _onPlaybackProgression, instance);\n        eventBus.on(MediaPlayerEvents.PLAYBACK_SEEKED, _onPlaybackSeeked, instance);\n        eventBus.on(Events.SETTING_UPDATED_CATCHUP_ENABLED, _onCatchupSettingUpdated, instance);\n        eventBus.on(Events.SETTING_UPDATED_PLAYBACK_RATE_MIN, _checkPlaybackRates, instance);\n        eventBus.on(Events.SETTING_UPDATED_PLAYBACK_RATE_MAX, _checkPlaybackRates, instance);\n        eventBus.on(MediaPlayerEvents.STREAM_INITIALIZED, _checkPlaybackRates, instance);\n    }\n\n    function _unregisterEvents() {\n        eventBus.off(MediaPlayerEvents.BUFFER_LEVEL_UPDATED, _onBufferLevelUpdated, instance);\n        eventBus.off(MediaPlayerEvents.BUFFER_LEVEL_STATE_CHANGED, _onBufferLevelStateChanged, instance);\n        eventBus.off(MediaPlayerEvents.PLAYBACK_PROGRESS, _onPlaybackProgression, instance);\n        eventBus.off(MediaPlayerEvents.PLAYBACK_TIME_UPDATED, _onPlaybackProgression, instance);\n        eventBus.off(MediaPlayerEvents.PLAYBACK_SEEKED, _onPlaybackSeeked, instance);\n        eventBus.off(Events.SETTING_UPDATED_CATCHUP_ENABLED, _onCatchupSettingUpdated, instance);\n        eventBus.off(Events.SETTING_UPDATED_PLAYBACK_RATE_MIN, _checkPlaybackRates, instance);\n        eventBus.off(Events.SETTING_UPDATED_PLAYBACK_RATE_MAX, _checkPlaybackRates, instance);\n        eventBus.off(MediaPlayerEvents.STREAM_INITIALIZED, _checkPlaybackRates, instance);\n    }\n\n    function setup() {\n        logger = Debug(context).getInstance().getLogger(instance);\n\n        _resetInitialSettings();\n    }\n\n    function reset() {\n        _unregisterEvents();\n        _resetInitialSettings();\n        videoModel.setPlaybackRate(1.0, true);\n    }\n\n    function _resetInitialSettings() {\n        isCatchupSeekInProgress = false;\n        const ua = Utils.parseUserAgent();\n        isSafari = ua && ua.browser && ua.browser.name && ua.browser.name.toLowerCase() === 'safari';\n    }\n\n\n    function _onPlaybackSeeked() {\n        isCatchupSeekInProgress = false;\n    }\n\n    /**\n     * When the buffer level updated we check if we can remove the stalled state\n     * @param {object} e\n     * @private\n     */\n    function _onBufferLevelUpdated(e) {\n        // do not stop when getting an event from Stream that is not active\n        if (e.streamId !== streamController.getActiveStreamInfo().id || !playbackStalled) {\n            return;\n        }\n\n        // we remove the stalled state once we reach a certain buffer level\n        const liveDelay = playbackController.getLiveDelay();\n        const bufferLevel = playbackController.getBufferLevel();\n        if (bufferLevel > liveDelay / 2) {\n            playbackStalled = false;\n        }\n    }\n\n    /**\n     * When the buffer state changed to BUFFER_EMPTY we update the stalled state\n     * @param {object} e\n     * @private\n     */\n    function _onBufferLevelStateChanged(e) {\n        // do not stop when getting an event from Stream that is not active\n        if (e.streamId !== streamController.getActiveStreamInfo().id) {\n            return;\n        }\n\n        playbackStalled = e.state === MetricsConstants.BUFFER_EMPTY;\n    }\n\n    /**\n     * If the catchup mode is disabled in the settings we reset playback rate to 1.0\n     * @private\n     */\n    function _onCatchupSettingUpdated() {\n        if (!mediaPlayerModel.getCatchupModeEnabled()) {\n            videoModel.setPlaybackRate(1.0);\n        }\n    }\n\n    /**\n     * While playback is progressing we check if we need to start or stop the catchup mechanism to reach the target latency\n     * @private\n     */\n    function _onPlaybackProgression() {\n        if (\n            playbackController.getIsDynamic() &&\n            mediaPlayerModel.getCatchupModeEnabled() &&\n            ((mediaPlayerModel.getCatchupPlaybackRates().max > 0) || (mediaPlayerModel.getCatchupPlaybackRates().min < 0)) &&\n            !playbackController.isPaused() &&\n            !playbackController.isSeeking() && _shouldStartCatchUp()\n        ) {\n            _startPlaybackCatchUp();\n        }\n    }\n\n    /**\n     * Apply catchup mode. We either seek back to the target live edge or increase the playback rate.\n     */\n    function _startPlaybackCatchUp() {\n\n        // we are seeking dont do anything for now\n        if (isCatchupSeekInProgress) {\n            return;\n        }\n\n        if (videoModel) {\n            let newRate;\n            const currentPlaybackRate = videoModel.getPlaybackRate();\n            const liveCatchupPlaybackRates = mediaPlayerModel.getCatchupPlaybackRates();\n            const bufferLevel = playbackController.getBufferLevel();\n            const deltaLatency = _getLatencyDrift();\n\n            // we reached the maxDrift. Do a seek\n            const maxDrift = mediaPlayerModel.getCatchupMaxDrift();\n            if (!isNaN(maxDrift) && maxDrift > 0 &&\n                deltaLatency > maxDrift) {\n                logger.info('[CatchupController]: Low Latency catchup mechanism. Latency too high, doing a seek to live point');\n                isCatchupSeekInProgress = true;\n                playbackController.seekToCurrentLive(true, false);\n            }\n\n            // try to reach the target latency by adjusting the playback rate\n            else {\n                const currentLiveLatency = playbackController.getCurrentLiveLatency();\n                const targetLiveDelay = playbackController.getLiveDelay();\n\n                if (_getCatchupMode() === Constants.LIVE_CATCHUP_MODE_LOLP) {\n                    // Custom playback control: Based on buffer level\n                    const playbackBufferMin = settings.get().streaming.liveCatchup.playbackBufferMin;\n                    newRate = _calculateNewPlaybackRateLolP(liveCatchupPlaybackRates, currentLiveLatency, targetLiveDelay, playbackBufferMin, bufferLevel);\n                } else {\n                    // Default playback control: Based on target and current latency\n                    newRate = _calculateNewPlaybackRateDefault(liveCatchupPlaybackRates, currentLiveLatency, targetLiveDelay, bufferLevel);\n                }\n\n                // We adjust the min change linear, depending on the maximum catchup rate. Default is 0.02 for rate 0.5.\n                // For Safari we stick to a fixed value because of  https://bugs.webkit.org/show_bug.cgi?id=208142\n                const minPlaybackRateChange = isSafari ? 0.25 : 0.02 / (0.5 / liveCatchupPlaybackRates.max);\n\n                // Obtain newRate and apply to video model.  Don't change playbackrate for small variations (don't overload element with playbackrate changes)\n                if (newRate && Math.abs(currentPlaybackRate - newRate) >= minPlaybackRateChange || newRate == 1.0) { // non-null\n                    logger.debug(`[CatchupController]: Setting playback rate to ${newRate}`);\n                    videoModel.setPlaybackRate(newRate);\n                }\n            }\n        }\n    }\n\n    /**\n     * Calculates the drift between the current latency and the target latency\n     * @return {number}\n     * @private\n     */\n    function _getLatencyDrift() {\n        const currentLiveLatency = playbackController.getCurrentLiveLatency();\n        const targetLiveDelay = playbackController.getLiveDelay();\n\n        return currentLiveLatency - targetLiveDelay;\n    }\n\n    /**\n     * Checks whether the catchup mechanism should be enabled. We use different subfunctions here depending on the catchup mode.\n     * @return {boolean}\n     */\n    function _shouldStartCatchUp() {\n        try {\n            if (!playbackController.getTime() > 0 || isCatchupSeekInProgress) {\n                return false;\n            }\n\n            const catchupMode = _getCatchupMode();\n\n            if (catchupMode === Constants.LIVE_CATCHUP_MODE_LOLP) {\n                const currentBuffer = playbackController.getBufferLevel();\n                const playbackBufferMin = settings.get().streaming.liveCatchup.playbackBufferMin;\n\n                return _lolpNeedToCatchUpCustom(currentBuffer, playbackBufferMin);\n            } else {\n                return _defaultNeedToCatchUp();\n            }\n\n        } catch (e) {\n            return false;\n        }\n    }\n\n\n    /**\n     * Returns the mode for live playback catchup.\n     * @return {String}\n     * @private\n     */\n    function _getCatchupMode() {\n        const playbackBufferMin = settings.get().streaming.liveCatchup.playbackBufferMin;\n\n        return settings.get().streaming.liveCatchup.mode === Constants.LIVE_CATCHUP_MODE_LOLP && playbackBufferMin !== null && !isNaN(playbackBufferMin) ? Constants.LIVE_CATCHUP_MODE_LOLP : Constants.LIVE_CATCHUP_MODE_DEFAULT;\n    }\n\n    /**\n     * Default algorithm to determine if catchup mode should be enabled\n     * @return {boolean}\n     * @private\n     */\n    function _defaultNeedToCatchUp() {\n        try {\n            const latencyDrift = Math.abs(_getLatencyDrift());\n\n            return latencyDrift > 0;\n        } catch (e) {\n            return false;\n        }\n    }\n\n    /**\n     * LoL+ logic to determine if catchup mode should be enabled\n     * @param {number} currentBuffer\n     * @param {number} playbackBufferMin\n     * @return {boolean}\n     * @private\n     */\n    function _lolpNeedToCatchUpCustom(currentBuffer, playbackBufferMin) {\n        try {\n            const latencyDrift = Math.abs(_getLatencyDrift());\n\n            return latencyDrift > 0 || currentBuffer < playbackBufferMin;\n        } catch (e) {\n            return false;\n        }\n    }\n\n    /**\n     * Default algorithm to calculate the new playback rate\n     * @param {object} liveCatchUpPlaybackRates\n     * @param {number} liveCatchUpPlaybackRates.min - minimum playback rate decrease limit\n     * @param {number} liveCatchUpPlaybackRates.max - maximum playback rate increase limit\n     * @param {number} currentLiveLatency\n     * @param {number} liveDelay\n     * @param {number} bufferLevel\n     * @param {number} currentPlaybackRate\n     * @return {number}\n     * @private\n     */\n    function _calculateNewPlaybackRateDefault(liveCatchUpPlaybackRates, currentLiveLatency, liveDelay, bufferLevel) {\n        // if we recently ran into an empty buffer we wait for the buffer to recover before applying a new rate\n        if (playbackStalled) {\n            return 1.0;\n        }\n\n        const deltaLatency = currentLiveLatency - liveDelay;\n        const cpr = (deltaLatency < 0) ? Math.abs(liveCatchUpPlaybackRates.min) : liveCatchUpPlaybackRates.max;\n        const d = deltaLatency * 5;\n\n        // Playback rate must be between (1 - cpr) - (1 + cpr)\n        // ex: if cpr is 0.5, it can have values between 0.5 - 1.5\n        const s = (cpr * 2) / (1 + Math.pow(Math.E, -d));\n        let newRate = (1 - cpr) + s;\n        // take into account situations in which there are buffer stalls,\n        // in which increasing playbackRate to reach target latency will\n        // just cause more and more stall situations\n        if (playbackController.getPlaybackStalled()) {\n            if (bufferLevel <= liveDelay / 2 && deltaLatency > 0) {\n                newRate = 1.0;\n            }\n        }\n\n        return newRate;\n    }\n\n    /**\n     * Lol+ algorithm to calculate the new playback rate\n     * @param {object} liveCatchUpPlaybackRates\n     * @param {number} liveCatchUpPlaybackRates.min - minimum playback rate decrease limit\n     * @param {number} liveCatchUpPlaybackRates.max - maximum playback rate increase limit\n     * @param {number} currentLiveLatency\n     * @param {number} liveDelay\n     * @param {number} playbackBufferMin\n     * @param {number} bufferLevel\n     * @param {number} currentPlaybackRate\n     * @return {number}\n     * @private\n     */\n    function _calculateNewPlaybackRateLolP(liveCatchUpPlaybackRates, currentLiveLatency, liveDelay, playbackBufferMin, bufferLevel) {\n        let newRate;\n\n        // Hybrid: Buffer-based\n        if (bufferLevel < playbackBufferMin) {\n            // Buffer in danger, slow down\n            const cpr = Math.abs(liveCatchUpPlaybackRates.min); // Absolute value as negative delta value will be used.\n            const deltaBuffer = bufferLevel - playbackBufferMin; // -ve value\n            const d = deltaBuffer * 5;\n\n            // Playback rate must be between (1 - cpr) - (1 + cpr)\n            // ex: if cpr is 0.5, it can have values between 0.5 - 1.5\n            const s = (cpr * 2) / (1 + Math.pow(Math.E, -d));\n            newRate = (1 - cpr) + s;\n\n            logger.debug('[LoL+ playback control_buffer-based] bufferLevel: ' + bufferLevel + ', newRate: ' + newRate);\n        } else {\n            // Hybrid: Latency-based\n            // Check if latency is within range of target latency\n            const minDifference = 0.02;\n            if (Math.abs(currentLiveLatency - liveDelay) <= (minDifference * liveDelay)) {\n                newRate = 1;\n            } else {\n                const deltaLatency = currentLiveLatency - liveDelay;\n                // Buffer is safe, vary playback rate based on latency\n                const cpr = (deltaLatency < 0) ? Math.abs(liveCatchUpPlaybackRates.min) : liveCatchUpPlaybackRates.max;\n                const d = deltaLatency * 5;\n\n                // Playback rate must be between (1 - cpr) - (1 + cpr)\n                // ex: if cpr is 0.5, it can have values between 0.5 - 1.5\n                const s = (cpr * 2) / (1 + Math.pow(Math.E, -d));\n                newRate = (1 - cpr) + s;\n            }\n\n            logger.debug('[LoL+ playback control_latency-based] latency: ' + currentLiveLatency + ', newRate: ' + newRate);\n        }\n\n        return newRate\n    }\n\n    function _checkPlaybackRates() {\n        mediaPlayerModel.getCatchupPlaybackRates(true);\n    }\n\n    instance = {\n        reset,\n        setConfig,\n        initialize\n    };\n\n    setup();\n\n    return instance;\n}\n\nCatchupController.__dashjs_factory_name = 'CatchupController';\nexport default FactoryMaker.getSingletonFactory(CatchupController);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport FactoryMaker from '../../core/FactoryMaker.js';\nimport Debug from '../../core/Debug.js';\nimport Constants from '../../streaming/constants/Constants.js';\nimport DashConstants from '../constants/DashConstants.js';\n\nconst SUPPORTED_SCHEMES = [Constants.SERVICE_DESCRIPTION_DVB_LL_SCHEME];\nconst MEDIA_TYPES = {\n    VIDEO: 'video',\n    AUDIO: 'audio',\n    ANY: 'any',\n    ALL: 'all'\n}\n\nfunction ServiceDescriptionController() {\n    const context = this.context;\n\n    let instance,\n        serviceDescriptionSettings,\n        prftOffsets,\n        logger,\n        adapter;\n\n    function setup() {\n        logger = Debug(context).getInstance().getLogger(instance);\n        _resetInitialSettings();\n    }\n\n    function setConfig(config) {\n        if (!config) {\n            return;\n        }\n\n        if (config.adapter) {\n            adapter = config.adapter;\n        }\n    }\n\n    function reset() {\n        _resetInitialSettings();\n    }\n\n    function _resetInitialSettings() {\n        serviceDescriptionSettings = {\n            liveDelay: NaN,\n            liveCatchup: {\n                maxDrift: NaN,\n                playbackRate: {\n                    min: NaN,\n                    max: NaN\n                },\n            },\n            minBitrate: {},\n            maxBitrate: {},\n            initialBitrate: {},\n            contentSteering: null,\n            clientDataReporting: null,\n        };\n        prftOffsets = [];\n    }\n\n    /**\n     * Returns the service description settings for latency, catchup and bandwidth\n     */\n    function getServiceDescriptionSettings() {\n        return serviceDescriptionSettings\n    }\n\n    /**\n     * Check for potential ServiceDescriptor elements in the MPD and update the settings accordingly\n     * @param {object} manifestInfo\n     * @private\n     */\n    function applyServiceDescription(manifestInfo) {\n        if (!manifestInfo || !manifestInfo.serviceDescriptions) {\n            return;\n        }\n\n        const supportedServiceDescriptions = manifestInfo.serviceDescriptions.filter(sd => SUPPORTED_SCHEMES.includes(sd.schemeIdUri));\n        const allClientsServiceDescriptions = manifestInfo.serviceDescriptions.filter(sd => sd.schemeIdUri == null);\n        let sd = (supportedServiceDescriptions.length > 0)\n            ? supportedServiceDescriptions[supportedServiceDescriptions.length - 1]\n            : allClientsServiceDescriptions[allClientsServiceDescriptions.length - 1];\n        if (!sd) {\n            return;\n        }\n\n        if (sd.latency && sd.latency.target > 0) {\n            _applyServiceDescriptionLatency(sd);\n        }\n\n        if (sd.playbackRate) {\n            _applyServiceDescriptionPlaybackRate(sd);\n        }\n\n        if (sd.operatingQuality) {\n            _applyServiceDescriptionOperatingQuality(sd);\n        }\n\n        if (sd.operatingBandwidth) {\n            _applyServiceDescriptionOperatingBandwidth(sd);\n        }\n\n        if (sd.contentSteering) {\n            _applyServiceDescriptionContentSteering(sd);\n        }\n\n        if (sd.clientDataReporting) {\n            _applyServiceDescriptionClientDataReporting(sd);\n        }\n    }\n\n    /**\n     * Adjust the latency targets for the service.\n     * @param {object} sd - service description element\n     * @private\n     */\n    function _applyServiceDescriptionLatency(sd) {\n        let params;\n\n        if (sd.schemeIdUri === Constants.SERVICE_DESCRIPTION_DVB_LL_SCHEME) {\n            params = _getDvbServiceDescriptionLatencyParameters(sd);\n        } else {\n            params = _getStandardServiceDescriptionLatencyParameters(sd);\n        }\n\n        if (prftOffsets.length > 0) {\n            let { to, id } = _calculateTimeOffset(params);\n\n            // TS 103 285 Clause 10.20.4. 3) Subtract calculated offset from Latency@target converted from milliseconds\n            // liveLatency does not consider ST@availabilityTimeOffset so leave out that step\n            // Since maxDrift is a difference rather than absolute it does not need offset applied\n            serviceDescriptionSettings.liveDelay = params.liveDelay - to;\n            serviceDescriptionSettings.liveCatchup.maxDrift = params.maxDrift;\n\n            logger.debug(`\n                Found latency properties coming from service description. Applied time offset of ${to} from ProducerReferenceTime element with id ${id}.\n                Live Delay: ${params.liveDelay - to}, Live catchup max drift: ${params.maxDrift}\n            `);\n        } else {\n            serviceDescriptionSettings.liveDelay = params.liveDelay;\n            serviceDescriptionSettings.liveCatchup.maxDrift = params.maxDrift;\n\n            logger.debug(`Found latency properties coming from service description: Live Delay: ${params.liveDelay}, Live catchup max drift: ${params.maxDrift}`);\n        }\n    }\n\n    /**\n     * Get default parameters for liveDelay,maxDrift\n     * @param {object} sd\n     * @return {{maxDrift: (number|undefined), liveDelay: number, referenceId: (number|undefined)}}\n     * @private\n     */\n    function _getStandardServiceDescriptionLatencyParameters(sd) {\n        const liveDelay = sd.latency.target / 1000;\n        let maxDrift = !isNaN(sd.latency.max) && sd.latency.max > sd.latency.target ? (sd.latency.max - sd.latency.target + 500) / 1000 : NaN;\n        const referenceId = sd.latency.referenceId || NaN;\n\n        return {\n            liveDelay,\n            maxDrift,\n            referenceId\n        }\n    }\n\n    /**\n     * Get DVB DASH parameters for liveDelay,maxDrift\n     * @param sd\n     * @return {{maxDrift: (number|undefined), liveDelay: number, referenceId: (number|undefined)}}\n     * @private\n     */\n    function _getDvbServiceDescriptionLatencyParameters(sd) {\n        const liveDelay = sd.latency.target / 1000;\n        let maxDrift = !isNaN(sd.latency.max) && sd.latency.max > sd.latency.target ? (sd.latency.max - sd.latency.target + 500) / 1000 : NaN;\n        const referenceId = sd.latency.referenceId || NaN;\n\n        return {\n            liveDelay,\n            maxDrift,\n            referenceId\n        }\n    }\n\n    /**\n     * Adjust the playback rate targets for the service\n     * @param {object} sd\n     * @private\n     */\n    function _applyServiceDescriptionPlaybackRate(sd) {\n        // Convert each playback rate into a difference from 1. i.e 0.8 becomes -0.2.\n        const min = sd.playbackRate.min ? (Math.round((sd.playbackRate.min - 1.0) * 1000) / 1000) : NaN;\n        const max = sd.playbackRate.max ? (Math.round((sd.playbackRate.max - 1.0) * 1000) / 1000) : NaN;\n        serviceDescriptionSettings.liveCatchup.playbackRate.min = min;\n        serviceDescriptionSettings.liveCatchup.playbackRate.max = max;\n\n        logger.debug(`Found latency properties coming from service description: Live catchup min playback rate: ${min}`);\n        logger.debug(`Found latency properties coming from service description: Live catchup max playback rate: ${max}`);\n    }\n\n    /**\n     * Used to specify a quality ranking. We do not support this yet.\n     * @private\n     */\n    function _applyServiceDescriptionOperatingQuality() {\n        return;\n    }\n\n    /**\n     * Adjust the operating quality targets for the service\n     * @param {object} sd\n     * @private\n     */\n    function _applyServiceDescriptionOperatingBandwidth(sd) {\n\n        // Aggregation of media types is not supported yet\n        if (!sd || !sd.operatingBandwidth || !sd.operatingBandwidth.mediaType || sd.operatingBandwidth.mediaType === MEDIA_TYPES.ALL) {\n            return;\n        }\n\n        const params = {};\n\n        params.minBandwidth = sd.operatingBandwidth.min;\n        params.maxBandwidth = sd.operatingBandwidth.max;\n        params.targetBandwidth = sd.operatingBandwidth.target;\n\n        const mediaTypesToApply = [];\n\n        if (sd.operatingBandwidth.mediaType === MEDIA_TYPES.VIDEO || sd.operatingBandwidth.mediaType === MEDIA_TYPES.AUDIO) {\n            mediaTypesToApply.push(sd.operatingBandwidth.mediaType);\n        } else if (sd.operatingBandwidth.mediaType === MEDIA_TYPES.ANY) {\n            mediaTypesToApply.push(MEDIA_TYPES.AUDIO);\n            mediaTypesToApply.push(MEDIA_TYPES.VIDEO);\n        }\n\n        mediaTypesToApply.forEach((mediaType) => {\n\n            if (!isNaN(params.minBandwidth)) {\n                _updateBandwidthSetting('minBitrate', mediaType, params.minBandwidth);\n            }\n\n            if (!isNaN(params.maxBandwidth)) {\n                _updateBandwidthSetting('maxBitrate', mediaType, params.maxBandwidth);\n            }\n\n            if (!isNaN(params.targetBandwidth)) {\n                _updateBandwidthSetting('initialBitrate', mediaType, params.targetBandwidth);\n            }\n        })\n    }\n\n    /**\n     * Update the bandwidth settings vor a specific field and media type\n     * @param {string} field\n     * @param {string} mediaType\n     * @param {number} value\n     * @private\n     */\n    function _updateBandwidthSetting(field, mediaType, value) {\n        try {\n            // Service description values are specified in bps. Settings expect the value in kbps\n            serviceDescriptionSettings[field][mediaType] = value / 1000;\n        } catch (e) {\n            logger.error(e);\n        }\n    }\n\n    /**\n     * Add information about content steering element. Handling is up to the ContentSteeringController\n     *  @param {object} sd\n     *  @private\n     */\n    function _applyServiceDescriptionContentSteering(sd) {\n        serviceDescriptionSettings.contentSteering = sd.contentSteering;\n    }\n\n    /**\n     * Add information about client data reporting element. Handling is up to the CMCDModel\n     *  @param {object} sd\n     *  @private\n     */\n    function _applyServiceDescriptionClientDataReporting(sd) {\n        serviceDescriptionSettings.clientDataReporting = sd.clientDataReporting;\n    }\n\n    /**\n     * Returns the current calculated time offsets based on ProducerReferenceTime elements\n     * @returns {array}\n     */\n    function getProducerReferenceTimeOffsets() {\n        return prftOffsets;\n    }\n\n    /**\n     * Calculates an array of time offsets each with matching ProducerReferenceTime id.\n     * Call before applyServiceDescription if producer reference time elements should be considered.\n     * @param {array} streamInfos\n     * @returns {array}\n     * @private\n     */\n    function calculateProducerReferenceTimeOffsets(streamInfos) {\n        try {\n            let timeOffsets = [];\n            if (streamInfos && streamInfos.length > 0) {\n                const mediaTypes = [Constants.VIDEO, Constants.AUDIO, Constants.TEXT];\n                const astInSeconds = adapter.getAvailabilityStartTime() / 1000;\n\n                streamInfos.forEach((streamInfo) => {\n                    const offsets = mediaTypes\n                        .reduce((acc, mediaType) => {\n                            acc = acc.concat(adapter.getAllMediaInfoForType(streamInfo, mediaType));\n                            return acc;\n                        }, [])\n                        .reduce((acc, mediaInfo) => {\n                            const prts = adapter.getProducerReferenceTimes(streamInfo, mediaInfo);\n                            prts.forEach((prt) => {\n                                const voRepresentations = adapter.getVoRepresentations(mediaInfo);\n                                if (voRepresentations && voRepresentations.length > 0 && voRepresentations[0].adaptation && voRepresentations[0].segmentInfoType === DashConstants.SEGMENT_TEMPLATE) {\n                                    const voRep = voRepresentations[0];\n                                    const d = new Date(prt[DashConstants.WALL_CLOCK_TIME]);\n                                    const wallClockTime = d.getTime() / 1000;\n                                    // TS 103 285 Clause 10.20.4\n                                    // 1) Calculate PRT0\n                                    // i) take the PRT@presentationTime and subtract any ST@presentationTimeOffset\n                                    // ii) convert this time to seconds by dividing by ST@timescale\n                                    // iii) Add this to start time of period that contains PRT.\n                                    // N.B presentationTimeOffset is already divided by timescale at this point\n                                    const prt0 = wallClockTime - (((prt[DashConstants.PRESENTATION_TIME] / voRep[DashConstants.TIMESCALE]) - voRep[DashConstants.PRESENTATION_TIME_OFFSET]) + streamInfo.start);\n                                    // 2) Calculate TO between PRT at the start of MPD timeline and the AST\n                                    const to = astInSeconds - prt0;\n                                    // 3) Not applicable as liveLatency does not consider ST@availabilityTimeOffset\n                                    acc.push({ id: prt[DashConstants.ID], to });\n                                }\n                            });\n                            return acc;\n                        }, [])\n\n                    timeOffsets = timeOffsets.concat(offsets);\n                })\n            }\n            prftOffsets = timeOffsets;\n        } catch (e) {\n            logger.error(e);\n            prftOffsets = [];\n        }\n    };\n\n    /**\n     * Calculates offset to apply to live delay as described in TS 103 285 Clause 10.20.4\n     * @param {object} sdLatency - service description latency element\n     * @returns {number}\n     * @private\n     */\n    function _calculateTimeOffset(sdLatency) {\n        let to = 0, id;\n        let offset = prftOffsets.filter(prt => {\n            return prt.id === sdLatency.referenceId;\n        });\n\n        // If only one ProducerReferenceTime to generate one TO, then use that regardless of matching ids\n        if (offset.length === 0) {\n            to = (prftOffsets.length > 0) ? prftOffsets[0].to : 0;\n            id = prftOffsets[0].id || NaN;\n        } else {\n            // If multiple id matches, use the first but this should be invalid\n            to = offset[0].to || 0;\n            id = offset[0].id || NaN;\n        }\n\n        return { to, id }\n    }\n\n    instance = {\n        getServiceDescriptionSettings,\n        getProducerReferenceTimeOffsets,\n        calculateProducerReferenceTimeOffsets,\n        applyServiceDescription,\n        reset,\n        setConfig\n    };\n\n    setup();\n\n    return instance;\n}\n\nServiceDescriptionController.__dashjs_factory_name = 'ServiceDescriptionController';\nexport default FactoryMaker.getSingletonFactory(ServiceDescriptionController);\n","/**\n * @typedef {Partial<import('./parse.js').Schema>} Schema\n * @typedef {Partial<import('./parse.js').Extension>} Extension\n */\n\n/**\n * Compile a language schema to a BCP 47 language tag.\n *\n * @param {Schema} schema\n * @returns {string}\n */\nexport function stringify(schema = {}) {\n  /** @type {Array<string>} */\n  let result = []\n\n  if (schema.irregular) {\n    return schema.irregular\n  }\n\n  if (schema.regular) {\n    return schema.regular\n  }\n\n  if (schema.language) {\n    result = result.concat(\n      schema.language,\n      schema.extendedLanguageSubtags || [],\n      schema.script || [],\n      schema.region || [],\n      schema.variants || []\n    )\n\n    const values = schema.extensions || []\n    let index = -1\n\n    while (++index < values.length) {\n      const value = values[index]\n\n      if (value.singleton && value.extensions && value.extensions.length > 0) {\n        result.push(value.singleton, ...value.extensions)\n      }\n    }\n  }\n\n  if (schema.privateuse && schema.privateuse.length > 0) {\n    result.push('x', ...schema.privateuse)\n  }\n\n  return result.join('-')\n}\n","/**\n * Check if the given character code, or the character code at the first\n * character, is alphabetical.\n *\n * @param {string|number} character\n * @returns {boolean} Whether `character` is alphabetical.\n */\nexport function isAlphabetical(character) {\n  const code =\n    typeof character === 'string' ? character.charCodeAt(0) : character\n\n  return (\n    (code >= 97 && code <= 122) /* a-z */ ||\n    (code >= 65 && code <= 90) /* A-Z */\n  )\n}\n","/**\n * Check if the given character code, or the character code at the first\n * character, is decimal.\n *\n * @param {string|number} character\n * @returns {boolean} Whether `character` is a decimal\n */\nexport function isDecimal(character) {\n  const code =\n    typeof character === 'string' ? character.charCodeAt(0) : character\n\n  return code >= 48 && code <= 57 /* 0-9 */\n}\n","import {isAlphabetical} from 'is-alphabetical'\nimport {isDecimal} from 'is-decimal'\n\n/**\n * Check if the given character code, or the character code at the first\n * character, is alphanumerical.\n *\n * @param {string|number} character\n * @returns {boolean} Whether `character` is alphanumerical.\n */\nexport function isAlphanumerical(character) {\n  return isAlphabetical(character) || isDecimal(character)\n}\n","/** @type {Array<string>} */\nexport const regular = [\n  'art-lojban',\n  'cel-gaulish',\n  'no-bok',\n  'no-nyn',\n  'zh-guoyu',\n  'zh-hakka',\n  'zh-min',\n  'zh-min-nan',\n  'zh-xiang'\n]\n","/** @type {Record<string, string|null>} */\nexport const normal = {\n  'en-gb-oed': 'en-GB-oxendict',\n  'i-ami': 'ami',\n  'i-bnn': 'bnn',\n  'i-default': null,\n  'i-enochian': null,\n  'i-hak': 'hak',\n  'i-klingon': 'tlh',\n  'i-lux': 'lb',\n  'i-mingo': null,\n  'i-navajo': 'nv',\n  'i-pwn': 'pwn',\n  'i-tao': 'tao',\n  'i-tay': 'tay',\n  'i-tsu': 'tsu',\n  'sgn-be-fr': 'sfb',\n  'sgn-be-nl': 'vgt',\n  'sgn-ch-de': 'sgg',\n  'art-lojban': 'jbo',\n  'cel-gaulish': null,\n  'no-bok': 'nb',\n  'no-nyn': 'nn',\n  'zh-guoyu': 'cmn',\n  'zh-hakka': 'hak',\n  'zh-min': null,\n  'zh-min-nan': 'nan',\n  'zh-xiang': 'hsn'\n}\n","/**\n * @callback Warning\n * @param {string} reason\n * @param {number} code\n * @param {number} offset\n * @returns {void}\n *\n * @typedef Options\n * @property {boolean} [normalize=true]\n * @property {boolean} [forgiving=false]\n * @property {Warning} [warning]\n *\n * @typedef Extension\n * @property {string} singleton\n * @property {Array<string>} extensions\n *\n * @typedef Schema\n * @property {string|null|undefined} language\n * @property {Array<string>} extendedLanguageSubtags\n * @property {string|null|undefined} script\n * @property {string|null|undefined} region\n * @property {Array<string>} variants\n * @property {Array<Extension>} extensions\n * @property {Array<string>} privateuse\n * @property {string|null|undefined} irregular\n * @property {string|null|undefined} regular\n */\n\nimport {isAlphanumerical} from 'is-alphanumerical'\nimport {isAlphabetical} from 'is-alphabetical'\nimport {isDecimal} from 'is-decimal'\nimport {regular} from './regular.js'\nimport {normal} from './normal.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Parse a BCP 47 language tag.\n *\n * @param {string} tag\n * @param {Options} [options]\n * @returns {Schema}\n */\nexport function parse(tag, options = {}) {\n  const result = empty()\n  const source = String(tag)\n  const value = source.toLowerCase()\n  let index = 0\n\n  // Check input.\n  if (tag === null || tag === undefined) {\n    throw new Error('Expected string, got `' + tag + '`')\n  }\n\n  // Let’s start.\n  // First: the edge cases.\n  if (own.call(normal, value)) {\n    const replacement = normal[value]\n\n    if (\n      (options.normalize === undefined ||\n        options.normalize === null ||\n        options.normalize) &&\n      typeof replacement === 'string'\n    ) {\n      return parse(replacement)\n    }\n\n    result[regular.includes(value) ? 'regular' : 'irregular'] = source\n\n    return result\n  }\n\n  // Now, to actually parse, eat what could be a language.\n  while (isAlphabetical(value.charCodeAt(index)) && index < 9) index++\n\n  // A language.\n  if (index > 1 /* Min 639. */ && index < 9 /* Max subtag. */) {\n    // 5 and up is a subtag.\n    // 4 is the size of reserved languages.\n    // 3 an ISO 639-2 or ISO 639-3.\n    // 2 is an ISO 639-1.\n    // <https://github.com/wooorm/iso-639-2>\n    // <https://github.com/wooorm/iso-639-3>\n    result.language = source.slice(0, index)\n\n    if (index < 4 /* Max 639. */) {\n      let groups = 0\n\n      while (\n        value.charCodeAt(index) === 45 /* `-` */ &&\n        isAlphabetical(value.charCodeAt(index + 1)) &&\n        isAlphabetical(value.charCodeAt(index + 2)) &&\n        isAlphabetical(value.charCodeAt(index + 3)) &&\n        !isAlphabetical(value.charCodeAt(index + 4))\n      ) {\n        if (groups > 2 /* Max extended language subtag count. */) {\n          return fail(\n            index,\n            3,\n            'Too many extended language subtags, expected at most 3 subtags'\n          )\n        }\n\n        // Extended language subtag.\n        result.extendedLanguageSubtags.push(source.slice(index + 1, index + 4))\n        index += 4\n        groups++\n      }\n    }\n\n    // ISO 15924 script.\n    // <https://github.com/wooorm/iso-15924>\n    if (\n      value.charCodeAt(index) === 45 /* `-` */ &&\n      isAlphabetical(value.charCodeAt(index + 1)) &&\n      isAlphabetical(value.charCodeAt(index + 2)) &&\n      isAlphabetical(value.charCodeAt(index + 3)) &&\n      isAlphabetical(value.charCodeAt(index + 4)) &&\n      !isAlphabetical(value.charCodeAt(index + 5))\n    ) {\n      result.script = source.slice(index + 1, index + 5)\n      index += 5\n    }\n\n    if (value.charCodeAt(index) === 45 /* `-` */) {\n      // ISO 3166-1 region.\n      // <https://github.com/wooorm/iso-3166>\n      if (\n        isAlphabetical(value.charCodeAt(index + 1)) &&\n        isAlphabetical(value.charCodeAt(index + 2)) &&\n        !isAlphabetical(value.charCodeAt(index + 3))\n      ) {\n        result.region = source.slice(index + 1, index + 3)\n        index += 3\n      }\n      // UN M49 region.\n      // <https://github.com/wooorm/un-m49>\n      else if (\n        isDecimal(value.charCodeAt(index + 1)) &&\n        isDecimal(value.charCodeAt(index + 2)) &&\n        isDecimal(value.charCodeAt(index + 3)) &&\n        !isDecimal(value.charCodeAt(index + 4))\n      ) {\n        result.region = source.slice(index + 1, index + 4)\n        index += 4\n      }\n    }\n\n    while (value.charCodeAt(index) === 45 /* `-` */) {\n      const start = index + 1\n      let offset = start\n\n      while (isAlphanumerical(value.charCodeAt(offset))) {\n        if (offset - start > 7 /* Max variant. */) {\n          return fail(\n            offset,\n            1,\n            'Too long variant, expected at most 8 characters'\n          )\n        }\n\n        offset++\n      }\n\n      if (\n        // Long variant.\n        offset - start > 4 /* Min alpha numeric variant. */ ||\n        // Short variant.\n        (offset - start > 3 /* Min variant. */ &&\n          isDecimal(value.charCodeAt(start)))\n      ) {\n        result.variants.push(source.slice(start, offset))\n        index = offset\n      }\n      // Something else.\n      else {\n        break\n      }\n    }\n\n    // Extensions.\n    while (value.charCodeAt(index) === 45 /* `-` */) {\n      // Exit if this isn’t an extension.\n      if (\n        value.charCodeAt(index + 1) === 120 /* `x` */ ||\n        !isAlphanumerical(value.charCodeAt(index + 1)) ||\n        value.charCodeAt(index + 2) !== 45 /* `-` */ ||\n        !isAlphanumerical(value.charCodeAt(index + 3))\n      ) {\n        break\n      }\n\n      let offset = index + 2\n      let groups = 0\n\n      while (\n        value.charCodeAt(offset) === 45 /* `-` */ &&\n        isAlphanumerical(value.charCodeAt(offset + 1)) &&\n        isAlphanumerical(value.charCodeAt(offset + 2))\n      ) {\n        const start = offset + 1\n        offset = start + 2\n        groups++\n\n        while (isAlphanumerical(value.charCodeAt(offset))) {\n          if (offset - start > 7 /* Max extension. */) {\n            return fail(\n              offset,\n              2,\n              'Too long extension, expected at most 8 characters'\n            )\n          }\n\n          offset++\n        }\n      }\n\n      if (!groups) {\n        return fail(\n          offset,\n          4,\n          'Empty extension, extensions must have at least 2 characters of content'\n        )\n      }\n\n      result.extensions.push({\n        singleton: source.charAt(index + 1),\n        extensions: source.slice(index + 3, offset).split('-')\n      })\n\n      index = offset\n    }\n  }\n  // Not a language.\n  else {\n    index = 0\n  }\n\n  // Private use.\n  if (\n    (index === 0 && value.charCodeAt(index) === 120) /* `x` */ ||\n    (value.charCodeAt(index) === 45 /* `-` */ &&\n      value.charCodeAt(index + 1) === 120) /* `x` */\n  ) {\n    index = index ? index + 2 : 1\n    let offset = index\n\n    while (\n      value.charCodeAt(offset) === 45 /* `-` */ &&\n      isAlphanumerical(value.charCodeAt(offset + 1))\n    ) {\n      const start = index + 1\n      offset = start\n\n      while (isAlphanumerical(value.charCodeAt(offset))) {\n        if (offset - start > 7 /* Max private use. */) {\n          return fail(\n            offset,\n            5,\n            'Too long private-use area, expected at most 8 characters'\n          )\n        }\n\n        offset++\n      }\n\n      result.privateuse.push(source.slice(index + 1, offset))\n      index = offset\n    }\n  }\n\n  if (index !== source.length) {\n    return fail(index, 6, 'Found superfluous content after tag')\n  }\n\n  return result\n\n  /**\n   * Create an empty results object.\n   *\n   * @param {number} offset\n   * @param {number} code\n   * @param {string} reason\n   * @returns {Schema}\n   */\n  function fail(offset, code, reason) {\n    if (options.warning) options.warning(reason, code, offset)\n    return options.forgiving ? result : empty()\n  }\n}\n\n/**\n * Create an empty results object.\n *\n * @returns {Schema}\n */\nfunction empty() {\n  return {\n    language: null,\n    extendedLanguageSubtags: [],\n    script: null,\n    region: null,\n    variants: [],\n    extensions: [],\n    privateuse: [],\n    irregular: null,\n    regular: null\n  }\n}\n","/**\n * See <https://tools.ietf.org/html/rfc4647#section-3.1>\n * for more info on the algorithms.\n */\n\n/**\n * @typedef {string} Tag\n *   BCP-47 tag.\n * @typedef {Array<Tag>} Tags\n *   List of BCP-47 tags.\n * @typedef {string} Range\n *   RFC 4647 range.\n * @typedef {Array<Range>} Ranges\n *   List of RFC 4647 range.\n *\n * @callback Check\n *   An internal check.\n * @param {Tag} tag\n *   BCP-47 tag.\n * @param {Range} range\n *   RFC 4647 range.\n * @returns {boolean}\n *   Whether the range matches the tag.\n *\n * @typedef {FilterOrLookup<true>} Filter\n *   Filter: yields all tags that match a range.\n * @typedef {FilterOrLookup<false>} Lookup\n *   Lookup: yields the best tag that matches a range.\n */\n\n/**\n * @template {boolean} IsFilter\n *   Whether to filter or perform a lookup.\n * @callback FilterOrLookup\n *   A check.\n * @param {Tag|Tags} tags\n *   One or more BCP-47 tags.\n * @param {Range|Ranges|undefined} [ranges='*']\n *   One or more RFC 4647 ranges.\n * @returns {IsFilter extends true ? Tags : Tag|undefined}\n *   Result.\n */\n\n/**\n * Factory to perform a filter or a lookup.\n *\n * This factory creates a function that accepts a list of tags and a list of\n * ranges, and contains logic to exit early for lookups.\n * `check` just has to deal with one tag and one range.\n * This match function iterates over ranges, and for each range,\n * iterates over tags.\n * That way, earlier ranges matching any tag have precedence over later ranges.\n *\n * @template {boolean} IsFilter\n * @param {Check} check\n *   A check.\n * @param {IsFilter} filter\n *   Whether to filter or perform a lookup.\n * @returns {FilterOrLookup<IsFilter>}\n *   Filter or lookup.\n */\nfunction factory(check, filter) {\n  /**\n   * @param {Tag|Tags} tags\n   *   One or more BCP-47 tags.\n   * @param {Range|Ranges|undefined} [ranges='*']\n   *   One or more RFC 4647 ranges.\n   * @returns {IsFilter extends true ? Tags : Tag|undefined}\n   *   Result.\n   */\n  return function (tags, ranges) {\n    let left = cast(tags, 'tag')\n    const right = cast(\n      ranges === null || ranges === undefined ? '*' : ranges,\n      'range'\n    )\n    /** @type {Tags} */\n    const matches = []\n    let rightIndex = -1\n\n    while (++rightIndex < right.length) {\n      const range = right[rightIndex].toLowerCase()\n\n      // Ignore wildcards in lookup mode.\n      if (!filter && range === '*') continue\n\n      let leftIndex = -1\n      /** @type {Tags} */\n      const next = []\n\n      while (++leftIndex < left.length) {\n        if (check(left[leftIndex].toLowerCase(), range)) {\n          // Exit if this is a lookup and we have a match.\n          if (!filter) {\n            return /** @type {IsFilter extends true ? Tags : Tag|undefined} */ (\n              left[leftIndex]\n            )\n          }\n\n          matches.push(left[leftIndex])\n        } else {\n          next.push(left[leftIndex])\n        }\n      }\n\n      left = next\n    }\n\n    // If this is a filter, return the list.  If it’s a lookup, we didn’t find\n    // a match, so return `undefined`.\n    return /** @type {IsFilter extends true ? Tags : Tag|undefined} */ (\n      filter ? matches : undefined\n    )\n  }\n}\n\n/**\n * Basic Filtering (Section 3.3.1) matches a language priority list consisting\n * of basic language ranges (Section 2.1) to sets of language tags.\n *\n * @param {Tag|Tags} tags\n *   One or more BCP-47 tags.\n * @param {Range|Ranges|undefined} [ranges='*']\n *   One or more RFC 4647 ranges.\n * @returns {Tags}\n *   List of BCP-47 tags.\n */\nexport const basicFilter = factory(function (tag, range) {\n  return range === '*' || tag === range || tag.includes(range + '-')\n}, true)\n\n/**\n * Extended Filtering (Section 3.3.2) matches a language priority list\n * consisting of extended language ranges (Section 2.2) to sets of language\n * tags.\n *\n * @param {Tag|Tags} tags\n *   One or more BCP-47 tags.\n * @param {Range|Ranges|undefined} [ranges='*']\n *   One or more RFC 4647 ranges.\n * @returns {Tags}\n *   List of BCP-47 tags.\n */\nexport const extendedFilter = factory(function (tag, range) {\n  // 3.3.2.1\n  const left = tag.split('-')\n  const right = range.split('-')\n  let leftIndex = 0\n  let rightIndex = 0\n\n  // 3.3.2.2\n  if (right[rightIndex] !== '*' && left[leftIndex] !== right[rightIndex]) {\n    return false\n  }\n\n  leftIndex++\n  rightIndex++\n\n  // 3.3.2.3\n  while (rightIndex < right.length) {\n    // 3.3.2.3.A\n    if (right[rightIndex] === '*') {\n      rightIndex++\n      continue\n    }\n\n    // 3.3.2.3.B\n    if (!left[leftIndex]) return false\n\n    // 3.3.2.3.C\n    if (left[leftIndex] === right[rightIndex]) {\n      leftIndex++\n      rightIndex++\n      continue\n    }\n\n    // 3.3.2.3.D\n    if (left[leftIndex].length === 1) return false\n\n    // 3.3.2.3.E\n    leftIndex++\n  }\n\n  // 3.3.2.4\n  return true\n}, true)\n\n/**\n * Lookup (Section 3.4) matches a language priority list consisting of basic\n * language ranges to sets of language tags to find the one exact language tag\n * that best matches the range.\n *\n * @param {Tag|Tags} tags\n *   One or more BCP-47 tags.\n * @param {Range|Ranges|undefined} [ranges='*']\n *   One or more RFC 4647 ranges.\n * @returns {Tag|undefined}\n *   BCP-47 tag.\n */\nexport const lookup = factory(function (tag, range) {\n  let right = range\n\n  /* eslint-disable-next-line no-constant-condition */\n  while (true) {\n    if (right === '*' || tag === right) return true\n\n    let index = right.lastIndexOf('-')\n\n    if (index < 0) return false\n\n    if (right.charAt(index - 2) === '-') index -= 2\n\n    right = right.slice(0, index)\n  }\n}, false)\n\n/**\n * Validate tags or ranges, and cast them to arrays.\n *\n * @param {string|Array<string>} values\n * @param {string} name\n * @returns {Array<string>}\n */\nfunction cast(values, name) {\n  const value = values && typeof values === 'string' ? [values] : values\n\n  if (!value || typeof value !== 'object' || !('length' in value)) {\n    throw new Error(\n      'Invalid ' + name + ' `' + value + '`, expected non-empty string'\n    )\n  }\n\n  return value\n}\n","/**\n * @typedef Change\n * @property {string} from\n * @property {string} to\n */\n\n/**\n * @type {Array<Change>}\n */\nexport const matches = [\n  {\n    from: 'in',\n    to: 'id'\n  },\n  {\n    from: 'iw',\n    to: 'he'\n  },\n  {\n    from: 'ji',\n    to: 'yi'\n  },\n  {\n    from: 'jw',\n    to: 'jv'\n  },\n  {\n    from: 'mo',\n    to: 'ro'\n  },\n  {\n    from: 'scc',\n    to: 'sr'\n  },\n  {\n    from: 'scr',\n    to: 'hr'\n  },\n  {\n    from: 'aam',\n    to: 'aas'\n  },\n  {\n    from: 'adp',\n    to: 'dz'\n  },\n  {\n    from: 'aue',\n    to: 'ktz'\n  },\n  {\n    from: 'ayx',\n    to: 'nun'\n  },\n  {\n    from: 'bgm',\n    to: 'bcg'\n  },\n  {\n    from: 'bjd',\n    to: 'drl'\n  },\n  {\n    from: 'ccq',\n    to: 'rki'\n  },\n  {\n    from: 'cjr',\n    to: 'mom'\n  },\n  {\n    from: 'cka',\n    to: 'cmr'\n  },\n  {\n    from: 'cmk',\n    to: 'xch'\n  },\n  {\n    from: 'coy',\n    to: 'pij'\n  },\n  {\n    from: 'cqu',\n    to: 'quh'\n  },\n  {\n    from: 'drh',\n    to: 'mn'\n  },\n  {\n    from: 'drw',\n    to: 'fa-af'\n  },\n  {\n    from: 'gav',\n    to: 'dev'\n  },\n  {\n    from: 'gfx',\n    to: 'vaj'\n  },\n  {\n    from: 'ggn',\n    to: 'gvr'\n  },\n  {\n    from: 'gti',\n    to: 'nyc'\n  },\n  {\n    from: 'guv',\n    to: 'duz'\n  },\n  {\n    from: 'hrr',\n    to: 'jal'\n  },\n  {\n    from: 'ibi',\n    to: 'opa'\n  },\n  {\n    from: 'ilw',\n    to: 'gal'\n  },\n  {\n    from: 'jeg',\n    to: 'oyb'\n  },\n  {\n    from: 'kgc',\n    to: 'tdf'\n  },\n  {\n    from: 'kgh',\n    to: 'kml'\n  },\n  {\n    from: 'koj',\n    to: 'kwv'\n  },\n  {\n    from: 'krm',\n    to: 'bmf'\n  },\n  {\n    from: 'ktr',\n    to: 'dtp'\n  },\n  {\n    from: 'kvs',\n    to: 'gdj'\n  },\n  {\n    from: 'kwq',\n    to: 'yam'\n  },\n  {\n    from: 'kxe',\n    to: 'tvd'\n  },\n  {\n    from: 'kzj',\n    to: 'dtp'\n  },\n  {\n    from: 'kzt',\n    to: 'dtp'\n  },\n  {\n    from: 'lii',\n    to: 'raq'\n  },\n  {\n    from: 'lmm',\n    to: 'rmx'\n  },\n  {\n    from: 'meg',\n    to: 'cir'\n  },\n  {\n    from: 'mst',\n    to: 'mry'\n  },\n  {\n    from: 'mwj',\n    to: 'vaj'\n  },\n  {\n    from: 'myt',\n    to: 'mry'\n  },\n  {\n    from: 'nad',\n    to: 'xny'\n  },\n  {\n    from: 'ncp',\n    to: 'kdz'\n  },\n  {\n    from: 'nnx',\n    to: 'ngv'\n  },\n  {\n    from: 'nts',\n    to: 'pij'\n  },\n  {\n    from: 'oun',\n    to: 'vaj'\n  },\n  {\n    from: 'pcr',\n    to: 'adx'\n  },\n  {\n    from: 'pmc',\n    to: 'huw'\n  },\n  {\n    from: 'pmu',\n    to: 'phr'\n  },\n  {\n    from: 'ppa',\n    to: 'bfy'\n  },\n  {\n    from: 'ppr',\n    to: 'lcq'\n  },\n  {\n    from: 'pry',\n    to: 'prt'\n  },\n  {\n    from: 'puz',\n    to: 'pub'\n  },\n  {\n    from: 'sca',\n    to: 'hle'\n  },\n  {\n    from: 'skk',\n    to: 'oyb'\n  },\n  {\n    from: 'tdu',\n    to: 'dtp'\n  },\n  {\n    from: 'thc',\n    to: 'tpo'\n  },\n  {\n    from: 'thx',\n    to: 'oyb'\n  },\n  {\n    from: 'tie',\n    to: 'ras'\n  },\n  {\n    from: 'tkk',\n    to: 'twm'\n  },\n  {\n    from: 'tlw',\n    to: 'weo'\n  },\n  {\n    from: 'tmp',\n    to: 'tyj'\n  },\n  {\n    from: 'tne',\n    to: 'kak'\n  },\n  {\n    from: 'tnf',\n    to: 'fa-af'\n  },\n  {\n    from: 'tsf',\n    to: 'taj'\n  },\n  {\n    from: 'uok',\n    to: 'ema'\n  },\n  {\n    from: 'xba',\n    to: 'cax'\n  },\n  {\n    from: 'xia',\n    to: 'acn'\n  },\n  {\n    from: 'xkh',\n    to: 'waw'\n  },\n  {\n    from: 'xsj',\n    to: 'suj'\n  },\n  {\n    from: 'ybd',\n    to: 'rki'\n  },\n  {\n    from: 'yma',\n    to: 'lrr'\n  },\n  {\n    from: 'ymt',\n    to: 'mtm'\n  },\n  {\n    from: 'yos',\n    to: 'zom'\n  },\n  {\n    from: 'yuu',\n    to: 'yug'\n  },\n  {\n    from: 'asd',\n    to: 'snz'\n  },\n  {\n    from: 'dit',\n    to: 'dif'\n  },\n  {\n    from: 'llo',\n    to: 'ngt'\n  },\n  {\n    from: 'myd',\n    to: 'aog'\n  },\n  {\n    from: 'nns',\n    to: 'nbr'\n  },\n  {\n    from: 'agp',\n    to: 'apf'\n  },\n  {\n    from: 'ais',\n    to: 'ami'\n  },\n  {\n    from: 'ajt',\n    to: 'aeb'\n  },\n  {\n    from: 'baz',\n    to: 'nvo'\n  },\n  {\n    from: 'bhk',\n    to: 'fbl'\n  },\n  {\n    from: 'bic',\n    to: 'bir'\n  },\n  {\n    from: 'bjq',\n    to: 'bzc'\n  },\n  {\n    from: 'bkb',\n    to: 'ebk'\n  },\n  {\n    from: 'blg',\n    to: 'iba'\n  },\n  {\n    from: 'btb',\n    to: 'beb'\n  },\n  {\n    from: 'daf',\n    to: 'dnj'\n  },\n  {\n    from: 'dap',\n    to: 'njz'\n  },\n  {\n    from: 'djl',\n    to: 'dze'\n  },\n  {\n    from: 'dkl',\n    to: 'aqd'\n  },\n  {\n    from: 'drr',\n    to: 'kzk'\n  },\n  {\n    from: 'dud',\n    to: 'uth'\n  },\n  {\n    from: 'duj',\n    to: 'dwu'\n  },\n  {\n    from: 'dwl',\n    to: 'dbt'\n  },\n  {\n    from: 'elp',\n    to: 'amq'\n  },\n  {\n    from: 'gbc',\n    to: 'wny'\n  },\n  {\n    from: 'ggo',\n    to: 'esg'\n  },\n  {\n    from: 'ggr',\n    to: 'gtu'\n  },\n  {\n    from: 'gio',\n    to: 'aou'\n  },\n  {\n    from: 'gli',\n    to: 'kzk'\n  },\n  {\n    from: 'ill',\n    to: 'ilm'\n  },\n  {\n    from: 'izi',\n    to: 'eza'\n  },\n  {\n    from: 'jar',\n    to: 'jgk'\n  },\n  {\n    from: 'kdv',\n    to: 'zkd'\n  },\n  {\n    from: 'kgd',\n    to: 'ncq'\n  },\n  {\n    from: 'kpp',\n    to: 'jkm'\n  },\n  {\n    from: 'kxl',\n    to: 'kru'\n  },\n  {\n    from: 'kzh',\n    to: 'dgl'\n  },\n  {\n    from: 'lak',\n    to: 'ksp'\n  },\n  {\n    from: 'leg',\n    to: 'enl'\n  },\n  {\n    from: 'mgx',\n    to: 'jbk'\n  },\n  {\n    from: 'mnt',\n    to: 'wnn'\n  },\n  {\n    from: 'mof',\n    to: 'xnt'\n  },\n  {\n    from: 'mwd',\n    to: 'dmw'\n  },\n  {\n    from: 'nbf',\n    to: 'nru'\n  },\n  {\n    from: 'nbx',\n    to: 'ekc'\n  },\n  {\n    from: 'nln',\n    to: 'azd'\n  },\n  {\n    from: 'nlr',\n    to: 'nrk'\n  },\n  {\n    from: 'noo',\n    to: 'dtd'\n  },\n  {\n    from: 'nxu',\n    to: 'bpp'\n  },\n  {\n    from: 'pat',\n    to: 'kxr'\n  },\n  {\n    from: 'rmr',\n    to: 'emx'\n  },\n  {\n    from: 'sap',\n    to: 'aqt'\n  },\n  {\n    from: 'sgl',\n    to: 'isk'\n  },\n  {\n    from: 'smd',\n    to: 'kmb'\n  },\n  {\n    from: 'snb',\n    to: 'iba'\n  },\n  {\n    from: 'sul',\n    to: 'sgd'\n  },\n  {\n    from: 'sum',\n    to: 'ulw'\n  },\n  {\n    from: 'tgg',\n    to: 'bjp'\n  },\n  {\n    from: 'thw',\n    to: 'ola'\n  },\n  {\n    from: 'tid',\n    to: 'itd'\n  },\n  {\n    from: 'unp',\n    to: 'wro'\n  },\n  {\n    from: 'wgw',\n    to: 'wgb'\n  },\n  {\n    from: 'wit',\n    to: 'nol'\n  },\n  {\n    from: 'wiw',\n    to: 'nwo'\n  },\n  {\n    from: 'xrq',\n    to: 'dmw'\n  },\n  {\n    from: 'yen',\n    to: 'ynq'\n  },\n  {\n    from: 'yiy',\n    to: 'yrm'\n  },\n  {\n    from: 'zir',\n    to: 'scv'\n  },\n  {\n    from: 'sgn-br',\n    to: 'bzs'\n  },\n  {\n    from: 'sgn-co',\n    to: 'csn'\n  },\n  {\n    from: 'sgn-de',\n    to: 'gsg'\n  },\n  {\n    from: 'sgn-dk',\n    to: 'dsl'\n  },\n  {\n    from: 'sgn-fr',\n    to: 'fsl'\n  },\n  {\n    from: 'sgn-gb',\n    to: 'bfi'\n  },\n  {\n    from: 'sgn-gr',\n    to: 'gss'\n  },\n  {\n    from: 'sgn-ie',\n    to: 'isg'\n  },\n  {\n    from: 'sgn-it',\n    to: 'ise'\n  },\n  {\n    from: 'sgn-jp',\n    to: 'jsl'\n  },\n  {\n    from: 'sgn-mx',\n    to: 'mfs'\n  },\n  {\n    from: 'sgn-ni',\n    to: 'ncs'\n  },\n  {\n    from: 'sgn-nl',\n    to: 'dse'\n  },\n  {\n    from: 'sgn-no',\n    to: 'nsi'\n  },\n  {\n    from: 'sgn-pt',\n    to: 'psr'\n  },\n  {\n    from: 'sgn-se',\n    to: 'swl'\n  },\n  {\n    from: 'sgn-us',\n    to: 'ase'\n  },\n  {\n    from: 'sgn-za',\n    to: 'sfs'\n  },\n  {\n    from: 'sgn-es',\n    to: 'ssp'\n  },\n  {\n    from: 'zh-cmn',\n    to: 'zh'\n  },\n  {\n    from: 'zh-cmn-hans',\n    to: 'zh-hans'\n  },\n  {\n    from: 'zh-cmn-hant',\n    to: 'zh-hant'\n  },\n  {\n    from: 'zh-gan',\n    to: 'gan'\n  },\n  {\n    from: 'zh-wuu',\n    to: 'wuu'\n  },\n  {\n    from: 'zh-yue',\n    to: 'yue'\n  },\n  {\n    from: 'no-bokmal',\n    to: 'nb'\n  },\n  {\n    from: 'no-nynorsk',\n    to: 'nn'\n  },\n  {\n    from: 'aa-saaho',\n    to: 'ssy'\n  },\n  {\n    from: 'sh',\n    to: 'sr-latn'\n  },\n  {\n    from: 'cnr',\n    to: 'sr-me'\n  },\n  {\n    from: 'tl',\n    to: 'fil'\n  },\n  {\n    from: 'aju',\n    to: 'jrb'\n  },\n  {\n    from: 'als',\n    to: 'sq'\n  },\n  {\n    from: 'arb',\n    to: 'ar'\n  },\n  {\n    from: 'ayr',\n    to: 'ay'\n  },\n  {\n    from: 'azj',\n    to: 'az'\n  },\n  {\n    from: 'bcc',\n    to: 'bal'\n  },\n  {\n    from: 'bcl',\n    to: 'bik'\n  },\n  {\n    from: 'bxk',\n    to: 'luy'\n  },\n  {\n    from: 'bxr',\n    to: 'bua'\n  },\n  {\n    from: 'cld',\n    to: 'syr'\n  },\n  {\n    from: 'cmn',\n    to: 'zh'\n  },\n  {\n    from: 'cwd',\n    to: 'cr'\n  },\n  {\n    from: 'dgo',\n    to: 'doi'\n  },\n  {\n    from: 'dhd',\n    to: 'mwr'\n  },\n  {\n    from: 'dik',\n    to: 'din'\n  },\n  {\n    from: 'diq',\n    to: 'zza'\n  },\n  {\n    from: 'lbk',\n    to: 'bnc'\n  },\n  {\n    from: 'ekk',\n    to: 'et'\n  },\n  {\n    from: 'emk',\n    to: 'man'\n  },\n  {\n    from: 'esk',\n    to: 'ik'\n  },\n  {\n    from: 'fat',\n    to: 'ak'\n  },\n  {\n    from: 'fuc',\n    to: 'ff'\n  },\n  {\n    from: 'gaz',\n    to: 'om'\n  },\n  {\n    from: 'gbo',\n    to: 'grb'\n  },\n  {\n    from: 'gno',\n    to: 'gon'\n  },\n  {\n    from: 'gug',\n    to: 'gn'\n  },\n  {\n    from: 'gya',\n    to: 'gba'\n  },\n  {\n    from: 'hdn',\n    to: 'hai'\n  },\n  {\n    from: 'hea',\n    to: 'hmn'\n  },\n  {\n    from: 'ike',\n    to: 'iu'\n  },\n  {\n    from: 'kmr',\n    to: 'ku'\n  },\n  {\n    from: 'knc',\n    to: 'kr'\n  },\n  {\n    from: 'kng',\n    to: 'kg'\n  },\n  {\n    from: 'knn',\n    to: 'kok'\n  },\n  {\n    from: 'kpv',\n    to: 'kv'\n  },\n  {\n    from: 'lvs',\n    to: 'lv'\n  },\n  {\n    from: 'mhr',\n    to: 'chm'\n  },\n  {\n    from: 'mup',\n    to: 'raj'\n  },\n  {\n    from: 'khk',\n    to: 'mn'\n  },\n  {\n    from: 'npi',\n    to: 'ne'\n  },\n  {\n    from: 'ojg',\n    to: 'oj'\n  },\n  {\n    from: 'ory',\n    to: 'or'\n  },\n  {\n    from: 'pbu',\n    to: 'ps'\n  },\n  {\n    from: 'pes',\n    to: 'fa'\n  },\n  {\n    from: 'plt',\n    to: 'mg'\n  },\n  {\n    from: 'pnb',\n    to: 'lah'\n  },\n  {\n    from: 'quz',\n    to: 'qu'\n  },\n  {\n    from: 'rmy',\n    to: 'rom'\n  },\n  {\n    from: 'spy',\n    to: 'kln'\n  },\n  {\n    from: 'src',\n    to: 'sc'\n  },\n  {\n    from: 'swh',\n    to: 'sw'\n  },\n  {\n    from: 'ttq',\n    to: 'tmh'\n  },\n  {\n    from: 'tw',\n    to: 'ak'\n  },\n  {\n    from: 'umu',\n    to: 'del'\n  },\n  {\n    from: 'uzn',\n    to: 'uz'\n  },\n  {\n    from: 'xpe',\n    to: 'kpe'\n  },\n  {\n    from: 'xsl',\n    to: 'den'\n  },\n  {\n    from: 'ydd',\n    to: 'yi'\n  },\n  {\n    from: 'zai',\n    to: 'zap'\n  },\n  {\n    from: 'zsm',\n    to: 'ms'\n  },\n  {\n    from: 'zyb',\n    to: 'za'\n  },\n  {\n    from: 'him',\n    to: 'srx'\n  },\n  {\n    from: 'mnk',\n    to: 'man'\n  },\n  {\n    from: 'bh',\n    to: 'bho'\n  },\n  {\n    from: 'prs',\n    to: 'fa-af'\n  },\n  {\n    from: 'swc',\n    to: 'sw-cd'\n  },\n  {\n    from: 'aar',\n    to: 'aa'\n  },\n  {\n    from: 'abk',\n    to: 'ab'\n  },\n  {\n    from: 'ave',\n    to: 'ae'\n  },\n  {\n    from: 'afr',\n    to: 'af'\n  },\n  {\n    from: 'aka',\n    to: 'ak'\n  },\n  {\n    from: 'amh',\n    to: 'am'\n  },\n  {\n    from: 'arg',\n    to: 'an'\n  },\n  {\n    from: 'ara',\n    to: 'ar'\n  },\n  {\n    from: 'asm',\n    to: 'as'\n  },\n  {\n    from: 'ava',\n    to: 'av'\n  },\n  {\n    from: 'aym',\n    to: 'ay'\n  },\n  {\n    from: 'aze',\n    to: 'az'\n  },\n  {\n    from: 'bak',\n    to: 'ba'\n  },\n  {\n    from: 'bel',\n    to: 'be'\n  },\n  {\n    from: 'bul',\n    to: 'bg'\n  },\n  {\n    from: 'bih',\n    to: 'bho'\n  },\n  {\n    from: 'bis',\n    to: 'bi'\n  },\n  {\n    from: 'bam',\n    to: 'bm'\n  },\n  {\n    from: 'ben',\n    to: 'bn'\n  },\n  {\n    from: 'bod',\n    to: 'bo'\n  },\n  {\n    from: 'bre',\n    to: 'br'\n  },\n  {\n    from: 'bos',\n    to: 'bs'\n  },\n  {\n    from: 'cat',\n    to: 'ca'\n  },\n  {\n    from: 'che',\n    to: 'ce'\n  },\n  {\n    from: 'cha',\n    to: 'ch'\n  },\n  {\n    from: 'cos',\n    to: 'co'\n  },\n  {\n    from: 'cre',\n    to: 'cr'\n  },\n  {\n    from: 'ces',\n    to: 'cs'\n  },\n  {\n    from: 'chu',\n    to: 'cu'\n  },\n  {\n    from: 'chv',\n    to: 'cv'\n  },\n  {\n    from: 'cym',\n    to: 'cy'\n  },\n  {\n    from: 'dan',\n    to: 'da'\n  },\n  {\n    from: 'deu',\n    to: 'de'\n  },\n  {\n    from: 'div',\n    to: 'dv'\n  },\n  {\n    from: 'dzo',\n    to: 'dz'\n  },\n  {\n    from: 'ewe',\n    to: 'ee'\n  },\n  {\n    from: 'ell',\n    to: 'el'\n  },\n  {\n    from: 'eng',\n    to: 'en'\n  },\n  {\n    from: 'epo',\n    to: 'eo'\n  },\n  {\n    from: 'spa',\n    to: 'es'\n  },\n  {\n    from: 'est',\n    to: 'et'\n  },\n  {\n    from: 'eus',\n    to: 'eu'\n  },\n  {\n    from: 'fas',\n    to: 'fa'\n  },\n  {\n    from: 'ful',\n    to: 'ff'\n  },\n  {\n    from: 'fin',\n    to: 'fi'\n  },\n  {\n    from: 'fij',\n    to: 'fj'\n  },\n  {\n    from: 'fao',\n    to: 'fo'\n  },\n  {\n    from: 'fra',\n    to: 'fr'\n  },\n  {\n    from: 'fry',\n    to: 'fy'\n  },\n  {\n    from: 'gle',\n    to: 'ga'\n  },\n  {\n    from: 'gla',\n    to: 'gd'\n  },\n  {\n    from: 'glg',\n    to: 'gl'\n  },\n  {\n    from: 'grn',\n    to: 'gn'\n  },\n  {\n    from: 'guj',\n    to: 'gu'\n  },\n  {\n    from: 'glv',\n    to: 'gv'\n  },\n  {\n    from: 'hau',\n    to: 'ha'\n  },\n  {\n    from: 'heb',\n    to: 'he'\n  },\n  {\n    from: 'hin',\n    to: 'hi'\n  },\n  {\n    from: 'hmo',\n    to: 'ho'\n  },\n  {\n    from: 'hrv',\n    to: 'hr'\n  },\n  {\n    from: 'hat',\n    to: 'ht'\n  },\n  {\n    from: 'hun',\n    to: 'hu'\n  },\n  {\n    from: 'hye',\n    to: 'hy'\n  },\n  {\n    from: 'her',\n    to: 'hz'\n  },\n  {\n    from: 'ina',\n    to: 'ia'\n  },\n  {\n    from: 'ind',\n    to: 'id'\n  },\n  {\n    from: 'ile',\n    to: 'ie'\n  },\n  {\n    from: 'ibo',\n    to: 'ig'\n  },\n  {\n    from: 'iii',\n    to: 'ii'\n  },\n  {\n    from: 'ipk',\n    to: 'ik'\n  },\n  {\n    from: 'ido',\n    to: 'io'\n  },\n  {\n    from: 'isl',\n    to: 'is'\n  },\n  {\n    from: 'ita',\n    to: 'it'\n  },\n  {\n    from: 'iku',\n    to: 'iu'\n  },\n  {\n    from: 'jpn',\n    to: 'ja'\n  },\n  {\n    from: 'jav',\n    to: 'jv'\n  },\n  {\n    from: 'kat',\n    to: 'ka'\n  },\n  {\n    from: 'kon',\n    to: 'kg'\n  },\n  {\n    from: 'kik',\n    to: 'ki'\n  },\n  {\n    from: 'kua',\n    to: 'kj'\n  },\n  {\n    from: 'kaz',\n    to: 'kk'\n  },\n  {\n    from: 'kal',\n    to: 'kl'\n  },\n  {\n    from: 'khm',\n    to: 'km'\n  },\n  {\n    from: 'kan',\n    to: 'kn'\n  },\n  {\n    from: 'kor',\n    to: 'ko'\n  },\n  {\n    from: 'kau',\n    to: 'kr'\n  },\n  {\n    from: 'kas',\n    to: 'ks'\n  },\n  {\n    from: 'kur',\n    to: 'ku'\n  },\n  {\n    from: 'kom',\n    to: 'kv'\n  },\n  {\n    from: 'cor',\n    to: 'kw'\n  },\n  {\n    from: 'kir',\n    to: 'ky'\n  },\n  {\n    from: 'lat',\n    to: 'la'\n  },\n  {\n    from: 'ltz',\n    to: 'lb'\n  },\n  {\n    from: 'lug',\n    to: 'lg'\n  },\n  {\n    from: 'lim',\n    to: 'li'\n  },\n  {\n    from: 'lin',\n    to: 'ln'\n  },\n  {\n    from: 'lao',\n    to: 'lo'\n  },\n  {\n    from: 'lit',\n    to: 'lt'\n  },\n  {\n    from: 'lub',\n    to: 'lu'\n  },\n  {\n    from: 'lav',\n    to: 'lv'\n  },\n  {\n    from: 'mlg',\n    to: 'mg'\n  },\n  {\n    from: 'mah',\n    to: 'mh'\n  },\n  {\n    from: 'mri',\n    to: 'mi'\n  },\n  {\n    from: 'mkd',\n    to: 'mk'\n  },\n  {\n    from: 'mal',\n    to: 'ml'\n  },\n  {\n    from: 'mon',\n    to: 'mn'\n  },\n  {\n    from: 'mol',\n    to: 'ro'\n  },\n  {\n    from: 'mar',\n    to: 'mr'\n  },\n  {\n    from: 'msa',\n    to: 'ms'\n  },\n  {\n    from: 'mlt',\n    to: 'mt'\n  },\n  {\n    from: 'mya',\n    to: 'my'\n  },\n  {\n    from: 'nau',\n    to: 'na'\n  },\n  {\n    from: 'nob',\n    to: 'nb'\n  },\n  {\n    from: 'nde',\n    to: 'nd'\n  },\n  {\n    from: 'nep',\n    to: 'ne'\n  },\n  {\n    from: 'ndo',\n    to: 'ng'\n  },\n  {\n    from: 'nld',\n    to: 'nl'\n  },\n  {\n    from: 'nno',\n    to: 'nn'\n  },\n  {\n    from: 'nor',\n    to: 'no'\n  },\n  {\n    from: 'nbl',\n    to: 'nr'\n  },\n  {\n    from: 'nav',\n    to: 'nv'\n  },\n  {\n    from: 'nya',\n    to: 'ny'\n  },\n  {\n    from: 'oci',\n    to: 'oc'\n  },\n  {\n    from: 'oji',\n    to: 'oj'\n  },\n  {\n    from: 'orm',\n    to: 'om'\n  },\n  {\n    from: 'ori',\n    to: 'or'\n  },\n  {\n    from: 'oss',\n    to: 'os'\n  },\n  {\n    from: 'pan',\n    to: 'pa'\n  },\n  {\n    from: 'pli',\n    to: 'pi'\n  },\n  {\n    from: 'pol',\n    to: 'pl'\n  },\n  {\n    from: 'pus',\n    to: 'ps'\n  },\n  {\n    from: 'por',\n    to: 'pt'\n  },\n  {\n    from: 'que',\n    to: 'qu'\n  },\n  {\n    from: 'roh',\n    to: 'rm'\n  },\n  {\n    from: 'run',\n    to: 'rn'\n  },\n  {\n    from: 'ron',\n    to: 'ro'\n  },\n  {\n    from: 'rus',\n    to: 'ru'\n  },\n  {\n    from: 'kin',\n    to: 'rw'\n  },\n  {\n    from: 'san',\n    to: 'sa'\n  },\n  {\n    from: 'srd',\n    to: 'sc'\n  },\n  {\n    from: 'snd',\n    to: 'sd'\n  },\n  {\n    from: 'sme',\n    to: 'se'\n  },\n  {\n    from: 'sag',\n    to: 'sg'\n  },\n  {\n    from: 'hbs',\n    to: 'sr-latn'\n  },\n  {\n    from: 'sin',\n    to: 'si'\n  },\n  {\n    from: 'slk',\n    to: 'sk'\n  },\n  {\n    from: 'slv',\n    to: 'sl'\n  },\n  {\n    from: 'smo',\n    to: 'sm'\n  },\n  {\n    from: 'sna',\n    to: 'sn'\n  },\n  {\n    from: 'som',\n    to: 'so'\n  },\n  {\n    from: 'sqi',\n    to: 'sq'\n  },\n  {\n    from: 'srp',\n    to: 'sr'\n  },\n  {\n    from: 'ssw',\n    to: 'ss'\n  },\n  {\n    from: 'sot',\n    to: 'st'\n  },\n  {\n    from: 'sun',\n    to: 'su'\n  },\n  {\n    from: 'swe',\n    to: 'sv'\n  },\n  {\n    from: 'swa',\n    to: 'sw'\n  },\n  {\n    from: 'tam',\n    to: 'ta'\n  },\n  {\n    from: 'tel',\n    to: 'te'\n  },\n  {\n    from: 'tgk',\n    to: 'tg'\n  },\n  {\n    from: 'tha',\n    to: 'th'\n  },\n  {\n    from: 'tir',\n    to: 'ti'\n  },\n  {\n    from: 'tuk',\n    to: 'tk'\n  },\n  {\n    from: 'tgl',\n    to: 'fil'\n  },\n  {\n    from: 'tsn',\n    to: 'tn'\n  },\n  {\n    from: 'ton',\n    to: 'to'\n  },\n  {\n    from: 'tur',\n    to: 'tr'\n  },\n  {\n    from: 'tso',\n    to: 'ts'\n  },\n  {\n    from: 'tat',\n    to: 'tt'\n  },\n  {\n    from: 'twi',\n    to: 'ak'\n  },\n  {\n    from: 'tah',\n    to: 'ty'\n  },\n  {\n    from: 'uig',\n    to: 'ug'\n  },\n  {\n    from: 'ukr',\n    to: 'uk'\n  },\n  {\n    from: 'urd',\n    to: 'ur'\n  },\n  {\n    from: 'uzb',\n    to: 'uz'\n  },\n  {\n    from: 'ven',\n    to: 've'\n  },\n  {\n    from: 'vie',\n    to: 'vi'\n  },\n  {\n    from: 'vol',\n    to: 'vo'\n  },\n  {\n    from: 'wln',\n    to: 'wa'\n  },\n  {\n    from: 'wol',\n    to: 'wo'\n  },\n  {\n    from: 'xho',\n    to: 'xh'\n  },\n  {\n    from: 'yid',\n    to: 'yi'\n  },\n  {\n    from: 'yor',\n    to: 'yo'\n  },\n  {\n    from: 'zha',\n    to: 'za'\n  },\n  {\n    from: 'zho',\n    to: 'zh'\n  },\n  {\n    from: 'zul',\n    to: 'zu'\n  },\n  {\n    from: 'alb',\n    to: 'sq'\n  },\n  {\n    from: 'arm',\n    to: 'hy'\n  },\n  {\n    from: 'baq',\n    to: 'eu'\n  },\n  {\n    from: 'bur',\n    to: 'my'\n  },\n  {\n    from: 'chi',\n    to: 'zh'\n  },\n  {\n    from: 'cze',\n    to: 'cs'\n  },\n  {\n    from: 'dut',\n    to: 'nl'\n  },\n  {\n    from: 'fre',\n    to: 'fr'\n  },\n  {\n    from: 'geo',\n    to: 'ka'\n  },\n  {\n    from: 'ger',\n    to: 'de'\n  },\n  {\n    from: 'gre',\n    to: 'el'\n  },\n  {\n    from: 'ice',\n    to: 'is'\n  },\n  {\n    from: 'mac',\n    to: 'mk'\n  },\n  {\n    from: 'mao',\n    to: 'mi'\n  },\n  {\n    from: 'may',\n    to: 'ms'\n  },\n  {\n    from: 'per',\n    to: 'fa'\n  },\n  {\n    from: 'rum',\n    to: 'ro'\n  },\n  {\n    from: 'slo',\n    to: 'sk'\n  },\n  {\n    from: 'tib',\n    to: 'bo'\n  },\n  {\n    from: 'wel',\n    to: 'cy'\n  },\n  {\n    from: 'und-aaland',\n    to: 'und-ax'\n  },\n  {\n    from: 'hy-arevmda',\n    to: 'hyw'\n  },\n  {\n    from: 'und-arevmda',\n    to: 'und'\n  },\n  {\n    from: 'und-arevela',\n    to: 'und'\n  },\n  {\n    from: 'und-lojban',\n    to: 'und'\n  },\n  {\n    from: 'und-saaho',\n    to: 'und'\n  },\n  {\n    from: 'und-bokmal',\n    to: 'und'\n  },\n  {\n    from: 'und-nynorsk',\n    to: 'und'\n  },\n  {\n    from: 'und-hakka',\n    to: 'und'\n  },\n  {\n    from: 'und-xiang',\n    to: 'und'\n  },\n  {\n    from: 'und-hepburn-heploc',\n    to: 'und-alalc97'\n  }\n]\n","/**\n * @typedef {'script'|'region'|'variants'} Field\n *\n * @typedef AddOrRemove\n * @property {Field} field\n * @property {string} value\n *\n * @typedef Change\n * @property {AddOrRemove} from\n * @property {AddOrRemove} to\n */\n\n/**\n * @type {Array<Change>}\n */\nexport const fields = [\n  {\n    from: {\n      field: 'script',\n      value: 'qaai'\n    },\n    to: {\n      field: 'script',\n      value: 'zinh'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: 'bu'\n    },\n    to: {\n      field: 'region',\n      value: 'mm'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: 'ct'\n    },\n    to: {\n      field: 'region',\n      value: 'ki'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: 'dd'\n    },\n    to: {\n      field: 'region',\n      value: 'de'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: 'dy'\n    },\n    to: {\n      field: 'region',\n      value: 'bj'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: 'fx'\n    },\n    to: {\n      field: 'region',\n      value: 'fr'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: 'hv'\n    },\n    to: {\n      field: 'region',\n      value: 'bf'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: 'jt'\n    },\n    to: {\n      field: 'region',\n      value: 'um'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: 'mi'\n    },\n    to: {\n      field: 'region',\n      value: 'um'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: 'nh'\n    },\n    to: {\n      field: 'region',\n      value: 'vu'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: 'nq'\n    },\n    to: {\n      field: 'region',\n      value: 'aq'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: 'pu'\n    },\n    to: {\n      field: 'region',\n      value: 'um'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: 'pz'\n    },\n    to: {\n      field: 'region',\n      value: 'pa'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: 'qu'\n    },\n    to: {\n      field: 'region',\n      value: 'eu'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: 'rh'\n    },\n    to: {\n      field: 'region',\n      value: 'zw'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: 'tp'\n    },\n    to: {\n      field: 'region',\n      value: 'tl'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: 'uk'\n    },\n    to: {\n      field: 'region',\n      value: 'gb'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: 'vd'\n    },\n    to: {\n      field: 'region',\n      value: 'vn'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: 'wk'\n    },\n    to: {\n      field: 'region',\n      value: 'um'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: 'yd'\n    },\n    to: {\n      field: 'region',\n      value: 'ye'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: 'zr'\n    },\n    to: {\n      field: 'region',\n      value: 'cd'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '230'\n    },\n    to: {\n      field: 'region',\n      value: 'et'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '280'\n    },\n    to: {\n      field: 'region',\n      value: 'de'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '736'\n    },\n    to: {\n      field: 'region',\n      value: 'sd'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '886'\n    },\n    to: {\n      field: 'region',\n      value: 'ye'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '958'\n    },\n    to: {\n      field: 'region',\n      value: 'aa'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '020'\n    },\n    to: {\n      field: 'region',\n      value: 'ad'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '784'\n    },\n    to: {\n      field: 'region',\n      value: 'ae'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '004'\n    },\n    to: {\n      field: 'region',\n      value: 'af'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '028'\n    },\n    to: {\n      field: 'region',\n      value: 'ag'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '660'\n    },\n    to: {\n      field: 'region',\n      value: 'ai'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '008'\n    },\n    to: {\n      field: 'region',\n      value: 'al'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '051'\n    },\n    to: {\n      field: 'region',\n      value: 'am'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '024'\n    },\n    to: {\n      field: 'region',\n      value: 'ao'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '010'\n    },\n    to: {\n      field: 'region',\n      value: 'aq'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '032'\n    },\n    to: {\n      field: 'region',\n      value: 'ar'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '016'\n    },\n    to: {\n      field: 'region',\n      value: 'as'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '040'\n    },\n    to: {\n      field: 'region',\n      value: 'at'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '036'\n    },\n    to: {\n      field: 'region',\n      value: 'au'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '533'\n    },\n    to: {\n      field: 'region',\n      value: 'aw'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '248'\n    },\n    to: {\n      field: 'region',\n      value: 'ax'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '031'\n    },\n    to: {\n      field: 'region',\n      value: 'az'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '070'\n    },\n    to: {\n      field: 'region',\n      value: 'ba'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '052'\n    },\n    to: {\n      field: 'region',\n      value: 'bb'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '050'\n    },\n    to: {\n      field: 'region',\n      value: 'bd'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '056'\n    },\n    to: {\n      field: 'region',\n      value: 'be'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '854'\n    },\n    to: {\n      field: 'region',\n      value: 'bf'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '100'\n    },\n    to: {\n      field: 'region',\n      value: 'bg'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '048'\n    },\n    to: {\n      field: 'region',\n      value: 'bh'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '108'\n    },\n    to: {\n      field: 'region',\n      value: 'bi'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '204'\n    },\n    to: {\n      field: 'region',\n      value: 'bj'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '652'\n    },\n    to: {\n      field: 'region',\n      value: 'bl'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '060'\n    },\n    to: {\n      field: 'region',\n      value: 'bm'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '096'\n    },\n    to: {\n      field: 'region',\n      value: 'bn'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '068'\n    },\n    to: {\n      field: 'region',\n      value: 'bo'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '535'\n    },\n    to: {\n      field: 'region',\n      value: 'bq'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '076'\n    },\n    to: {\n      field: 'region',\n      value: 'br'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '044'\n    },\n    to: {\n      field: 'region',\n      value: 'bs'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '064'\n    },\n    to: {\n      field: 'region',\n      value: 'bt'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '104'\n    },\n    to: {\n      field: 'region',\n      value: 'mm'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '074'\n    },\n    to: {\n      field: 'region',\n      value: 'bv'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '072'\n    },\n    to: {\n      field: 'region',\n      value: 'bw'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '112'\n    },\n    to: {\n      field: 'region',\n      value: 'by'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '084'\n    },\n    to: {\n      field: 'region',\n      value: 'bz'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '124'\n    },\n    to: {\n      field: 'region',\n      value: 'ca'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '166'\n    },\n    to: {\n      field: 'region',\n      value: 'cc'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '180'\n    },\n    to: {\n      field: 'region',\n      value: 'cd'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '140'\n    },\n    to: {\n      field: 'region',\n      value: 'cf'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '178'\n    },\n    to: {\n      field: 'region',\n      value: 'cg'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '756'\n    },\n    to: {\n      field: 'region',\n      value: 'ch'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '384'\n    },\n    to: {\n      field: 'region',\n      value: 'ci'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '184'\n    },\n    to: {\n      field: 'region',\n      value: 'ck'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '152'\n    },\n    to: {\n      field: 'region',\n      value: 'cl'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '120'\n    },\n    to: {\n      field: 'region',\n      value: 'cm'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '156'\n    },\n    to: {\n      field: 'region',\n      value: 'cn'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '170'\n    },\n    to: {\n      field: 'region',\n      value: 'co'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '188'\n    },\n    to: {\n      field: 'region',\n      value: 'cr'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '192'\n    },\n    to: {\n      field: 'region',\n      value: 'cu'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '132'\n    },\n    to: {\n      field: 'region',\n      value: 'cv'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '531'\n    },\n    to: {\n      field: 'region',\n      value: 'cw'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '162'\n    },\n    to: {\n      field: 'region',\n      value: 'cx'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '196'\n    },\n    to: {\n      field: 'region',\n      value: 'cy'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '203'\n    },\n    to: {\n      field: 'region',\n      value: 'cz'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '278'\n    },\n    to: {\n      field: 'region',\n      value: 'de'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '276'\n    },\n    to: {\n      field: 'region',\n      value: 'de'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '262'\n    },\n    to: {\n      field: 'region',\n      value: 'dj'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '208'\n    },\n    to: {\n      field: 'region',\n      value: 'dk'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '212'\n    },\n    to: {\n      field: 'region',\n      value: 'dm'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '214'\n    },\n    to: {\n      field: 'region',\n      value: 'do'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '012'\n    },\n    to: {\n      field: 'region',\n      value: 'dz'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '218'\n    },\n    to: {\n      field: 'region',\n      value: 'ec'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '233'\n    },\n    to: {\n      field: 'region',\n      value: 'ee'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '818'\n    },\n    to: {\n      field: 'region',\n      value: 'eg'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '732'\n    },\n    to: {\n      field: 'region',\n      value: 'eh'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '232'\n    },\n    to: {\n      field: 'region',\n      value: 'er'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '724'\n    },\n    to: {\n      field: 'region',\n      value: 'es'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '231'\n    },\n    to: {\n      field: 'region',\n      value: 'et'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '246'\n    },\n    to: {\n      field: 'region',\n      value: 'fi'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '242'\n    },\n    to: {\n      field: 'region',\n      value: 'fj'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '238'\n    },\n    to: {\n      field: 'region',\n      value: 'fk'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '583'\n    },\n    to: {\n      field: 'region',\n      value: 'fm'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '234'\n    },\n    to: {\n      field: 'region',\n      value: 'fo'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '250'\n    },\n    to: {\n      field: 'region',\n      value: 'fr'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '249'\n    },\n    to: {\n      field: 'region',\n      value: 'fr'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '266'\n    },\n    to: {\n      field: 'region',\n      value: 'ga'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '826'\n    },\n    to: {\n      field: 'region',\n      value: 'gb'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '308'\n    },\n    to: {\n      field: 'region',\n      value: 'gd'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '268'\n    },\n    to: {\n      field: 'region',\n      value: 'ge'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '254'\n    },\n    to: {\n      field: 'region',\n      value: 'gf'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '831'\n    },\n    to: {\n      field: 'region',\n      value: 'gg'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '288'\n    },\n    to: {\n      field: 'region',\n      value: 'gh'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '292'\n    },\n    to: {\n      field: 'region',\n      value: 'gi'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '304'\n    },\n    to: {\n      field: 'region',\n      value: 'gl'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '270'\n    },\n    to: {\n      field: 'region',\n      value: 'gm'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '324'\n    },\n    to: {\n      field: 'region',\n      value: 'gn'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '312'\n    },\n    to: {\n      field: 'region',\n      value: 'gp'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '226'\n    },\n    to: {\n      field: 'region',\n      value: 'gq'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '300'\n    },\n    to: {\n      field: 'region',\n      value: 'gr'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '239'\n    },\n    to: {\n      field: 'region',\n      value: 'gs'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '320'\n    },\n    to: {\n      field: 'region',\n      value: 'gt'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '316'\n    },\n    to: {\n      field: 'region',\n      value: 'gu'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '624'\n    },\n    to: {\n      field: 'region',\n      value: 'gw'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '328'\n    },\n    to: {\n      field: 'region',\n      value: 'gy'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '344'\n    },\n    to: {\n      field: 'region',\n      value: 'hk'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '334'\n    },\n    to: {\n      field: 'region',\n      value: 'hm'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '340'\n    },\n    to: {\n      field: 'region',\n      value: 'hn'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '191'\n    },\n    to: {\n      field: 'region',\n      value: 'hr'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '332'\n    },\n    to: {\n      field: 'region',\n      value: 'ht'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '348'\n    },\n    to: {\n      field: 'region',\n      value: 'hu'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '360'\n    },\n    to: {\n      field: 'region',\n      value: 'id'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '372'\n    },\n    to: {\n      field: 'region',\n      value: 'ie'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '376'\n    },\n    to: {\n      field: 'region',\n      value: 'il'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '833'\n    },\n    to: {\n      field: 'region',\n      value: 'im'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '356'\n    },\n    to: {\n      field: 'region',\n      value: 'in'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '086'\n    },\n    to: {\n      field: 'region',\n      value: 'io'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '368'\n    },\n    to: {\n      field: 'region',\n      value: 'iq'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '364'\n    },\n    to: {\n      field: 'region',\n      value: 'ir'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '352'\n    },\n    to: {\n      field: 'region',\n      value: 'is'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '380'\n    },\n    to: {\n      field: 'region',\n      value: 'it'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '832'\n    },\n    to: {\n      field: 'region',\n      value: 'je'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '388'\n    },\n    to: {\n      field: 'region',\n      value: 'jm'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '400'\n    },\n    to: {\n      field: 'region',\n      value: 'jo'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '392'\n    },\n    to: {\n      field: 'region',\n      value: 'jp'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '404'\n    },\n    to: {\n      field: 'region',\n      value: 'ke'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '417'\n    },\n    to: {\n      field: 'region',\n      value: 'kg'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '116'\n    },\n    to: {\n      field: 'region',\n      value: 'kh'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '296'\n    },\n    to: {\n      field: 'region',\n      value: 'ki'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '174'\n    },\n    to: {\n      field: 'region',\n      value: 'km'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '659'\n    },\n    to: {\n      field: 'region',\n      value: 'kn'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '408'\n    },\n    to: {\n      field: 'region',\n      value: 'kp'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '410'\n    },\n    to: {\n      field: 'region',\n      value: 'kr'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '414'\n    },\n    to: {\n      field: 'region',\n      value: 'kw'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '136'\n    },\n    to: {\n      field: 'region',\n      value: 'ky'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '398'\n    },\n    to: {\n      field: 'region',\n      value: 'kz'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '418'\n    },\n    to: {\n      field: 'region',\n      value: 'la'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '422'\n    },\n    to: {\n      field: 'region',\n      value: 'lb'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '662'\n    },\n    to: {\n      field: 'region',\n      value: 'lc'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '438'\n    },\n    to: {\n      field: 'region',\n      value: 'li'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '144'\n    },\n    to: {\n      field: 'region',\n      value: 'lk'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '430'\n    },\n    to: {\n      field: 'region',\n      value: 'lr'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '426'\n    },\n    to: {\n      field: 'region',\n      value: 'ls'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '440'\n    },\n    to: {\n      field: 'region',\n      value: 'lt'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '442'\n    },\n    to: {\n      field: 'region',\n      value: 'lu'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '428'\n    },\n    to: {\n      field: 'region',\n      value: 'lv'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '434'\n    },\n    to: {\n      field: 'region',\n      value: 'ly'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '504'\n    },\n    to: {\n      field: 'region',\n      value: 'ma'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '492'\n    },\n    to: {\n      field: 'region',\n      value: 'mc'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '498'\n    },\n    to: {\n      field: 'region',\n      value: 'md'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '499'\n    },\n    to: {\n      field: 'region',\n      value: 'me'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '663'\n    },\n    to: {\n      field: 'region',\n      value: 'mf'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '450'\n    },\n    to: {\n      field: 'region',\n      value: 'mg'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '584'\n    },\n    to: {\n      field: 'region',\n      value: 'mh'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '807'\n    },\n    to: {\n      field: 'region',\n      value: 'mk'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '466'\n    },\n    to: {\n      field: 'region',\n      value: 'ml'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '496'\n    },\n    to: {\n      field: 'region',\n      value: 'mn'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '446'\n    },\n    to: {\n      field: 'region',\n      value: 'mo'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '580'\n    },\n    to: {\n      field: 'region',\n      value: 'mp'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '474'\n    },\n    to: {\n      field: 'region',\n      value: 'mq'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '478'\n    },\n    to: {\n      field: 'region',\n      value: 'mr'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '500'\n    },\n    to: {\n      field: 'region',\n      value: 'ms'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '470'\n    },\n    to: {\n      field: 'region',\n      value: 'mt'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '480'\n    },\n    to: {\n      field: 'region',\n      value: 'mu'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '462'\n    },\n    to: {\n      field: 'region',\n      value: 'mv'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '454'\n    },\n    to: {\n      field: 'region',\n      value: 'mw'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '484'\n    },\n    to: {\n      field: 'region',\n      value: 'mx'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '458'\n    },\n    to: {\n      field: 'region',\n      value: 'my'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '508'\n    },\n    to: {\n      field: 'region',\n      value: 'mz'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '516'\n    },\n    to: {\n      field: 'region',\n      value: 'na'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '540'\n    },\n    to: {\n      field: 'region',\n      value: 'nc'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '562'\n    },\n    to: {\n      field: 'region',\n      value: 'ne'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '574'\n    },\n    to: {\n      field: 'region',\n      value: 'nf'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '566'\n    },\n    to: {\n      field: 'region',\n      value: 'ng'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '558'\n    },\n    to: {\n      field: 'region',\n      value: 'ni'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '528'\n    },\n    to: {\n      field: 'region',\n      value: 'nl'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '578'\n    },\n    to: {\n      field: 'region',\n      value: 'no'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '524'\n    },\n    to: {\n      field: 'region',\n      value: 'np'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '520'\n    },\n    to: {\n      field: 'region',\n      value: 'nr'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '570'\n    },\n    to: {\n      field: 'region',\n      value: 'nu'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '554'\n    },\n    to: {\n      field: 'region',\n      value: 'nz'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '512'\n    },\n    to: {\n      field: 'region',\n      value: 'om'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '591'\n    },\n    to: {\n      field: 'region',\n      value: 'pa'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '604'\n    },\n    to: {\n      field: 'region',\n      value: 'pe'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '258'\n    },\n    to: {\n      field: 'region',\n      value: 'pf'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '598'\n    },\n    to: {\n      field: 'region',\n      value: 'pg'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '608'\n    },\n    to: {\n      field: 'region',\n      value: 'ph'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '586'\n    },\n    to: {\n      field: 'region',\n      value: 'pk'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '616'\n    },\n    to: {\n      field: 'region',\n      value: 'pl'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '666'\n    },\n    to: {\n      field: 'region',\n      value: 'pm'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '612'\n    },\n    to: {\n      field: 'region',\n      value: 'pn'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '630'\n    },\n    to: {\n      field: 'region',\n      value: 'pr'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '275'\n    },\n    to: {\n      field: 'region',\n      value: 'ps'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '620'\n    },\n    to: {\n      field: 'region',\n      value: 'pt'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '585'\n    },\n    to: {\n      field: 'region',\n      value: 'pw'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '600'\n    },\n    to: {\n      field: 'region',\n      value: 'py'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '634'\n    },\n    to: {\n      field: 'region',\n      value: 'qa'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '959'\n    },\n    to: {\n      field: 'region',\n      value: 'qm'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '960'\n    },\n    to: {\n      field: 'region',\n      value: 'qn'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '962'\n    },\n    to: {\n      field: 'region',\n      value: 'qp'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '963'\n    },\n    to: {\n      field: 'region',\n      value: 'qq'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '964'\n    },\n    to: {\n      field: 'region',\n      value: 'qr'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '965'\n    },\n    to: {\n      field: 'region',\n      value: 'qs'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '966'\n    },\n    to: {\n      field: 'region',\n      value: 'qt'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '967'\n    },\n    to: {\n      field: 'region',\n      value: 'eu'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '968'\n    },\n    to: {\n      field: 'region',\n      value: 'qv'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '969'\n    },\n    to: {\n      field: 'region',\n      value: 'qw'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '970'\n    },\n    to: {\n      field: 'region',\n      value: 'qx'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '971'\n    },\n    to: {\n      field: 'region',\n      value: 'qy'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '972'\n    },\n    to: {\n      field: 'region',\n      value: 'qz'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '638'\n    },\n    to: {\n      field: 'region',\n      value: 're'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '642'\n    },\n    to: {\n      field: 'region',\n      value: 'ro'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '688'\n    },\n    to: {\n      field: 'region',\n      value: 'rs'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '643'\n    },\n    to: {\n      field: 'region',\n      value: 'ru'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '646'\n    },\n    to: {\n      field: 'region',\n      value: 'rw'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '682'\n    },\n    to: {\n      field: 'region',\n      value: 'sa'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '090'\n    },\n    to: {\n      field: 'region',\n      value: 'sb'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '690'\n    },\n    to: {\n      field: 'region',\n      value: 'sc'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '729'\n    },\n    to: {\n      field: 'region',\n      value: 'sd'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '752'\n    },\n    to: {\n      field: 'region',\n      value: 'se'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '702'\n    },\n    to: {\n      field: 'region',\n      value: 'sg'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '654'\n    },\n    to: {\n      field: 'region',\n      value: 'sh'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '705'\n    },\n    to: {\n      field: 'region',\n      value: 'si'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '744'\n    },\n    to: {\n      field: 'region',\n      value: 'sj'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '703'\n    },\n    to: {\n      field: 'region',\n      value: 'sk'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '694'\n    },\n    to: {\n      field: 'region',\n      value: 'sl'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '674'\n    },\n    to: {\n      field: 'region',\n      value: 'sm'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '686'\n    },\n    to: {\n      field: 'region',\n      value: 'sn'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '706'\n    },\n    to: {\n      field: 'region',\n      value: 'so'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '740'\n    },\n    to: {\n      field: 'region',\n      value: 'sr'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '728'\n    },\n    to: {\n      field: 'region',\n      value: 'ss'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '678'\n    },\n    to: {\n      field: 'region',\n      value: 'st'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '222'\n    },\n    to: {\n      field: 'region',\n      value: 'sv'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '534'\n    },\n    to: {\n      field: 'region',\n      value: 'sx'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '760'\n    },\n    to: {\n      field: 'region',\n      value: 'sy'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '748'\n    },\n    to: {\n      field: 'region',\n      value: 'sz'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '796'\n    },\n    to: {\n      field: 'region',\n      value: 'tc'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '148'\n    },\n    to: {\n      field: 'region',\n      value: 'td'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '260'\n    },\n    to: {\n      field: 'region',\n      value: 'tf'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '768'\n    },\n    to: {\n      field: 'region',\n      value: 'tg'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '764'\n    },\n    to: {\n      field: 'region',\n      value: 'th'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '762'\n    },\n    to: {\n      field: 'region',\n      value: 'tj'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '772'\n    },\n    to: {\n      field: 'region',\n      value: 'tk'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '626'\n    },\n    to: {\n      field: 'region',\n      value: 'tl'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '795'\n    },\n    to: {\n      field: 'region',\n      value: 'tm'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '788'\n    },\n    to: {\n      field: 'region',\n      value: 'tn'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '776'\n    },\n    to: {\n      field: 'region',\n      value: 'to'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '792'\n    },\n    to: {\n      field: 'region',\n      value: 'tr'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '780'\n    },\n    to: {\n      field: 'region',\n      value: 'tt'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '798'\n    },\n    to: {\n      field: 'region',\n      value: 'tv'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '158'\n    },\n    to: {\n      field: 'region',\n      value: 'tw'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '834'\n    },\n    to: {\n      field: 'region',\n      value: 'tz'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '804'\n    },\n    to: {\n      field: 'region',\n      value: 'ua'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '800'\n    },\n    to: {\n      field: 'region',\n      value: 'ug'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '581'\n    },\n    to: {\n      field: 'region',\n      value: 'um'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '840'\n    },\n    to: {\n      field: 'region',\n      value: 'us'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '858'\n    },\n    to: {\n      field: 'region',\n      value: 'uy'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '860'\n    },\n    to: {\n      field: 'region',\n      value: 'uz'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '336'\n    },\n    to: {\n      field: 'region',\n      value: 'va'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '670'\n    },\n    to: {\n      field: 'region',\n      value: 'vc'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '862'\n    },\n    to: {\n      field: 'region',\n      value: 've'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '092'\n    },\n    to: {\n      field: 'region',\n      value: 'vg'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '850'\n    },\n    to: {\n      field: 'region',\n      value: 'vi'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '704'\n    },\n    to: {\n      field: 'region',\n      value: 'vn'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '548'\n    },\n    to: {\n      field: 'region',\n      value: 'vu'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '876'\n    },\n    to: {\n      field: 'region',\n      value: 'wf'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '882'\n    },\n    to: {\n      field: 'region',\n      value: 'ws'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '973'\n    },\n    to: {\n      field: 'region',\n      value: 'xa'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '974'\n    },\n    to: {\n      field: 'region',\n      value: 'xb'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '975'\n    },\n    to: {\n      field: 'region',\n      value: 'xc'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '976'\n    },\n    to: {\n      field: 'region',\n      value: 'xd'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '977'\n    },\n    to: {\n      field: 'region',\n      value: 'xe'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '978'\n    },\n    to: {\n      field: 'region',\n      value: 'xf'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '979'\n    },\n    to: {\n      field: 'region',\n      value: 'xg'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '980'\n    },\n    to: {\n      field: 'region',\n      value: 'xh'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '981'\n    },\n    to: {\n      field: 'region',\n      value: 'xi'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '982'\n    },\n    to: {\n      field: 'region',\n      value: 'xj'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '983'\n    },\n    to: {\n      field: 'region',\n      value: 'xk'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '984'\n    },\n    to: {\n      field: 'region',\n      value: 'xl'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '985'\n    },\n    to: {\n      field: 'region',\n      value: 'xm'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '986'\n    },\n    to: {\n      field: 'region',\n      value: 'xn'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '987'\n    },\n    to: {\n      field: 'region',\n      value: 'xo'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '988'\n    },\n    to: {\n      field: 'region',\n      value: 'xp'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '989'\n    },\n    to: {\n      field: 'region',\n      value: 'xq'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '990'\n    },\n    to: {\n      field: 'region',\n      value: 'xr'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '991'\n    },\n    to: {\n      field: 'region',\n      value: 'xs'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '992'\n    },\n    to: {\n      field: 'region',\n      value: 'xt'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '993'\n    },\n    to: {\n      field: 'region',\n      value: 'xu'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '994'\n    },\n    to: {\n      field: 'region',\n      value: 'xv'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '995'\n    },\n    to: {\n      field: 'region',\n      value: 'xw'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '996'\n    },\n    to: {\n      field: 'region',\n      value: 'xx'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '997'\n    },\n    to: {\n      field: 'region',\n      value: 'xy'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '998'\n    },\n    to: {\n      field: 'region',\n      value: 'xz'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '720'\n    },\n    to: {\n      field: 'region',\n      value: 'ye'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '887'\n    },\n    to: {\n      field: 'region',\n      value: 'ye'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '175'\n    },\n    to: {\n      field: 'region',\n      value: 'yt'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '710'\n    },\n    to: {\n      field: 'region',\n      value: 'za'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '894'\n    },\n    to: {\n      field: 'region',\n      value: 'zm'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '716'\n    },\n    to: {\n      field: 'region',\n      value: 'zw'\n    }\n  },\n  {\n    from: {\n      field: 'region',\n      value: '999'\n    },\n    to: {\n      field: 'region',\n      value: 'zz'\n    }\n  },\n  {\n    from: {\n      field: 'variants',\n      value: 'polytoni'\n    },\n    to: {\n      field: 'variants',\n      value: 'polyton'\n    }\n  },\n  {\n    from: {\n      field: 'variants',\n      value: 'heploc'\n    },\n    to: {\n      field: 'variants',\n      value: 'alalc97'\n    }\n  }\n]\n","/**\n * @typedef {'script'|'region'|'variants'} Field\n */\n\n/**\n * @type {{region: Record<string, Array<string>>}}\n */\nexport const many = {\n  region: {\n    172: [\n      'ru',\n      'am',\n      'az',\n      'by',\n      'ge',\n      'kg',\n      'kz',\n      'md',\n      'tj',\n      'tm',\n      'ua',\n      'uz'\n    ],\n    200: ['cz', 'sk'],\n    530: ['cw', 'sx', 'bq'],\n    532: ['cw', 'sx', 'bq'],\n    536: ['sa', 'iq'],\n    582: ['fm', 'mh', 'mp', 'pw'],\n    810: [\n      'ru',\n      'am',\n      'az',\n      'by',\n      'ee',\n      'ge',\n      'kz',\n      'kg',\n      'lv',\n      'lt',\n      'md',\n      'tj',\n      'tm',\n      'ua',\n      'uz'\n    ],\n    830: ['je', 'gg'],\n    890: ['rs', 'me', 'si', 'hr', 'mk', 'ba'],\n    891: ['rs', 'me'],\n    an: ['cw', 'sx', 'bq'],\n    cs: ['rs', 'me'],\n    fq: ['aq', 'tf'],\n    nt: ['sa', 'iq'],\n    pc: ['fm', 'mh', 'mp', 'pw'],\n    su: [\n      'ru',\n      'am',\n      'az',\n      'by',\n      'ee',\n      'ge',\n      'kz',\n      'kg',\n      'lv',\n      'lt',\n      'md',\n      'tj',\n      'tm',\n      'ua',\n      'uz'\n    ],\n    yu: ['rs', 'me'],\n    '062': ['034', '143'],\n    ant: ['cw', 'sx', 'bq'],\n    scg: ['rs', 'me'],\n    ntz: ['sa', 'iq'],\n    sun: [\n      'ru',\n      'am',\n      'az',\n      'by',\n      'ee',\n      'ge',\n      'kz',\n      'kg',\n      'lv',\n      'lt',\n      'md',\n      'tj',\n      'tm',\n      'ua',\n      'uz'\n    ],\n    yug: ['rs', 'me']\n  }\n}\n","/**\n * @type {Record<string, string>}\n */\nexport const likely = {\n  aa: 'aa-latn-et',\n  aaa: 'aaa-latn-ng',\n  aab: 'aab-latn-ng',\n  aac: 'aac-latn-pg',\n  aad: 'aad-latn-pg',\n  aae: 'aae-latn-it',\n  'aae-grek': 'aae-grek-it',\n  aaf: 'aaf-mlym-in',\n  'aaf-arab': 'aaf-arab-in',\n  aag: 'aag-latn-pg',\n  aah: 'aah-latn-pg',\n  aai: 'aai-latn-zz',\n  aak: 'aak-latn-zz',\n  aal: 'aal-latn-cm',\n  aan: 'aan-latn-br',\n  aao: 'aao-arab-dz',\n  aap: 'aap-latn-br',\n  aaq: 'aaq-latn-us',\n  aas: 'aas-latn-tz',\n  aat: 'aat-grek-gr',\n  aau: 'aau-latn-zz',\n  aaw: 'aaw-latn-pg',\n  aax: 'aax-latn-id',\n  aaz: 'aaz-latn-id',\n  ab: 'ab-cyrl-ge',\n  aba: 'aba-latn-ci',\n  abb: 'abb-latn-cm',\n  abc: 'abc-latn-ph',\n  abd: 'abd-latn-ph',\n  abe: 'abe-latn-ca',\n  abf: 'abf-latn-my',\n  abg: 'abg-latn-pg',\n  abh: 'abh-arab-tj',\n  abi: 'abi-latn-zz',\n  abl: 'abl-rjng-id',\n  'abl-latn': 'abl-latn-id',\n  abm: 'abm-latn-ng',\n  abn: 'abn-latn-ng',\n  abo: 'abo-latn-ng',\n  abp: 'abp-latn-ph',\n  abq: 'abq-cyrl-zz',\n  abr: 'abr-latn-gh',\n  abs: 'abs-latn-id',\n  abt: 'abt-latn-zz',\n  abu: 'abu-latn-ci',\n  abv: 'abv-arab-bh',\n  abw: 'abw-latn-pg',\n  abx: 'abx-latn-ph',\n  aby: 'aby-latn-zz',\n  abz: 'abz-latn-id',\n  aca: 'aca-latn-co',\n  acb: 'acb-latn-ng',\n  acd: 'acd-latn-zz',\n  ace: 'ace-latn-id',\n  acf: 'acf-latn-lc',\n  ach: 'ach-latn-ug',\n  acm: 'acm-arab-iq',\n  acn: 'acn-latn-cn',\n  acp: 'acp-latn-ng',\n  acq: 'acq-arab-ye',\n  acr: 'acr-latn-gt',\n  acs: 'acs-latn-br',\n  act: 'act-latn-nl',\n  acu: 'acu-latn-ec',\n  acv: 'acv-latn-us',\n  acw: 'acw-arab-sa',\n  acx: 'acx-arab-om',\n  acy: 'acy-latn-cy',\n  'acy-arab': 'acy-arab-cy',\n  'acy-grek': 'acy-grek-cy',\n  acz: 'acz-latn-sd',\n  ada: 'ada-latn-gh',\n  adb: 'adb-latn-tl',\n  add: 'add-latn-cm',\n  ade: 'ade-latn-zz',\n  adf: 'adf-arab-om',\n  adg: 'adg-latn-au',\n  adh: 'adh-latn-ug',\n  adi: 'adi-latn-in',\n  'adi-tibt': 'adi-tibt-cn',\n  adj: 'adj-latn-zz',\n  adl: 'adl-latn-in',\n  adn: 'adn-latn-id',\n  ado: 'ado-latn-pg',\n  adp: 'adp-tibt-bt',\n  adq: 'adq-latn-gh',\n  adr: 'adr-latn-id',\n  adt: 'adt-latn-au',\n  adu: 'adu-latn-ng',\n  adw: 'adw-latn-br',\n  adx: 'adx-tibt-cn',\n  ady: 'ady-cyrl-ru',\n  adz: 'adz-latn-zz',\n  ae: 'ae-avst-ir',\n  aea: 'aea-latn-au',\n  aeb: 'aeb-arab-tn',\n  aec: 'aec-arab-eg',\n  aee: 'aee-arab-af',\n  aek: 'aek-latn-nc',\n  ael: 'ael-latn-cm',\n  aem: 'aem-latn-vn',\n  aeq: 'aeq-arab-pk',\n  aer: 'aer-latn-au',\n  aeu: 'aeu-latn-cn',\n  aew: 'aew-latn-pg',\n  aey: 'aey-latn-zz',\n  aez: 'aez-latn-pg',\n  af: 'af-latn-za',\n  afb: 'afb-arab-kw',\n  afd: 'afd-latn-pg',\n  afe: 'afe-latn-ng',\n  afh: 'afh-latn-gh',\n  afi: 'afi-latn-pg',\n  afk: 'afk-latn-pg',\n  afn: 'afn-latn-ng',\n  afo: 'afo-latn-ng',\n  afp: 'afp-latn-pg',\n  afs: 'afs-latn-mx',\n  afu: 'afu-latn-gh',\n  afz: 'afz-latn-id',\n  aga: 'aga-latn-pe',\n  agb: 'agb-latn-ng',\n  agc: 'agc-latn-zz',\n  agd: 'agd-latn-zz',\n  age: 'age-latn-pg',\n  agf: 'agf-latn-id',\n  agg: 'agg-latn-zz',\n  agh: 'agh-latn-cd',\n  agi: 'agi-deva-in',\n  agj: 'agj-ethi-et',\n  'agj-arab': 'agj-arab-et',\n  agk: 'agk-latn-ph',\n  agl: 'agl-latn-pg',\n  agm: 'agm-latn-zz',\n  agn: 'agn-latn-ph',\n  ago: 'ago-latn-zz',\n  agq: 'agq-latn-cm',\n  agr: 'agr-latn-pe',\n  ags: 'ags-latn-cm',\n  agt: 'agt-latn-ph',\n  agu: 'agu-latn-gt',\n  agv: 'agv-latn-ph',\n  agw: 'agw-latn-sb',\n  agx: 'agx-cyrl-ru',\n  agy: 'agy-latn-ph',\n  agz: 'agz-latn-ph',\n  aha: 'aha-latn-zz',\n  ahb: 'ahb-latn-vu',\n  ahg: 'ahg-ethi-et',\n  ahh: 'ahh-latn-id',\n  ahi: 'ahi-latn-ci',\n  ahk: 'ahk-latn-mm',\n  'ahk-mymr': 'ahk-mymr-mm',\n  'ahk-th': 'ahk-latn-th',\n  'ahk-thai': 'ahk-thai-th',\n  ahl: 'ahl-latn-zz',\n  ahm: 'ahm-latn-ci',\n  ahn: 'ahn-latn-ng',\n  aho: 'aho-ahom-in',\n  ahp: 'ahp-latn-ci',\n  ahr: 'ahr-deva-in',\n  ahs: 'ahs-latn-ng',\n  aht: 'aht-latn-us',\n  aia: 'aia-latn-sb',\n  aib: 'aib-arab-cn',\n  aic: 'aic-latn-pg',\n  aid: 'aid-latn-au',\n  aie: 'aie-latn-pg',\n  aif: 'aif-latn-pg',\n  aig: 'aig-latn-ag',\n  aij: 'aij-hebr-il',\n  aik: 'aik-latn-ng',\n  ail: 'ail-latn-pg',\n  aim: 'aim-latn-in',\n  ain: 'ain-kana-jp',\n  'ain-latn': 'ain-latn-jp',\n  aio: 'aio-mymr-in',\n  aip: 'aip-latn-id',\n  aiq: 'aiq-arab-af',\n  air: 'air-latn-id',\n  ait: 'ait-latn-br',\n  aiw: 'aiw-latn-et',\n  'aiw-arab': 'aiw-arab-et',\n  'aiw-ethi': 'aiw-ethi-et',\n  aix: 'aix-latn-pg',\n  aiy: 'aiy-latn-cf',\n  aja: 'aja-latn-ss',\n  ajg: 'ajg-latn-zz',\n  aji: 'aji-latn-nc',\n  ajn: 'ajn-latn-au',\n  ajp: 'ajp-arab-jo',\n  ajt: 'ajt-arab-tn',\n  ajw: 'ajw-latn-ng',\n  ajz: 'ajz-latn-in',\n  ak: 'ak-latn-gh',\n  akb: 'akb-latn-id',\n  'akb-batk': 'akb-batk-id',\n  akc: 'akc-latn-id',\n  akd: 'akd-latn-ng',\n  ake: 'ake-latn-gy',\n  akf: 'akf-latn-ng',\n  akg: 'akg-latn-id',\n  akh: 'akh-latn-pg',\n  aki: 'aki-latn-pg',\n  akk: 'akk-xsux-iq',\n  akl: 'akl-latn-ph',\n  ako: 'ako-latn-sr',\n  akp: 'akp-latn-gh',\n  akq: 'akq-latn-pg',\n  akr: 'akr-latn-vu',\n  aks: 'aks-latn-tg',\n  akt: 'akt-latn-pg',\n  aku: 'aku-latn-cm',\n  akv: 'akv-cyrl-ru',\n  akw: 'akw-latn-cg',\n  akz: 'akz-latn-us',\n  ala: 'ala-latn-zz',\n  alc: 'alc-latn-cl',\n  ald: 'ald-latn-ci',\n  ale: 'ale-latn-us',\n  alf: 'alf-latn-ng',\n  alh: 'alh-latn-au',\n  ali: 'ali-latn-zz',\n  alj: 'alj-latn-ph',\n  alk: 'alk-laoo-la',\n  all: 'all-mlym-in',\n  alm: 'alm-latn-vu',\n  aln: 'aln-latn-xk',\n  alo: 'alo-latn-id',\n  alp: 'alp-latn-id',\n  alq: 'alq-latn-ca',\n  alr: 'alr-cyrl-ru',\n  alt: 'alt-cyrl-ru',\n  alu: 'alu-latn-sb',\n  alw: 'alw-ethi-et',\n  alx: 'alx-latn-pg',\n  aly: 'aly-latn-au',\n  alz: 'alz-latn-cd',\n  am: 'am-ethi-et',\n  ama: 'ama-latn-br',\n  amb: 'amb-latn-ng',\n  amc: 'amc-latn-pe',\n  ame: 'ame-latn-pe',\n  amf: 'amf-latn-et',\n  'amf-ethi': 'amf-ethi-et',\n  amg: 'amg-latn-au',\n  ami: 'ami-latn-tw',\n  amj: 'amj-latn-td',\n  amk: 'amk-latn-id',\n  amm: 'amm-latn-zz',\n  amn: 'amn-latn-zz',\n  amo: 'amo-latn-ng',\n  amp: 'amp-latn-zz',\n  amq: 'amq-latn-id',\n  amr: 'amr-latn-pe',\n  ams: 'ams-jpan-jp',\n  amt: 'amt-latn-pg',\n  amu: 'amu-latn-mx',\n  amv: 'amv-latn-id',\n  amw: 'amw-syrc-sy',\n  'amw-arab': 'amw-arab-sy',\n  'amw-armi': 'amw-armi-sy',\n  'amw-latn': 'amw-latn-sy',\n  amx: 'amx-latn-au',\n  amy: 'amy-latn-au',\n  amz: 'amz-latn-au',\n  an: 'an-latn-es',\n  ana: 'ana-latn-co',\n  anb: 'anb-latn-pe',\n  anc: 'anc-latn-zz',\n  and: 'and-latn-id',\n  ane: 'ane-latn-nc',\n  anf: 'anf-latn-gh',\n  ang: 'ang-latn-gb',\n  anh: 'anh-latn-pg',\n  ani: 'ani-cyrl-ru',\n  anj: 'anj-latn-pg',\n  ank: 'ank-latn-zz',\n  anl: 'anl-latn-mm',\n  anm: 'anm-latn-in',\n  ann: 'ann-latn-ng',\n  ano: 'ano-latn-co',\n  anp: 'anp-deva-in',\n  anr: 'anr-deva-in',\n  ans: 'ans-latn-co',\n  ant: 'ant-latn-au',\n  anu: 'anu-ethi-et',\n  'anu-arab': 'anu-arab-ss',\n  'anu-latn': 'anu-latn-ss',\n  anv: 'anv-latn-cm',\n  anw: 'anw-latn-ng',\n  anx: 'anx-latn-pg',\n  any: 'any-latn-zz',\n  anz: 'anz-latn-pg',\n  aoa: 'aoa-latn-st',\n  aob: 'aob-latn-pg',\n  aoc: 'aoc-latn-ve',\n  aod: 'aod-latn-pg',\n  aoe: 'aoe-latn-pg',\n  aof: 'aof-latn-pg',\n  aog: 'aog-latn-pg',\n  aoi: 'aoi-latn-au',\n  aoj: 'aoj-latn-zz',\n  aok: 'aok-latn-nc',\n  aol: 'aol-latn-id',\n  aom: 'aom-latn-zz',\n  aon: 'aon-latn-pg',\n  aor: 'aor-latn-vu',\n  aos: 'aos-latn-id',\n  aot: 'aot-beng-bd',\n  'aot-latn': 'aot-latn-in',\n  aox: 'aox-latn-gy',\n  aoz: 'aoz-latn-id',\n  apb: 'apb-latn-sb',\n  apc: 'apc-arab-sy',\n  apd: 'apd-arab-tg',\n  ape: 'ape-latn-zz',\n  apf: 'apf-latn-ph',\n  apg: 'apg-latn-id',\n  aph: 'aph-deva-np',\n  api: 'api-latn-br',\n  apj: 'apj-latn-us',\n  apk: 'apk-latn-us',\n  apl: 'apl-latn-us',\n  apm: 'apm-latn-us',\n  apn: 'apn-latn-br',\n  apo: 'apo-latn-pg',\n  app: 'app-latn-vu',\n  apr: 'apr-latn-zz',\n  aps: 'aps-latn-zz',\n  apt: 'apt-latn-in',\n  apu: 'apu-latn-br',\n  apv: 'apv-latn-br',\n  apw: 'apw-latn-us',\n  apx: 'apx-latn-id',\n  apy: 'apy-latn-br',\n  apz: 'apz-latn-zz',\n  aqc: 'aqc-cyrl-ru',\n  aqd: 'aqd-latn-ml',\n  aqg: 'aqg-latn-ng',\n  aqk: 'aqk-latn-ng',\n  aqm: 'aqm-latn-id',\n  aqn: 'aqn-latn-ph',\n  aqr: 'aqr-latn-nc',\n  aqt: 'aqt-latn-py',\n  aqz: 'aqz-latn-br',\n  ar: 'ar-arab-eg',\n  arc: 'arc-armi-ir',\n  'arc-nbat': 'arc-nbat-jo',\n  'arc-palm': 'arc-palm-sy',\n  ard: 'ard-latn-au',\n  are: 'are-latn-au',\n  arh: 'arh-latn-zz',\n  ari: 'ari-latn-us',\n  arj: 'arj-latn-br',\n  ark: 'ark-latn-br',\n  arl: 'arl-latn-pe',\n  arn: 'arn-latn-cl',\n  aro: 'aro-latn-bo',\n  arp: 'arp-latn-us',\n  arq: 'arq-arab-dz',\n  arr: 'arr-latn-br',\n  ars: 'ars-arab-sa',\n  aru: 'aru-latn-br',\n  arw: 'arw-latn-sr',\n  arx: 'arx-latn-br',\n  ary: 'ary-arab-ma',\n  arz: 'arz-arab-eg',\n  as: 'as-beng-in',\n  asa: 'asa-latn-tz',\n  asb: 'asb-latn-ca',\n  asc: 'asc-latn-id',\n  ase: 'ase-sgnw-us',\n  asg: 'asg-latn-zz',\n  ash: 'ash-latn-pe',\n  asi: 'asi-latn-id',\n  asj: 'asj-latn-cm',\n  ask: 'ask-arab-af',\n  asl: 'asl-latn-id',\n  asn: 'asn-latn-br',\n  aso: 'aso-latn-zz',\n  ass: 'ass-latn-cm',\n  ast: 'ast-latn-es',\n  asu: 'asu-latn-br',\n  asv: 'asv-latn-cd',\n  asx: 'asx-latn-pg',\n  asy: 'asy-latn-id',\n  asz: 'asz-latn-id',\n  ata: 'ata-latn-zz',\n  atb: 'atb-latn-cn',\n  'atb-lisu': 'atb-lisu-cn',\n  atc: 'atc-latn-pe',\n  atd: 'atd-latn-ph',\n  ate: 'ate-latn-pg',\n  atg: 'atg-latn-zz',\n  ati: 'ati-latn-ci',\n  atj: 'atj-latn-ca',\n  atk: 'atk-latn-ph',\n  atl: 'atl-latn-ph',\n  atm: 'atm-latn-ph',\n  atn: 'atn-arab-ir',\n  ato: 'ato-latn-cm',\n  atp: 'atp-latn-ph',\n  atq: 'atq-latn-id',\n  atr: 'atr-latn-br',\n  ats: 'ats-latn-us',\n  att: 'att-latn-ph',\n  atu: 'atu-latn-ss',\n  atv: 'atv-cyrl-ru',\n  atw: 'atw-latn-us',\n  atx: 'atx-latn-br',\n  aty: 'aty-latn-vu',\n  atz: 'atz-latn-ph',\n  aua: 'aua-latn-sb',\n  auc: 'auc-latn-ec',\n  aud: 'aud-latn-sb',\n  aug: 'aug-latn-bj',\n  auh: 'auh-latn-zm',\n  aui: 'aui-latn-pg',\n  auj: 'auj-arab-ly',\n  'auj-latn': 'auj-latn-ly',\n  'auj-tfng': 'auj-tfng-ly',\n  auk: 'auk-latn-pg',\n  aul: 'aul-latn-vu',\n  aum: 'aum-latn-ng',\n  aun: 'aun-latn-pg',\n  auo: 'auo-latn-ng',\n  aup: 'aup-latn-pg',\n  auq: 'auq-latn-id',\n  aur: 'aur-latn-pg',\n  aut: 'aut-latn-pf',\n  auu: 'auu-latn-id',\n  auw: 'auw-latn-id',\n  auy: 'auy-latn-zz',\n  auz: 'auz-arab-uz',\n  av: 'av-cyrl-ru',\n  avb: 'avb-latn-pg',\n  avd: 'avd-arab-ir',\n  avi: 'avi-latn-ci',\n  avk: 'avk-latn-001',\n  avl: 'avl-arab-zz',\n  avm: 'avm-latn-au',\n  avn: 'avn-latn-zz',\n  avo: 'avo-latn-br',\n  avs: 'avs-latn-pe',\n  avt: 'avt-latn-zz',\n  avu: 'avu-latn-zz',\n  avv: 'avv-latn-br',\n  awa: 'awa-deva-in',\n  awb: 'awb-latn-zz',\n  awc: 'awc-latn-ng',\n  awe: 'awe-latn-br',\n  awg: 'awg-latn-au',\n  awh: 'awh-latn-id',\n  awi: 'awi-latn-pg',\n  awk: 'awk-latn-au',\n  awm: 'awm-latn-pg',\n  awn: 'awn-ethi-et',\n  awo: 'awo-latn-zz',\n  awr: 'awr-latn-id',\n  aws: 'aws-latn-id',\n  awt: 'awt-latn-br',\n  awu: 'awu-latn-id',\n  awv: 'awv-latn-id',\n  aww: 'aww-latn-pg',\n  awx: 'awx-latn-zz',\n  awy: 'awy-latn-id',\n  axb: 'axb-latn-ar',\n  axe: 'axe-latn-au',\n  axg: 'axg-latn-br',\n  axk: 'axk-latn-cf',\n  axl: 'axl-latn-au',\n  axm: 'axm-armn-am',\n  axx: 'axx-latn-nc',\n  ay: 'ay-latn-bo',\n  aya: 'aya-latn-pg',\n  ayb: 'ayb-latn-zz',\n  ayc: 'ayc-latn-pe',\n  ayd: 'ayd-latn-au',\n  aye: 'aye-latn-ng',\n  ayg: 'ayg-latn-tg',\n  ayh: 'ayh-arab-ye',\n  ayi: 'ayi-latn-ng',\n  ayk: 'ayk-latn-ng',\n  ayl: 'ayl-arab-ly',\n  ayn: 'ayn-arab-ye',\n  ayo: 'ayo-latn-py',\n  ayp: 'ayp-arab-iq',\n  ayq: 'ayq-latn-pg',\n  ays: 'ays-latn-ph',\n  ayt: 'ayt-latn-ph',\n  ayu: 'ayu-latn-ng',\n  ayz: 'ayz-latn-id',\n  az: 'az-latn-az',\n  'az-arab': 'az-arab-ir',\n  'az-iq': 'az-arab-iq',\n  'az-ir': 'az-arab-ir',\n  'az-ru': 'az-cyrl-ru',\n  azb: 'azb-arab-ir',\n  'azb-cyrl': 'azb-cyrl-az',\n  'azb-latn': 'azb-latn-az',\n  azd: 'azd-latn-mx',\n  azg: 'azg-latn-mx',\n  azm: 'azm-latn-mx',\n  azn: 'azn-latn-mx',\n  azo: 'azo-latn-cm',\n  azt: 'azt-latn-ph',\n  azz: 'azz-latn-mx',\n  ba: 'ba-cyrl-ru',\n  baa: 'baa-latn-sb',\n  bab: 'bab-latn-gw',\n  bac: 'bac-latn-id',\n  bae: 'bae-latn-ve',\n  baf: 'baf-latn-cm',\n  bag: 'bag-latn-cm',\n  bah: 'bah-latn-bs',\n  baj: 'baj-latn-id',\n  bal: 'bal-arab-pk',\n  ban: 'ban-latn-id',\n  bao: 'bao-latn-co',\n  bap: 'bap-deva-np',\n  bar: 'bar-latn-at',\n  bas: 'bas-latn-cm',\n  bau: 'bau-latn-ng',\n  bav: 'bav-latn-zz',\n  baw: 'baw-latn-cm',\n  bax: 'bax-bamu-cm',\n  bay: 'bay-latn-id',\n  bba: 'bba-latn-zz',\n  bbb: 'bbb-latn-zz',\n  bbc: 'bbc-latn-id',\n  bbd: 'bbd-latn-zz',\n  bbe: 'bbe-latn-cd',\n  bbf: 'bbf-latn-pg',\n  bbg: 'bbg-latn-ga',\n  bbi: 'bbi-latn-cm',\n  bbj: 'bbj-latn-cm',\n  bbk: 'bbk-latn-cm',\n  bbl: 'bbl-geor-ge',\n  bbm: 'bbm-latn-cd',\n  bbn: 'bbn-latn-pg',\n  bbo: 'bbo-latn-bf',\n  bbp: 'bbp-latn-zz',\n  bbq: 'bbq-latn-cm',\n  bbr: 'bbr-latn-zz',\n  bbs: 'bbs-latn-ng',\n  bbt: 'bbt-latn-ng',\n  bbu: 'bbu-latn-ng',\n  bbv: 'bbv-latn-pg',\n  bbw: 'bbw-latn-cm',\n  bbx: 'bbx-latn-cm',\n  bby: 'bby-latn-cm',\n  bca: 'bca-latn-cn',\n  'bca-hani': 'bca-hani-cn',\n  bcb: 'bcb-latn-sn',\n  bcd: 'bcd-latn-id',\n  bce: 'bce-latn-cm',\n  bcf: 'bcf-latn-zz',\n  bcg: 'bcg-latn-gn',\n  bch: 'bch-latn-zz',\n  bci: 'bci-latn-ci',\n  bcj: 'bcj-latn-au',\n  bck: 'bck-latn-au',\n  bcm: 'bcm-latn-zz',\n  bcn: 'bcn-latn-zz',\n  bco: 'bco-latn-zz',\n  bcp: 'bcp-latn-cd',\n  bcq: 'bcq-ethi-zz',\n  bcr: 'bcr-latn-ca',\n  bcs: 'bcs-latn-ng',\n  bct: 'bct-latn-cd',\n  bcu: 'bcu-latn-zz',\n  bcv: 'bcv-latn-ng',\n  bcw: 'bcw-latn-cm',\n  bcy: 'bcy-latn-ng',\n  bcz: 'bcz-latn-sn',\n  bda: 'bda-latn-sn',\n  bdb: 'bdb-latn-id',\n  bdc: 'bdc-latn-co',\n  bdd: 'bdd-latn-zz',\n  bde: 'bde-latn-ng',\n  bdf: 'bdf-latn-pg',\n  bdg: 'bdg-latn-my',\n  bdh: 'bdh-latn-ss',\n  bdi: 'bdi-latn-sd',\n  bdj: 'bdj-latn-ss',\n  bdk: 'bdk-latn-az',\n  bdl: 'bdl-latn-id',\n  bdm: 'bdm-latn-td',\n  bdn: 'bdn-latn-cm',\n  bdo: 'bdo-latn-td',\n  bdp: 'bdp-latn-tz',\n  bdq: 'bdq-latn-vn',\n  bdr: 'bdr-latn-my',\n  bds: 'bds-latn-tz',\n  bdt: 'bdt-latn-cf',\n  bdu: 'bdu-latn-cm',\n  bdv: 'bdv-orya-in',\n  bdw: 'bdw-latn-id',\n  bdx: 'bdx-latn-id',\n  bdy: 'bdy-latn-au',\n  bdz: 'bdz-arab-pk',\n  be: 'be-cyrl-by',\n  bea: 'bea-latn-ca',\n  'bea-cans': 'bea-cans-ca',\n  beb: 'beb-latn-cm',\n  bec: 'bec-latn-cm',\n  bed: 'bed-latn-id',\n  bee: 'bee-deva-in',\n  bef: 'bef-latn-zz',\n  beh: 'beh-latn-zz',\n  bei: 'bei-latn-id',\n  bej: 'bej-arab-sd',\n  bek: 'bek-latn-pg',\n  bem: 'bem-latn-zm',\n  beo: 'beo-latn-pg',\n  bep: 'bep-latn-id',\n  beq: 'beq-latn-cg',\n  bes: 'bes-latn-td',\n  bet: 'bet-latn-zz',\n  beu: 'beu-latn-id',\n  bev: 'bev-latn-ci',\n  bew: 'bew-latn-id',\n  bex: 'bex-latn-zz',\n  bey: 'bey-latn-pg',\n  bez: 'bez-latn-tz',\n  bfa: 'bfa-latn-ss',\n  'bfa-arab': 'bfa-arab-ss',\n  bfb: 'bfb-deva-in',\n  bfc: 'bfc-latn-cn',\n  bfd: 'bfd-latn-cm',\n  bfe: 'bfe-latn-id',\n  bff: 'bff-latn-cf',\n  bfg: 'bfg-latn-id',\n  bfh: 'bfh-latn-pg',\n  bfj: 'bfj-latn-cm',\n  bfl: 'bfl-latn-cf',\n  bfm: 'bfm-latn-cm',\n  bfn: 'bfn-latn-tl',\n  bfo: 'bfo-latn-bf',\n  bfp: 'bfp-latn-cm',\n  bfq: 'bfq-taml-in',\n  bfs: 'bfs-latn-cn',\n  'bfs-hani': 'bfs-hani-cn',\n  bft: 'bft-arab-pk',\n  bfu: 'bfu-tibt-in',\n  'bfu-takr': 'bfu-takr-in',\n  bfw: 'bfw-orya-in',\n  bfx: 'bfx-latn-ph',\n  bfy: 'bfy-deva-in',\n  bfz: 'bfz-deva-in',\n  bg: 'bg-cyrl-bg',\n  bga: 'bga-latn-ng',\n  bgb: 'bgb-latn-id',\n  bgc: 'bgc-deva-in',\n  bgd: 'bgd-deva-in',\n  bgf: 'bgf-latn-cm',\n  bgg: 'bgg-latn-in',\n  bgi: 'bgi-latn-ph',\n  bgj: 'bgj-latn-cm',\n  bgn: 'bgn-arab-pk',\n  bgo: 'bgo-latn-gn',\n  bgp: 'bgp-arab-pk',\n  bgq: 'bgq-deva-in',\n  bgr: 'bgr-latn-in',\n  bgs: 'bgs-latn-ph',\n  bgt: 'bgt-latn-sb',\n  bgu: 'bgu-latn-ng',\n  bgv: 'bgv-latn-id',\n  bgw: 'bgw-deva-in',\n  bgx: 'bgx-grek-tr',\n  bgy: 'bgy-latn-id',\n  bgz: 'bgz-latn-id',\n  bha: 'bha-deva-in',\n  bhb: 'bhb-deva-in',\n  bhc: 'bhc-latn-id',\n  bhd: 'bhd-deva-in',\n  'bhd-arab': 'bhd-arab-in',\n  'bhd-takr': 'bhd-takr-in',\n  bhe: 'bhe-arab-pk',\n  bhf: 'bhf-latn-pg',\n  bhg: 'bhg-latn-zz',\n  bhh: 'bhh-cyrl-il',\n  'bhh-hebr': 'bhh-hebr-il',\n  'bhh-latn': 'bhh-latn-il',\n  bhi: 'bhi-deva-in',\n  bhj: 'bhj-deva-np',\n  bhl: 'bhl-latn-zz',\n  bhm: 'bhm-arab-om',\n  bhn: 'bhn-syrc-ge',\n  bho: 'bho-deva-in',\n  bhp: 'bhp-latn-id',\n  bhq: 'bhq-latn-id',\n  bhr: 'bhr-latn-mg',\n  bhs: 'bhs-latn-cm',\n  bht: 'bht-takr-in',\n  'bht-deva': 'bht-deva-in',\n  'bht-latn': 'bht-latn-in',\n  bhu: 'bhu-deva-in',\n  bhv: 'bhv-latn-id',\n  bhw: 'bhw-latn-id',\n  bhy: 'bhy-latn-zz',\n  bhz: 'bhz-latn-id',\n  bi: 'bi-latn-vu',\n  bia: 'bia-latn-au',\n  bib: 'bib-latn-zz',\n  bid: 'bid-latn-td',\n  bie: 'bie-latn-pg',\n  bif: 'bif-latn-gw',\n  big: 'big-latn-zz',\n  bik: 'bik-latn-ph',\n  bil: 'bil-latn-ng',\n  bim: 'bim-latn-zz',\n  bin: 'bin-latn-ng',\n  bio: 'bio-latn-zz',\n  bip: 'bip-latn-cd',\n  biq: 'biq-latn-zz',\n  bir: 'bir-latn-pg',\n  bit: 'bit-latn-pg',\n  biu: 'biu-latn-in',\n  biv: 'biv-latn-gh',\n  biw: 'biw-latn-cm',\n  biy: 'biy-deva-in',\n  biz: 'biz-latn-cd',\n  bja: 'bja-latn-cd',\n  bjb: 'bjb-latn-au',\n  bjc: 'bjc-latn-pg',\n  bjf: 'bjf-syrc-il',\n  bjg: 'bjg-latn-gw',\n  bjh: 'bjh-latn-zz',\n  bji: 'bji-ethi-zz',\n  bjj: 'bjj-deva-in',\n  bjk: 'bjk-latn-pg',\n  bjl: 'bjl-latn-pg',\n  bjm: 'bjm-arab-iq',\n  bjn: 'bjn-latn-id',\n  bjo: 'bjo-latn-zz',\n  bjp: 'bjp-latn-pg',\n  bjr: 'bjr-latn-zz',\n  bjs: 'bjs-latn-bb',\n  bjt: 'bjt-latn-sn',\n  bju: 'bju-latn-cm',\n  bjv: 'bjv-latn-td',\n  bjw: 'bjw-latn-ci',\n  bjx: 'bjx-latn-ph',\n  bjy: 'bjy-latn-au',\n  bjz: 'bjz-latn-zz',\n  bka: 'bka-latn-ng',\n  bkc: 'bkc-latn-zz',\n  bkd: 'bkd-latn-ph',\n  bkf: 'bkf-latn-cd',\n  bkg: 'bkg-latn-cf',\n  bkh: 'bkh-latn-cm',\n  bki: 'bki-latn-vu',\n  bkj: 'bkj-latn-cf',\n  bkl: 'bkl-latn-id',\n  bkm: 'bkm-latn-cm',\n  bkn: 'bkn-latn-id',\n  bko: 'bko-latn-cm',\n  bkp: 'bkp-latn-cd',\n  bkq: 'bkq-latn-zz',\n  bkr: 'bkr-latn-id',\n  bks: 'bks-latn-ph',\n  bkt: 'bkt-latn-cd',\n  bku: 'bku-latn-ph',\n  bkv: 'bkv-latn-zz',\n  bkw: 'bkw-latn-cg',\n  bkx: 'bkx-latn-tl',\n  bky: 'bky-latn-ng',\n  bkz: 'bkz-latn-id',\n  bla: 'bla-latn-ca',\n  blb: 'blb-latn-sb',\n  blc: 'blc-latn-ca',\n  bld: 'bld-latn-id',\n  ble: 'ble-latn-gw',\n  blf: 'blf-latn-id',\n  blg: 'blg-latn-my',\n  blh: 'blh-latn-lr',\n  bli: 'bli-latn-cd',\n  blj: 'blj-latn-id',\n  blk: 'blk-mymr-mm',\n  blm: 'blm-latn-ss',\n  bln: 'bln-latn-ph',\n  blo: 'blo-latn-bj',\n  blp: 'blp-latn-sb',\n  blq: 'blq-latn-pg',\n  blr: 'blr-latn-cn',\n  'blr-tale': 'blr-tale-cn',\n  'blr-thai': 'blr-thai-th',\n  bls: 'bls-latn-id',\n  blt: 'blt-tavt-vn',\n  blv: 'blv-latn-ao',\n  blw: 'blw-latn-ph',\n  blx: 'blx-latn-ph',\n  bly: 'bly-latn-bj',\n  blz: 'blz-latn-id',\n  bm: 'bm-latn-ml',\n  bma: 'bma-latn-ng',\n  bmb: 'bmb-latn-cd',\n  bmc: 'bmc-latn-pg',\n  bmd: 'bmd-latn-gn',\n  bme: 'bme-latn-cf',\n  bmf: 'bmf-latn-sl',\n  bmg: 'bmg-latn-cd',\n  bmh: 'bmh-latn-zz',\n  bmi: 'bmi-latn-td',\n  bmj: 'bmj-deva-np',\n  bmk: 'bmk-latn-zz',\n  bml: 'bml-latn-cd',\n  bmm: 'bmm-latn-mg',\n  bmn: 'bmn-latn-pg',\n  bmo: 'bmo-latn-cm',\n  bmp: 'bmp-latn-pg',\n  bmq: 'bmq-latn-ml',\n  bmr: 'bmr-latn-co',\n  bms: 'bms-latn-ne',\n  bmu: 'bmu-latn-zz',\n  bmv: 'bmv-latn-cm',\n  bmw: 'bmw-latn-cg',\n  bmx: 'bmx-latn-pg',\n  bmz: 'bmz-latn-pg',\n  bn: 'bn-beng-bd',\n  bna: 'bna-latn-id',\n  bnb: 'bnb-latn-my',\n  bnc: 'bnc-latn-ph',\n  bnd: 'bnd-latn-id',\n  bne: 'bne-latn-id',\n  bnf: 'bnf-latn-id',\n  bng: 'bng-latn-zz',\n  bni: 'bni-latn-cd',\n  bnj: 'bnj-latn-ph',\n  bnk: 'bnk-latn-vu',\n  bnm: 'bnm-latn-zz',\n  bnn: 'bnn-latn-tw',\n  bno: 'bno-latn-ph',\n  bnp: 'bnp-latn-zz',\n  bnq: 'bnq-latn-id',\n  bnr: 'bnr-latn-vu',\n  bns: 'bns-deva-in',\n  bnu: 'bnu-latn-id',\n  bnv: 'bnv-latn-id',\n  bnw: 'bnw-latn-pg',\n  bnx: 'bnx-latn-cd',\n  bny: 'bny-latn-my',\n  bnz: 'bnz-latn-cm',\n  bo: 'bo-tibt-cn',\n  boa: 'boa-latn-pe',\n  bob: 'bob-latn-ke',\n  boe: 'boe-latn-cm',\n  bof: 'bof-latn-bf',\n  boh: 'boh-latn-cd',\n  boj: 'boj-latn-zz',\n  bok: 'bok-latn-cg',\n  bol: 'bol-latn-ng',\n  bom: 'bom-latn-zz',\n  bon: 'bon-latn-zz',\n  boo: 'boo-latn-ml',\n  bop: 'bop-latn-pg',\n  boq: 'boq-latn-pg',\n  bor: 'bor-latn-br',\n  bot: 'bot-latn-ss',\n  bou: 'bou-latn-tz',\n  bov: 'bov-latn-gh',\n  bow: 'bow-latn-pg',\n  box: 'box-latn-bf',\n  boy: 'boy-latn-cf',\n  boz: 'boz-latn-ml',\n  'boz-arab': 'boz-arab-ml',\n  bpa: 'bpa-latn-vu',\n  bpc: 'bpc-latn-cm',\n  bpd: 'bpd-latn-cf',\n  bpe: 'bpe-latn-pg',\n  bpg: 'bpg-latn-id',\n  bph: 'bph-cyrl-ru',\n  bpi: 'bpi-latn-pg',\n  bpj: 'bpj-latn-cd',\n  bpk: 'bpk-latn-nc',\n  bpl: 'bpl-latn-au',\n  bpm: 'bpm-latn-pg',\n  bpo: 'bpo-latn-id',\n  bpp: 'bpp-latn-id',\n  bpq: 'bpq-latn-id',\n  bpr: 'bpr-latn-ph',\n  bps: 'bps-latn-ph',\n  bpt: 'bpt-latn-au',\n  bpu: 'bpu-latn-pg',\n  bpv: 'bpv-latn-id',\n  bpw: 'bpw-latn-pg',\n  bpx: 'bpx-deva-in',\n  bpy: 'bpy-beng-in',\n  bpz: 'bpz-latn-id',\n  bqa: 'bqa-latn-bj',\n  bqb: 'bqb-latn-id',\n  bqc: 'bqc-latn-zz',\n  bqd: 'bqd-latn-cm',\n  bqf: 'bqf-latn-gn',\n  'bqf-arab': 'bqf-arab-gn',\n  bqg: 'bqg-latn-tg',\n  bqi: 'bqi-arab-ir',\n  bqj: 'bqj-latn-sn',\n  bqk: 'bqk-latn-cf',\n  bql: 'bql-latn-pg',\n  bqm: 'bqm-latn-cm',\n  bqo: 'bqo-latn-cm',\n  bqp: 'bqp-latn-zz',\n  bqq: 'bqq-latn-id',\n  bqr: 'bqr-latn-id',\n  bqs: 'bqs-latn-pg',\n  bqt: 'bqt-latn-cm',\n  bqu: 'bqu-latn-cd',\n  bqv: 'bqv-latn-ci',\n  bqw: 'bqw-latn-ng',\n  bqx: 'bqx-latn-ng',\n  bqz: 'bqz-latn-cm',\n  br: 'br-latn-fr',\n  bra: 'bra-deva-in',\n  brb: 'brb-khmr-kh',\n  'brb-laoo': 'brb-laoo-la',\n  'brb-latn': 'brb-latn-vn',\n  brc: 'brc-latn-gy',\n  brd: 'brd-deva-np',\n  brf: 'brf-latn-cd',\n  brg: 'brg-latn-bo',\n  brh: 'brh-arab-pk',\n  bri: 'bri-latn-cm',\n  brj: 'brj-latn-vu',\n  brk: 'brk-arab-sd',\n  brl: 'brl-latn-bw',\n  brm: 'brm-latn-cd',\n  brn: 'brn-latn-cr',\n  brp: 'brp-latn-id',\n  brq: 'brq-latn-pg',\n  brr: 'brr-latn-sb',\n  brs: 'brs-latn-id',\n  brt: 'brt-latn-ng',\n  bru: 'bru-latn-vn',\n  'bru-laoo': 'bru-laoo-la',\n  'bru-thai': 'bru-thai-la',\n  brv: 'brv-laoo-la',\n  brx: 'brx-deva-in',\n  bry: 'bry-latn-pg',\n  brz: 'brz-latn-zz',\n  bs: 'bs-latn-ba',\n  bsa: 'bsa-latn-id',\n  bsb: 'bsb-latn-bn',\n  bsc: 'bsc-latn-sn',\n  bse: 'bse-latn-cm',\n  bsf: 'bsf-latn-ng',\n  bsh: 'bsh-arab-af',\n  bsi: 'bsi-latn-cm',\n  bsj: 'bsj-latn-zz',\n  bsk: 'bsk-arab-pk',\n  'bsk-latn': 'bsk-latn-pk',\n  bsl: 'bsl-latn-ng',\n  bsm: 'bsm-latn-id',\n  bsn: 'bsn-latn-co',\n  bso: 'bso-latn-td',\n  bsp: 'bsp-latn-gn',\n  bsq: 'bsq-bass-lr',\n  bsr: 'bsr-latn-ng',\n  bss: 'bss-latn-cm',\n  bst: 'bst-ethi-zz',\n  bsu: 'bsu-latn-id',\n  bsv: 'bsv-latn-gn',\n  'bsv-arab': 'bsv-arab-gn',\n  bsw: 'bsw-latn-et',\n  'bsw-ethi': 'bsw-ethi-et',\n  bsx: 'bsx-latn-ng',\n  bsy: 'bsy-latn-my',\n  bta: 'bta-latn-ng',\n  btc: 'btc-latn-cm',\n  btd: 'btd-batk-id',\n  bte: 'bte-latn-ng',\n  btf: 'btf-latn-td',\n  btg: 'btg-latn-ci',\n  bth: 'bth-latn-my',\n  bti: 'bti-latn-id',\n  btj: 'btj-latn-id',\n  btm: 'btm-batk-id',\n  btn: 'btn-latn-ph',\n  bto: 'bto-latn-ph',\n  btp: 'btp-latn-pg',\n  btq: 'btq-latn-my',\n  btr: 'btr-latn-vu',\n  bts: 'bts-latn-id',\n  'bts-batk': 'bts-batk-id',\n  btt: 'btt-latn-zz',\n  btu: 'btu-latn-ng',\n  btv: 'btv-deva-pk',\n  btw: 'btw-latn-ph',\n  btx: 'btx-latn-id',\n  'btx-batk': 'btx-batk-id',\n  bty: 'bty-latn-id',\n  btz: 'btz-latn-id',\n  bua: 'bua-cyrl-ru',\n  bub: 'bub-latn-td',\n  buc: 'buc-latn-yt',\n  bud: 'bud-latn-zz',\n  bue: 'bue-latn-ca',\n  buf: 'buf-latn-cd',\n  bug: 'bug-latn-id',\n  buh: 'buh-latn-cn',\n  bui: 'bui-latn-cg',\n  buj: 'buj-latn-ng',\n  buk: 'buk-latn-zz',\n  bum: 'bum-latn-cm',\n  bun: 'bun-latn-sl',\n  buo: 'buo-latn-zz',\n  bup: 'bup-latn-id',\n  buq: 'buq-latn-pg',\n  bus: 'bus-latn-zz',\n  but: 'but-latn-pg',\n  buu: 'buu-latn-zz',\n  buv: 'buv-latn-pg',\n  buw: 'buw-latn-ga',\n  bux: 'bux-latn-ng',\n  buy: 'buy-latn-sl',\n  buz: 'buz-latn-ng',\n  bva: 'bva-latn-td',\n  bvb: 'bvb-latn-gq',\n  bvc: 'bvc-latn-sb',\n  bvd: 'bvd-latn-sb',\n  bve: 'bve-latn-id',\n  bvf: 'bvf-latn-td',\n  bvg: 'bvg-latn-cm',\n  bvh: 'bvh-latn-ng',\n  bvi: 'bvi-latn-ss',\n  bvj: 'bvj-latn-ng',\n  bvk: 'bvk-latn-id',\n  bvm: 'bvm-latn-cm',\n  bvn: 'bvn-latn-pg',\n  bvo: 'bvo-latn-td',\n  bvq: 'bvq-latn-cf',\n  bvr: 'bvr-latn-au',\n  bvt: 'bvt-latn-id',\n  bvu: 'bvu-latn-id',\n  bvv: 'bvv-latn-ve',\n  bvw: 'bvw-latn-ng',\n  bvx: 'bvx-latn-cg',\n  bvy: 'bvy-latn-ph',\n  bvz: 'bvz-latn-id',\n  bwa: 'bwa-latn-nc',\n  bwb: 'bwb-latn-fj',\n  bwc: 'bwc-latn-zm',\n  bwd: 'bwd-latn-zz',\n  bwe: 'bwe-mymr-mm',\n  'bwe-latn': 'bwe-latn-mm',\n  bwf: 'bwf-latn-pg',\n  bwg: 'bwg-latn-mz',\n  bwh: 'bwh-latn-cm',\n  bwi: 'bwi-latn-ve',\n  bwj: 'bwj-latn-bf',\n  bwk: 'bwk-latn-pg',\n  bwl: 'bwl-latn-cd',\n  bwm: 'bwm-latn-pg',\n  bwo: 'bwo-latn-et',\n  'bwo-ethi': 'bwo-ethi-et',\n  bwp: 'bwp-latn-id',\n  bwq: 'bwq-latn-bf',\n  bwr: 'bwr-latn-zz',\n  bws: 'bws-latn-cd',\n  bwt: 'bwt-latn-cm',\n  bwu: 'bwu-latn-gh',\n  bww: 'bww-latn-cd',\n  bwx: 'bwx-latn-cn',\n  bwy: 'bwy-latn-bf',\n  bwz: 'bwz-latn-cg',\n  bxa: 'bxa-latn-sb',\n  bxb: 'bxb-latn-ss',\n  bxc: 'bxc-latn-gq',\n  bxf: 'bxf-latn-pg',\n  bxg: 'bxg-latn-cd',\n  bxh: 'bxh-latn-zz',\n  bxi: 'bxi-latn-au',\n  bxj: 'bxj-latn-au',\n  bxl: 'bxl-latn-bf',\n  bxm: 'bxm-cyrl-mn',\n  'bxm-latn': 'bxm-latn-mn',\n  'bxm-mong': 'bxm-mong-mn',\n  bxn: 'bxn-latn-au',\n  bxo: 'bxo-latn-ng',\n  bxp: 'bxp-latn-cm',\n  bxq: 'bxq-latn-ng',\n  bxs: 'bxs-latn-cm',\n  bxu: 'bxu-mong-cn',\n  'bxu-cyrl': 'bxu-cyrl-cn',\n  'bxu-latn': 'bxu-latn-cn',\n  bxv: 'bxv-latn-td',\n  bxw: 'bxw-latn-ml',\n  bxz: 'bxz-latn-pg',\n  bya: 'bya-latn-ph',\n  byb: 'byb-latn-cm',\n  byc: 'byc-latn-ng',\n  byd: 'byd-latn-id',\n  bye: 'bye-latn-zz',\n  byf: 'byf-latn-ng',\n  byh: 'byh-deva-np',\n  byi: 'byi-latn-cd',\n  byj: 'byj-latn-ng',\n  byk: 'byk-latn-cn',\n  byl: 'byl-latn-id',\n  bym: 'bym-latn-au',\n  byn: 'byn-ethi-er',\n  byp: 'byp-latn-ng',\n  byr: 'byr-latn-zz',\n  bys: 'bys-latn-zz',\n  byv: 'byv-latn-cm',\n  byw: 'byw-deva-np',\n  byx: 'byx-latn-zz',\n  byz: 'byz-latn-pg',\n  bza: 'bza-latn-zz',\n  bzb: 'bzb-latn-id',\n  bzc: 'bzc-latn-mg',\n  bzd: 'bzd-latn-cr',\n  bze: 'bze-latn-ml',\n  bzf: 'bzf-latn-zz',\n  bzh: 'bzh-latn-zz',\n  bzi: 'bzi-thai-th',\n  bzj: 'bzj-latn-bz',\n  bzk: 'bzk-latn-ni',\n  bzl: 'bzl-latn-id',\n  bzm: 'bzm-latn-cd',\n  bzn: 'bzn-latn-id',\n  bzo: 'bzo-latn-cd',\n  bzp: 'bzp-latn-id',\n  bzq: 'bzq-latn-id',\n  bzr: 'bzr-latn-au',\n  bzt: 'bzt-latn-001',\n  bzu: 'bzu-latn-id',\n  bzv: 'bzv-latn-cm',\n  bzw: 'bzw-latn-zz',\n  bzx: 'bzx-latn-ml',\n  bzy: 'bzy-latn-ng',\n  bzz: 'bzz-latn-ng',\n  ca: 'ca-latn-es',\n  caa: 'caa-latn-gt',\n  cab: 'cab-latn-hn',\n  cac: 'cac-latn-gt',\n  cad: 'cad-latn-us',\n  cae: 'cae-latn-sn',\n  caf: 'caf-latn-ca',\n  'caf-cans': 'caf-cans-ca',\n  cag: 'cag-latn-py',\n  cah: 'cah-latn-pe',\n  caj: 'caj-latn-ar',\n  cak: 'cak-latn-gt',\n  cal: 'cal-latn-mp',\n  cam: 'cam-latn-nc',\n  can: 'can-latn-zz',\n  cao: 'cao-latn-bo',\n  cap: 'cap-latn-bo',\n  caq: 'caq-latn-in',\n  car: 'car-latn-ve',\n  cas: 'cas-latn-bo',\n  cav: 'cav-latn-bo',\n  caw: 'caw-latn-bo',\n  cax: 'cax-latn-bo',\n  cay: 'cay-latn-ca',\n  caz: 'caz-latn-bo',\n  cbb: 'cbb-latn-co',\n  cbc: 'cbc-latn-co',\n  cbd: 'cbd-latn-co',\n  cbg: 'cbg-latn-co',\n  cbi: 'cbi-latn-ec',\n  cbj: 'cbj-latn-zz',\n  cbk: 'cbk-latn-ph',\n  'cbk-brai': 'cbk-brai-ph',\n  cbl: 'cbl-latn-mm',\n  cbn: 'cbn-thai-th',\n  cbo: 'cbo-latn-ng',\n  cbq: 'cbq-latn-ng',\n  cbr: 'cbr-latn-pe',\n  cbs: 'cbs-latn-pe',\n  cbt: 'cbt-latn-pe',\n  cbu: 'cbu-latn-pe',\n  cbv: 'cbv-latn-co',\n  cbw: 'cbw-latn-ph',\n  cby: 'cby-latn-co',\n  ccc: 'ccc-latn-pe',\n  ccd: 'ccd-latn-br',\n  cce: 'cce-latn-mz',\n  ccg: 'ccg-latn-ng',\n  cch: 'cch-latn-ng',\n  ccj: 'ccj-latn-gw',\n  ccl: 'ccl-latn-tz',\n  ccm: 'ccm-latn-my',\n  cco: 'cco-latn-mx',\n  ccp: 'ccp-cakm-bd',\n  ccr: 'ccr-latn-sv',\n  cde: 'cde-telu-in',\n  cdf: 'cdf-latn-in',\n  'cdf-beng': 'cdf-beng-in',\n  cdh: 'cdh-deva-in',\n  'cdh-takr': 'cdh-takr-in',\n  cdi: 'cdi-gujr-in',\n  cdj: 'cdj-deva-in',\n  cdm: 'cdm-deva-np',\n  'cdm-latn': 'cdm-latn-np',\n  cdo: 'cdo-hans-cn',\n  'cdo-hant': 'cdo-hant-cn',\n  'cdo-latn': 'cdo-latn-cn',\n  cdr: 'cdr-latn-ng',\n  cdz: 'cdz-beng-in',\n  ce: 'ce-cyrl-ru',\n  cea: 'cea-latn-us',\n  ceb: 'ceb-latn-ph',\n  ceg: 'ceg-latn-py',\n  cek: 'cek-latn-mm',\n  cen: 'cen-latn-ng',\n  cet: 'cet-latn-ng',\n  cey: 'cey-latn-mm',\n  cfa: 'cfa-latn-zz',\n  cfd: 'cfd-latn-ng',\n  cfg: 'cfg-latn-ng',\n  cfm: 'cfm-latn-mm',\n  'cfm-beng': 'cfm-beng-in',\n  cga: 'cga-latn-pg',\n  cgc: 'cgc-latn-ph',\n  cgg: 'cgg-latn-ug',\n  cgk: 'cgk-tibt-bt',\n  ch: 'ch-latn-gu',\n  chb: 'chb-latn-co',\n  chd: 'chd-latn-mx',\n  chf: 'chf-latn-mx',\n  chg: 'chg-arab-tm',\n  chh: 'chh-latn-us',\n  chj: 'chj-latn-mx',\n  chk: 'chk-latn-fm',\n  chl: 'chl-latn-us',\n  chm: 'chm-cyrl-ru',\n  chn: 'chn-latn-us',\n  'chn-dupl': 'chn-dupl-us',\n  cho: 'cho-latn-us',\n  chp: 'chp-latn-ca',\n  chq: 'chq-latn-mx',\n  chr: 'chr-cher-us',\n  cht: 'cht-latn-pe',\n  chw: 'chw-latn-mz',\n  chx: 'chx-deva-np',\n  chy: 'chy-latn-us',\n  chz: 'chz-latn-mx',\n  cia: 'cia-latn-id',\n  'cia-arab': 'cia-arab-id',\n  'cia-hang': 'cia-hang-id',\n  cib: 'cib-latn-bj',\n  cic: 'cic-latn-us',\n  cie: 'cie-latn-ng',\n  cih: 'cih-deva-in',\n  cim: 'cim-latn-it',\n  cin: 'cin-latn-br',\n  cip: 'cip-latn-mx',\n  cir: 'cir-latn-nc',\n  ciw: 'ciw-latn-us',\n  'ciw-cans': 'ciw-cans-us',\n  ciy: 'ciy-latn-ve',\n  cja: 'cja-arab-kh',\n  cje: 'cje-latn-vn',\n  cjh: 'cjh-latn-us',\n  cji: 'cji-cyrl-ru',\n  cjk: 'cjk-latn-ao',\n  cjm: 'cjm-cham-vn',\n  cjn: 'cjn-latn-pg',\n  cjo: 'cjo-latn-pe',\n  cjp: 'cjp-latn-cr',\n  cjs: 'cjs-latn-ru',\n  'cjs-cyrl': 'cjs-cyrl-ru',\n  cjv: 'cjv-latn-zz',\n  cjy: 'cjy-hans-cn',\n  'cjy-hant': 'cjy-hant-cn',\n  ckb: 'ckb-arab-iq',\n  ckl: 'ckl-latn-zz',\n  ckm: 'ckm-latn-hr',\n  'ckm-glag': 'ckm-glag-hr',\n  ckn: 'ckn-latn-mm',\n  cko: 'cko-latn-zz',\n  ckq: 'ckq-latn-td',\n  ckr: 'ckr-latn-pg',\n  cks: 'cks-latn-nc',\n  ckt: 'ckt-cyrl-ru',\n  cku: 'cku-latn-us',\n  ckv: 'ckv-latn-tw',\n  ckx: 'ckx-latn-cm',\n  cky: 'cky-latn-zz',\n  ckz: 'ckz-latn-gt',\n  cla: 'cla-latn-zz',\n  clc: 'clc-latn-ca',\n  cle: 'cle-latn-mx',\n  clh: 'clh-arab-pk',\n  cli: 'cli-latn-gh',\n  clj: 'clj-latn-mm',\n  clk: 'clk-latn-in',\n  'clk-tibt': 'clk-tibt-cn',\n  cll: 'cll-latn-gh',\n  clm: 'clm-latn-us',\n  clo: 'clo-latn-mx',\n  clt: 'clt-latn-mm',\n  clu: 'clu-latn-ph',\n  clw: 'clw-cyrl-ru',\n  cly: 'cly-latn-mx',\n  cma: 'cma-latn-vn',\n  cme: 'cme-latn-zz',\n  cmg: 'cmg-soyo-mn',\n  cmi: 'cmi-latn-co',\n  cml: 'cml-latn-id',\n  cmo: 'cmo-latn-vn',\n  'cmo-kh': 'cmo-latn-kh',\n  'cmo-khmr': 'cmo-khmr-kh',\n  cmr: 'cmr-latn-mm',\n  cms: 'cms-latn-it',\n  cmt: 'cmt-latn-za',\n  cna: 'cna-tibt-in',\n  cnb: 'cnb-latn-mm',\n  cnc: 'cnc-latn-vn',\n  cng: 'cng-latn-cn',\n  cnh: 'cnh-latn-mm',\n  cni: 'cni-latn-pe',\n  cnk: 'cnk-latn-mm',\n  cnl: 'cnl-latn-mx',\n  cnp: 'cnp-hans-cn',\n  'cnp-hant': 'cnp-hant-cn',\n  cnq: 'cnq-latn-cm',\n  cns: 'cns-latn-id',\n  cnt: 'cnt-latn-mx',\n  cnw: 'cnw-latn-mm',\n  cnx: 'cnx-latn-gb',\n  co: 'co-latn-fr',\n  coa: 'coa-latn-au',\n  cob: 'cob-latn-mx',\n  coc: 'coc-latn-mx',\n  cod: 'cod-latn-pe',\n  coe: 'coe-latn-co',\n  cof: 'cof-latn-ec',\n  cog: 'cog-thai-th',\n  coh: 'coh-latn-ke',\n  coj: 'coj-latn-mx',\n  cok: 'cok-latn-mx',\n  col: 'col-latn-us',\n  com: 'com-latn-us',\n  coo: 'coo-latn-ca',\n  cop: 'cop-copt-eg',\n  coq: 'coq-latn-us',\n  cot: 'cot-latn-pe',\n  cou: 'cou-latn-sn',\n  cox: 'cox-latn-pe',\n  coz: 'coz-latn-mx',\n  cpa: 'cpa-latn-mx',\n  cpb: 'cpb-latn-pe',\n  cpc: 'cpc-latn-pe',\n  cpg: 'cpg-grek-gr',\n  cpi: 'cpi-latn-nr',\n  cpn: 'cpn-latn-gh',\n  cpo: 'cpo-latn-bf',\n  cps: 'cps-latn-ph',\n  cpu: 'cpu-latn-pe',\n  cpx: 'cpx-latn-cn',\n  cpy: 'cpy-latn-pe',\n  cqd: 'cqd-latn-cn',\n  cr: 'cr-cans-ca',\n  crb: 'crb-latn-vc',\n  crc: 'crc-latn-vu',\n  crd: 'crd-latn-us',\n  crf: 'crf-latn-co',\n  crg: 'crg-latn-ca',\n  crh: 'crh-cyrl-ua',\n  cri: 'cri-latn-st',\n  crj: 'crj-cans-ca',\n  'crj-latn': 'crj-latn-ca',\n  crk: 'crk-cans-ca',\n  crl: 'crl-cans-ca',\n  crm: 'crm-cans-ca',\n  crn: 'crn-latn-mx',\n  cro: 'cro-latn-us',\n  crq: 'crq-latn-ar',\n  crs: 'crs-latn-sc',\n  crt: 'crt-latn-ar',\n  crv: 'crv-latn-in',\n  crw: 'crw-latn-vn',\n  crx: 'crx-latn-ca',\n  'crx-cans': 'crx-cans-ca',\n  cry: 'cry-latn-ng',\n  crz: 'crz-latn-us',\n  cs: 'cs-latn-cz',\n  csa: 'csa-latn-mx',\n  csb: 'csb-latn-pl',\n  csh: 'csh-mymr-mm',\n  'csh-latn': 'csh-latn-mm',\n  csj: 'csj-latn-mm',\n  csk: 'csk-latn-sn',\n  csm: 'csm-latn-us',\n  cso: 'cso-latn-mx',\n  csp: 'csp-hans-cn',\n  'csp-hant': 'csp-hant-cn',\n  css: 'css-latn-us',\n  cst: 'cst-latn-us',\n  csv: 'csv-latn-mm',\n  csw: 'csw-cans-ca',\n  csy: 'csy-latn-mm',\n  csz: 'csz-latn-us',\n  cta: 'cta-latn-mx',\n  ctc: 'ctc-latn-us',\n  ctd: 'ctd-pauc-mm',\n  cte: 'cte-latn-mx',\n  ctg: 'ctg-beng-bd',\n  'ctg-arab': 'ctg-arab-bd',\n  'ctg-latn': 'ctg-latn-bd',\n  cth: 'cth-latn-mm',\n  ctl: 'ctl-latn-mx',\n  ctm: 'ctm-latn-us',\n  ctn: 'ctn-deva-np',\n  cto: 'cto-latn-co',\n  ctp: 'ctp-latn-mx',\n  cts: 'cts-latn-ph',\n  ctt: 'ctt-taml-in',\n  ctu: 'ctu-latn-mx',\n  ctz: 'ctz-latn-mx',\n  cu: 'cu-cyrl-ru',\n  'cu-glag': 'cu-glag-bg',\n  cua: 'cua-latn-vn',\n  cub: 'cub-latn-co',\n  cuc: 'cuc-latn-mx',\n  cuh: 'cuh-latn-ke',\n  cui: 'cui-latn-co',\n  cuj: 'cuj-latn-pe',\n  cuk: 'cuk-latn-pa',\n  cul: 'cul-latn-br',\n  cuo: 'cuo-latn-ve',\n  cup: 'cup-latn-us',\n  cut: 'cut-latn-mx',\n  cuu: 'cuu-lana-cn',\n  cuv: 'cuv-latn-cm',\n  cux: 'cux-latn-mx',\n  cv: 'cv-cyrl-ru',\n  cvg: 'cvg-latn-in',\n  'cvg-tibt': 'cvg-tibt-in',\n  cvn: 'cvn-latn-mx',\n  cwa: 'cwa-latn-tz',\n  cwb: 'cwb-latn-mz',\n  cwe: 'cwe-latn-tz',\n  cwg: 'cwg-latn-my',\n  cwt: 'cwt-latn-sn',\n  cy: 'cy-latn-gb',\n  cya: 'cya-latn-mx',\n  cyb: 'cyb-latn-bo',\n  cyo: 'cyo-latn-ph',\n  czh: 'czh-hans-cn',\n  'czh-hant': 'czh-hant-cn',\n  czk: 'czk-hebr-cz',\n  czn: 'czn-latn-mx',\n  czt: 'czt-latn-mm',\n  da: 'da-latn-dk',\n  daa: 'daa-latn-td',\n  dac: 'dac-latn-pg',\n  dad: 'dad-latn-zz',\n  dae: 'dae-latn-cm',\n  daf: 'daf-latn-ci',\n  dag: 'dag-latn-zz',\n  dah: 'dah-latn-zz',\n  dai: 'dai-latn-td',\n  daj: 'daj-latn-sd',\n  dak: 'dak-latn-us',\n  dal: 'dal-latn-ke',\n  dam: 'dam-latn-ng',\n  dao: 'dao-latn-mm',\n  daq: 'daq-deva-in',\n  dar: 'dar-cyrl-ru',\n  das: 'das-latn-ci',\n  dau: 'dau-latn-td',\n  dav: 'dav-latn-ke',\n  daw: 'daw-latn-ph',\n  dax: 'dax-latn-au',\n  daz: 'daz-latn-id',\n  dba: 'dba-latn-ml',\n  dbb: 'dbb-latn-ng',\n  dbd: 'dbd-latn-zz',\n  dbe: 'dbe-latn-id',\n  dbf: 'dbf-latn-id',\n  dbg: 'dbg-latn-ml',\n  dbi: 'dbi-latn-ng',\n  dbj: 'dbj-latn-my',\n  'dbj-arab': 'dbj-arab-my',\n  dbl: 'dbl-latn-au',\n  dbm: 'dbm-latn-ng',\n  dbn: 'dbn-latn-id',\n  dbo: 'dbo-latn-ng',\n  dbp: 'dbp-latn-ng',\n  dbq: 'dbq-latn-zz',\n  dbt: 'dbt-latn-ml',\n  dbu: 'dbu-latn-ml',\n  dbv: 'dbv-latn-ng',\n  dbw: 'dbw-latn-ml',\n  dby: 'dby-latn-pg',\n  dcc: 'dcc-arab-in',\n  dcr: 'dcr-latn-vi',\n  dda: 'dda-latn-au',\n  ddd: 'ddd-latn-ss',\n  dde: 'dde-latn-cg',\n  ddg: 'ddg-latn-tl',\n  ddi: 'ddi-latn-pg',\n  ddj: 'ddj-latn-au',\n  ddn: 'ddn-latn-zz',\n  ddo: 'ddo-cyrl-ru',\n  ddr: 'ddr-latn-au',\n  dds: 'dds-latn-ml',\n  ddw: 'ddw-latn-id',\n  de: 'de-latn-de',\n  dec: 'dec-latn-sd',\n  ded: 'ded-latn-zz',\n  dee: 'dee-latn-lr',\n  def: 'def-arab-ir',\n  deg: 'deg-latn-ng',\n  deh: 'deh-arab-pk',\n  dei: 'dei-latn-id',\n  dek: 'dek-latn-cm',\n  del: 'del-latn-us',\n  dem: 'dem-latn-id',\n  den: 'den-latn-ca',\n  deq: 'deq-latn-cf',\n  der: 'der-beng-in',\n  'der-latn': 'der-latn-in',\n  des: 'des-latn-br',\n  dev: 'dev-latn-pg',\n  dez: 'dez-latn-cd',\n  dga: 'dga-latn-zz',\n  dgb: 'dgb-latn-ml',\n  dgc: 'dgc-latn-ph',\n  dgd: 'dgd-latn-bf',\n  dge: 'dge-latn-pg',\n  dgg: 'dgg-latn-pg',\n  dgh: 'dgh-latn-zz',\n  dgi: 'dgi-latn-zz',\n  dgk: 'dgk-latn-cf',\n  dgl: 'dgl-arab-zz',\n  dgn: 'dgn-latn-au',\n  dgr: 'dgr-latn-ca',\n  dgs: 'dgs-latn-bf',\n  dgt: 'dgt-latn-au',\n  dgw: 'dgw-latn-au',\n  dgx: 'dgx-latn-pg',\n  dgz: 'dgz-latn-zz',\n  dhg: 'dhg-latn-au',\n  dhi: 'dhi-deva-np',\n  dhl: 'dhl-latn-au',\n  dhm: 'dhm-latn-ao',\n  dhn: 'dhn-gujr-in',\n  dho: 'dho-deva-in',\n  dhr: 'dhr-latn-au',\n  dhs: 'dhs-latn-tz',\n  dhu: 'dhu-latn-au',\n  dhv: 'dhv-latn-nc',\n  dhw: 'dhw-deva-np',\n  dhx: 'dhx-latn-au',\n  dia: 'dia-latn-zz',\n  dib: 'dib-latn-ss',\n  dic: 'dic-latn-ci',\n  did: 'did-latn-ss',\n  dif: 'dif-latn-au',\n  dig: 'dig-latn-ke',\n  dih: 'dih-latn-mx',\n  dii: 'dii-latn-cm',\n  dij: 'dij-latn-id',\n  dil: 'dil-latn-sd',\n  din: 'din-latn-ss',\n  'din-arab': 'din-arab-ss',\n  dio: 'dio-latn-ng',\n  dip: 'dip-latn-ss',\n  dir: 'dir-latn-ng',\n  dis: 'dis-latn-in',\n  'dis-beng': 'dis-beng-in',\n  diu: 'diu-latn-na',\n  diw: 'diw-latn-ss',\n  dix: 'dix-latn-vu',\n  diy: 'diy-latn-id',\n  diz: 'diz-latn-cd',\n  dja: 'dja-latn-au',\n  djb: 'djb-latn-au',\n  djc: 'djc-latn-td',\n  djd: 'djd-latn-au',\n  dje: 'dje-latn-ne',\n  djf: 'djf-latn-au',\n  dji: 'dji-latn-au',\n  djj: 'djj-latn-au',\n  djk: 'djk-latn-sr',\n  djm: 'djm-latn-ml',\n  djn: 'djn-latn-au',\n  djo: 'djo-latn-id',\n  djr: 'djr-latn-au',\n  dju: 'dju-latn-pg',\n  djw: 'djw-latn-au',\n  dka: 'dka-tibt-bt',\n  dkg: 'dkg-latn-ng',\n  dkk: 'dkk-latn-id',\n  dkr: 'dkr-latn-my',\n  dks: 'dks-latn-ss',\n  dkx: 'dkx-latn-cm',\n  dlg: 'dlg-cyrl-ru',\n  dlm: 'dlm-latn-hr',\n  dln: 'dln-latn-in',\n  dma: 'dma-latn-ga',\n  dmb: 'dmb-latn-ml',\n  dmc: 'dmc-latn-pg',\n  dmd: 'dmd-latn-au',\n  dme: 'dme-latn-cm',\n  dmf: 'dmf-medf-ng',\n  dmg: 'dmg-latn-my',\n  dmk: 'dmk-arab-pk',\n  dml: 'dml-arab-pk',\n  dmm: 'dmm-latn-cm',\n  dmo: 'dmo-latn-cm',\n  dmr: 'dmr-latn-id',\n  dms: 'dms-latn-id',\n  dmu: 'dmu-latn-id',\n  dmv: 'dmv-latn-my',\n  dmw: 'dmw-latn-au',\n  dmx: 'dmx-latn-mz',\n  dmy: 'dmy-latn-id',\n  dna: 'dna-latn-id',\n  dnd: 'dnd-latn-pg',\n  dne: 'dne-latn-tz',\n  dng: 'dng-cyrl-kg',\n  'dng-arab': 'dng-arab-kg',\n  dni: 'dni-latn-id',\n  dnj: 'dnj-latn-ci',\n  dnk: 'dnk-latn-id',\n  dnn: 'dnn-latn-bf',\n  dno: 'dno-latn-cd',\n  dnr: 'dnr-latn-pg',\n  dnt: 'dnt-latn-id',\n  dnu: 'dnu-mymr-mm',\n  dnv: 'dnv-mymr-mm',\n  dnw: 'dnw-latn-id',\n  dny: 'dny-latn-br',\n  doa: 'doa-latn-pg',\n  dob: 'dob-latn-zz',\n  doc: 'doc-latn-cn',\n  doe: 'doe-latn-tz',\n  dof: 'dof-latn-pg',\n  doh: 'doh-latn-ng',\n  doi: 'doi-deva-in',\n  dok: 'dok-latn-id',\n  dol: 'dol-latn-pg',\n  don: 'don-latn-pg',\n  doo: 'doo-latn-cd',\n  dop: 'dop-latn-zz',\n  dor: 'dor-latn-sb',\n  dos: 'dos-latn-bf',\n  dot: 'dot-latn-ng',\n  dov: 'dov-latn-zw',\n  dow: 'dow-latn-zz',\n  dox: 'dox-ethi-et',\n  doy: 'doy-latn-gh',\n  dpp: 'dpp-latn-my',\n  drc: 'drc-latn-pt',\n  dre: 'dre-tibt-np',\n  drg: 'drg-latn-my',\n  drh: 'drh-mong-cn',\n  dri: 'dri-latn-zz',\n  drl: 'drl-latn-au',\n  drn: 'drn-latn-id',\n  dro: 'dro-latn-my',\n  drq: 'drq-deva-np',\n  drs: 'drs-ethi-zz',\n  drt: 'drt-latn-nl',\n  dru: 'dru-latn-tw',\n  dry: 'dry-deva-np',\n  dsb: 'dsb-latn-de',\n  dsh: 'dsh-latn-ke',\n  dsi: 'dsi-latn-td',\n  dsn: 'dsn-latn-id',\n  dso: 'dso-orya-in',\n  dsq: 'dsq-latn-ml',\n  'dsq-arab': 'dsq-arab-ml',\n  dta: 'dta-latn-cn',\n  'dta-cyrl': 'dta-cyrl-cn',\n  'dta-hans': 'dta-hans-cn',\n  dtb: 'dtb-latn-my',\n  dtd: 'dtd-latn-ca',\n  dth: 'dth-latn-au',\n  dti: 'dti-latn-ml',\n  dtk: 'dtk-latn-ml',\n  dtm: 'dtm-latn-ml',\n  dto: 'dto-latn-ml',\n  dtp: 'dtp-latn-my',\n  dtr: 'dtr-latn-my',\n  dts: 'dts-latn-zz',\n  dtt: 'dtt-latn-ml',\n  dtu: 'dtu-latn-ml',\n  dty: 'dty-deva-np',\n  dua: 'dua-latn-cm',\n  dub: 'dub-gujr-in',\n  duc: 'duc-latn-zz',\n  dud: 'dud-latn-zz',\n  due: 'due-latn-ph',\n  duf: 'duf-latn-nc',\n  dug: 'dug-latn-zz',\n  duh: 'duh-deva-in',\n  'duh-gujr': 'duh-gujr-in',\n  dui: 'dui-latn-pg',\n  duk: 'duk-latn-pg',\n  dul: 'dul-latn-ph',\n  dum: 'dum-latn-nl',\n  dun: 'dun-latn-id',\n  duo: 'duo-latn-ph',\n  dup: 'dup-latn-id',\n  duq: 'duq-latn-id',\n  dur: 'dur-latn-cm',\n  dus: 'dus-deva-np',\n  duu: 'duu-latn-cn',\n  duv: 'duv-latn-id',\n  duw: 'duw-latn-id',\n  dux: 'dux-latn-ml',\n  duy: 'duy-latn-ph',\n  duz: 'duz-latn-cm',\n  dv: 'dv-thaa-mv',\n  dva: 'dva-latn-zz',\n  dwa: 'dwa-latn-ng',\n  dwk: 'dwk-orya-in',\n  dwr: 'dwr-latn-et',\n  'dwr-ethi': 'dwr-ethi-et',\n  dws: 'dws-latn-001',\n  dwu: 'dwu-latn-au',\n  dww: 'dww-latn-zz',\n  dwy: 'dwy-latn-au',\n  dwz: 'dwz-deva-np',\n  dya: 'dya-latn-bf',\n  dyb: 'dyb-latn-au',\n  dyd: 'dyd-latn-au',\n  dyg: 'dyg-latn-ph',\n  dyi: 'dyi-latn-ci',\n  dym: 'dym-latn-ml',\n  dyn: 'dyn-latn-au',\n  dyo: 'dyo-latn-sn',\n  dyu: 'dyu-latn-bf',\n  dyy: 'dyy-latn-au',\n  dz: 'dz-tibt-bt',\n  dza: 'dza-latn-ng',\n  dze: 'dze-latn-au',\n  dzg: 'dzg-latn-zz',\n  dzl: 'dzl-tibt-bt',\n  dzn: 'dzn-latn-cd',\n  eaa: 'eaa-latn-au',\n  ebc: 'ebc-latn-id',\n  ebg: 'ebg-latn-ng',\n  ebk: 'ebk-latn-ph',\n  ebo: 'ebo-latn-cg',\n  ebr: 'ebr-latn-ci',\n  ebu: 'ebu-latn-ke',\n  ecr: 'ecr-grek-gr',\n  ecy: 'ecy-cprt-cy',\n  ee: 'ee-latn-gh',\n  efa: 'efa-latn-ng',\n  efe: 'efe-latn-cd',\n  efi: 'efi-latn-ng',\n  ega: 'ega-latn-ci',\n  egl: 'egl-latn-it',\n  egm: 'egm-latn-tz',\n  ego: 'ego-latn-ng',\n  egy: 'egy-egyp-eg',\n  ehu: 'ehu-latn-ng',\n  eip: 'eip-latn-id',\n  eit: 'eit-latn-pg',\n  eiv: 'eiv-latn-pg',\n  eja: 'eja-latn-gw',\n  eka: 'eka-latn-zz',\n  eke: 'eke-latn-ng',\n  ekg: 'ekg-latn-id',\n  eki: 'eki-latn-ng',\n  ekl: 'ekl-latn-bd',\n  ekm: 'ekm-latn-cm',\n  eko: 'eko-latn-mz',\n  'eko-arab': 'eko-arab-mz',\n  ekp: 'ekp-latn-ng',\n  ekr: 'ekr-latn-ng',\n  eky: 'eky-kali-mm',\n  el: 'el-grek-gr',\n  ele: 'ele-latn-pg',\n  elk: 'elk-latn-pg',\n  elm: 'elm-latn-ng',\n  elo: 'elo-latn-ke',\n  elu: 'elu-latn-pg',\n  ema: 'ema-latn-zz',\n  emb: 'emb-latn-id',\n  eme: 'eme-latn-gf',\n  emg: 'emg-deva-np',\n  emi: 'emi-latn-zz',\n  emm: 'emm-latn-mx',\n  emn: 'emn-latn-cm',\n  emp: 'emp-latn-pa',\n  ems: 'ems-latn-us',\n  'ems-cyrl': 'ems-cyrl-us',\n  emu: 'emu-deva-in',\n  emw: 'emw-latn-id',\n  emx: 'emx-latn-fr',\n  emz: 'emz-latn-cm',\n  en: 'en-latn-us',\n  'en-shaw': 'en-shaw-gb',\n  ena: 'ena-latn-pg',\n  enb: 'enb-latn-ke',\n  enc: 'enc-latn-vn',\n  end: 'end-latn-id',\n  enf: 'enf-cyrl-ru',\n  enh: 'enh-cyrl-ru',\n  enl: 'enl-latn-py',\n  enm: 'enm-latn-gb',\n  enn: 'enn-latn-zz',\n  eno: 'eno-latn-id',\n  enq: 'enq-latn-zz',\n  enr: 'enr-latn-id',\n  env: 'env-latn-ng',\n  enw: 'enw-latn-ng',\n  enx: 'enx-latn-py',\n  eo: 'eo-latn-001',\n  eot: 'eot-latn-ci',\n  epi: 'epi-latn-ng',\n  era: 'era-taml-in',\n  erg: 'erg-latn-vu',\n  erh: 'erh-latn-ng',\n  eri: 'eri-latn-zz',\n  erk: 'erk-latn-vu',\n  err: 'err-latn-au',\n  ert: 'ert-latn-id',\n  erw: 'erw-latn-id',\n  es: 'es-latn-es',\n  ese: 'ese-latn-bo',\n  esg: 'esg-gonm-in',\n  esh: 'esh-arab-ir',\n  esi: 'esi-latn-us',\n  esm: 'esm-latn-ci',\n  ess: 'ess-latn-us',\n  'ess-cyrl': 'ess-cyrl-us',\n  esu: 'esu-latn-us',\n  esy: 'esy-latn-ph',\n  et: 'et-latn-ee',\n  etb: 'etb-latn-ng',\n  etn: 'etn-latn-vu',\n  eto: 'eto-latn-cm',\n  etr: 'etr-latn-zz',\n  ets: 'ets-latn-ng',\n  ett: 'ett-ital-it',\n  etu: 'etu-latn-zz',\n  etx: 'etx-latn-zz',\n  etz: 'etz-latn-id',\n  eu: 'eu-latn-es',\n  eve: 'eve-cyrl-ru',\n  evh: 'evh-latn-ng',\n  evn: 'evn-cyrl-ru',\n  'evn-latn': 'evn-latn-cn',\n  'evn-mong': 'evn-mong-cn',\n  ewo: 'ewo-latn-cm',\n  ext: 'ext-latn-es',\n  eya: 'eya-latn-us',\n  eyo: 'eyo-latn-ke',\n  eza: 'eza-latn-zz',\n  eze: 'eze-latn-ng',\n  fa: 'fa-arab-ir',\n  faa: 'faa-latn-zz',\n  fab: 'fab-latn-zz',\n  fad: 'fad-latn-pg',\n  faf: 'faf-latn-sb',\n  fag: 'fag-latn-zz',\n  fah: 'fah-latn-ng',\n  fai: 'fai-latn-zz',\n  faj: 'faj-latn-pg',\n  fak: 'fak-latn-cm',\n  fal: 'fal-latn-cm',\n  fam: 'fam-latn-ng',\n  fan: 'fan-latn-gq',\n  fap: 'fap-latn-sn',\n  far: 'far-latn-sb',\n  fau: 'fau-latn-id',\n  fax: 'fax-latn-es',\n  fay: 'fay-arab-ir',\n  faz: 'faz-arab-ir',\n  fbl: 'fbl-latn-ph',\n  fer: 'fer-latn-ss',\n  ff: 'ff-latn-sn',\n  'ff-adlm': 'ff-adlm-gn',\n  ffi: 'ffi-latn-zz',\n  ffm: 'ffm-latn-ml',\n  fgr: 'fgr-latn-td',\n  fi: 'fi-latn-fi',\n  fia: 'fia-arab-sd',\n  fie: 'fie-latn-ng',\n  fif: 'fif-latn-sa',\n  fil: 'fil-latn-ph',\n  fip: 'fip-latn-tz',\n  fir: 'fir-latn-ng',\n  fit: 'fit-latn-se',\n  fiw: 'fiw-latn-pg',\n  fj: 'fj-latn-fj',\n  fkk: 'fkk-latn-ng',\n  fkv: 'fkv-latn-no',\n  fla: 'fla-latn-us',\n  flh: 'flh-latn-id',\n  fli: 'fli-latn-ng',\n  fll: 'fll-latn-cm',\n  fln: 'fln-latn-au',\n  flr: 'flr-latn-zz',\n  fly: 'fly-latn-za',\n  fmp: 'fmp-latn-zz',\n  fmu: 'fmu-deva-in',\n  fnb: 'fnb-latn-vu',\n  fng: 'fng-latn-za',\n  fni: 'fni-latn-td',\n  fo: 'fo-latn-fo',\n  fod: 'fod-latn-zz',\n  foi: 'foi-latn-pg',\n  fom: 'fom-latn-cd',\n  fon: 'fon-latn-bj',\n  for: 'for-latn-zz',\n  fos: 'fos-latn-tw',\n  fpe: 'fpe-latn-zz',\n  fqs: 'fqs-latn-zz',\n  fr: 'fr-latn-fr',\n  frc: 'frc-latn-us',\n  frd: 'frd-latn-id',\n  frk: 'frk-latn-de',\n  frm: 'frm-latn-fr',\n  fro: 'fro-latn-fr',\n  frp: 'frp-latn-fr',\n  frq: 'frq-latn-pg',\n  frr: 'frr-latn-de',\n  frs: 'frs-latn-de',\n  frt: 'frt-latn-vu',\n  fub: 'fub-arab-cm',\n  fud: 'fud-latn-wf',\n  fue: 'fue-latn-zz',\n  fuf: 'fuf-latn-gn',\n  fuh: 'fuh-latn-zz',\n  fui: 'fui-latn-td',\n  fum: 'fum-latn-ng',\n  fun: 'fun-latn-br',\n  fuq: 'fuq-latn-ne',\n  fur: 'fur-latn-it',\n  fut: 'fut-latn-vu',\n  fuu: 'fuu-latn-cd',\n  fuv: 'fuv-latn-ng',\n  fuy: 'fuy-latn-zz',\n  fvr: 'fvr-latn-sd',\n  fwa: 'fwa-latn-nc',\n  fwe: 'fwe-latn-na',\n  fy: 'fy-latn-nl',\n  ga: 'ga-latn-ie',\n  gaa: 'gaa-latn-gh',\n  gab: 'gab-latn-td',\n  gac: 'gac-latn-in',\n  'gac-deva': 'gac-deva-in',\n  gad: 'gad-latn-ph',\n  gae: 'gae-latn-ve',\n  gaf: 'gaf-latn-zz',\n  gag: 'gag-latn-md',\n  gah: 'gah-latn-zz',\n  gai: 'gai-latn-pg',\n  gaj: 'gaj-latn-zz',\n  gak: 'gak-latn-id',\n  gal: 'gal-latn-tl',\n  gam: 'gam-latn-zz',\n  gan: 'gan-hans-cn',\n  gao: 'gao-latn-pg',\n  gap: 'gap-latn-pg',\n  gaq: 'gaq-orya-in',\n  gar: 'gar-latn-pg',\n  gas: 'gas-gujr-in',\n  gat: 'gat-latn-pg',\n  gau: 'gau-telu-in',\n  gaw: 'gaw-latn-zz',\n  gax: 'gax-latn-et',\n  'gax-ethi': 'gax-ethi-et',\n  gay: 'gay-latn-id',\n  gba: 'gba-latn-zz',\n  gbb: 'gbb-latn-au',\n  gbd: 'gbd-latn-au',\n  gbe: 'gbe-latn-pg',\n  gbf: 'gbf-latn-zz',\n  gbg: 'gbg-latn-cf',\n  gbh: 'gbh-latn-bj',\n  gbi: 'gbi-latn-id',\n  gbj: 'gbj-orya-in',\n  gbk: 'gbk-deva-in',\n  'gbk-takr': 'gbk-takr-in',\n  gbl: 'gbl-gujr-in',\n  'gbl-deva': 'gbl-deva-in',\n  gbm: 'gbm-deva-in',\n  gbn: 'gbn-latn-ss',\n  gbp: 'gbp-latn-cf',\n  gbq: 'gbq-latn-cf',\n  gbr: 'gbr-latn-ng',\n  gbs: 'gbs-latn-bj',\n  gbu: 'gbu-latn-au',\n  gbv: 'gbv-latn-cf',\n  gbw: 'gbw-latn-au',\n  gbx: 'gbx-latn-bj',\n  gby: 'gby-latn-zz',\n  gbz: 'gbz-arab-ir',\n  gcc: 'gcc-latn-pg',\n  gcd: 'gcd-latn-au',\n  gcf: 'gcf-latn-gp',\n  gcl: 'gcl-latn-gd',\n  gcn: 'gcn-latn-pg',\n  gcr: 'gcr-latn-gf',\n  gct: 'gct-latn-ve',\n  gd: 'gd-latn-gb',\n  gdb: 'gdb-orya-in',\n  'gdb-telu': 'gdb-telu-in',\n  gdc: 'gdc-latn-au',\n  gdd: 'gdd-latn-pg',\n  gde: 'gde-latn-zz',\n  gdf: 'gdf-latn-ng',\n  gdg: 'gdg-latn-ph',\n  gdh: 'gdh-latn-au',\n  gdi: 'gdi-latn-cf',\n  gdj: 'gdj-latn-au',\n  gdk: 'gdk-latn-td',\n  gdl: 'gdl-latn-et',\n  'gdl-ethi': 'gdl-ethi-et',\n  gdm: 'gdm-latn-td',\n  gdn: 'gdn-latn-zz',\n  gdo: 'gdo-cyrl-ru',\n  gdq: 'gdq-latn-ye',\n  gdr: 'gdr-latn-zz',\n  gdt: 'gdt-latn-au',\n  gdu: 'gdu-latn-ng',\n  gdx: 'gdx-deva-in',\n  gea: 'gea-latn-ng',\n  geb: 'geb-latn-zz',\n  gec: 'gec-latn-lr',\n  ged: 'ged-latn-ng',\n  gef: 'gef-latn-id',\n  geg: 'geg-latn-ng',\n  geh: 'geh-latn-ca',\n  gei: 'gei-latn-id',\n  gej: 'gej-latn-zz',\n  gek: 'gek-latn-ng',\n  gel: 'gel-latn-zz',\n  geq: 'geq-latn-cf',\n  ges: 'ges-latn-id',\n  gev: 'gev-latn-ga',\n  gew: 'gew-latn-ng',\n  gex: 'gex-latn-so',\n  gey: 'gey-latn-cd',\n  gez: 'gez-ethi-et',\n  gfk: 'gfk-latn-zz',\n  gga: 'gga-latn-sb',\n  ggb: 'ggb-latn-lr',\n  ggd: 'ggd-latn-au',\n  gge: 'gge-latn-au',\n  ggg: 'ggg-arab-pk',\n  ggk: 'ggk-latn-au',\n  ggl: 'ggl-latn-pg',\n  ggn: 'ggn-deva-np',\n  ggt: 'ggt-latn-pg',\n  ggu: 'ggu-latn-ci',\n  ggw: 'ggw-latn-pg',\n  gha: 'gha-arab-ly',\n  'gha-latn': 'gha-latn-ly',\n  'gha-tfng': 'gha-tfng-ly',\n  ghc: 'ghc-latn-gb',\n  ghe: 'ghe-deva-np',\n  ghk: 'ghk-latn-mm',\n  ghn: 'ghn-latn-sb',\n  ghr: 'ghr-arab-pk',\n  ghs: 'ghs-latn-zz',\n  ght: 'ght-tibt-np',\n  gia: 'gia-latn-au',\n  gib: 'gib-latn-ng',\n  gic: 'gic-latn-za',\n  gid: 'gid-latn-cm',\n  gie: 'gie-latn-ci',\n  gig: 'gig-arab-pk',\n  gih: 'gih-latn-au',\n  gil: 'gil-latn-ki',\n  gim: 'gim-latn-zz',\n  gin: 'gin-cyrl-ru',\n  gip: 'gip-latn-pg',\n  giq: 'giq-latn-vn',\n  gir: 'gir-latn-vn',\n  gis: 'gis-latn-cm',\n  git: 'git-latn-ca',\n  gix: 'gix-latn-cd',\n  giy: 'giy-latn-au',\n  giz: 'giz-latn-cm',\n  gjk: 'gjk-arab-pk',\n  gjm: 'gjm-latn-au',\n  gjn: 'gjn-latn-zz',\n  gjr: 'gjr-latn-au',\n  gju: 'gju-arab-pk',\n  gka: 'gka-latn-pg',\n  gkd: 'gkd-latn-pg',\n  gke: 'gke-latn-cm',\n  gkn: 'gkn-latn-zz',\n  gko: 'gko-latn-au',\n  gkp: 'gkp-latn-zz',\n  gku: 'gku-latn-za',\n  gl: 'gl-latn-es',\n  glb: 'glb-latn-ng',\n  glc: 'glc-latn-td',\n  gld: 'gld-cyrl-ru',\n  glh: 'glh-arab-af',\n  glj: 'glj-latn-td',\n  glk: 'glk-arab-ir',\n  gll: 'gll-latn-au',\n  glo: 'glo-latn-ng',\n  glr: 'glr-latn-lr',\n  glu: 'glu-latn-td',\n  glw: 'glw-latn-ng',\n  gma: 'gma-latn-au',\n  gmb: 'gmb-latn-sb',\n  gmd: 'gmd-latn-ng',\n  gmg: 'gmg-latn-pg',\n  gmh: 'gmh-latn-de',\n  gmm: 'gmm-latn-zz',\n  gmn: 'gmn-latn-cm',\n  gmr: 'gmr-latn-au',\n  gmu: 'gmu-latn-pg',\n  gmv: 'gmv-ethi-zz',\n  gmx: 'gmx-latn-tz',\n  gmy: 'gmy-linb-gr',\n  gmz: 'gmz-latn-ng',\n  gn: 'gn-latn-py',\n  gna: 'gna-latn-bf',\n  gnb: 'gnb-latn-in',\n  gnc: 'gnc-latn-es',\n  gnd: 'gnd-latn-zz',\n  gne: 'gne-latn-ng',\n  gng: 'gng-latn-zz',\n  gnh: 'gnh-latn-ng',\n  gni: 'gni-latn-au',\n  gnj: 'gnj-latn-ci',\n  gnk: 'gnk-latn-bw',\n  gnl: 'gnl-latn-au',\n  gnm: 'gnm-latn-pg',\n  gnn: 'gnn-latn-au',\n  gnq: 'gnq-latn-my',\n  gnr: 'gnr-latn-au',\n  gnt: 'gnt-latn-pg',\n  gnu: 'gnu-latn-pg',\n  gnw: 'gnw-latn-bo',\n  gnz: 'gnz-latn-cf',\n  goa: 'goa-latn-ci',\n  gob: 'gob-latn-co',\n  goc: 'goc-latn-pg',\n  god: 'god-latn-zz',\n  goe: 'goe-tibt-bt',\n  gof: 'gof-ethi-zz',\n  gog: 'gog-latn-tz',\n  goh: 'goh-latn-de',\n  goi: 'goi-latn-zz',\n  gok: 'gok-deva-in',\n  gol: 'gol-latn-lr',\n  gom: 'gom-deva-in',\n  gon: 'gon-telu-in',\n  goo: 'goo-latn-fj',\n  gop: 'gop-latn-id',\n  goq: 'goq-latn-id',\n  gor: 'gor-latn-id',\n  gos: 'gos-latn-nl',\n  got: 'got-goth-ua',\n  gou: 'gou-latn-cm',\n  gov: 'gov-latn-ci',\n  gow: 'gow-latn-tz',\n  gox: 'gox-latn-cd',\n  goy: 'goy-latn-td',\n  gpa: 'gpa-latn-ng',\n  gpe: 'gpe-latn-gh',\n  gpn: 'gpn-latn-pg',\n  gqa: 'gqa-latn-ng',\n  gqn: 'gqn-latn-br',\n  gqr: 'gqr-latn-td',\n  gra: 'gra-deva-in',\n  'gra-gujr': 'gra-gujr-in',\n  grb: 'grb-latn-zz',\n  grc: 'grc-cprt-cy',\n  'grc-linb': 'grc-linb-gr',\n  grd: 'grd-latn-ng',\n  grg: 'grg-latn-pg',\n  grh: 'grh-latn-ng',\n  gri: 'gri-latn-sb',\n  grj: 'grj-latn-lr',\n  grm: 'grm-latn-my',\n  grq: 'grq-latn-pg',\n  grs: 'grs-latn-id',\n  grt: 'grt-beng-in',\n  gru: 'gru-ethi-et',\n  'gru-latn': 'gru-latn-et',\n  grv: 'grv-latn-lr',\n  grw: 'grw-latn-zz',\n  grx: 'grx-latn-pg',\n  gry: 'gry-latn-lr',\n  grz: 'grz-latn-pg',\n  gsl: 'gsl-latn-sn',\n  gsn: 'gsn-latn-pg',\n  gso: 'gso-latn-cf',\n  gsp: 'gsp-latn-pg',\n  gsw: 'gsw-latn-ch',\n  gta: 'gta-latn-br',\n  gtu: 'gtu-latn-au',\n  gu: 'gu-gujr-in',\n  gua: 'gua-latn-ng',\n  gub: 'gub-latn-br',\n  guc: 'guc-latn-co',\n  gud: 'gud-latn-zz',\n  gue: 'gue-latn-au',\n  guf: 'guf-latn-au',\n  guh: 'guh-latn-co',\n  gui: 'gui-latn-bo',\n  guk: 'guk-latn-et',\n  'guk-ethi': 'guk-ethi-et',\n  gul: 'gul-latn-us',\n  gum: 'gum-latn-co',\n  gun: 'gun-latn-br',\n  guo: 'guo-latn-co',\n  gup: 'gup-latn-au',\n  guq: 'guq-latn-py',\n  gur: 'gur-latn-gh',\n  gut: 'gut-latn-cr',\n  guu: 'guu-latn-ve',\n  guw: 'guw-latn-zz',\n  gux: 'gux-latn-zz',\n  guz: 'guz-latn-ke',\n  gv: 'gv-latn-im',\n  gva: 'gva-latn-py',\n  gvc: 'gvc-latn-br',\n  gve: 'gve-latn-pg',\n  gvf: 'gvf-latn-zz',\n  gvj: 'gvj-latn-br',\n  gvl: 'gvl-latn-td',\n  gvm: 'gvm-latn-ng',\n  gvn: 'gvn-latn-au',\n  gvo: 'gvo-latn-br',\n  gvp: 'gvp-latn-br',\n  gvr: 'gvr-deva-np',\n  gvs: 'gvs-latn-zz',\n  gvy: 'gvy-latn-au',\n  gwa: 'gwa-latn-ci',\n  gwb: 'gwb-latn-ng',\n  gwc: 'gwc-arab-zz',\n  gwd: 'gwd-latn-et',\n  gwe: 'gwe-latn-tz',\n  gwf: 'gwf-arab-pk',\n  gwg: 'gwg-latn-ng',\n  gwi: 'gwi-latn-ca',\n  gwj: 'gwj-latn-bw',\n  gwm: 'gwm-latn-au',\n  gwn: 'gwn-latn-ng',\n  gwr: 'gwr-latn-ug',\n  gwt: 'gwt-arab-zz',\n  gwu: 'gwu-latn-au',\n  gww: 'gww-latn-au',\n  gwx: 'gwx-latn-gh',\n  gxx: 'gxx-latn-ci',\n  gyb: 'gyb-latn-pg',\n  gyd: 'gyd-latn-au',\n  gye: 'gye-latn-ng',\n  gyf: 'gyf-latn-au',\n  gyg: 'gyg-latn-cf',\n  gyi: 'gyi-latn-zz',\n  gyl: 'gyl-latn-et',\n  'gyl-ethi': 'gyl-ethi-et',\n  gym: 'gym-latn-pa',\n  gyn: 'gyn-latn-gy',\n  gyo: 'gyo-deva-np',\n  gyr: 'gyr-latn-bo',\n  gyy: 'gyy-latn-au',\n  gyz: 'gyz-latn-ng',\n  gza: 'gza-latn-sd',\n  gzi: 'gzi-arab-ir',\n  gzn: 'gzn-latn-id',\n  ha: 'ha-latn-ng',\n  'ha-cm': 'ha-arab-cm',\n  'ha-sd': 'ha-arab-sd',\n  haa: 'haa-latn-us',\n  hac: 'hac-arab-ir',\n  had: 'had-latn-id',\n  hae: 'hae-latn-et',\n  hag: 'hag-latn-zz',\n  hah: 'hah-latn-pg',\n  hai: 'hai-latn-ca',\n  haj: 'haj-latn-in',\n  'haj-beng': 'haj-beng-in',\n  hak: 'hak-hans-cn',\n  hal: 'hal-latn-vn',\n  ham: 'ham-latn-zz',\n  han: 'han-latn-tz',\n  hao: 'hao-latn-pg',\n  hap: 'hap-latn-id',\n  haq: 'haq-latn-tz',\n  har: 'har-ethi-et',\n  'har-arab': 'har-arab-et',\n  'har-latn': 'har-latn-et',\n  has: 'has-latn-ca',\n  hav: 'hav-latn-cd',\n  haw: 'haw-latn-us',\n  hax: 'hax-latn-ca',\n  hay: 'hay-latn-tz',\n  haz: 'haz-arab-af',\n  hba: 'hba-latn-cd',\n  hbb: 'hbb-latn-zz',\n  hbn: 'hbn-latn-sd',\n  hbo: 'hbo-hebr-il',\n  hbu: 'hbu-latn-tl',\n  hch: 'hch-latn-mx',\n  hdy: 'hdy-ethi-zz',\n  he: 'he-hebr-il',\n  hed: 'hed-latn-td',\n  heg: 'heg-latn-id',\n  heh: 'heh-latn-tz',\n  hei: 'hei-latn-ca',\n  hem: 'hem-latn-cd',\n  hgm: 'hgm-latn-na',\n  hgw: 'hgw-latn-pg',\n  hhi: 'hhi-latn-pg',\n  hhr: 'hhr-latn-sn',\n  hhy: 'hhy-latn-zz',\n  hi: 'hi-deva-in',\n  'hi-latn': 'hi-latn-in',\n  hia: 'hia-latn-zz',\n  hib: 'hib-latn-pe',\n  hid: 'hid-latn-us',\n  hif: 'hif-latn-fj',\n  hig: 'hig-latn-zz',\n  hih: 'hih-latn-zz',\n  hii: 'hii-takr-in',\n  'hii-deva': 'hii-deva-in',\n  hij: 'hij-latn-cm',\n  hik: 'hik-latn-id',\n  hil: 'hil-latn-ph',\n  hio: 'hio-latn-bw',\n  hir: 'hir-latn-br',\n  hit: 'hit-xsux-tr',\n  hiw: 'hiw-latn-vu',\n  hix: 'hix-latn-br',\n  hji: 'hji-latn-id',\n  hka: 'hka-latn-tz',\n  hke: 'hke-latn-cd',\n  hkh: 'hkh-arab-in',\n  'hkh-deva': 'hkh-deva-in',\n  'hkh-latn': 'hkh-latn-in',\n  hkk: 'hkk-latn-pg',\n  hla: 'hla-latn-zz',\n  hlb: 'hlb-deva-in',\n  hld: 'hld-latn-vn',\n  hlt: 'hlt-latn-mm',\n  hlu: 'hlu-hluw-tr',\n  hma: 'hma-latn-cn',\n  hmb: 'hmb-latn-ml',\n  hmd: 'hmd-plrd-cn',\n  hmf: 'hmf-latn-vn',\n  hmj: 'hmj-bopo-cn',\n  hmm: 'hmm-latn-cn',\n  hmn: 'hmn-latn-cn',\n  'hmn-bopo': 'hmn-bopo-cn',\n  'hmn-hmng': 'hmn-hmng-cn',\n  hmp: 'hmp-latn-cn',\n  hmq: 'hmq-bopo-cn',\n  hmr: 'hmr-latn-in',\n  hms: 'hms-latn-cn',\n  hmt: 'hmt-latn-zz',\n  hmu: 'hmu-latn-id',\n  hmv: 'hmv-latn-vn',\n  hmw: 'hmw-latn-cn',\n  hmy: 'hmy-latn-cn',\n  hmz: 'hmz-latn-cn',\n  'hmz-plrd': 'hmz-plrd-cn',\n  hna: 'hna-latn-cm',\n  hnd: 'hnd-arab-pk',\n  hne: 'hne-deva-in',\n  hng: 'hng-latn-ao',\n  hnh: 'hnh-latn-bw',\n  hni: 'hni-latn-cn',\n  hnj: 'hnj-hmnp-us',\n  'hnj-au': 'hnj-laoo-au',\n  'hnj-cn': 'hnj-laoo-cn',\n  'hnj-fr': 'hnj-laoo-fr',\n  'hnj-gf': 'hnj-laoo-gf',\n  'hnj-la': 'hnj-laoo-la',\n  'hnj-laoo': 'hnj-laoo-la',\n  'hnj-mm': 'hnj-laoo-mm',\n  'hnj-sr': 'hnj-laoo-sr',\n  'hnj-th': 'hnj-laoo-th',\n  'hnj-us': 'hnj-hmnp-us',\n  'hnj-vn': 'hnj-laoo-vn',\n  hnn: 'hnn-latn-ph',\n  hno: 'hno-arab-pk',\n  hns: 'hns-latn-sr',\n  ho: 'ho-latn-pg',\n  hoa: 'hoa-latn-sb',\n  hob: 'hob-latn-pg',\n  hoc: 'hoc-deva-in',\n  hod: 'hod-latn-ng',\n  hoe: 'hoe-latn-ng',\n  hoh: 'hoh-arab-om',\n  hoi: 'hoi-latn-us',\n  hoj: 'hoj-deva-in',\n  hol: 'hol-latn-ao',\n  hom: 'hom-latn-ss',\n  hoo: 'hoo-latn-cd',\n  hop: 'hop-latn-us',\n  hor: 'hor-latn-td',\n  hot: 'hot-latn-zz',\n  hov: 'hov-latn-id',\n  how: 'how-hani-cn',\n  hoy: 'hoy-deva-in',\n  hpo: 'hpo-mymr-mm',\n  hr: 'hr-latn-hr',\n  hra: 'hra-latn-in',\n  hrc: 'hrc-latn-pg',\n  hre: 'hre-latn-vn',\n  hrk: 'hrk-latn-id',\n  hrm: 'hrm-latn-cn',\n  'hrm-hmng': 'hrm-hmng-cn',\n  hro: 'hro-latn-vn',\n  hrp: 'hrp-latn-au',\n  hrt: 'hrt-syrc-tr',\n  hru: 'hru-latn-in',\n  hrw: 'hrw-latn-pg',\n  hrx: 'hrx-latn-br',\n  hrz: 'hrz-arab-ir',\n  hsb: 'hsb-latn-de',\n  hsn: 'hsn-hans-cn',\n  hss: 'hss-arab-om',\n  ht: 'ht-latn-ht',\n  hti: 'hti-latn-id',\n  hto: 'hto-latn-co',\n  hts: 'hts-latn-tz',\n  htu: 'htu-latn-id',\n  htx: 'htx-xsux-tr',\n  hu: 'hu-latn-hu',\n  hub: 'hub-latn-pe',\n  huc: 'huc-latn-bw',\n  hud: 'hud-latn-id',\n  hue: 'hue-latn-mx',\n  huf: 'huf-latn-pg',\n  hug: 'hug-latn-pe',\n  huh: 'huh-latn-cl',\n  hui: 'hui-latn-zz',\n  huk: 'huk-latn-id',\n  hul: 'hul-latn-pg',\n  hum: 'hum-latn-cd',\n  hup: 'hup-latn-us',\n  hur: 'hur-latn-ca',\n  hus: 'hus-latn-mx',\n  hut: 'hut-deva-np',\n  'hut-tibt': 'hut-tibt-np',\n  huu: 'huu-latn-pe',\n  huv: 'huv-latn-mx',\n  huw: 'huw-latn-id',\n  hux: 'hux-latn-pe',\n  huy: 'huy-hebr-il',\n  huz: 'huz-cyrl-ru',\n  hvc: 'hvc-latn-ht',\n  hve: 'hve-latn-mx',\n  hvk: 'hvk-latn-nc',\n  hvn: 'hvn-latn-id',\n  hvv: 'hvv-latn-mx',\n  hwa: 'hwa-latn-ci',\n  hwc: 'hwc-latn-us',\n  hwo: 'hwo-latn-ng',\n  hy: 'hy-armn-am',\n  hya: 'hya-latn-cm',\n  hyw: 'hyw-armn-am',\n  hz: 'hz-latn-na',\n  ia: 'ia-latn-001',\n  iai: 'iai-latn-nc',\n  ian: 'ian-latn-zz',\n  iar: 'iar-latn-zz',\n  iba: 'iba-latn-my',\n  ibb: 'ibb-latn-ng',\n  ibd: 'ibd-latn-au',\n  ibe: 'ibe-latn-ng',\n  ibg: 'ibg-latn-ph',\n  ibh: 'ibh-latn-vn',\n  ibl: 'ibl-latn-ph',\n  ibm: 'ibm-latn-ng',\n  ibn: 'ibn-latn-ng',\n  ibr: 'ibr-latn-ng',\n  ibu: 'ibu-latn-id',\n  iby: 'iby-latn-zz',\n  ica: 'ica-latn-zz',\n  ich: 'ich-latn-zz',\n  icr: 'icr-latn-co',\n  id: 'id-latn-id',\n  ida: 'ida-latn-ke',\n  idb: 'idb-latn-in',\n  idc: 'idc-latn-ng',\n  idd: 'idd-latn-zz',\n  ide: 'ide-latn-ng',\n  idi: 'idi-latn-zz',\n  idr: 'idr-latn-ss',\n  ids: 'ids-latn-ng',\n  idt: 'idt-latn-tl',\n  idu: 'idu-latn-zz',\n  ie: 'ie-latn-001',\n  ifa: 'ifa-latn-ph',\n  ifb: 'ifb-latn-ph',\n  ife: 'ife-latn-tg',\n  iff: 'iff-latn-vu',\n  ifk: 'ifk-latn-ph',\n  ifm: 'ifm-latn-cg',\n  ifu: 'ifu-latn-ph',\n  ify: 'ify-latn-ph',\n  ig: 'ig-latn-ng',\n  igb: 'igb-latn-zz',\n  ige: 'ige-latn-zz',\n  igg: 'igg-latn-pg',\n  igl: 'igl-latn-ng',\n  igm: 'igm-latn-pg',\n  ign: 'ign-latn-bo',\n  igo: 'igo-latn-pg',\n  igs: 'igs-latn-001',\n  'igs-grek': 'igs-grek-001',\n  igw: 'igw-latn-ng',\n  ihb: 'ihb-latn-id',\n  ihi: 'ihi-latn-ng',\n  ihp: 'ihp-latn-id',\n  ihw: 'ihw-latn-au',\n  ii: 'ii-yiii-cn',\n  iin: 'iin-latn-au',\n  ijc: 'ijc-latn-ng',\n  ije: 'ije-latn-ng',\n  ijj: 'ijj-latn-zz',\n  ijn: 'ijn-latn-ng',\n  ijs: 'ijs-latn-ng',\n  ik: 'ik-latn-us',\n  iki: 'iki-latn-ng',\n  ikk: 'ikk-latn-zz',\n  ikl: 'ikl-latn-ng',\n  iko: 'iko-latn-ng',\n  ikp: 'ikp-latn-ng',\n  ikr: 'ikr-latn-au',\n  ikt: 'ikt-latn-ca',\n  'ikt-cans': 'ikt-cans-ca',\n  ikv: 'ikv-latn-ng',\n  ikw: 'ikw-latn-zz',\n  ikx: 'ikx-latn-zz',\n  ikz: 'ikz-latn-tz',\n  ila: 'ila-latn-id',\n  ilb: 'ilb-latn-zm',\n  ilg: 'ilg-latn-au',\n  ili: 'ili-latn-cn',\n  'ili-arab': 'ili-arab-cn',\n  'ili-cyrl': 'ili-cyrl-kz',\n  ilk: 'ilk-latn-ph',\n  ilm: 'ilm-latn-my',\n  ilo: 'ilo-latn-ph',\n  ilp: 'ilp-latn-ph',\n  ilu: 'ilu-latn-id',\n  ilv: 'ilv-latn-ng',\n  imi: 'imi-latn-pg',\n  iml: 'iml-latn-us',\n  imn: 'imn-latn-pg',\n  imo: 'imo-latn-zz',\n  imr: 'imr-latn-id',\n  ims: 'ims-latn-it',\n  imt: 'imt-latn-ss',\n  imy: 'imy-lyci-tr',\n  in: 'in-latn-id',\n  inb: 'inb-latn-co',\n  ing: 'ing-latn-us',\n  inh: 'inh-cyrl-ru',\n  inj: 'inj-latn-co',\n  inn: 'inn-latn-ph',\n  ino: 'ino-latn-pg',\n  inp: 'inp-latn-pe',\n  int: 'int-mymr-mm',\n  io: 'io-latn-001',\n  ior: 'ior-ethi-et',\n  iou: 'iou-latn-zz',\n  iow: 'iow-latn-us',\n  ipi: 'ipi-latn-pg',\n  ipo: 'ipo-latn-pg',\n  iqu: 'iqu-latn-pe',\n  iqw: 'iqw-latn-ng',\n  ire: 'ire-latn-id',\n  irh: 'irh-latn-id',\n  iri: 'iri-latn-zz',\n  irk: 'irk-latn-tz',\n  irn: 'irn-latn-br',\n  iru: 'iru-taml-in',\n  'iru-mlym': 'iru-mlym-in',\n  irx: 'irx-latn-id',\n  iry: 'iry-latn-ph',\n  is: 'is-latn-is',\n  isa: 'isa-latn-pg',\n  isc: 'isc-latn-pe',\n  isd: 'isd-latn-ph',\n  ish: 'ish-latn-ng',\n  isi: 'isi-latn-ng',\n  isk: 'isk-arab-af',\n  'isk-cyrl': 'isk-cyrl-tj',\n  ism: 'ism-latn-id',\n  isn: 'isn-latn-tz',\n  iso: 'iso-latn-ng',\n  ist: 'ist-latn-hr',\n  isu: 'isu-latn-cm',\n  it: 'it-latn-it',\n  itb: 'itb-latn-ph',\n  itd: 'itd-latn-id',\n  ite: 'ite-latn-bo',\n  iti: 'iti-latn-ph',\n  itk: 'itk-hebr-it',\n  itl: 'itl-cyrl-ru',\n  itm: 'itm-latn-ng',\n  ito: 'ito-latn-bo',\n  itr: 'itr-latn-pg',\n  its: 'its-latn-ng',\n  itt: 'itt-latn-ph',\n  itv: 'itv-latn-ph',\n  itw: 'itw-latn-ng',\n  itx: 'itx-latn-id',\n  ity: 'ity-latn-ph',\n  itz: 'itz-latn-gt',\n  iu: 'iu-cans-ca',\n  ium: 'ium-latn-cn',\n  'ium-hani': 'ium-hani-cn',\n  'ium-laoo': 'ium-laoo-la',\n  'ium-thai': 'ium-thai-th',\n  ivb: 'ivb-latn-ph',\n  ivv: 'ivv-latn-ph',\n  iw: 'iw-hebr-il',\n  iwk: 'iwk-latn-ph',\n  iwm: 'iwm-latn-zz',\n  iwo: 'iwo-latn-id',\n  iws: 'iws-latn-zz',\n  ixc: 'ixc-latn-mx',\n  ixl: 'ixl-latn-gt',\n  iya: 'iya-latn-ng',\n  iyo: 'iyo-latn-cm',\n  iyx: 'iyx-latn-cg',\n  izh: 'izh-latn-ru',\n  izi: 'izi-latn-zz',\n  izr: 'izr-latn-ng',\n  izz: 'izz-latn-ng',\n  ja: 'ja-jpan-jp',\n  jaa: 'jaa-latn-br',\n  jab: 'jab-latn-zz',\n  jac: 'jac-latn-gt',\n  jad: 'jad-arab-gn',\n  jae: 'jae-latn-pg',\n  jaf: 'jaf-latn-ng',\n  jah: 'jah-latn-my',\n  jaj: 'jaj-latn-sb',\n  jak: 'jak-latn-my',\n  jal: 'jal-latn-id',\n  jam: 'jam-latn-jm',\n  jan: 'jan-latn-au',\n  jao: 'jao-latn-au',\n  jaq: 'jaq-latn-id',\n  jar: 'jar-latn-zz',\n  jas: 'jas-latn-nc',\n  jat: 'jat-arab-af',\n  jau: 'jau-latn-id',\n  jax: 'jax-latn-id',\n  jay: 'jay-latn-au',\n  jaz: 'jaz-latn-nc',\n  jbe: 'jbe-hebr-il',\n  jbi: 'jbi-latn-au',\n  jbj: 'jbj-latn-id',\n  jbk: 'jbk-latn-pg',\n  jbm: 'jbm-latn-ng',\n  jbn: 'jbn-arab-ly',\n  jbo: 'jbo-latn-001',\n  jbr: 'jbr-latn-id',\n  jbt: 'jbt-latn-br',\n  jbu: 'jbu-latn-zz',\n  jbw: 'jbw-latn-au',\n  jct: 'jct-cyrl-ua',\n  'jct-latn': 'jct-latn-ua',\n  jda: 'jda-tibt-in',\n  jdg: 'jdg-arab-pk',\n  jdt: 'jdt-cyrl-ru',\n  'jdt-hebr': 'jdt-hebr-ru',\n  'jdt-latn': 'jdt-latn-az',\n  jeb: 'jeb-latn-pe',\n  jee: 'jee-deva-np',\n  jeh: 'jeh-latn-vn',\n  'jeh-laoo': 'jeh-laoo-la',\n  jei: 'jei-latn-id',\n  jek: 'jek-latn-ci',\n  jel: 'jel-latn-id',\n  jen: 'jen-latn-zz',\n  jer: 'jer-latn-ng',\n  jet: 'jet-latn-pg',\n  jeu: 'jeu-latn-td',\n  jgb: 'jgb-latn-cd',\n  jge: 'jge-geor-ge',\n  'jge-hebr': 'jge-hebr-il',\n  jgk: 'jgk-latn-zz',\n  jgo: 'jgo-latn-cm',\n  jhi: 'jhi-latn-my',\n  ji: 'ji-hebr-ua',\n  jia: 'jia-latn-cm',\n  jib: 'jib-latn-zz',\n  jic: 'jic-latn-hn',\n  jid: 'jid-latn-ng',\n  jie: 'jie-latn-ng',\n  jig: 'jig-latn-au',\n  jil: 'jil-latn-pg',\n  jim: 'jim-latn-cm',\n  jit: 'jit-latn-tz',\n  jiu: 'jiu-latn-cn',\n  jiv: 'jiv-latn-ec',\n  jiy: 'jiy-latn-cn',\n  jje: 'jje-hang-kr',\n  jjr: 'jjr-latn-ng',\n  jka: 'jka-latn-id',\n  jkm: 'jkm-mymr-mm',\n  'jkm-brai': 'jkm-brai-mm',\n  'jkm-latn': 'jkm-latn-mm',\n  jko: 'jko-latn-pg',\n  jku: 'jku-latn-ng',\n  jle: 'jle-latn-sd',\n  jma: 'jma-latn-pg',\n  jmb: 'jmb-latn-ng',\n  jmc: 'jmc-latn-tz',\n  jmd: 'jmd-latn-id',\n  jmi: 'jmi-latn-ng',\n  jml: 'jml-deva-np',\n  jmn: 'jmn-latn-mm',\n  jmr: 'jmr-latn-gh',\n  jms: 'jms-latn-ng',\n  jmw: 'jmw-latn-pg',\n  jmx: 'jmx-latn-mx',\n  jna: 'jna-takr-in',\n  jnd: 'jnd-arab-pk',\n  jng: 'jng-latn-au',\n  jni: 'jni-latn-ng',\n  jnj: 'jnj-latn-et',\n  'jnj-ethi': 'jnj-ethi-et',\n  jnl: 'jnl-deva-in',\n  jns: 'jns-deva-in',\n  'jns-latn': 'jns-latn-in',\n  'jns-takr': 'jns-takr-in',\n  job: 'job-latn-cd',\n  jod: 'jod-latn-ci',\n  jog: 'jog-arab-pk',\n  jor: 'jor-latn-bo',\n  jow: 'jow-latn-ml',\n  jpa: 'jpa-hebr-ps',\n  jpr: 'jpr-hebr-il',\n  jqr: 'jqr-latn-pe',\n  jra: 'jra-latn-zz',\n  jrr: 'jrr-latn-ng',\n  jrt: 'jrt-latn-ng',\n  jru: 'jru-latn-ve',\n  jua: 'jua-latn-br',\n  jub: 'jub-latn-ng',\n  jud: 'jud-latn-ci',\n  juh: 'juh-latn-ng',\n  jui: 'jui-latn-au',\n  juk: 'juk-latn-ng',\n  jul: 'jul-deva-np',\n  jum: 'jum-latn-sd',\n  jun: 'jun-orya-in',\n  juo: 'juo-latn-ng',\n  jup: 'jup-latn-br',\n  jur: 'jur-latn-br',\n  jut: 'jut-latn-dk',\n  juu: 'juu-latn-ng',\n  juw: 'juw-latn-ng',\n  juy: 'juy-orya-in',\n  jv: 'jv-latn-id',\n  jvd: 'jvd-latn-id',\n  jvn: 'jvn-latn-sr',\n  jw: 'jw-latn-id',\n  jwi: 'jwi-latn-gh',\n  jya: 'jya-tibt-cn',\n  jye: 'jye-hebr-il',\n  jyy: 'jyy-latn-td',\n  ka: 'ka-geor-ge',\n  kaa: 'kaa-cyrl-uz',\n  kab: 'kab-latn-dz',\n  kac: 'kac-latn-mm',\n  kad: 'kad-latn-zz',\n  kag: 'kag-latn-my',\n  kah: 'kah-latn-cf',\n  kai: 'kai-latn-zz',\n  kaj: 'kaj-latn-ng',\n  kak: 'kak-latn-ph',\n  kam: 'kam-latn-ke',\n  kao: 'kao-latn-ml',\n  kap: 'kap-cyrl-ru',\n  kaq: 'kaq-latn-pe',\n  kav: 'kav-latn-br',\n  kaw: 'kaw-kawi-id',\n  kax: 'kax-latn-id',\n  kay: 'kay-latn-br',\n  kba: 'kba-latn-au',\n  kbb: 'kbb-latn-br',\n  kbc: 'kbc-latn-br',\n  kbd: 'kbd-cyrl-ru',\n  kbe: 'kbe-latn-au',\n  kbh: 'kbh-latn-co',\n  kbi: 'kbi-latn-id',\n  kbj: 'kbj-latn-cd',\n  kbk: 'kbk-latn-pg',\n  kbl: 'kbl-latn-td',\n  kbm: 'kbm-latn-zz',\n  kbn: 'kbn-latn-cf',\n  kbo: 'kbo-latn-ss',\n  kbp: 'kbp-latn-zz',\n  kbq: 'kbq-latn-zz',\n  kbr: 'kbr-latn-et',\n  'kbr-ethi': 'kbr-ethi-et',\n  kbs: 'kbs-latn-ga',\n  kbt: 'kbt-latn-pg',\n  kbu: 'kbu-arab-pk',\n  kbv: 'kbv-latn-id',\n  kbw: 'kbw-latn-pg',\n  kbx: 'kbx-latn-zz',\n  kby: 'kby-arab-ne',\n  kbz: 'kbz-latn-ng',\n  kca: 'kca-cyrl-ru',\n  kcb: 'kcb-latn-pg',\n  kcc: 'kcc-latn-ng',\n  kcd: 'kcd-latn-id',\n  kce: 'kce-latn-ng',\n  kcf: 'kcf-latn-ng',\n  kcg: 'kcg-latn-ng',\n  kch: 'kch-latn-ng',\n  kci: 'kci-latn-ng',\n  kcj: 'kcj-latn-gw',\n  kck: 'kck-latn-zw',\n  kcl: 'kcl-latn-zz',\n  kcm: 'kcm-latn-cf',\n  kcn: 'kcn-latn-ug',\n  kco: 'kco-latn-pg',\n  kcp: 'kcp-latn-sd',\n  kcq: 'kcq-latn-ng',\n  kcs: 'kcs-latn-ng',\n  kct: 'kct-latn-zz',\n  kcu: 'kcu-latn-tz',\n  kcv: 'kcv-latn-cd',\n  kcw: 'kcw-latn-cd',\n  kcz: 'kcz-latn-tz',\n  kda: 'kda-latn-au',\n  kdc: 'kdc-latn-tz',\n  kdd: 'kdd-latn-au',\n  kde: 'kde-latn-tz',\n  kdf: 'kdf-latn-pg',\n  kdg: 'kdg-latn-cd',\n  kdh: 'kdh-latn-tg',\n  kdi: 'kdi-latn-ug',\n  kdj: 'kdj-latn-ug',\n  kdk: 'kdk-latn-nc',\n  kdl: 'kdl-latn-zz',\n  kdm: 'kdm-latn-ng',\n  kdn: 'kdn-latn-zw',\n  kdp: 'kdp-latn-ng',\n  kdq: 'kdq-beng-in',\n  kdr: 'kdr-latn-lt',\n  'kdr-cyrl': 'kdr-cyrl-ua',\n  kdt: 'kdt-thai-th',\n  kdw: 'kdw-latn-id',\n  kdx: 'kdx-latn-ng',\n  kdy: 'kdy-latn-id',\n  kdz: 'kdz-latn-cm',\n  kea: 'kea-latn-cv',\n  keb: 'keb-latn-ga',\n  kec: 'kec-latn-sd',\n  ked: 'ked-latn-tz',\n  kee: 'kee-latn-us',\n  kef: 'kef-latn-tg',\n  keg: 'keg-latn-sd',\n  keh: 'keh-latn-pg',\n  kei: 'kei-latn-id',\n  kek: 'kek-latn-gt',\n  kel: 'kel-latn-cd',\n  kem: 'kem-latn-tl',\n  ken: 'ken-latn-cm',\n  keo: 'keo-latn-ug',\n  ker: 'ker-latn-td',\n  kes: 'kes-latn-ng',\n  ket: 'ket-cyrl-ru',\n  keu: 'keu-latn-tg',\n  kew: 'kew-latn-pg',\n  kex: 'kex-deva-in',\n  'kex-gujr': 'kex-gujr-in',\n  key: 'key-telu-in',\n  kez: 'kez-latn-zz',\n  kfa: 'kfa-knda-in',\n  kfb: 'kfb-deva-in',\n  kfc: 'kfc-telu-in',\n  kfd: 'kfd-knda-in',\n  kfe: 'kfe-taml-in',\n  kff: 'kff-latn-in',\n  'kff-deva': 'kff-deva-in',\n  'kff-orya': 'kff-orya-in',\n  'kff-telu': 'kff-telu-in',\n  kfh: 'kfh-mlym-in',\n  kfi: 'kfi-taml-in',\n  'kfi-knda': 'kfi-knda-in',\n  kfk: 'kfk-deva-in',\n  'kfk-takr': 'kfk-takr-in',\n  kfl: 'kfl-latn-cm',\n  kfm: 'kfm-arab-ir',\n  kfn: 'kfn-latn-cm',\n  kfo: 'kfo-latn-ci',\n  kfp: 'kfp-deva-in',\n  kfq: 'kfq-deva-in',\n  kfr: 'kfr-deva-in',\n  kfs: 'kfs-deva-in',\n  kfv: 'kfv-latn-in',\n  kfw: 'kfw-latn-in',\n  kfx: 'kfx-deva-in',\n  'kfx-takr': 'kfx-takr-in',\n  kfy: 'kfy-deva-in',\n  kfz: 'kfz-latn-bf',\n  kg: 'kg-latn-cd',\n  kga: 'kga-latn-ci',\n  kgb: 'kgb-latn-id',\n  kge: 'kge-latn-id',\n  kgf: 'kgf-latn-zz',\n  kgj: 'kgj-deva-np',\n  kgk: 'kgk-latn-br',\n  kgl: 'kgl-latn-au',\n  kgm: 'kgm-latn-br',\n  kgo: 'kgo-latn-sd',\n  kgp: 'kgp-latn-br',\n  kgq: 'kgq-latn-id',\n  kgr: 'kgr-latn-id',\n  kgs: 'kgs-latn-au',\n  kgt: 'kgt-latn-ng',\n  kgu: 'kgu-latn-pg',\n  kgv: 'kgv-latn-id',\n  kgw: 'kgw-latn-id',\n  kgx: 'kgx-latn-id',\n  kgy: 'kgy-deva-np',\n  kha: 'kha-latn-in',\n  khb: 'khb-talu-cn',\n  khc: 'khc-latn-id',\n  khd: 'khd-latn-id',\n  khe: 'khe-latn-id',\n  khf: 'khf-thai-la',\n  khg: 'khg-tibt-cn',\n  khh: 'khh-latn-id',\n  khj: 'khj-latn-ng',\n  khl: 'khl-latn-pg',\n  khn: 'khn-deva-in',\n  khp: 'khp-latn-id',\n  khq: 'khq-latn-ml',\n  khr: 'khr-latn-in',\n  'khr-deva': 'khr-deva-in',\n  khs: 'khs-latn-zz',\n  kht: 'kht-mymr-in',\n  khu: 'khu-latn-ao',\n  khv: 'khv-cyrl-ru',\n  khw: 'khw-arab-pk',\n  khx: 'khx-latn-cd',\n  khy: 'khy-latn-cd',\n  khz: 'khz-latn-zz',\n  ki: 'ki-latn-ke',\n  kia: 'kia-latn-td',\n  kib: 'kib-latn-sd',\n  kic: 'kic-latn-us',\n  kid: 'kid-latn-cm',\n  kie: 'kie-latn-td',\n  kif: 'kif-deva-np',\n  kig: 'kig-latn-id',\n  kih: 'kih-latn-pg',\n  kij: 'kij-latn-zz',\n  kil: 'kil-latn-ng',\n  kim: 'kim-cyrl-ru',\n  kio: 'kio-latn-us',\n  kip: 'kip-deva-np',\n  kiq: 'kiq-latn-id',\n  kis: 'kis-latn-pg',\n  kit: 'kit-latn-pg',\n  kiu: 'kiu-latn-tr',\n  kiv: 'kiv-latn-tz',\n  kiw: 'kiw-latn-zz',\n  kix: 'kix-latn-in',\n  kiy: 'kiy-latn-id',\n  kiz: 'kiz-latn-tz',\n  kj: 'kj-latn-na',\n  kja: 'kja-latn-id',\n  kjb: 'kjb-latn-gt',\n  kjc: 'kjc-latn-id',\n  kjd: 'kjd-latn-zz',\n  kje: 'kje-latn-id',\n  kjg: 'kjg-laoo-la',\n  kjh: 'kjh-cyrl-ru',\n  kji: 'kji-latn-sb',\n  kjj: 'kjj-latn-az',\n  kjk: 'kjk-latn-id',\n  kjl: 'kjl-deva-np',\n  kjm: 'kjm-latn-vn',\n  kjn: 'kjn-latn-au',\n  kjo: 'kjo-deva-in',\n  kjp: 'kjp-mymr-mm',\n  'kjp-thai': 'kjp-thai-th',\n  kjq: 'kjq-latn-us',\n  kjr: 'kjr-latn-id',\n  kjs: 'kjs-latn-zz',\n  kjt: 'kjt-thai-th',\n  kju: 'kju-latn-us',\n  kjx: 'kjx-latn-pg',\n  kjy: 'kjy-latn-zz',\n  kk: 'kk-cyrl-kz',\n  'kk-af': 'kk-arab-af',\n  'kk-arab': 'kk-arab-cn',\n  'kk-cn': 'kk-arab-cn',\n  'kk-ir': 'kk-arab-ir',\n  'kk-mn': 'kk-arab-mn',\n  kka: 'kka-latn-ng',\n  kkb: 'kkb-latn-id',\n  kkc: 'kkc-latn-zz',\n  kkd: 'kkd-latn-ng',\n  kke: 'kke-latn-gn',\n  'kke-arab': 'kke-arab-gn',\n  kkf: 'kkf-tibt-in',\n  kkg: 'kkg-latn-ph',\n  kkh: 'kkh-lana-mm',\n  kki: 'kki-latn-tz',\n  kkj: 'kkj-latn-cm',\n  kkk: 'kkk-latn-sb',\n  kkl: 'kkl-latn-id',\n  kkm: 'kkm-latn-ng',\n  kko: 'kko-latn-sd',\n  kkp: 'kkp-latn-au',\n  kkq: 'kkq-latn-cd',\n  kkr: 'kkr-latn-ng',\n  kks: 'kks-latn-ng',\n  kkt: 'kkt-deva-np',\n  kku: 'kku-latn-ng',\n  kkv: 'kkv-latn-id',\n  kkw: 'kkw-latn-cg',\n  kkx: 'kkx-latn-id',\n  kky: 'kky-latn-au',\n  kkz: 'kkz-latn-ca',\n  kl: 'kl-latn-gl',\n  kla: 'kla-latn-us',\n  klb: 'klb-latn-mx',\n  klc: 'klc-latn-cm',\n  kld: 'kld-latn-au',\n  kle: 'kle-deva-np',\n  klf: 'klf-latn-td',\n  klg: 'klg-latn-ph',\n  klh: 'klh-latn-pg',\n  kli: 'kli-latn-id',\n  klj: 'klj-arab-ir',\n  klk: 'klk-latn-ng',\n  kll: 'kll-latn-ph',\n  klm: 'klm-latn-pg',\n  kln: 'kln-latn-ke',\n  klo: 'klo-latn-ng',\n  klp: 'klp-latn-pg',\n  klq: 'klq-latn-zz',\n  klr: 'klr-deva-np',\n  kls: 'kls-latn-pk',\n  'kls-arab': 'kls-arab-pk',\n  klt: 'klt-latn-zz',\n  klu: 'klu-latn-lr',\n  klv: 'klv-latn-vu',\n  klw: 'klw-latn-id',\n  klx: 'klx-latn-zz',\n  kly: 'kly-latn-id',\n  klz: 'klz-latn-id',\n  km: 'km-khmr-kh',\n  kma: 'kma-latn-gh',\n  kmb: 'kmb-latn-ao',\n  kmc: 'kmc-latn-cn',\n  'kmc-hani': 'kmc-hani-cn',\n  kmd: 'kmd-latn-ph',\n  kme: 'kme-latn-cm',\n  kmf: 'kmf-latn-pg',\n  kmg: 'kmg-latn-pg',\n  kmh: 'kmh-latn-zz',\n  kmi: 'kmi-latn-ng',\n  kmj: 'kmj-deva-in',\n  kmk: 'kmk-latn-ph',\n  kml: 'kml-latn-ph',\n  kmm: 'kmm-latn-in',\n  kmn: 'kmn-latn-pg',\n  kmo: 'kmo-latn-zz',\n  kmp: 'kmp-latn-cm',\n  kmq: 'kmq-latn-et',\n  kms: 'kms-latn-zz',\n  kmt: 'kmt-latn-id',\n  kmu: 'kmu-latn-zz',\n  kmv: 'kmv-latn-br',\n  kmw: 'kmw-latn-zz',\n  kmx: 'kmx-latn-pg',\n  kmy: 'kmy-latn-ng',\n  kmz: 'kmz-arab-ir',\n  kn: 'kn-knda-in',\n  kna: 'kna-latn-ng',\n  knb: 'knb-latn-ph',\n  knd: 'knd-latn-id',\n  kne: 'kne-latn-ph',\n  knf: 'knf-latn-gw',\n  kni: 'kni-latn-ng',\n  knj: 'knj-latn-gt',\n  knk: 'knk-latn-sl',\n  'knk-arab': 'knk-arab-sl',\n  knl: 'knl-latn-id',\n  knm: 'knm-latn-br',\n  kno: 'kno-latn-sl',\n  knp: 'knp-latn-zz',\n  knq: 'knq-latn-my',\n  knr: 'knr-latn-pg',\n  kns: 'kns-latn-my',\n  'kns-thai': 'kns-thai-th',\n  knt: 'knt-latn-br',\n  knu: 'knu-latn-gn',\n  knv: 'knv-latn-pg',\n  knw: 'knw-latn-na',\n  knx: 'knx-latn-id',\n  kny: 'kny-latn-cd',\n  knz: 'knz-latn-bf',\n  ko: 'ko-kore-kr',\n  koa: 'koa-latn-pg',\n  koc: 'koc-latn-ng',\n  kod: 'kod-latn-id',\n  koe: 'koe-latn-ss',\n  kof: 'kof-latn-ng',\n  kog: 'kog-latn-co',\n  koh: 'koh-latn-cg',\n  koi: 'koi-cyrl-ru',\n  kok: 'kok-deva-in',\n  kol: 'kol-latn-zz',\n  koo: 'koo-latn-ug',\n  kop: 'kop-latn-pg',\n  koq: 'koq-latn-ga',\n  kos: 'kos-latn-fm',\n  kot: 'kot-latn-cm',\n  kou: 'kou-latn-td',\n  kov: 'kov-latn-ng',\n  kow: 'kow-latn-ng',\n  koy: 'koy-latn-us',\n  koz: 'koz-latn-zz',\n  kpa: 'kpa-latn-ng',\n  kpc: 'kpc-latn-co',\n  kpd: 'kpd-latn-id',\n  kpe: 'kpe-latn-lr',\n  kpf: 'kpf-latn-zz',\n  kpg: 'kpg-latn-fm',\n  kph: 'kph-latn-gh',\n  kpi: 'kpi-latn-id',\n  kpj: 'kpj-latn-br',\n  kpk: 'kpk-latn-ng',\n  kpl: 'kpl-latn-cd',\n  kpm: 'kpm-latn-vn',\n  kpn: 'kpn-latn-br',\n  kpo: 'kpo-latn-zz',\n  kpq: 'kpq-latn-id',\n  kpr: 'kpr-latn-zz',\n  kps: 'kps-latn-id',\n  kpt: 'kpt-cyrl-ru',\n  kpu: 'kpu-latn-id',\n  kpw: 'kpw-latn-pg',\n  kpx: 'kpx-latn-zz',\n  kpy: 'kpy-cyrl-ru',\n  kpz: 'kpz-latn-ug',\n  kqa: 'kqa-latn-pg',\n  kqb: 'kqb-latn-zz',\n  kqc: 'kqc-latn-pg',\n  kqd: 'kqd-syrc-iq',\n  kqe: 'kqe-latn-ph',\n  kqf: 'kqf-latn-zz',\n  kqg: 'kqg-latn-bf',\n  kqh: 'kqh-latn-tz',\n  kqi: 'kqi-latn-pg',\n  kqj: 'kqj-latn-pg',\n  kqk: 'kqk-latn-bj',\n  kql: 'kql-latn-pg',\n  kqm: 'kqm-latn-ci',\n  kqn: 'kqn-latn-zm',\n  kqo: 'kqo-latn-lr',\n  kqp: 'kqp-latn-td',\n  kqq: 'kqq-latn-br',\n  kqr: 'kqr-latn-my',\n  kqs: 'kqs-latn-zz',\n  kqt: 'kqt-latn-my',\n  kqu: 'kqu-latn-za',\n  kqv: 'kqv-latn-id',\n  kqw: 'kqw-latn-pg',\n  kqx: 'kqx-latn-cm',\n  kqy: 'kqy-ethi-zz',\n  kqz: 'kqz-latn-za',\n  kr: 'kr-latn-zz',\n  kra: 'kra-deva-np',\n  krb: 'krb-latn-us',\n  krc: 'krc-cyrl-ru',\n  krd: 'krd-latn-tl',\n  kre: 'kre-latn-br',\n  krf: 'krf-latn-vu',\n  krh: 'krh-latn-ng',\n  kri: 'kri-latn-sl',\n  krj: 'krj-latn-ph',\n  krk: 'krk-cyrl-ru',\n  krl: 'krl-latn-ru',\n  krn: 'krn-latn-lr',\n  krp: 'krp-latn-ng',\n  krr: 'krr-khmr-kh',\n  krs: 'krs-latn-zz',\n  krt: 'krt-latn-ne',\n  kru: 'kru-deva-in',\n  krv: 'krv-khmr-kh',\n  krw: 'krw-latn-lr',\n  krx: 'krx-latn-sn',\n  kry: 'kry-latn-az',\n  krz: 'krz-latn-id',\n  ks: 'ks-arab-in',\n  ksa: 'ksa-latn-ng',\n  ksb: 'ksb-latn-tz',\n  ksc: 'ksc-latn-ph',\n  ksd: 'ksd-latn-zz',\n  kse: 'kse-latn-pg',\n  ksf: 'ksf-latn-cm',\n  ksg: 'ksg-latn-sb',\n  ksh: 'ksh-latn-de',\n  ksi: 'ksi-latn-pg',\n  ksj: 'ksj-latn-zz',\n  ksk: 'ksk-latn-us',\n  ksl: 'ksl-latn-pg',\n  ksm: 'ksm-latn-ng',\n  ksn: 'ksn-latn-ph',\n  kso: 'kso-latn-ng',\n  ksp: 'ksp-latn-cf',\n  ksq: 'ksq-latn-ng',\n  ksr: 'ksr-latn-zz',\n  kss: 'kss-latn-lr',\n  kst: 'kst-latn-bf',\n  ksu: 'ksu-mymr-in',\n  ksv: 'ksv-latn-cd',\n  ksw: 'ksw-mymr-mm',\n  'ksw-latn': 'ksw-latn-mm',\n  ksx: 'ksx-latn-id',\n  ksz: 'ksz-deva-in',\n  kta: 'kta-latn-vn',\n  ktb: 'ktb-ethi-zz',\n  ktc: 'ktc-latn-ng',\n  ktd: 'ktd-latn-au',\n  ktf: 'ktf-latn-cd',\n  ktg: 'ktg-latn-au',\n  kth: 'kth-latn-td',\n  kti: 'kti-latn-id',\n  ktj: 'ktj-latn-ci',\n  ktk: 'ktk-latn-pg',\n  ktl: 'ktl-arab-ir',\n  ktm: 'ktm-latn-zz',\n  ktn: 'ktn-latn-br',\n  kto: 'kto-latn-zz',\n  ktp: 'ktp-plrd-cn',\n  ktq: 'ktq-latn-ph',\n  ktr: 'ktr-latn-my',\n  kts: 'kts-latn-id',\n  ktt: 'ktt-latn-id',\n  ktu: 'ktu-latn-cd',\n  ktv: 'ktv-latn-vn',\n  ktw: 'ktw-latn-us',\n  ktx: 'ktx-latn-br',\n  kty: 'kty-latn-cd',\n  ktz: 'ktz-latn-na',\n  ku: 'ku-latn-tr',\n  'ku-arab': 'ku-arab-iq',\n  'ku-lb': 'ku-arab-lb',\n  'ku-yezi': 'ku-yezi-ge',\n  kub: 'kub-latn-zz',\n  kuc: 'kuc-latn-id',\n  kud: 'kud-latn-zz',\n  kue: 'kue-latn-zz',\n  kuf: 'kuf-laoo-la',\n  kug: 'kug-latn-ng',\n  kuh: 'kuh-latn-ng',\n  kui: 'kui-latn-br',\n  kuj: 'kuj-latn-zz',\n  kuk: 'kuk-latn-id',\n  kul: 'kul-latn-ng',\n  kum: 'kum-cyrl-ru',\n  kun: 'kun-latn-zz',\n  kuo: 'kuo-latn-pg',\n  kup: 'kup-latn-zz',\n  kuq: 'kuq-latn-br',\n  kus: 'kus-latn-zz',\n  kut: 'kut-latn-ca',\n  kuu: 'kuu-latn-us',\n  kuv: 'kuv-latn-id',\n  kuw: 'kuw-latn-cf',\n  kux: 'kux-latn-au',\n  kuy: 'kuy-latn-au',\n  kuz: 'kuz-latn-cl',\n  kv: 'kv-cyrl-ru',\n  kva: 'kva-cyrl-ru',\n  kvb: 'kvb-latn-id',\n  kvc: 'kvc-latn-pg',\n  kvd: 'kvd-latn-id',\n  kve: 'kve-latn-my',\n  kvf: 'kvf-latn-td',\n  kvg: 'kvg-latn-zz',\n  kvh: 'kvh-latn-id',\n  kvi: 'kvi-latn-td',\n  kvj: 'kvj-latn-cm',\n  kvl: 'kvl-latn-mm',\n  kvm: 'kvm-latn-cm',\n  kvn: 'kvn-latn-co',\n  kvo: 'kvo-latn-id',\n  kvp: 'kvp-latn-id',\n  kvq: 'kvq-mymr-mm',\n  'kvq-latn': 'kvq-latn-mm',\n  kvr: 'kvr-latn-id',\n  kvt: 'kvt-mymr-mm',\n  kvv: 'kvv-latn-id',\n  kvw: 'kvw-latn-id',\n  kvx: 'kvx-arab-pk',\n  kvy: 'kvy-kali-mm',\n  kvz: 'kvz-latn-id',\n  kw: 'kw-latn-gb',\n  kwa: 'kwa-latn-br',\n  kwb: 'kwb-latn-ng',\n  kwc: 'kwc-latn-cg',\n  kwd: 'kwd-latn-sb',\n  kwe: 'kwe-latn-id',\n  kwf: 'kwf-latn-sb',\n  kwg: 'kwg-latn-td',\n  kwh: 'kwh-latn-id',\n  kwi: 'kwi-latn-co',\n  kwj: 'kwj-latn-zz',\n  kwk: 'kwk-latn-ca',\n  kwl: 'kwl-latn-ng',\n  kwm: 'kwm-latn-na',\n  kwn: 'kwn-latn-na',\n  kwo: 'kwo-latn-zz',\n  kwp: 'kwp-latn-ci',\n  kwq: 'kwq-latn-zz',\n  kwr: 'kwr-latn-id',\n  kws: 'kws-latn-cd',\n  kwt: 'kwt-latn-id',\n  kwu: 'kwu-latn-cm',\n  kwv: 'kwv-latn-td',\n  kww: 'kww-latn-sr',\n  kwy: 'kwy-latn-cd',\n  kwz: 'kwz-latn-ao',\n  kxa: 'kxa-latn-zz',\n  kxb: 'kxb-latn-ci',\n  kxc: 'kxc-ethi-zz',\n  kxd: 'kxd-latn-bn',\n  'kxd-arab': 'kxd-arab-bn',\n  kxe: 'kxe-latn-zz',\n  kxf: 'kxf-mymr-mm',\n  'kxf-latn': 'kxf-latn-mm',\n  kxi: 'kxi-latn-my',\n  kxj: 'kxj-latn-td',\n  kxk: 'kxk-mymr-mm',\n  kxl: 'kxl-deva-in',\n  kxm: 'kxm-thai-th',\n  kxn: 'kxn-latn-my',\n  kxo: 'kxo-latn-br',\n  kxp: 'kxp-arab-pk',\n  kxq: 'kxq-latn-id',\n  kxr: 'kxr-latn-pg',\n  kxt: 'kxt-latn-pg',\n  kxv: 'kxv-orya-in',\n  'kxv-latn': 'kxv-latn-in',\n  'kxv-telu': 'kxv-telu-in',\n  kxw: 'kxw-latn-zz',\n  kxx: 'kxx-latn-cg',\n  kxy: 'kxy-latn-vn',\n  kxz: 'kxz-latn-zz',\n  ky: 'ky-cyrl-kg',\n  'ky-arab': 'ky-arab-cn',\n  'ky-cn': 'ky-arab-cn',\n  'ky-latn': 'ky-latn-tr',\n  'ky-tr': 'ky-latn-tr',\n  kya: 'kya-latn-tz',\n  kyb: 'kyb-latn-ph',\n  kyc: 'kyc-latn-pg',\n  kyd: 'kyd-latn-id',\n  kye: 'kye-latn-zz',\n  kyf: 'kyf-latn-ci',\n  kyg: 'kyg-latn-pg',\n  kyh: 'kyh-latn-us',\n  kyi: 'kyi-latn-my',\n  kyj: 'kyj-latn-ph',\n  kyk: 'kyk-latn-ph',\n  kyl: 'kyl-latn-us',\n  kym: 'kym-latn-cf',\n  kyn: 'kyn-latn-ph',\n  kyo: 'kyo-latn-id',\n  kyq: 'kyq-latn-td',\n  kyr: 'kyr-latn-br',\n  kys: 'kys-latn-my',\n  kyt: 'kyt-latn-id',\n  kyu: 'kyu-kali-mm',\n  'kyu-latn': 'kyu-latn-mm',\n  'kyu-mymr': 'kyu-mymr-mm',\n  kyv: 'kyv-deva-np',\n  kyw: 'kyw-deva-in',\n  'kyw-beng': 'kyw-beng-in',\n  'kyw-orya': 'kyw-orya-in',\n  kyx: 'kyx-latn-zz',\n  kyy: 'kyy-latn-pg',\n  kyz: 'kyz-latn-br',\n  kza: 'kza-latn-bf',\n  kzb: 'kzb-latn-id',\n  kzc: 'kzc-latn-ci',\n  kzd: 'kzd-latn-id',\n  kze: 'kze-latn-pg',\n  kzf: 'kzf-latn-id',\n  kzh: 'kzh-arab-zz',\n  kzi: 'kzi-latn-my',\n  kzj: 'kzj-latn-my',\n  kzk: 'kzk-latn-sb',\n  kzl: 'kzl-latn-id',\n  kzm: 'kzm-latn-id',\n  kzn: 'kzn-latn-mw',\n  kzo: 'kzo-latn-ga',\n  kzp: 'kzp-latn-id',\n  kzr: 'kzr-latn-zz',\n  kzs: 'kzs-latn-my',\n  kzt: 'kzt-latn-my',\n  kzu: 'kzu-latn-id',\n  kzv: 'kzv-latn-id',\n  kzw: 'kzw-latn-br',\n  kzx: 'kzx-latn-id',\n  kzy: 'kzy-latn-cd',\n  kzz: 'kzz-latn-id',\n  la: 'la-latn-va',\n  laa: 'laa-latn-ph',\n  lab: 'lab-lina-gr',\n  lac: 'lac-latn-mx',\n  lad: 'lad-hebr-il',\n  lae: 'lae-deva-in',\n  'lae-tibt': 'lae-tibt-in',\n  lag: 'lag-latn-tz',\n  lah: 'lah-arab-pk',\n  lai: 'lai-latn-mw',\n  laj: 'laj-latn-ug',\n  lal: 'lal-latn-cd',\n  lam: 'lam-latn-zm',\n  lan: 'lan-latn-ng',\n  lap: 'lap-latn-td',\n  laq: 'laq-latn-vn',\n  lar: 'lar-latn-gh',\n  las: 'las-latn-zz',\n  lau: 'lau-latn-id',\n  law: 'law-latn-id',\n  lax: 'lax-latn-in',\n  'lax-beng': 'lax-beng-in',\n  laz: 'laz-latn-pg',\n  lb: 'lb-latn-lu',\n  lbb: 'lbb-latn-pg',\n  lbc: 'lbc-lisu-cn',\n  lbe: 'lbe-cyrl-ru',\n  lbf: 'lbf-deva-in',\n  'lbf-tibt': 'lbf-tibt-cn',\n  lbi: 'lbi-latn-cm',\n  lbj: 'lbj-tibt-in',\n  'lbj-arab': 'lbj-arab-in',\n  lbl: 'lbl-latn-ph',\n  lbm: 'lbm-deva-in',\n  lbn: 'lbn-latn-la',\n  'lbn-laoo': 'lbn-laoo-la',\n  lbo: 'lbo-laoo-la',\n  'lbo-latn': 'lbo-latn-us',\n  lbq: 'lbq-latn-pg',\n  lbr: 'lbr-deva-np',\n  lbt: 'lbt-latn-vn',\n  lbu: 'lbu-latn-zz',\n  lbv: 'lbv-latn-pg',\n  lbw: 'lbw-latn-id',\n  lbx: 'lbx-latn-id',\n  lby: 'lby-latn-au',\n  lbz: 'lbz-latn-au',\n  lcc: 'lcc-latn-id',\n  lcd: 'lcd-latn-id',\n  lce: 'lce-latn-id',\n  lcf: 'lcf-latn-id',\n  lch: 'lch-latn-ao',\n  lcl: 'lcl-latn-id',\n  lcm: 'lcm-latn-zz',\n  lcp: 'lcp-thai-cn',\n  lcq: 'lcq-latn-id',\n  lcs: 'lcs-latn-id',\n  lda: 'lda-latn-ci',\n  ldb: 'ldb-latn-zz',\n  ldd: 'ldd-latn-ng',\n  ldg: 'ldg-latn-ng',\n  ldh: 'ldh-latn-ng',\n  ldi: 'ldi-latn-cg',\n  ldj: 'ldj-latn-ng',\n  ldk: 'ldk-latn-ng',\n  ldl: 'ldl-latn-ng',\n  ldm: 'ldm-latn-gn',\n  ldn: 'ldn-latn-001',\n  ldo: 'ldo-latn-ng',\n  ldp: 'ldp-latn-ng',\n  ldq: 'ldq-latn-ng',\n  lea: 'lea-latn-cd',\n  leb: 'leb-latn-zm',\n  lec: 'lec-latn-bo',\n  led: 'led-latn-zz',\n  lee: 'lee-latn-zz',\n  lef: 'lef-latn-gh',\n  leh: 'leh-latn-zm',\n  lei: 'lei-latn-pg',\n  lej: 'lej-latn-cd',\n  lek: 'lek-latn-pg',\n  lel: 'lel-latn-cd',\n  lem: 'lem-latn-zz',\n  len: 'len-latn-hn',\n  leo: 'leo-latn-cm',\n  lep: 'lep-lepc-in',\n  leq: 'leq-latn-zz',\n  ler: 'ler-latn-pg',\n  les: 'les-latn-cd',\n  let: 'let-latn-pg',\n  leu: 'leu-latn-zz',\n  lev: 'lev-latn-id',\n  lew: 'lew-latn-id',\n  lex: 'lex-latn-id',\n  ley: 'ley-latn-id',\n  lez: 'lez-cyrl-ru',\n  lfa: 'lfa-latn-cm',\n  lfn: 'lfn-latn-001',\n  'lfn-cyrl': 'lfn-cyrl-001',\n  lg: 'lg-latn-ug',\n  lga: 'lga-latn-sb',\n  lgb: 'lgb-latn-sb',\n  lgg: 'lgg-latn-zz',\n  lgh: 'lgh-latn-vn',\n  lgi: 'lgi-latn-id',\n  lgk: 'lgk-latn-vu',\n  lgl: 'lgl-latn-sb',\n  lgm: 'lgm-latn-cd',\n  lgn: 'lgn-latn-et',\n  lgo: 'lgo-latn-ss',\n  lgq: 'lgq-latn-gh',\n  lgr: 'lgr-latn-sb',\n  lgt: 'lgt-latn-pg',\n  lgu: 'lgu-latn-sb',\n  lgz: 'lgz-latn-cd',\n  lha: 'lha-latn-vn',\n  lhh: 'lhh-latn-id',\n  lhi: 'lhi-latn-cn',\n  lhm: 'lhm-deva-np',\n  lhn: 'lhn-latn-my',\n  lhs: 'lhs-syrc-sy',\n  lht: 'lht-latn-vu',\n  lhu: 'lhu-latn-cn',\n  li: 'li-latn-nl',\n  lia: 'lia-latn-zz',\n  lib: 'lib-latn-pg',\n  lic: 'lic-latn-cn',\n  lid: 'lid-latn-zz',\n  lie: 'lie-latn-cd',\n  lif: 'lif-deva-np',\n  'lif-limb': 'lif-limb-in',\n  lig: 'lig-latn-zz',\n  lih: 'lih-latn-zz',\n  lij: 'lij-latn-it',\n  lik: 'lik-latn-cd',\n  lil: 'lil-latn-ca',\n  lio: 'lio-latn-id',\n  lip: 'lip-latn-gh',\n  liq: 'liq-latn-et',\n  lir: 'lir-latn-lr',\n  lis: 'lis-lisu-cn',\n  liu: 'liu-latn-sd',\n  liv: 'liv-latn-lv',\n  liw: 'liw-latn-id',\n  lix: 'lix-latn-id',\n  liy: 'liy-latn-cf',\n  liz: 'liz-latn-cd',\n  lja: 'lja-latn-au',\n  lje: 'lje-latn-id',\n  lji: 'lji-latn-id',\n  ljl: 'ljl-latn-id',\n  ljp: 'ljp-latn-id',\n  ljw: 'ljw-latn-au',\n  ljx: 'ljx-latn-au',\n  lka: 'lka-latn-tl',\n  lkb: 'lkb-latn-ke',\n  lkc: 'lkc-latn-vn',\n  lkd: 'lkd-latn-br',\n  lke: 'lke-latn-ug',\n  lkh: 'lkh-tibt-bt',\n  lki: 'lki-arab-ir',\n  lkj: 'lkj-latn-my',\n  lkl: 'lkl-latn-pg',\n  lkm: 'lkm-latn-au',\n  lkn: 'lkn-latn-vu',\n  lko: 'lko-latn-ke',\n  lkr: 'lkr-latn-ss',\n  lks: 'lks-latn-ke',\n  lkt: 'lkt-latn-us',\n  lku: 'lku-latn-au',\n  lky: 'lky-latn-ss',\n  lla: 'lla-latn-ng',\n  llb: 'llb-latn-mz',\n  llc: 'llc-latn-gn',\n  lld: 'lld-latn-it',\n  lle: 'lle-latn-zz',\n  llf: 'llf-latn-pg',\n  llg: 'llg-latn-id',\n  lli: 'lli-latn-cg',\n  llj: 'llj-latn-au',\n  llk: 'llk-latn-my',\n  lll: 'lll-latn-pg',\n  llm: 'llm-latn-id',\n  lln: 'lln-latn-zz',\n  llp: 'llp-latn-vu',\n  llq: 'llq-latn-id',\n  llu: 'llu-latn-sb',\n  llx: 'llx-latn-fj',\n  lma: 'lma-latn-gn',\n  lmb: 'lmb-latn-vu',\n  lmc: 'lmc-latn-au',\n  lmd: 'lmd-latn-sd',\n  lme: 'lme-latn-td',\n  lmf: 'lmf-latn-id',\n  lmg: 'lmg-latn-pg',\n  lmh: 'lmh-deva-np',\n  lmi: 'lmi-latn-cd',\n  lmj: 'lmj-latn-id',\n  lmk: 'lmk-latn-in',\n  'lmk-mymr': 'lmk-mymr-in',\n  lml: 'lml-latn-vu',\n  lmn: 'lmn-telu-in',\n  lmo: 'lmo-latn-it',\n  lmp: 'lmp-latn-zz',\n  lmq: 'lmq-latn-id',\n  lmr: 'lmr-latn-id',\n  lmu: 'lmu-latn-vu',\n  lmv: 'lmv-latn-fj',\n  lmw: 'lmw-latn-us',\n  lmx: 'lmx-latn-cm',\n  lmy: 'lmy-latn-id',\n  ln: 'ln-latn-cd',\n  lna: 'lna-latn-cf',\n  lnb: 'lnb-latn-na',\n  lnd: 'lnd-latn-id',\n  lnh: 'lnh-latn-my',\n  lni: 'lni-latn-pg',\n  lnj: 'lnj-latn-au',\n  lnl: 'lnl-latn-cf',\n  lnm: 'lnm-latn-pg',\n  lnn: 'lnn-latn-vu',\n  lns: 'lns-latn-zz',\n  lnu: 'lnu-latn-zz',\n  lnw: 'lnw-latn-au',\n  lnz: 'lnz-latn-cd',\n  lo: 'lo-laoo-la',\n  loa: 'loa-latn-id',\n  lob: 'lob-latn-bf',\n  loc: 'loc-latn-ph',\n  loe: 'loe-latn-id',\n  log: 'log-latn-cd',\n  loh: 'loh-latn-ss',\n  loi: 'loi-latn-ci',\n  loj: 'loj-latn-zz',\n  lok: 'lok-latn-zz',\n  lol: 'lol-latn-cd',\n  lom: 'lom-latn-lr',\n  lon: 'lon-latn-mw',\n  loo: 'loo-latn-cd',\n  lop: 'lop-latn-ng',\n  loq: 'loq-latn-cd',\n  lor: 'lor-latn-zz',\n  los: 'los-latn-zz',\n  lot: 'lot-latn-ss',\n  'lot-arab': 'lot-arab-ss',\n  lou: 'lou-latn-us',\n  low: 'low-latn-my',\n  lox: 'lox-latn-id',\n  loy: 'loy-deva-np',\n  'loy-tibt': 'loy-tibt-np',\n  loz: 'loz-latn-zm',\n  lpa: 'lpa-latn-vu',\n  lpe: 'lpe-latn-id',\n  lpn: 'lpn-latn-mm',\n  lpo: 'lpo-plrd-cn',\n  'lpo-lisu': 'lpo-lisu-cn',\n  lpx: 'lpx-latn-ss',\n  lqr: 'lqr-latn-ss',\n  lra: 'lra-latn-my',\n  lrc: 'lrc-arab-ir',\n  lrg: 'lrg-latn-au',\n  lri: 'lri-latn-ke',\n  lrk: 'lrk-arab-pk',\n  lrl: 'lrl-arab-ir',\n  lrm: 'lrm-latn-ke',\n  lrn: 'lrn-latn-id',\n  lro: 'lro-latn-sd',\n  lrt: 'lrt-latn-id',\n  lrv: 'lrv-latn-vu',\n  lrz: 'lrz-latn-vu',\n  lsa: 'lsa-arab-ir',\n  lsd: 'lsd-hebr-il',\n  lse: 'lse-latn-cd',\n  lsi: 'lsi-latn-mm',\n  lsm: 'lsm-latn-ug',\n  lsr: 'lsr-latn-pg',\n  lss: 'lss-arab-pk',\n  lt: 'lt-latn-lt',\n  ltg: 'ltg-latn-lv',\n  lth: 'lth-latn-ug',\n  lti: 'lti-latn-id',\n  ltn: 'ltn-latn-br',\n  lto: 'lto-latn-ke',\n  lts: 'lts-latn-ke',\n  ltu: 'ltu-latn-id',\n  lu: 'lu-latn-cd',\n  lua: 'lua-latn-cd',\n  luc: 'luc-latn-ug',\n  lud: 'lud-latn-ru',\n  lue: 'lue-latn-zm',\n  luf: 'luf-latn-pg',\n  lui: 'lui-latn-us',\n  luj: 'luj-latn-cd',\n  luk: 'luk-tibt-bt',\n  lul: 'lul-latn-ss',\n  lum: 'lum-latn-ao',\n  lun: 'lun-latn-zm',\n  luo: 'luo-latn-ke',\n  lup: 'lup-latn-ga',\n  luq: 'luq-latn-cu',\n  lur: 'lur-latn-id',\n  lus: 'lus-latn-in',\n  'lus-beng': 'lus-beng-bd',\n  'lus-brai': 'lus-brai-in',\n  lut: 'lut-latn-us',\n  luu: 'luu-deva-np',\n  luv: 'luv-arab-om',\n  luw: 'luw-latn-cm',\n  luy: 'luy-latn-ke',\n  luz: 'luz-arab-ir',\n  lv: 'lv-latn-lv',\n  lva: 'lva-latn-tl',\n  lvi: 'lvi-latn-la',\n  lvk: 'lvk-latn-sb',\n  lvu: 'lvu-latn-id',\n  lwa: 'lwa-latn-cd',\n  lwe: 'lwe-latn-id',\n  lwg: 'lwg-latn-ke',\n  lwh: 'lwh-latn-vn',\n  lwl: 'lwl-thai-th',\n  lwm: 'lwm-thai-cn',\n  lwo: 'lwo-latn-ss',\n  'lwo-za': 'lwo-latn-za',\n  lwt: 'lwt-latn-id',\n  lww: 'lww-latn-vu',\n  lxm: 'lxm-latn-pg',\n  lya: 'lya-tibt-bt',\n  lyn: 'lyn-latn-zm',\n  lzh: 'lzh-hans-cn',\n  lzl: 'lzl-latn-vu',\n  lzn: 'lzn-latn-mm',\n  lzz: 'lzz-latn-tr',\n  maa: 'maa-latn-mx',\n  mab: 'mab-latn-mx',\n  mad: 'mad-latn-id',\n  mae: 'mae-latn-ng',\n  maf: 'maf-latn-cm',\n  mag: 'mag-deva-in',\n  mai: 'mai-deva-in',\n  maj: 'maj-latn-mx',\n  mak: 'mak-latn-id',\n  mam: 'mam-latn-gt',\n  man: 'man-latn-gm',\n  'man-gn': 'man-nkoo-gn',\n  'man-nkoo': 'man-nkoo-gn',\n  maq: 'maq-latn-mx',\n  mas: 'mas-latn-ke',\n  mat: 'mat-latn-mx',\n  mau: 'mau-latn-mx',\n  mav: 'mav-latn-br',\n  maw: 'maw-latn-zz',\n  max: 'max-latn-id',\n  maz: 'maz-latn-mx',\n  mba: 'mba-latn-ph',\n  mbb: 'mbb-latn-ph',\n  mbc: 'mbc-latn-br',\n  mbd: 'mbd-latn-ph',\n  mbf: 'mbf-latn-sg',\n  mbh: 'mbh-latn-zz',\n  mbi: 'mbi-latn-ph',\n  mbj: 'mbj-latn-br',\n  mbk: 'mbk-latn-pg',\n  mbl: 'mbl-latn-br',\n  mbm: 'mbm-latn-cg',\n  mbn: 'mbn-latn-co',\n  mbo: 'mbo-latn-zz',\n  mbp: 'mbp-latn-co',\n  mbq: 'mbq-latn-zz',\n  mbr: 'mbr-latn-co',\n  mbs: 'mbs-latn-ph',\n  mbt: 'mbt-latn-ph',\n  mbu: 'mbu-latn-zz',\n  mbv: 'mbv-latn-gn',\n  mbw: 'mbw-latn-zz',\n  mbx: 'mbx-latn-pg',\n  mby: 'mby-arab-pk',\n  mbz: 'mbz-latn-mx',\n  mca: 'mca-latn-py',\n  mcb: 'mcb-latn-pe',\n  mcc: 'mcc-latn-pg',\n  mcd: 'mcd-latn-pe',\n  mce: 'mce-latn-mx',\n  mcf: 'mcf-latn-pe',\n  mcg: 'mcg-latn-ve',\n  mch: 'mch-latn-ve',\n  mci: 'mci-latn-zz',\n  mcj: 'mcj-latn-ng',\n  mck: 'mck-latn-ao',\n  mcl: 'mcl-latn-co',\n  mcm: 'mcm-latn-my',\n  mcn: 'mcn-latn-td',\n  mco: 'mco-latn-mx',\n  mcp: 'mcp-latn-zz',\n  mcq: 'mcq-latn-zz',\n  mcr: 'mcr-latn-zz',\n  mcs: 'mcs-latn-cm',\n  mct: 'mct-latn-cm',\n  mcu: 'mcu-latn-zz',\n  mcv: 'mcv-latn-pg',\n  mcw: 'mcw-latn-td',\n  mcx: 'mcx-latn-cf',\n  mcy: 'mcy-latn-pg',\n  mcz: 'mcz-latn-pg',\n  mda: 'mda-latn-zz',\n  mdb: 'mdb-latn-pg',\n  mdc: 'mdc-latn-pg',\n  mdd: 'mdd-latn-cm',\n  mde: 'mde-arab-zz',\n  mdf: 'mdf-cyrl-ru',\n  mdg: 'mdg-latn-td',\n  mdh: 'mdh-latn-ph',\n  mdi: 'mdi-latn-cd',\n  mdj: 'mdj-latn-zz',\n  mdk: 'mdk-latn-cd',\n  mdm: 'mdm-latn-cd',\n  mdn: 'mdn-latn-cf',\n  mdp: 'mdp-latn-cd',\n  mdq: 'mdq-latn-cd',\n  mdr: 'mdr-latn-id',\n  mds: 'mds-latn-pg',\n  mdt: 'mdt-latn-cg',\n  mdu: 'mdu-latn-cg',\n  mdv: 'mdv-latn-mx',\n  mdw: 'mdw-latn-cg',\n  mdx: 'mdx-ethi-zz',\n  mdy: 'mdy-ethi-et',\n  'mdy-latn': 'mdy-latn-et',\n  mdz: 'mdz-latn-br',\n  mea: 'mea-latn-cm',\n  meb: 'meb-latn-pg',\n  mec: 'mec-latn-au',\n  med: 'med-latn-zz',\n  mee: 'mee-latn-zz',\n  meh: 'meh-latn-mx',\n  mej: 'mej-latn-id',\n  mek: 'mek-latn-zz',\n  mel: 'mel-latn-my',\n  mem: 'mem-latn-au',\n  men: 'men-latn-sl',\n  meo: 'meo-latn-my',\n  'meo-arab': 'meo-arab-my',\n  mep: 'mep-latn-au',\n  meq: 'meq-latn-cm',\n  mer: 'mer-latn-ke',\n  mes: 'mes-latn-td',\n  met: 'met-latn-zz',\n  meu: 'meu-latn-zz',\n  mev: 'mev-latn-lr',\n  mew: 'mew-latn-ng',\n  mey: 'mey-latn-mr',\n  'mey-arab': 'mey-arab-mr',\n  mez: 'mez-latn-us',\n  mfa: 'mfa-arab-th',\n  mfb: 'mfb-latn-id',\n  mfc: 'mfc-latn-cd',\n  mfd: 'mfd-latn-cm',\n  mfe: 'mfe-latn-mu',\n  mff: 'mff-latn-cm',\n  mfg: 'mfg-latn-gn',\n  'mfg-arab': 'mfg-arab-gn',\n  mfh: 'mfh-latn-cm',\n  mfi: 'mfi-arab-cm',\n  'mfi-latn': 'mfi-latn-cm',\n  mfj: 'mfj-latn-cm',\n  mfk: 'mfk-latn-cm',\n  mfl: 'mfl-latn-ng',\n  mfm: 'mfm-latn-ng',\n  mfn: 'mfn-latn-zz',\n  mfo: 'mfo-latn-zz',\n  mfp: 'mfp-latn-id',\n  mfq: 'mfq-latn-zz',\n  mfr: 'mfr-latn-au',\n  mft: 'mft-latn-pg',\n  mfu: 'mfu-latn-ao',\n  mfv: 'mfv-latn-gw',\n  mfw: 'mfw-latn-pg',\n  mfx: 'mfx-latn-et',\n  'mfx-ethi': 'mfx-ethi-et',\n  mfy: 'mfy-latn-mx',\n  mfz: 'mfz-latn-ss',\n  mg: 'mg-latn-mg',\n  mgb: 'mgb-latn-td',\n  mgc: 'mgc-latn-ss',\n  mgd: 'mgd-latn-ss',\n  'mgd-arab': 'mgd-arab-ss',\n  mge: 'mge-latn-td',\n  mgf: 'mgf-latn-id',\n  mgg: 'mgg-latn-cm',\n  mgh: 'mgh-latn-mz',\n  mgi: 'mgi-latn-ng',\n  mgj: 'mgj-latn-ng',\n  mgk: 'mgk-latn-id',\n  mgl: 'mgl-latn-zz',\n  mgm: 'mgm-latn-tl',\n  mgn: 'mgn-latn-cf',\n  mgo: 'mgo-latn-cm',\n  mgp: 'mgp-deva-np',\n  mgq: 'mgq-latn-tz',\n  mgr: 'mgr-latn-zm',\n  mgs: 'mgs-latn-tz',\n  mgt: 'mgt-latn-pg',\n  mgu: 'mgu-latn-pg',\n  mgv: 'mgv-latn-tz',\n  mgw: 'mgw-latn-tz',\n  mgy: 'mgy-latn-tz',\n  mgz: 'mgz-latn-tz',\n  mh: 'mh-latn-mh',\n  mhb: 'mhb-latn-ga',\n  mhc: 'mhc-latn-mx',\n  mhd: 'mhd-latn-tz',\n  mhe: 'mhe-latn-my',\n  mhf: 'mhf-latn-pg',\n  mhg: 'mhg-latn-au',\n  mhi: 'mhi-latn-zz',\n  mhj: 'mhj-arab-af',\n  mhk: 'mhk-latn-cm',\n  mhl: 'mhl-latn-zz',\n  mhm: 'mhm-latn-mz',\n  mhn: 'mhn-latn-it',\n  mho: 'mho-latn-zm',\n  mhp: 'mhp-latn-id',\n  mhq: 'mhq-latn-us',\n  mhs: 'mhs-latn-id',\n  mht: 'mht-latn-ve',\n  mhu: 'mhu-latn-in',\n  mhw: 'mhw-latn-bw',\n  mhx: 'mhx-latn-mm',\n  mhy: 'mhy-latn-id',\n  mhz: 'mhz-latn-id',\n  mi: 'mi-latn-nz',\n  mia: 'mia-latn-us',\n  mib: 'mib-latn-mx',\n  mic: 'mic-latn-ca',\n  mid: 'mid-mand-iq',\n  mie: 'mie-latn-mx',\n  mif: 'mif-latn-zz',\n  mig: 'mig-latn-mx',\n  mih: 'mih-latn-mx',\n  mii: 'mii-latn-mx',\n  mij: 'mij-latn-cm',\n  mik: 'mik-latn-us',\n  mil: 'mil-latn-mx',\n  mim: 'mim-latn-mx',\n  min: 'min-latn-id',\n  mio: 'mio-latn-mx',\n  mip: 'mip-latn-mx',\n  miq: 'miq-latn-ni',\n  mir: 'mir-latn-mx',\n  mit: 'mit-latn-mx',\n  miu: 'miu-latn-mx',\n  miw: 'miw-latn-zz',\n  mix: 'mix-latn-mx',\n  miy: 'miy-latn-mx',\n  miz: 'miz-latn-mx',\n  mjb: 'mjb-latn-tl',\n  mjc: 'mjc-latn-mx',\n  mjd: 'mjd-latn-us',\n  mje: 'mje-latn-td',\n  mjg: 'mjg-latn-cn',\n  mjh: 'mjh-latn-tz',\n  mji: 'mji-latn-cn',\n  mjj: 'mjj-latn-pg',\n  mjk: 'mjk-latn-pg',\n  mjl: 'mjl-deva-in',\n  'mjl-takr': 'mjl-takr-in',\n  mjm: 'mjm-latn-pg',\n  mjn: 'mjn-latn-pg',\n  mjq: 'mjq-mlym-in',\n  mjr: 'mjr-mlym-in',\n  mjs: 'mjs-latn-ng',\n  mjt: 'mjt-deva-in',\n  'mjt-beng': 'mjt-beng-bd',\n  mju: 'mju-telu-in',\n  mjv: 'mjv-mlym-in',\n  mjw: 'mjw-latn-in',\n  mjx: 'mjx-latn-bd',\n  'mjx-beng': 'mjx-beng-bd',\n  mjy: 'mjy-latn-us',\n  mjz: 'mjz-deva-np',\n  mk: 'mk-cyrl-mk',\n  mka: 'mka-latn-ci',\n  mkb: 'mkb-deva-in',\n  mkc: 'mkc-latn-pg',\n  mke: 'mke-deva-in',\n  mkf: 'mkf-latn-ng',\n  mki: 'mki-arab-zz',\n  mkj: 'mkj-latn-fm',\n  mkk: 'mkk-latn-cm',\n  mkl: 'mkl-latn-zz',\n  mkm: 'mkm-thai-th',\n  mkn: 'mkn-latn-id',\n  mko: 'mko-latn-ng',\n  mkp: 'mkp-latn-zz',\n  mkr: 'mkr-latn-pg',\n  mks: 'mks-latn-mx',\n  mkt: 'mkt-latn-nc',\n  mku: 'mku-latn-gn',\n  mkv: 'mkv-latn-vu',\n  mkw: 'mkw-latn-zz',\n  mkx: 'mkx-latn-ph',\n  mky: 'mky-latn-id',\n  mkz: 'mkz-latn-tl',\n  ml: 'ml-mlym-in',\n  mla: 'mla-latn-vu',\n  mlb: 'mlb-latn-cm',\n  mlc: 'mlc-latn-vn',\n  mle: 'mle-latn-zz',\n  mlf: 'mlf-thai-la',\n  'mlf-latn': 'mlf-latn-la',\n  mlh: 'mlh-latn-pg',\n  mli: 'mli-latn-id',\n  mlj: 'mlj-latn-td',\n  mlk: 'mlk-latn-ke',\n  mll: 'mll-latn-vu',\n  mln: 'mln-latn-sb',\n  mlo: 'mlo-latn-sn',\n  mlp: 'mlp-latn-zz',\n  mlq: 'mlq-latn-sn',\n  'mlq-arab': 'mlq-arab-sn',\n  mlr: 'mlr-latn-cm',\n  mls: 'mls-latn-sd',\n  mlu: 'mlu-latn-sb',\n  mlv: 'mlv-latn-vu',\n  mlw: 'mlw-latn-cm',\n  mlx: 'mlx-latn-vu',\n  mlz: 'mlz-latn-ph',\n  mma: 'mma-latn-ng',\n  mmb: 'mmb-latn-id',\n  mmc: 'mmc-latn-mx',\n  mmd: 'mmd-latn-cn',\n  'mmd-hans': 'mmd-hans-cn',\n  'mmd-hant': 'mmd-hant-cn',\n  mme: 'mme-latn-vu',\n  mmf: 'mmf-latn-ng',\n  mmg: 'mmg-latn-vu',\n  mmh: 'mmh-latn-br',\n  mmi: 'mmi-latn-pg',\n  mmm: 'mmm-latn-vu',\n  mmn: 'mmn-latn-ph',\n  mmo: 'mmo-latn-zz',\n  mmp: 'mmp-latn-pg',\n  mmq: 'mmq-latn-pg',\n  mmr: 'mmr-latn-cn',\n  mmt: 'mmt-latn-pg',\n  mmu: 'mmu-latn-zz',\n  mmv: 'mmv-latn-br',\n  mmw: 'mmw-latn-vu',\n  mmx: 'mmx-latn-zz',\n  mmy: 'mmy-latn-td',\n  mmz: 'mmz-latn-cd',\n  mn: 'mn-cyrl-mn',\n  'mn-cn': 'mn-mong-cn',\n  'mn-mong': 'mn-mong-cn',\n  mna: 'mna-latn-zz',\n  mnb: 'mnb-latn-id',\n  mnd: 'mnd-latn-br',\n  mne: 'mne-latn-td',\n  mnf: 'mnf-latn-zz',\n  mng: 'mng-latn-vn',\n  mnh: 'mnh-latn-cd',\n  mni: 'mni-beng-in',\n  mnj: 'mnj-arab-af',\n  mnl: 'mnl-latn-vu',\n  mnm: 'mnm-latn-pg',\n  mnn: 'mnn-latn-vn',\n  mnp: 'mnp-latn-cn',\n  mnq: 'mnq-latn-my',\n  mnr: 'mnr-latn-us',\n  mns: 'mns-cyrl-ru',\n  mnu: 'mnu-latn-id',\n  mnv: 'mnv-latn-sb',\n  mnw: 'mnw-mymr-mm',\n  mnx: 'mnx-latn-id',\n  mny: 'mny-latn-mz',\n  mnz: 'mnz-latn-id',\n  mo: 'mo-latn-ro',\n  moa: 'moa-latn-zz',\n  moc: 'moc-latn-ar',\n  mod: 'mod-latn-us',\n  moe: 'moe-latn-ca',\n  mog: 'mog-latn-id',\n  moh: 'moh-latn-ca',\n  moi: 'moi-latn-ng',\n  moj: 'moj-latn-cg',\n  mok: 'mok-latn-id',\n  mom: 'mom-latn-ni',\n  moo: 'moo-latn-vn',\n  mop: 'mop-latn-bz',\n  moq: 'moq-latn-id',\n  mor: 'mor-latn-sd',\n  mos: 'mos-latn-bf',\n  mot: 'mot-latn-co',\n  mou: 'mou-latn-td',\n  mov: 'mov-latn-us',\n  mow: 'mow-latn-cg',\n  mox: 'mox-latn-zz',\n  moy: 'moy-latn-et',\n  'moy-ethi': 'moy-ethi-et',\n  moz: 'moz-latn-td',\n  mpa: 'mpa-latn-tz',\n  mpb: 'mpb-latn-au',\n  mpc: 'mpc-latn-au',\n  mpd: 'mpd-latn-br',\n  mpe: 'mpe-latn-et',\n  'mpe-ethi': 'mpe-ethi-et',\n  mpg: 'mpg-latn-td',\n  mph: 'mph-latn-au',\n  mpi: 'mpi-latn-cm',\n  mpj: 'mpj-latn-au',\n  mpk: 'mpk-latn-td',\n  mpl: 'mpl-latn-pg',\n  mpm: 'mpm-latn-mx',\n  mpn: 'mpn-latn-pg',\n  mpo: 'mpo-latn-pg',\n  mpp: 'mpp-latn-zz',\n  mpq: 'mpq-latn-br',\n  mpr: 'mpr-latn-sb',\n  mps: 'mps-latn-zz',\n  mpt: 'mpt-latn-zz',\n  mpu: 'mpu-latn-br',\n  mpv: 'mpv-latn-pg',\n  mpw: 'mpw-latn-br',\n  mpx: 'mpx-latn-zz',\n  mpy: 'mpy-latn-id',\n  mpz: 'mpz-thai-th',\n  mqa: 'mqa-latn-id',\n  mqb: 'mqb-latn-cm',\n  mqc: 'mqc-latn-id',\n  mqe: 'mqe-latn-pg',\n  mqf: 'mqf-latn-id',\n  mqg: 'mqg-latn-id',\n  mqh: 'mqh-latn-mx',\n  mqi: 'mqi-latn-id',\n  mqj: 'mqj-latn-id',\n  mqk: 'mqk-latn-ph',\n  mql: 'mql-latn-zz',\n  mqm: 'mqm-latn-pf',\n  mqn: 'mqn-latn-id',\n  mqo: 'mqo-latn-id',\n  mqp: 'mqp-latn-id',\n  mqq: 'mqq-latn-my',\n  mqr: 'mqr-latn-id',\n  mqs: 'mqs-latn-id',\n  mqu: 'mqu-latn-ss',\n  mqv: 'mqv-latn-pg',\n  mqw: 'mqw-latn-pg',\n  mqx: 'mqx-latn-id',\n  'mqx-bugi': 'mqx-bugi-id',\n  mqy: 'mqy-latn-id',\n  mqz: 'mqz-latn-pg',\n  mr: 'mr-deva-in',\n  mra: 'mra-thai-th',\n  mrb: 'mrb-latn-vu',\n  mrc: 'mrc-latn-us',\n  mrd: 'mrd-deva-np',\n  mrf: 'mrf-latn-id',\n  mrg: 'mrg-latn-in',\n  'mrg-beng': 'mrg-beng-in',\n  'mrg-deva': 'mrg-deva-in',\n  mrh: 'mrh-latn-in',\n  mrj: 'mrj-cyrl-ru',\n  mrk: 'mrk-latn-nc',\n  mrl: 'mrl-latn-fm',\n  mrm: 'mrm-latn-vu',\n  mrn: 'mrn-latn-sb',\n  mro: 'mro-mroo-bd',\n  mrp: 'mrp-latn-vu',\n  mrq: 'mrq-latn-pf',\n  mrr: 'mrr-deva-in',\n  mrs: 'mrs-latn-vu',\n  mrt: 'mrt-latn-ng',\n  mru: 'mru-latn-cm',\n  mrv: 'mrv-latn-pf',\n  mrw: 'mrw-latn-ph',\n  'mrw-arab': 'mrw-arab-ph',\n  mrx: 'mrx-latn-id',\n  mry: 'mry-latn-ph',\n  mrz: 'mrz-latn-id',\n  ms: 'ms-latn-my',\n  'ms-cc': 'ms-arab-cc',\n  msb: 'msb-latn-ph',\n  msc: 'msc-latn-gn',\n  mse: 'mse-latn-td',\n  msf: 'msf-latn-id',\n  msg: 'msg-latn-id',\n  msh: 'msh-latn-mg',\n  msi: 'msi-latn-my',\n  msj: 'msj-latn-cd',\n  msk: 'msk-latn-ph',\n  msl: 'msl-latn-id',\n  msm: 'msm-latn-ph',\n  msn: 'msn-latn-vu',\n  mso: 'mso-latn-id',\n  msp: 'msp-latn-br',\n  msq: 'msq-latn-nc',\n  mss: 'mss-latn-id',\n  msu: 'msu-latn-pg',\n  msv: 'msv-latn-cm',\n  msw: 'msw-latn-gw',\n  msx: 'msx-latn-pg',\n  msy: 'msy-latn-pg',\n  msz: 'msz-latn-pg',\n  mt: 'mt-latn-mt',\n  mta: 'mta-latn-ph',\n  mtb: 'mtb-latn-ci',\n  mtc: 'mtc-latn-zz',\n  mtd: 'mtd-latn-id',\n  mte: 'mte-latn-sb',\n  mtf: 'mtf-latn-zz',\n  mtg: 'mtg-latn-id',\n  mth: 'mth-latn-id',\n  mti: 'mti-latn-zz',\n  mtj: 'mtj-latn-id',\n  mtk: 'mtk-latn-cm',\n  mtl: 'mtl-latn-ng',\n  mtm: 'mtm-cyrl-ru',\n  mtn: 'mtn-latn-ni',\n  mto: 'mto-latn-mx',\n  mtp: 'mtp-latn-bo',\n  mtq: 'mtq-latn-vn',\n  mtr: 'mtr-deva-in',\n  mts: 'mts-latn-pe',\n  mtt: 'mtt-latn-vu',\n  mtu: 'mtu-latn-mx',\n  mtv: 'mtv-latn-pg',\n  mtw: 'mtw-latn-ph',\n  mtx: 'mtx-latn-mx',\n  mty: 'mty-latn-pg',\n  mua: 'mua-latn-cm',\n  mub: 'mub-latn-td',\n  muc: 'muc-latn-cm',\n  mud: 'mud-cyrl-ru',\n  mue: 'mue-latn-ec',\n  mug: 'mug-latn-cm',\n  muh: 'muh-latn-ss',\n  mui: 'mui-latn-id',\n  muj: 'muj-latn-td',\n  muk: 'muk-tibt-np',\n  mum: 'mum-latn-pg',\n  muo: 'muo-latn-cm',\n  muq: 'muq-latn-cn',\n  mur: 'mur-latn-zz',\n  mus: 'mus-latn-us',\n  mut: 'mut-deva-in',\n  muu: 'muu-latn-ke',\n  muv: 'muv-taml-in',\n  mux: 'mux-latn-pg',\n  muy: 'muy-latn-cm',\n  muz: 'muz-ethi-et',\n  'muz-latn': 'muz-latn-et',\n  mva: 'mva-latn-zz',\n  mvd: 'mvd-latn-id',\n  mvf: 'mvf-mong-cn',\n  'mvf-phag': 'mvf-phag-cn',\n  mvg: 'mvg-latn-mx',\n  mvh: 'mvh-latn-td',\n  mvk: 'mvk-latn-pg',\n  mvl: 'mvl-latn-au',\n  mvn: 'mvn-latn-zz',\n  mvo: 'mvo-latn-sb',\n  mvp: 'mvp-latn-id',\n  mvq: 'mvq-latn-pg',\n  mvr: 'mvr-latn-id',\n  mvs: 'mvs-latn-id',\n  mvt: 'mvt-latn-vu',\n  mvu: 'mvu-latn-td',\n  mvv: 'mvv-latn-my',\n  mvw: 'mvw-latn-tz',\n  mvx: 'mvx-latn-id',\n  mvy: 'mvy-arab-pk',\n  mvz: 'mvz-ethi-et',\n  'mvz-arab': 'mvz-arab-et',\n  mwa: 'mwa-latn-pg',\n  mwb: 'mwb-latn-pg',\n  mwc: 'mwc-latn-pg',\n  mwe: 'mwe-latn-tz',\n  mwf: 'mwf-latn-au',\n  mwg: 'mwg-latn-pg',\n  mwh: 'mwh-latn-pg',\n  mwi: 'mwi-latn-vu',\n  mwk: 'mwk-latn-ml',\n  mwl: 'mwl-latn-pt',\n  mwm: 'mwm-latn-td',\n  mwn: 'mwn-latn-zm',\n  mwo: 'mwo-latn-vu',\n  mwp: 'mwp-latn-au',\n  mwq: 'mwq-latn-mm',\n  mwr: 'mwr-deva-in',\n  mws: 'mws-latn-ke',\n  mwt: 'mwt-mymr-mm',\n  'mwt-thai': 'mwt-thai-th',\n  mwu: 'mwu-latn-ss',\n  mwv: 'mwv-latn-id',\n  mww: 'mww-hmnp-us',\n  mwz: 'mwz-latn-cd',\n  mxa: 'mxa-latn-mx',\n  mxb: 'mxb-latn-mx',\n  mxc: 'mxc-latn-zw',\n  mxd: 'mxd-latn-id',\n  mxe: 'mxe-latn-vu',\n  mxf: 'mxf-latn-cm',\n  mxg: 'mxg-latn-ao',\n  mxh: 'mxh-latn-cd',\n  mxi: 'mxi-latn-es',\n  mxj: 'mxj-latn-in',\n  mxk: 'mxk-latn-pg',\n  mxl: 'mxl-latn-bj',\n  mxm: 'mxm-latn-zz',\n  mxn: 'mxn-latn-id',\n  mxo: 'mxo-latn-zm',\n  mxp: 'mxp-latn-mx',\n  mxq: 'mxq-latn-mx',\n  mxr: 'mxr-latn-my',\n  mxs: 'mxs-latn-mx',\n  mxt: 'mxt-latn-mx',\n  mxu: 'mxu-latn-cm',\n  mxv: 'mxv-latn-mx',\n  mxw: 'mxw-latn-pg',\n  mxx: 'mxx-latn-ci',\n  mxy: 'mxy-latn-mx',\n  mxz: 'mxz-latn-id',\n  my: 'my-mymr-mm',\n  myb: 'myb-latn-td',\n  myc: 'myc-latn-cd',\n  mye: 'mye-latn-ga',\n  myf: 'myf-latn-et',\n  myg: 'myg-latn-cm',\n  myh: 'myh-latn-us',\n  myj: 'myj-latn-ss',\n  myk: 'myk-latn-zz',\n  myl: 'myl-latn-id',\n  mym: 'mym-ethi-zz',\n  myp: 'myp-latn-br',\n  myr: 'myr-latn-pe',\n  myu: 'myu-latn-br',\n  myv: 'myv-cyrl-ru',\n  myw: 'myw-latn-zz',\n  myx: 'myx-latn-ug',\n  myy: 'myy-latn-co',\n  myz: 'myz-mand-ir',\n  mza: 'mza-latn-mx',\n  mzd: 'mzd-latn-cm',\n  mze: 'mze-latn-pg',\n  mzh: 'mzh-latn-ar',\n  mzi: 'mzi-latn-mx',\n  mzj: 'mzj-latn-lr',\n  mzk: 'mzk-latn-zz',\n  mzl: 'mzl-latn-mx',\n  mzm: 'mzm-latn-zz',\n  mzn: 'mzn-arab-ir',\n  mzo: 'mzo-latn-br',\n  mzp: 'mzp-latn-zz',\n  mzq: 'mzq-latn-id',\n  mzr: 'mzr-latn-br',\n  mzt: 'mzt-latn-my',\n  mzu: 'mzu-latn-pg',\n  mzv: 'mzv-latn-cf',\n  mzw: 'mzw-latn-zz',\n  mzx: 'mzx-latn-gy',\n  mzz: 'mzz-latn-zz',\n  na: 'na-latn-nr',\n  naa: 'naa-latn-id',\n  nab: 'nab-latn-br',\n  nac: 'nac-latn-zz',\n  nae: 'nae-latn-id',\n  naf: 'naf-latn-zz',\n  nag: 'nag-latn-in',\n  naj: 'naj-latn-gn',\n  nak: 'nak-latn-zz',\n  nal: 'nal-latn-pg',\n  nam: 'nam-latn-au',\n  nan: 'nan-hans-cn',\n  nao: 'nao-deva-np',\n  nap: 'nap-latn-it',\n  naq: 'naq-latn-na',\n  nar: 'nar-latn-ng',\n  nas: 'nas-latn-zz',\n  nat: 'nat-latn-ng',\n  naw: 'naw-latn-gh',\n  nax: 'nax-latn-pg',\n  nay: 'nay-latn-au',\n  naz: 'naz-latn-mx',\n  nb: 'nb-latn-no',\n  nba: 'nba-latn-ao',\n  nbb: 'nbb-latn-ng',\n  nbc: 'nbc-latn-in',\n  nbd: 'nbd-latn-cd',\n  nbe: 'nbe-latn-in',\n  nbh: 'nbh-latn-ng',\n  nbi: 'nbi-latn-in',\n  nbj: 'nbj-latn-au',\n  nbk: 'nbk-latn-pg',\n  nbm: 'nbm-latn-cf',\n  nbn: 'nbn-latn-id',\n  nbo: 'nbo-latn-ng',\n  nbp: 'nbp-latn-ng',\n  nbq: 'nbq-latn-id',\n  nbr: 'nbr-latn-ng',\n  nbt: 'nbt-latn-in',\n  'nbt-deva': 'nbt-deva-in',\n  nbu: 'nbu-latn-in',\n  nbv: 'nbv-latn-cm',\n  nbw: 'nbw-latn-cd',\n  nby: 'nby-latn-pg',\n  nca: 'nca-latn-zz',\n  ncb: 'ncb-latn-in',\n  'ncb-deva': 'ncb-deva-in',\n  ncc: 'ncc-latn-pg',\n  ncd: 'ncd-deva-np',\n  nce: 'nce-latn-zz',\n  ncf: 'ncf-latn-zz',\n  ncg: 'ncg-latn-ca',\n  nch: 'nch-latn-mx',\n  nci: 'nci-latn-mx',\n  ncj: 'ncj-latn-mx',\n  nck: 'nck-latn-au',\n  ncl: 'ncl-latn-mx',\n  ncm: 'ncm-latn-pg',\n  ncn: 'ncn-latn-pg',\n  nco: 'nco-latn-zz',\n  ncq: 'ncq-laoo-la',\n  'ncq-thai': 'ncq-thai-la',\n  ncr: 'ncr-latn-cm',\n  nct: 'nct-latn-in',\n  'nct-beng': 'nct-beng-in',\n  ncu: 'ncu-latn-zz',\n  ncx: 'ncx-latn-mx',\n  ncz: 'ncz-latn-us',\n  nd: 'nd-latn-zw',\n  nda: 'nda-latn-cg',\n  ndb: 'ndb-latn-cm',\n  ndc: 'ndc-latn-mz',\n  ndd: 'ndd-latn-ng',\n  ndf: 'ndf-cyrl-ru',\n  ndg: 'ndg-latn-tz',\n  ndh: 'ndh-latn-tz',\n  ndi: 'ndi-latn-ng',\n  ndj: 'ndj-latn-tz',\n  ndk: 'ndk-latn-cd',\n  ndl: 'ndl-latn-cd',\n  ndm: 'ndm-latn-td',\n  ndn: 'ndn-latn-cg',\n  ndp: 'ndp-latn-ug',\n  ndq: 'ndq-latn-ao',\n  ndr: 'ndr-latn-ng',\n  nds: 'nds-latn-de',\n  ndt: 'ndt-latn-cd',\n  ndu: 'ndu-latn-cm',\n  ndv: 'ndv-latn-sn',\n  ndw: 'ndw-latn-cd',\n  ndx: 'ndx-latn-id',\n  ndy: 'ndy-latn-cf',\n  'ndy-td': 'ndy-latn-td',\n  ndz: 'ndz-latn-ss',\n  ne: 'ne-deva-np',\n  nea: 'nea-latn-id',\n  neb: 'neb-latn-zz',\n  nec: 'nec-latn-id',\n  ned: 'ned-latn-ng',\n  nee: 'nee-latn-nc',\n  neg: 'neg-cyrl-ru',\n  neh: 'neh-tibt-bt',\n  nei: 'nei-xsux-tr',\n  nej: 'nej-latn-pg',\n  nek: 'nek-latn-nc',\n  nem: 'nem-latn-nc',\n  nen: 'nen-latn-nc',\n  neo: 'neo-latn-vn',\n  neq: 'neq-latn-mx',\n  ner: 'ner-latn-id',\n  net: 'net-latn-pg',\n  neu: 'neu-latn-001',\n  new: 'new-deva-np',\n  nex: 'nex-latn-zz',\n  ney: 'ney-latn-ci',\n  nez: 'nez-latn-us',\n  nfa: 'nfa-latn-id',\n  nfd: 'nfd-latn-ng',\n  nfl: 'nfl-latn-sb',\n  nfr: 'nfr-latn-zz',\n  nfu: 'nfu-latn-cm',\n  ng: 'ng-latn-na',\n  nga: 'nga-latn-zz',\n  ngb: 'ngb-latn-zz',\n  ngc: 'ngc-latn-cd',\n  ngd: 'ngd-latn-cf',\n  nge: 'nge-latn-cm',\n  ngg: 'ngg-latn-cf',\n  ngh: 'ngh-latn-za',\n  ngi: 'ngi-latn-ng',\n  ngj: 'ngj-latn-cm',\n  ngk: 'ngk-latn-au',\n  ngl: 'ngl-latn-mz',\n  ngm: 'ngm-latn-fm',\n  ngn: 'ngn-latn-cm',\n  ngp: 'ngp-latn-tz',\n  ngq: 'ngq-latn-tz',\n  ngr: 'ngr-latn-sb',\n  ngs: 'ngs-latn-ng',\n  ngt: 'ngt-laoo-la',\n  ngu: 'ngu-latn-mx',\n  ngv: 'ngv-latn-cm',\n  ngw: 'ngw-latn-ng',\n  ngx: 'ngx-latn-ng',\n  ngy: 'ngy-latn-cm',\n  ngz: 'ngz-latn-cg',\n  nha: 'nha-latn-au',\n  nhb: 'nhb-latn-zz',\n  nhc: 'nhc-latn-mx',\n  nhd: 'nhd-latn-py',\n  nhe: 'nhe-latn-mx',\n  nhf: 'nhf-latn-au',\n  nhg: 'nhg-latn-mx',\n  nhi: 'nhi-latn-mx',\n  nhk: 'nhk-latn-mx',\n  nhm: 'nhm-latn-mx',\n  nhn: 'nhn-latn-mx',\n  nho: 'nho-latn-pg',\n  nhp: 'nhp-latn-mx',\n  nhq: 'nhq-latn-mx',\n  nhr: 'nhr-latn-bw',\n  nht: 'nht-latn-mx',\n  nhu: 'nhu-latn-cm',\n  nhv: 'nhv-latn-mx',\n  nhw: 'nhw-latn-mx',\n  nhx: 'nhx-latn-mx',\n  nhy: 'nhy-latn-mx',\n  nhz: 'nhz-latn-mx',\n  nia: 'nia-latn-id',\n  nib: 'nib-latn-pg',\n  nid: 'nid-latn-au',\n  nie: 'nie-latn-td',\n  nif: 'nif-latn-zz',\n  nig: 'nig-latn-au',\n  nih: 'nih-latn-tz',\n  nii: 'nii-latn-zz',\n  nij: 'nij-latn-id',\n  nil: 'nil-latn-id',\n  nim: 'nim-latn-tz',\n  nin: 'nin-latn-zz',\n  nio: 'nio-cyrl-ru',\n  niq: 'niq-latn-ke',\n  nir: 'nir-latn-id',\n  nis: 'nis-latn-pg',\n  nit: 'nit-telu-in',\n  niu: 'niu-latn-nu',\n  niv: 'niv-cyrl-ru',\n  'niv-latn': 'niv-latn-ru',\n  niw: 'niw-latn-pg',\n  nix: 'nix-latn-cd',\n  niy: 'niy-latn-zz',\n  niz: 'niz-latn-zz',\n  nja: 'nja-latn-ng',\n  njb: 'njb-latn-in',\n  njd: 'njd-latn-tz',\n  njh: 'njh-latn-in',\n  nji: 'nji-latn-au',\n  njj: 'njj-latn-cm',\n  njl: 'njl-latn-ss',\n  njm: 'njm-latn-in',\n  njn: 'njn-latn-in',\n  njo: 'njo-latn-in',\n  njr: 'njr-latn-ng',\n  njs: 'njs-latn-id',\n  njt: 'njt-latn-sr',\n  nju: 'nju-latn-au',\n  njx: 'njx-latn-cg',\n  njy: 'njy-latn-cm',\n  njz: 'njz-latn-in',\n  'njz-beng': 'njz-beng-in',\n  nka: 'nka-latn-zm',\n  nkb: 'nkb-latn-in',\n  nkc: 'nkc-latn-cm',\n  nkd: 'nkd-latn-in',\n  nke: 'nke-latn-sb',\n  nkf: 'nkf-latn-in',\n  nkg: 'nkg-latn-zz',\n  nkh: 'nkh-latn-in',\n  nki: 'nki-latn-in',\n  'nki-beng': 'nki-beng-in',\n  nkj: 'nkj-latn-id',\n  nkk: 'nkk-latn-vu',\n  nkm: 'nkm-latn-pg',\n  nkn: 'nkn-latn-ao',\n  nko: 'nko-latn-zz',\n  nkq: 'nkq-latn-gh',\n  nkr: 'nkr-latn-fm',\n  nks: 'nks-latn-id',\n  nkt: 'nkt-latn-tz',\n  nku: 'nku-latn-ci',\n  nkv: 'nkv-latn-mw',\n  nkw: 'nkw-latn-cd',\n  nkx: 'nkx-latn-ng',\n  nkz: 'nkz-latn-ng',\n  nl: 'nl-latn-nl',\n  nla: 'nla-latn-cm',\n  nlc: 'nlc-latn-id',\n  nle: 'nle-latn-ke',\n  nlg: 'nlg-latn-sb',\n  nli: 'nli-arab-af',\n  nlj: 'nlj-latn-cd',\n  nlk: 'nlk-latn-id',\n  nlm: 'nlm-arab-pk',\n  nlo: 'nlo-latn-cd',\n  nlq: 'nlq-latn-mm',\n  nlu: 'nlu-latn-gh',\n  nlv: 'nlv-latn-mx',\n  nlw: 'nlw-latn-au',\n  nlx: 'nlx-deva-in',\n  nly: 'nly-latn-au',\n  nlz: 'nlz-latn-sb',\n  nma: 'nma-latn-in',\n  nmb: 'nmb-latn-vu',\n  nmc: 'nmc-latn-td',\n  nmd: 'nmd-latn-ga',\n  nme: 'nme-latn-in',\n  nmf: 'nmf-latn-in',\n  nmg: 'nmg-latn-cm',\n  nmh: 'nmh-latn-in',\n  nmi: 'nmi-latn-ng',\n  nmj: 'nmj-latn-cf',\n  nmk: 'nmk-latn-vu',\n  nml: 'nml-latn-cm',\n  nmm: 'nmm-deva-np',\n  'nmm-tibt': 'nmm-tibt-np',\n  nmn: 'nmn-latn-bw',\n  nmo: 'nmo-latn-in',\n  'nmo-beng': 'nmo-beng-in',\n  nmp: 'nmp-latn-au',\n  nmq: 'nmq-latn-zw',\n  nmr: 'nmr-latn-cm',\n  nms: 'nms-latn-vu',\n  nmt: 'nmt-latn-fm',\n  nmu: 'nmu-latn-us',\n  nmv: 'nmv-latn-au',\n  nmw: 'nmw-latn-pg',\n  nmx: 'nmx-latn-pg',\n  nmz: 'nmz-latn-zz',\n  nn: 'nn-latn-no',\n  nna: 'nna-latn-au',\n  nnb: 'nnb-latn-cd',\n  nnc: 'nnc-latn-td',\n  nnd: 'nnd-latn-vu',\n  nne: 'nne-latn-ao',\n  nnf: 'nnf-latn-zz',\n  nng: 'nng-latn-in',\n  'nng-beng': 'nng-beng-in',\n  nnh: 'nnh-latn-cm',\n  nni: 'nni-latn-id',\n  nnj: 'nnj-latn-et',\n  nnk: 'nnk-latn-zz',\n  nnl: 'nnl-latn-in',\n  nnm: 'nnm-latn-zz',\n  nnn: 'nnn-latn-td',\n  nnp: 'nnp-wcho-in',\n  nnq: 'nnq-latn-tz',\n  nnr: 'nnr-latn-au',\n  nnt: 'nnt-latn-us',\n  nnu: 'nnu-latn-gh',\n  nnv: 'nnv-latn-au',\n  nnw: 'nnw-latn-bf',\n  nny: 'nny-latn-au',\n  nnz: 'nnz-latn-cm',\n  no: 'no-latn-no',\n  noa: 'noa-latn-co',\n  noc: 'noc-latn-pg',\n  nod: 'nod-lana-th',\n  noe: 'noe-deva-in',\n  nof: 'nof-latn-pg',\n  nog: 'nog-cyrl-ru',\n  noh: 'noh-latn-pg',\n  noi: 'noi-deva-in',\n  noj: 'noj-latn-co',\n  nok: 'nok-latn-us',\n  nom: 'nom-latn-pe',\n  non: 'non-runr-se',\n  nop: 'nop-latn-zz',\n  noq: 'noq-latn-cd',\n  nos: 'nos-yiii-cn',\n  not: 'not-latn-pe',\n  nou: 'nou-latn-zz',\n  nov: 'nov-latn-001',\n  now: 'now-latn-tz',\n  noy: 'noy-latn-td',\n  npb: 'npb-tibt-bt',\n  npg: 'npg-latn-mm',\n  nph: 'nph-latn-in',\n  npl: 'npl-latn-mx',\n  npn: 'npn-latn-pg',\n  npo: 'npo-latn-in',\n  nps: 'nps-latn-id',\n  npu: 'npu-latn-in',\n  npx: 'npx-latn-sb',\n  npy: 'npy-latn-id',\n  nqg: 'nqg-latn-bj',\n  nqk: 'nqk-latn-bj',\n  nql: 'nql-latn-ao',\n  nqm: 'nqm-latn-id',\n  nqn: 'nqn-latn-pg',\n  nqo: 'nqo-nkoo-gn',\n  nqq: 'nqq-latn-mm',\n  nqt: 'nqt-latn-ng',\n  nqy: 'nqy-latn-mm',\n  nr: 'nr-latn-za',\n  nra: 'nra-latn-ga',\n  nrb: 'nrb-latn-zz',\n  nre: 'nre-latn-in',\n  nrf: 'nrf-latn-je',\n  nrg: 'nrg-latn-vu',\n  nri: 'nri-latn-in',\n  nrk: 'nrk-latn-au',\n  nrl: 'nrl-latn-au',\n  nrm: 'nrm-latn-my',\n  nrp: 'nrp-latn-it',\n  nru: 'nru-latn-cn',\n  'nru-hans': 'nru-hans-cn',\n  'nru-hant': 'nru-hant-cn',\n  nrx: 'nrx-latn-au',\n  nrz: 'nrz-latn-pg',\n  nsa: 'nsa-latn-in',\n  nsb: 'nsb-latn-za',\n  nsc: 'nsc-latn-ng',\n  nsd: 'nsd-yiii-cn',\n  nse: 'nse-latn-zm',\n  nsf: 'nsf-yiii-cn',\n  nsg: 'nsg-latn-tz',\n  nsh: 'nsh-latn-cm',\n  nsk: 'nsk-cans-ca',\n  nsm: 'nsm-latn-in',\n  nsn: 'nsn-latn-zz',\n  nso: 'nso-latn-za',\n  nsq: 'nsq-latn-us',\n  nss: 'nss-latn-zz',\n  nst: 'nst-tnsa-in',\n  nsu: 'nsu-latn-mx',\n  nsv: 'nsv-yiii-cn',\n  nsw: 'nsw-latn-vu',\n  nsx: 'nsx-latn-ao',\n  nsy: 'nsy-latn-id',\n  nsz: 'nsz-latn-us',\n  ntd: 'ntd-latn-my',\n  nte: 'nte-latn-mz',\n  ntg: 'ntg-latn-au',\n  nti: 'nti-latn-bf',\n  ntj: 'ntj-latn-au',\n  ntk: 'ntk-latn-tz',\n  ntm: 'ntm-latn-zz',\n  nto: 'nto-latn-cd',\n  ntp: 'ntp-latn-mx',\n  ntr: 'ntr-latn-zz',\n  ntu: 'ntu-latn-sb',\n  ntx: 'ntx-latn-mm',\n  nty: 'nty-yiii-vn',\n  ntz: 'ntz-arab-ir',\n  nua: 'nua-latn-nc',\n  nuc: 'nuc-latn-br',\n  nud: 'nud-latn-pg',\n  nue: 'nue-latn-cd',\n  nuf: 'nuf-latn-cn',\n  nug: 'nug-latn-au',\n  nuh: 'nuh-latn-ng',\n  nui: 'nui-latn-zz',\n  nuj: 'nuj-latn-ug',\n  nuk: 'nuk-latn-ca',\n  num: 'num-latn-to',\n  nun: 'nun-latn-mm',\n  nuo: 'nuo-latn-vn',\n  nup: 'nup-latn-zz',\n  nuq: 'nuq-latn-pg',\n  nur: 'nur-latn-pg',\n  nus: 'nus-latn-ss',\n  nut: 'nut-latn-vn',\n  nuu: 'nuu-latn-cd',\n  nuv: 'nuv-latn-zz',\n  nuw: 'nuw-latn-fm',\n  nux: 'nux-latn-zz',\n  nuy: 'nuy-latn-au',\n  nuz: 'nuz-latn-mx',\n  nv: 'nv-latn-us',\n  nvh: 'nvh-latn-vu',\n  nvm: 'nvm-latn-pg',\n  nvo: 'nvo-latn-cm',\n  nwb: 'nwb-latn-zz',\n  nwc: 'nwc-newa-np',\n  'nwc-brah': 'nwc-brah-np',\n  'nwc-deva': 'nwc-deva-np',\n  'nwc-sidd': 'nwc-sidd-np',\n  nwe: 'nwe-latn-cm',\n  nwg: 'nwg-latn-au',\n  nwi: 'nwi-latn-vu',\n  nwm: 'nwm-latn-ss',\n  nwo: 'nwo-latn-au',\n  nwr: 'nwr-latn-pg',\n  nww: 'nww-latn-tz',\n  nwx: 'nwx-deva-np',\n  nxa: 'nxa-latn-tl',\n  nxd: 'nxd-latn-cd',\n  nxe: 'nxe-latn-id',\n  nxg: 'nxg-latn-id',\n  nxi: 'nxi-latn-tz',\n  nxl: 'nxl-latn-id',\n  nxn: 'nxn-latn-au',\n  nxo: 'nxo-latn-ga',\n  nxq: 'nxq-latn-cn',\n  nxr: 'nxr-latn-zz',\n  nxx: 'nxx-latn-id',\n  ny: 'ny-latn-mw',\n  nyb: 'nyb-latn-gh',\n  nyc: 'nyc-latn-cd',\n  nyd: 'nyd-latn-ke',\n  nye: 'nye-latn-ao',\n  nyf: 'nyf-latn-ke',\n  nyg: 'nyg-latn-cd',\n  nyh: 'nyh-latn-au',\n  nyi: 'nyi-latn-sd',\n  nyj: 'nyj-latn-cd',\n  nyk: 'nyk-latn-ao',\n  nyl: 'nyl-thai-th',\n  nym: 'nym-latn-tz',\n  nyn: 'nyn-latn-ug',\n  nyo: 'nyo-latn-ug',\n  nyp: 'nyp-latn-ug',\n  nyq: 'nyq-arab-ir',\n  nyr: 'nyr-latn-mw',\n  nys: 'nys-latn-au',\n  nyt: 'nyt-latn-au',\n  nyu: 'nyu-latn-mz',\n  nyv: 'nyv-latn-au',\n  nyx: 'nyx-latn-au',\n  nyy: 'nyy-latn-tz',\n  nza: 'nza-latn-cm',\n  nzb: 'nzb-latn-ga',\n  nzd: 'nzd-latn-cd',\n  nzi: 'nzi-latn-gh',\n  nzk: 'nzk-latn-cf',\n  nzm: 'nzm-latn-in',\n  nzu: 'nzu-latn-cg',\n  nzy: 'nzy-latn-td',\n  nzz: 'nzz-latn-ml',\n  oaa: 'oaa-cyrl-ru',\n  oac: 'oac-cyrl-ru',\n  oar: 'oar-syrc-sy',\n  oav: 'oav-geor-ge',\n  obi: 'obi-latn-us',\n  obk: 'obk-latn-ph',\n  obl: 'obl-latn-cm',\n  obm: 'obm-phnx-jo',\n  obo: 'obo-latn-ph',\n  obr: 'obr-mymr-mm',\n  obt: 'obt-latn-fr',\n  obu: 'obu-latn-ng',\n  oc: 'oc-latn-fr',\n  oca: 'oca-latn-pe',\n  oco: 'oco-latn-gb',\n  ocu: 'ocu-latn-mx',\n  oda: 'oda-latn-ng',\n  odk: 'odk-arab-pk',\n  odt: 'odt-latn-nl',\n  odu: 'odu-latn-ng',\n  ofu: 'ofu-latn-ng',\n  ogb: 'ogb-latn-ng',\n  ogc: 'ogc-latn-zz',\n  ogg: 'ogg-latn-ng',\n  ogo: 'ogo-latn-ng',\n  ogu: 'ogu-latn-ng',\n  oht: 'oht-xsux-tr',\n  oia: 'oia-latn-id',\n  oie: 'oie-latn-ss',\n  oin: 'oin-latn-pg',\n  oj: 'oj-cans-ca',\n  ojb: 'ojb-latn-ca',\n  'ojb-cans': 'ojb-cans-ca',\n  ojc: 'ojc-latn-ca',\n  ojs: 'ojs-cans-ca',\n  ojv: 'ojv-latn-sb',\n  ojw: 'ojw-latn-ca',\n  'ojw-cans': 'ojw-cans-ca',\n  oka: 'oka-latn-ca',\n  okb: 'okb-latn-ng',\n  okc: 'okc-latn-cd',\n  okd: 'okd-latn-ng',\n  oke: 'oke-latn-ng',\n  okg: 'okg-latn-au',\n  oki: 'oki-latn-ke',\n  okk: 'okk-latn-pg',\n  okm: 'okm-hang-kr',\n  oko: 'oko-hani-kr',\n  okr: 'okr-latn-zz',\n  oks: 'oks-latn-ng',\n  oku: 'oku-latn-cm',\n  okv: 'okv-latn-zz',\n  okx: 'okx-latn-ng',\n  okz: 'okz-khmr-kh',\n  ola: 'ola-deva-np',\n  'ola-tibt': 'ola-tibt-cn',\n  old: 'old-latn-tz',\n  ole: 'ole-tibt-bt',\n  olk: 'olk-latn-au',\n  olm: 'olm-latn-ng',\n  olo: 'olo-latn-ru',\n  olr: 'olr-latn-vu',\n  olt: 'olt-latn-lt',\n  olu: 'olu-latn-ao',\n  om: 'om-latn-et',\n  oma: 'oma-latn-us',\n  omb: 'omb-latn-vu',\n  omc: 'omc-latn-pe',\n  omg: 'omg-latn-pe',\n  omi: 'omi-latn-cd',\n  omk: 'omk-cyrl-ru',\n  oml: 'oml-latn-cd',\n  omo: 'omo-latn-pg',\n  omp: 'omp-mtei-in',\n  omr: 'omr-modi-in',\n  omt: 'omt-latn-ke',\n  omu: 'omu-latn-pe',\n  omw: 'omw-latn-pg',\n  ona: 'ona-latn-ar',\n  one: 'one-latn-ca',\n  ong: 'ong-latn-zz',\n  oni: 'oni-latn-id',\n  onj: 'onj-latn-pg',\n  onk: 'onk-latn-pg',\n  onn: 'onn-latn-zz',\n  ono: 'ono-latn-ca',\n  onp: 'onp-latn-in',\n  'onp-deva': 'onp-deva-in',\n  onr: 'onr-latn-pg',\n  ons: 'ons-latn-zz',\n  ont: 'ont-latn-pg',\n  onu: 'onu-latn-vu',\n  onx: 'onx-latn-id',\n  ood: 'ood-latn-us',\n  oon: 'oon-deva-in',\n  oor: 'oor-latn-za',\n  opa: 'opa-latn-ng',\n  opk: 'opk-latn-id',\n  opm: 'opm-latn-zz',\n  opo: 'opo-latn-pg',\n  opt: 'opt-latn-mx',\n  opy: 'opy-latn-br',\n  or: 'or-orya-in',\n  ora: 'ora-latn-sb',\n  orc: 'orc-latn-ke',\n  ore: 'ore-latn-pe',\n  org: 'org-latn-ng',\n  orn: 'orn-latn-my',\n  oro: 'oro-latn-zz',\n  orr: 'orr-latn-ng',\n  ors: 'ors-latn-my',\n  ort: 'ort-telu-in',\n  oru: 'oru-arab-zz',\n  orv: 'orv-cyrl-ru',\n  orw: 'orw-latn-br',\n  orx: 'orx-latn-ng',\n  orz: 'orz-latn-id',\n  os: 'os-cyrl-ge',\n  osa: 'osa-osge-us',\n  osc: 'osc-ital-it',\n  'osc-latn': 'osc-latn-it',\n  osi: 'osi-java-id',\n  oso: 'oso-latn-ng',\n  osp: 'osp-latn-es',\n  ost: 'ost-latn-cm',\n  osu: 'osu-latn-pg',\n  osx: 'osx-latn-de',\n  ota: 'ota-arab-zz',\n  otb: 'otb-tibt-cn',\n  otd: 'otd-latn-id',\n  ote: 'ote-latn-mx',\n  oti: 'oti-latn-br',\n  otk: 'otk-orkh-mn',\n  otl: 'otl-latn-mx',\n  otm: 'otm-latn-mx',\n  otn: 'otn-latn-mx',\n  otq: 'otq-latn-mx',\n  otr: 'otr-latn-sd',\n  ots: 'ots-latn-mx',\n  ott: 'ott-latn-mx',\n  otu: 'otu-latn-br',\n  otw: 'otw-latn-ca',\n  otx: 'otx-latn-mx',\n  oty: 'oty-gran-in',\n  otz: 'otz-latn-mx',\n  oub: 'oub-latn-lr',\n  oue: 'oue-latn-pg',\n  oui: 'oui-ougr-143',\n  oum: 'oum-latn-pg',\n  ovd: 'ovd-latn-se',\n  owi: 'owi-latn-pg',\n  owl: 'owl-latn-gb',\n  oyd: 'oyd-latn-et',\n  oym: 'oym-latn-br',\n  oyy: 'oyy-latn-pg',\n  ozm: 'ozm-latn-zz',\n  pa: 'pa-guru-in',\n  'pa-arab': 'pa-arab-pk',\n  'pa-pk': 'pa-arab-pk',\n  pab: 'pab-latn-br',\n  pac: 'pac-latn-vn',\n  pad: 'pad-latn-br',\n  pae: 'pae-latn-cd',\n  paf: 'paf-latn-br',\n  pag: 'pag-latn-ph',\n  pah: 'pah-latn-br',\n  pai: 'pai-latn-ng',\n  pak: 'pak-latn-br',\n  pal: 'pal-phli-ir',\n  'pal-phlp': 'pal-phlp-cn',\n  pam: 'pam-latn-ph',\n  pao: 'pao-latn-us',\n  pap: 'pap-latn-cw',\n  paq: 'paq-cyrl-tj',\n  par: 'par-latn-us',\n  pas: 'pas-latn-id',\n  pau: 'pau-latn-pw',\n  pav: 'pav-latn-br',\n  paw: 'paw-latn-us',\n  pax: 'pax-latn-br',\n  pay: 'pay-latn-hn',\n  paz: 'paz-latn-br',\n  pbb: 'pbb-latn-co',\n  pbc: 'pbc-latn-gy',\n  pbe: 'pbe-latn-mx',\n  pbf: 'pbf-latn-mx',\n  pbg: 'pbg-latn-ve',\n  pbh: 'pbh-latn-ve',\n  pbi: 'pbi-latn-zz',\n  pbl: 'pbl-latn-ng',\n  pbm: 'pbm-latn-mx',\n  pbn: 'pbn-latn-ng',\n  pbo: 'pbo-latn-gw',\n  pbp: 'pbp-latn-gn',\n  pbr: 'pbr-latn-tz',\n  pbs: 'pbs-latn-mx',\n  pbt: 'pbt-arab-af',\n  pbv: 'pbv-latn-in',\n  pby: 'pby-latn-pg',\n  pca: 'pca-latn-mx',\n  pcb: 'pcb-khmr-kh',\n  pcc: 'pcc-latn-cn',\n  'pcc-hani': 'pcc-hani-cn',\n  pcd: 'pcd-latn-fr',\n  pce: 'pce-mymr-mm',\n  'pce-thai': 'pce-thai-th',\n  pcf: 'pcf-mlym-in',\n  pcg: 'pcg-mlym-in',\n  'pcg-knda': 'pcg-knda-in',\n  'pcg-taml': 'pcg-taml-in',\n  pch: 'pch-deva-in',\n  pci: 'pci-deva-in',\n  'pci-orya': 'pci-orya-in',\n  pcj: 'pcj-telu-in',\n  pck: 'pck-latn-in',\n  pcm: 'pcm-latn-ng',\n  pcn: 'pcn-latn-ng',\n  pcp: 'pcp-latn-bo',\n  pcw: 'pcw-latn-ng',\n  pda: 'pda-latn-pg',\n  pdc: 'pdc-latn-us',\n  pdn: 'pdn-latn-id',\n  pdo: 'pdo-latn-id',\n  pdt: 'pdt-latn-ca',\n  pdu: 'pdu-latn-mm',\n  'pdu-mymr': 'pdu-mymr-mm',\n  pea: 'pea-latn-id',\n  peb: 'peb-latn-us',\n  ped: 'ped-latn-zz',\n  pee: 'pee-latn-id',\n  peg: 'peg-orya-in',\n  pei: 'pei-latn-mx',\n  pek: 'pek-latn-pg',\n  pel: 'pel-latn-id',\n  pem: 'pem-latn-cd',\n  peo: 'peo-xpeo-ir',\n  pep: 'pep-latn-pg',\n  peq: 'peq-latn-us',\n  pev: 'pev-latn-ve',\n  pex: 'pex-latn-zz',\n  pey: 'pey-latn-id',\n  pez: 'pez-latn-my',\n  pfa: 'pfa-latn-fm',\n  pfe: 'pfe-latn-cm',\n  pfl: 'pfl-latn-de',\n  pga: 'pga-latn-ss',\n  pgd: 'pgd-khar-pk',\n  pgg: 'pgg-deva-in',\n  pgi: 'pgi-latn-pg',\n  pgk: 'pgk-latn-vu',\n  pgl: 'pgl-ogam-ie',\n  pgn: 'pgn-ital-it',\n  pgs: 'pgs-latn-ng',\n  pgu: 'pgu-latn-id',\n  phd: 'phd-deva-in',\n  phg: 'phg-latn-vn',\n  phh: 'phh-latn-vn',\n  phk: 'phk-mymr-in',\n  phl: 'phl-arab-zz',\n  phm: 'phm-latn-mz',\n  phn: 'phn-phnx-lb',\n  pho: 'pho-laoo-la',\n  phr: 'phr-arab-pk',\n  pht: 'pht-thai-th',\n  phv: 'phv-arab-af',\n  phw: 'phw-deva-np',\n  pi: 'pi-sinh-in',\n  'pi-brah': 'pi-brah-in',\n  'pi-deva': 'pi-deva-in',\n  'pi-khar': 'pi-khar-in',\n  'pi-khmr': 'pi-khmr-in',\n  'pi-mymr': 'pi-mymr-in',\n  'pi-thai': 'pi-thai-in',\n  pia: 'pia-latn-mx',\n  pib: 'pib-latn-pe',\n  pic: 'pic-latn-ga',\n  pid: 'pid-latn-ve',\n  pif: 'pif-latn-fm',\n  pig: 'pig-latn-pe',\n  pih: 'pih-latn-nf',\n  pij: 'pij-latn-co',\n  pil: 'pil-latn-zz',\n  pim: 'pim-latn-us',\n  pin: 'pin-latn-pg',\n  pio: 'pio-latn-co',\n  pip: 'pip-latn-zz',\n  pir: 'pir-latn-br',\n  pis: 'pis-latn-sb',\n  pit: 'pit-latn-au',\n  piu: 'piu-latn-au',\n  piv: 'piv-latn-sb',\n  piw: 'piw-latn-tz',\n  pix: 'pix-latn-pg',\n  piy: 'piy-latn-ng',\n  piz: 'piz-latn-nc',\n  pjt: 'pjt-latn-au',\n  pka: 'pka-brah-in',\n  pkb: 'pkb-latn-ke',\n  pkg: 'pkg-latn-pg',\n  pkh: 'pkh-latn-bd',\n  'pkh-deva': 'pkh-deva-bd',\n  pkn: 'pkn-latn-au',\n  pko: 'pko-latn-ke',\n  pkp: 'pkp-latn-ck',\n  pkr: 'pkr-mlym-in',\n  pku: 'pku-latn-id',\n  pl: 'pl-latn-pl',\n  pla: 'pla-latn-zz',\n  plb: 'plb-latn-vu',\n  plc: 'plc-latn-ph',\n  pld: 'pld-latn-gb',\n  ple: 'ple-latn-id',\n  plg: 'plg-latn-ar',\n  plh: 'plh-latn-id',\n  plj: 'plj-latn-ng',\n  plk: 'plk-arab-pk',\n  pll: 'pll-mymr-mm',\n  pln: 'pln-latn-co',\n  plo: 'plo-latn-mx',\n  plr: 'plr-latn-ci',\n  pls: 'pls-latn-mx',\n  plu: 'plu-latn-br',\n  plv: 'plv-latn-ph',\n  plw: 'plw-latn-ph',\n  plz: 'plz-latn-my',\n  pma: 'pma-latn-vu',\n  pmb: 'pmb-latn-cd',\n  pmd: 'pmd-latn-au',\n  pme: 'pme-latn-nc',\n  pmf: 'pmf-latn-id',\n  pmh: 'pmh-brah-in',\n  pmi: 'pmi-latn-cn',\n  pmj: 'pmj-latn-cn',\n  pml: 'pml-latn-tn',\n  pmm: 'pmm-latn-cm',\n  pmn: 'pmn-latn-cm',\n  pmo: 'pmo-latn-id',\n  pmq: 'pmq-latn-mx',\n  pmr: 'pmr-latn-pg',\n  pms: 'pms-latn-it',\n  pmt: 'pmt-latn-pf',\n  pmw: 'pmw-latn-us',\n  pmx: 'pmx-latn-in',\n  pmy: 'pmy-latn-id',\n  pmz: 'pmz-latn-mx',\n  pna: 'pna-latn-my',\n  pnc: 'pnc-latn-id',\n  pnd: 'pnd-latn-ao',\n  pne: 'pne-latn-my',\n  png: 'png-latn-zz',\n  pnh: 'pnh-latn-ck',\n  pni: 'pni-latn-id',\n  pnj: 'pnj-latn-au',\n  pnk: 'pnk-latn-bo',\n  pnl: 'pnl-latn-bf',\n  pnm: 'pnm-latn-my',\n  pnn: 'pnn-latn-zz',\n  pno: 'pno-latn-pe',\n  pnp: 'pnp-latn-id',\n  pnq: 'pnq-latn-bf',\n  pnr: 'pnr-latn-pg',\n  pns: 'pns-latn-id',\n  pnt: 'pnt-grek-gr',\n  pnv: 'pnv-latn-au',\n  pnw: 'pnw-latn-au',\n  pny: 'pny-latn-cm',\n  pnz: 'pnz-latn-cf',\n  poc: 'poc-latn-gt',\n  poe: 'poe-latn-mx',\n  pof: 'pof-latn-cd',\n  pog: 'pog-latn-br',\n  poh: 'poh-latn-gt',\n  poi: 'poi-latn-mx',\n  pok: 'pok-latn-br',\n  pom: 'pom-latn-us',\n  pon: 'pon-latn-fm',\n  poo: 'poo-latn-us',\n  pop: 'pop-latn-nc',\n  poq: 'poq-latn-mx',\n  pos: 'pos-latn-mx',\n  pot: 'pot-latn-us',\n  pov: 'pov-latn-gw',\n  pow: 'pow-latn-mx',\n  poy: 'poy-latn-tz',\n  ppa: 'ppa-deva-in',\n  ppe: 'ppe-latn-pg',\n  ppi: 'ppi-latn-mx',\n  ppk: 'ppk-latn-id',\n  ppl: 'ppl-latn-sv',\n  ppm: 'ppm-latn-id',\n  ppn: 'ppn-latn-pg',\n  ppo: 'ppo-latn-zz',\n  ppp: 'ppp-latn-cd',\n  ppq: 'ppq-latn-pg',\n  pps: 'pps-latn-mx',\n  ppt: 'ppt-latn-pg',\n  pqa: 'pqa-latn-ng',\n  pqm: 'pqm-latn-ca',\n  pra: 'pra-khar-pk',\n  prc: 'prc-arab-af',\n  prd: 'prd-arab-ir',\n  pre: 'pre-latn-st',\n  prf: 'prf-latn-ph',\n  prg: 'prg-latn-001',\n  prh: 'prh-latn-ph',\n  pri: 'pri-latn-nc',\n  prk: 'prk-latn-mm',\n  prm: 'prm-latn-pg',\n  pro: 'pro-latn-fr',\n  prp: 'prp-gujr-in',\n  prq: 'prq-latn-pe',\n  prr: 'prr-latn-br',\n  prt: 'prt-thai-th',\n  pru: 'pru-latn-id',\n  prw: 'prw-latn-pg',\n  prx: 'prx-arab-in',\n  'prx-tibt': 'prx-tibt-in',\n  ps: 'ps-arab-af',\n  psa: 'psa-latn-id',\n  pse: 'pse-latn-id',\n  psh: 'psh-arab-af',\n  psi: 'psi-arab-af',\n  psm: 'psm-latn-bo',\n  psn: 'psn-latn-id',\n  psq: 'psq-latn-pg',\n  pss: 'pss-latn-zz',\n  pst: 'pst-arab-pk',\n  psw: 'psw-latn-vu',\n  pt: 'pt-latn-br',\n  pta: 'pta-latn-py',\n  pth: 'pth-latn-br',\n  pti: 'pti-latn-au',\n  ptn: 'ptn-latn-id',\n  pto: 'pto-latn-br',\n  ptp: 'ptp-latn-zz',\n  ptr: 'ptr-latn-vu',\n  ptt: 'ptt-latn-id',\n  ptu: 'ptu-latn-id',\n  ptv: 'ptv-latn-vu',\n  pua: 'pua-latn-mx',\n  pub: 'pub-latn-in',\n  puc: 'puc-latn-id',\n  pud: 'pud-latn-id',\n  pue: 'pue-latn-ar',\n  puf: 'puf-latn-id',\n  pug: 'pug-latn-bf',\n  pui: 'pui-latn-co',\n  puj: 'puj-latn-id',\n  pum: 'pum-deva-np',\n  puo: 'puo-latn-vn',\n  pup: 'pup-latn-pg',\n  puq: 'puq-latn-pe',\n  pur: 'pur-latn-br',\n  put: 'put-latn-id',\n  puu: 'puu-latn-ga',\n  puw: 'puw-latn-fm',\n  pux: 'pux-latn-pg',\n  puy: 'puy-latn-us',\n  pwa: 'pwa-latn-zz',\n  pwb: 'pwb-latn-ng',\n  pwg: 'pwg-latn-pg',\n  pwm: 'pwm-latn-ph',\n  pwn: 'pwn-latn-tw',\n  pwo: 'pwo-mymr-mm',\n  pwr: 'pwr-deva-in',\n  pww: 'pww-thai-th',\n  pxm: 'pxm-latn-mx',\n  pye: 'pye-latn-ci',\n  pym: 'pym-latn-ng',\n  pyn: 'pyn-latn-br',\n  pyu: 'pyu-latn-tw',\n  'pyu-hani': 'pyu-hani-tw',\n  pyx: 'pyx-mymr-mm',\n  pyy: 'pyy-latn-mm',\n  pzh: 'pzh-latn-tw',\n  pzn: 'pzn-latn-mm',\n  qu: 'qu-latn-pe',\n  qua: 'qua-latn-us',\n  qub: 'qub-latn-pe',\n  quc: 'quc-latn-gt',\n  qud: 'qud-latn-ec',\n  quf: 'quf-latn-pe',\n  qug: 'qug-latn-ec',\n  qui: 'qui-latn-us',\n  quk: 'quk-latn-pe',\n  qul: 'qul-latn-bo',\n  qum: 'qum-latn-gt',\n  qun: 'qun-latn-us',\n  qup: 'qup-latn-pe',\n  quq: 'quq-latn-es',\n  qur: 'qur-latn-pe',\n  qus: 'qus-latn-ar',\n  quv: 'quv-latn-gt',\n  quw: 'quw-latn-ec',\n  qux: 'qux-latn-pe',\n  quy: 'quy-latn-pe',\n  qva: 'qva-latn-pe',\n  qvc: 'qvc-latn-pe',\n  qve: 'qve-latn-pe',\n  qvh: 'qvh-latn-pe',\n  qvi: 'qvi-latn-ec',\n  qvj: 'qvj-latn-ec',\n  qvl: 'qvl-latn-pe',\n  qvm: 'qvm-latn-pe',\n  qvn: 'qvn-latn-pe',\n  qvo: 'qvo-latn-pe',\n  qvp: 'qvp-latn-pe',\n  qvs: 'qvs-latn-pe',\n  qvw: 'qvw-latn-pe',\n  qvz: 'qvz-latn-ec',\n  qwa: 'qwa-latn-pe',\n  qwc: 'qwc-latn-pe',\n  qwh: 'qwh-latn-pe',\n  qwm: 'qwm-latn-ru',\n  'qwm-cyrl': 'qwm-cyrl-ru',\n  'qwm-runr': 'qwm-runr-ru',\n  qws: 'qws-latn-pe',\n  qwt: 'qwt-latn-us',\n  qxa: 'qxa-latn-pe',\n  qxc: 'qxc-latn-pe',\n  qxh: 'qxh-latn-pe',\n  qxl: 'qxl-latn-ec',\n  qxn: 'qxn-latn-pe',\n  qxo: 'qxo-latn-pe',\n  qxp: 'qxp-latn-pe',\n  qxq: 'qxq-arab-ir',\n  qxr: 'qxr-latn-ec',\n  qxt: 'qxt-latn-pe',\n  qxu: 'qxu-latn-pe',\n  qxw: 'qxw-latn-pe',\n  qya: 'qya-latn-001',\n  qyp: 'qyp-latn-us',\n  raa: 'raa-deva-np',\n  rab: 'rab-deva-np',\n  rac: 'rac-latn-id',\n  rad: 'rad-latn-vn',\n  raf: 'raf-deva-np',\n  rag: 'rag-latn-ke',\n  rah: 'rah-beng-in',\n  'rah-latn': 'rah-latn-in',\n  rai: 'rai-latn-zz',\n  raj: 'raj-deva-in',\n  rak: 'rak-latn-pg',\n  ram: 'ram-latn-br',\n  ran: 'ran-latn-id',\n  rao: 'rao-latn-zz',\n  rap: 'rap-latn-cl',\n  rar: 'rar-latn-ck',\n  rav: 'rav-deva-np',\n  raw: 'raw-latn-mm',\n  rax: 'rax-latn-ng',\n  ray: 'ray-latn-pf',\n  raz: 'raz-latn-id',\n  rbb: 'rbb-mymr-mm',\n  rbk: 'rbk-latn-ph',\n  rbl: 'rbl-latn-ph',\n  rbp: 'rbp-latn-au',\n  rcf: 'rcf-latn-re',\n  rdb: 'rdb-arab-ir',\n  rea: 'rea-latn-pg',\n  reb: 'reb-latn-id',\n  ree: 'ree-latn-my',\n  reg: 'reg-latn-tz',\n  rei: 'rei-orya-in',\n  'rei-telu': 'rei-telu-in',\n  rej: 'rej-latn-id',\n  rel: 'rel-latn-zz',\n  rem: 'rem-latn-pe',\n  ren: 'ren-latn-vn',\n  res: 'res-latn-zz',\n  ret: 'ret-latn-id',\n  rey: 'rey-latn-bo',\n  rga: 'rga-latn-vu',\n  rgn: 'rgn-latn-it',\n  rgr: 'rgr-latn-pe',\n  rgs: 'rgs-latn-vn',\n  rgu: 'rgu-latn-id',\n  rhg: 'rhg-rohg-mm',\n  rhp: 'rhp-latn-pg',\n  ria: 'ria-latn-in',\n  rif: 'rif-latn-ma',\n  ril: 'ril-latn-mm',\n  rim: 'rim-latn-tz',\n  rin: 'rin-latn-ng',\n  rir: 'rir-latn-id',\n  rit: 'rit-latn-au',\n  riu: 'riu-latn-id',\n  rjg: 'rjg-latn-id',\n  rji: 'rji-deva-np',\n  rjs: 'rjs-deva-np',\n  rka: 'rka-khmr-kh',\n  rkb: 'rkb-latn-br',\n  rkh: 'rkh-latn-ck',\n  rki: 'rki-mymr-mm',\n  rkm: 'rkm-latn-bf',\n  rkt: 'rkt-beng-bd',\n  rkw: 'rkw-latn-au',\n  rm: 'rm-latn-ch',\n  rma: 'rma-latn-ni',\n  rmb: 'rmb-latn-au',\n  rmc: 'rmc-latn-sk',\n  rmd: 'rmd-latn-dk',\n  rme: 'rme-latn-gb',\n  rmf: 'rmf-latn-fi',\n  rmg: 'rmg-latn-no',\n  rmh: 'rmh-latn-id',\n  rmi: 'rmi-armn-am',\n  rmk: 'rmk-latn-pg',\n  rml: 'rml-latn-pl',\n  'rml-cyrl': 'rml-cyrl-by',\n  rmm: 'rmm-latn-id',\n  rmn: 'rmn-latn-rs',\n  'rmn-cyrl': 'rmn-cyrl-bg',\n  'rmn-grek': 'rmn-grek-gr',\n  rmo: 'rmo-latn-ch',\n  rmp: 'rmp-latn-pg',\n  rmq: 'rmq-latn-es',\n  rmt: 'rmt-arab-ir',\n  rmu: 'rmu-latn-se',\n  rmw: 'rmw-latn-gb',\n  rmx: 'rmx-latn-vn',\n  rmz: 'rmz-mymr-in',\n  rn: 'rn-latn-bi',\n  rna: 'rna-latn-zz',\n  rnd: 'rnd-latn-cd',\n  rng: 'rng-latn-mz',\n  rnl: 'rnl-latn-in',\n  rnn: 'rnn-latn-id',\n  rnr: 'rnr-latn-au',\n  rnw: 'rnw-latn-tz',\n  ro: 'ro-latn-ro',\n  rob: 'rob-latn-id',\n  roc: 'roc-latn-vn',\n  rod: 'rod-latn-ng',\n  roe: 'roe-latn-pg',\n  rof: 'rof-latn-tz',\n  rog: 'rog-latn-vn',\n  rol: 'rol-latn-ph',\n  rom: 'rom-latn-ro',\n  'rom-cyrl': 'rom-cyrl-ro',\n  roo: 'roo-latn-zz',\n  rop: 'rop-latn-au',\n  ror: 'ror-latn-id',\n  rou: 'rou-latn-td',\n  row: 'row-latn-id',\n  rpn: 'rpn-latn-vu',\n  rpt: 'rpt-latn-pg',\n  rri: 'rri-latn-sb',\n  rro: 'rro-latn-zz',\n  rrt: 'rrt-latn-au',\n  rsk: 'rsk-cyrl-rs',\n  rtc: 'rtc-latn-mm',\n  rth: 'rth-latn-id',\n  rtm: 'rtm-latn-fj',\n  rtw: 'rtw-deva-in',\n  ru: 'ru-cyrl-ru',\n  rub: 'rub-latn-ug',\n  ruc: 'ruc-latn-ug',\n  rue: 'rue-cyrl-ua',\n  ruf: 'ruf-latn-tz',\n  rug: 'rug-latn-sb',\n  rui: 'rui-latn-tz',\n  ruk: 'ruk-latn-ng',\n  ruo: 'ruo-latn-hr',\n  rup: 'rup-latn-ro',\n  'rup-grek': 'rup-grek-gr',\n  ruq: 'ruq-latn-gr',\n  rut: 'rut-cyrl-ru',\n  'rut-latn': 'rut-latn-az',\n  ruu: 'ruu-latn-my',\n  ruy: 'ruy-latn-ng',\n  ruz: 'ruz-latn-ng',\n  rw: 'rw-latn-rw',\n  rwa: 'rwa-latn-pg',\n  rwk: 'rwk-latn-tz',\n  rwl: 'rwl-latn-tz',\n  rwm: 'rwm-latn-ug',\n  rwo: 'rwo-latn-zz',\n  rwr: 'rwr-deva-in',\n  rxd: 'rxd-latn-au',\n  rxw: 'rxw-latn-au',\n  ryu: 'ryu-kana-jp',\n  sa: 'sa-deva-in',\n  saa: 'saa-latn-td',\n  sab: 'sab-latn-pa',\n  sac: 'sac-latn-us',\n  sad: 'sad-latn-tz',\n  sae: 'sae-latn-br',\n  saf: 'saf-latn-gh',\n  sah: 'sah-cyrl-ru',\n  saj: 'saj-latn-id',\n  sak: 'sak-latn-ga',\n  sam: 'sam-samr-ps',\n  'sam-hebr': 'sam-hebr-ps',\n  'sam-syrc': 'sam-syrc-ps',\n  sao: 'sao-latn-id',\n  saq: 'saq-latn-ke',\n  sar: 'sar-latn-bo',\n  sas: 'sas-latn-id',\n  sat: 'sat-olck-in',\n  sau: 'sau-latn-id',\n  sav: 'sav-latn-sn',\n  saw: 'saw-latn-id',\n  sax: 'sax-latn-vu',\n  say: 'say-latn-ng',\n  saz: 'saz-saur-in',\n  sba: 'sba-latn-zz',\n  sbb: 'sbb-latn-sb',\n  sbc: 'sbc-latn-pg',\n  sbd: 'sbd-latn-bf',\n  sbe: 'sbe-latn-zz',\n  sbg: 'sbg-latn-id',\n  sbh: 'sbh-latn-pg',\n  sbi: 'sbi-latn-pg',\n  sbj: 'sbj-latn-td',\n  sbk: 'sbk-latn-tz',\n  sbl: 'sbl-latn-ph',\n  sbm: 'sbm-latn-tz',\n  sbn: 'sbn-arab-pk',\n  sbo: 'sbo-latn-my',\n  sbp: 'sbp-latn-tz',\n  sbq: 'sbq-latn-pg',\n  sbr: 'sbr-latn-id',\n  sbs: 'sbs-latn-na',\n  sbt: 'sbt-latn-id',\n  sbu: 'sbu-tibt-in',\n  'sbu-deva': 'sbu-deva-in',\n  sbv: 'sbv-latn-it',\n  sbw: 'sbw-latn-ga',\n  sbx: 'sbx-latn-id',\n  sby: 'sby-latn-zm',\n  sbz: 'sbz-latn-cf',\n  sc: 'sc-latn-it',\n  scb: 'scb-latn-vn',\n  sce: 'sce-latn-cn',\n  'sce-arab': 'sce-arab-cn',\n  scf: 'scf-latn-pa',\n  scg: 'scg-latn-id',\n  sch: 'sch-latn-in',\n  sci: 'sci-latn-lk',\n  sck: 'sck-deva-in',\n  scl: 'scl-arab-zz',\n  scn: 'scn-latn-it',\n  sco: 'sco-latn-gb',\n  scp: 'scp-deva-np',\n  scs: 'scs-latn-ca',\n  'scs-cans': 'scs-cans-ca',\n  sct: 'sct-laoo-la',\n  scu: 'scu-takr-in',\n  scv: 'scv-latn-ng',\n  scw: 'scw-latn-ng',\n  scx: 'scx-grek-it',\n  sd: 'sd-arab-pk',\n  'sd-deva': 'sd-deva-in',\n  'sd-in': 'sd-deva-in',\n  'sd-khoj': 'sd-khoj-in',\n  'sd-sind': 'sd-sind-in',\n  sda: 'sda-latn-id',\n  sdb: 'sdb-arab-iq',\n  sdc: 'sdc-latn-it',\n  sde: 'sde-latn-ng',\n  sdf: 'sdf-arab-iq',\n  sdg: 'sdg-arab-af',\n  sdh: 'sdh-arab-ir',\n  sdj: 'sdj-latn-cg',\n  sdk: 'sdk-latn-pg',\n  sdn: 'sdn-latn-it',\n  sdo: 'sdo-latn-my',\n  sdq: 'sdq-latn-id',\n  sds: 'sds-arab-tn',\n  sdu: 'sdu-latn-id',\n  sdx: 'sdx-latn-my',\n  se: 'se-latn-no',\n  sea: 'sea-latn-my',\n  seb: 'seb-latn-ci',\n  sec: 'sec-latn-ca',\n  sed: 'sed-latn-vn',\n  see: 'see-latn-us',\n  sef: 'sef-latn-ci',\n  seg: 'seg-latn-tz',\n  seh: 'seh-latn-mz',\n  sei: 'sei-latn-mx',\n  sej: 'sej-latn-pg',\n  sek: 'sek-latn-ca',\n  'sek-cans': 'sek-cans-ca',\n  sel: 'sel-cyrl-ru',\n  sen: 'sen-latn-bf',\n  seo: 'seo-latn-pg',\n  sep: 'sep-latn-bf',\n  seq: 'seq-latn-bf',\n  ser: 'ser-latn-us',\n  ses: 'ses-latn-ml',\n  set: 'set-latn-id',\n  seu: 'seu-latn-id',\n  sev: 'sev-latn-ci',\n  sew: 'sew-latn-pg',\n  sey: 'sey-latn-ec',\n  sez: 'sez-latn-mm',\n  sfe: 'sfe-latn-ph',\n  sfm: 'sfm-plrd-cn',\n  sfw: 'sfw-latn-gh',\n  sg: 'sg-latn-cf',\n  sga: 'sga-ogam-ie',\n  sgb: 'sgb-latn-ph',\n  sgc: 'sgc-latn-ke',\n  sgd: 'sgd-latn-ph',\n  sge: 'sge-latn-id',\n  sgh: 'sgh-cyrl-tj',\n  'sgh-arab': 'sgh-arab-af',\n  'sgh-latn': 'sgh-latn-tj',\n  sgi: 'sgi-latn-cm',\n  sgj: 'sgj-deva-in',\n  sgm: 'sgm-latn-ke',\n  sgp: 'sgp-latn-in',\n  sgr: 'sgr-arab-ir',\n  sgs: 'sgs-latn-lt',\n  sgt: 'sgt-tibt-bt',\n  sgu: 'sgu-latn-id',\n  sgw: 'sgw-ethi-zz',\n  sgy: 'sgy-arab-af',\n  sgz: 'sgz-latn-zz',\n  sha: 'sha-latn-ng',\n  shb: 'shb-latn-br',\n  shc: 'shc-latn-cd',\n  shd: 'shd-arab-pk',\n  she: 'she-latn-et',\n  shg: 'shg-latn-bw',\n  shh: 'shh-latn-us',\n  shi: 'shi-tfng-ma',\n  shj: 'shj-latn-sd',\n  shk: 'shk-latn-zz',\n  shm: 'shm-arab-ir',\n  shn: 'shn-mymr-mm',\n  sho: 'sho-latn-ng',\n  shp: 'shp-latn-pe',\n  shq: 'shq-latn-zm',\n  shr: 'shr-latn-cd',\n  shs: 'shs-latn-ca',\n  sht: 'sht-latn-us',\n  shu: 'shu-arab-zz',\n  shv: 'shv-arab-om',\n  shw: 'shw-latn-sd',\n  shy: 'shy-latn-dz',\n  'shy-arab': 'shy-arab-dz',\n  'shy-tfng': 'shy-tfng-dz',\n  shz: 'shz-latn-ml',\n  si: 'si-sinh-lk',\n  sia: 'sia-cyrl-ru',\n  sib: 'sib-latn-my',\n  sid: 'sid-latn-et',\n  sie: 'sie-latn-zm',\n  sif: 'sif-latn-bf',\n  sig: 'sig-latn-zz',\n  sih: 'sih-latn-nc',\n  sii: 'sii-latn-in',\n  sij: 'sij-latn-pg',\n  sik: 'sik-latn-br',\n  sil: 'sil-latn-zz',\n  sim: 'sim-latn-zz',\n  sip: 'sip-tibt-in',\n  siq: 'siq-latn-pg',\n  sir: 'sir-latn-ng',\n  sis: 'sis-latn-us',\n  siu: 'siu-latn-pg',\n  siv: 'siv-latn-pg',\n  siw: 'siw-latn-pg',\n  six: 'six-latn-pg',\n  siy: 'siy-arab-ir',\n  siz: 'siz-arab-eg',\n  sja: 'sja-latn-co',\n  sjb: 'sjb-latn-id',\n  sjd: 'sjd-cyrl-ru',\n  sje: 'sje-latn-se',\n  sjg: 'sjg-latn-td',\n  sjl: 'sjl-latn-in',\n  sjm: 'sjm-latn-ph',\n  sjp: 'sjp-deva-in',\n  'sjp-beng': 'sjp-beng-in',\n  sjr: 'sjr-latn-zz',\n  sjt: 'sjt-cyrl-ru',\n  sju: 'sju-latn-se',\n  sjw: 'sjw-latn-us',\n  sk: 'sk-latn-sk',\n  ska: 'ska-latn-us',\n  skb: 'skb-thai-th',\n  skc: 'skc-latn-zz',\n  skd: 'skd-latn-us',\n  ske: 'ske-latn-vu',\n  skf: 'skf-latn-br',\n  skg: 'skg-latn-mg',\n  skh: 'skh-latn-id',\n  ski: 'ski-latn-id',\n  skj: 'skj-deva-np',\n  skm: 'skm-latn-pg',\n  skn: 'skn-latn-ph',\n  sko: 'sko-latn-id',\n  skp: 'skp-latn-my',\n  skq: 'skq-latn-bf',\n  skr: 'skr-arab-pk',\n  sks: 'sks-latn-zz',\n  skt: 'skt-latn-cd',\n  sku: 'sku-latn-vu',\n  skv: 'skv-latn-id',\n  skw: 'skw-latn-gy',\n  skx: 'skx-latn-id',\n  sky: 'sky-latn-sb',\n  skz: 'skz-latn-id',\n  sl: 'sl-latn-si',\n  slc: 'slc-latn-co',\n  sld: 'sld-latn-zz',\n  slg: 'slg-latn-id',\n  slh: 'slh-latn-us',\n  sli: 'sli-latn-pl',\n  slj: 'slj-latn-br',\n  sll: 'sll-latn-zz',\n  slm: 'slm-latn-ph',\n  sln: 'sln-latn-us',\n  slp: 'slp-latn-id',\n  slq: 'slq-arab-ir',\n  slr: 'slr-latn-cn',\n  slu: 'slu-latn-id',\n  slw: 'slw-latn-pg',\n  slx: 'slx-latn-cd',\n  sly: 'sly-latn-id',\n  slz: 'slz-latn-id',\n  sm: 'sm-latn-ws',\n  sma: 'sma-latn-se',\n  smb: 'smb-latn-pg',\n  smc: 'smc-latn-pg',\n  smd: 'smd-latn-ao',\n  smf: 'smf-latn-pg',\n  smg: 'smg-latn-pg',\n  smh: 'smh-yiii-cn',\n  smj: 'smj-latn-se',\n  smk: 'smk-latn-ph',\n  sml: 'sml-latn-ph',\n  smn: 'smn-latn-fi',\n  smp: 'smp-samr-il',\n  smq: 'smq-latn-zz',\n  smr: 'smr-latn-id',\n  sms: 'sms-latn-fi',\n  smt: 'smt-latn-in',\n  smu: 'smu-khmr-kh',\n  smw: 'smw-latn-id',\n  smx: 'smx-latn-cd',\n  smy: 'smy-arab-ir',\n  smz: 'smz-latn-pg',\n  sn: 'sn-latn-zw',\n  snb: 'snb-latn-my',\n  snc: 'snc-latn-zz',\n  sne: 'sne-latn-my',\n  snf: 'snf-latn-sn',\n  sng: 'sng-latn-cd',\n  'sng-brai': 'sng-brai-cd',\n  sni: 'sni-latn-pe',\n  snj: 'snj-latn-cf',\n  snk: 'snk-latn-ml',\n  snl: 'snl-latn-ph',\n  snm: 'snm-latn-ug',\n  snn: 'snn-latn-co',\n  sno: 'sno-latn-us',\n  snp: 'snp-latn-zz',\n  snq: 'snq-latn-ga',\n  snr: 'snr-latn-pg',\n  sns: 'sns-latn-vu',\n  snu: 'snu-latn-id',\n  snv: 'snv-latn-my',\n  snw: 'snw-latn-gh',\n  snx: 'snx-latn-zz',\n  sny: 'sny-latn-zz',\n  snz: 'snz-latn-pg',\n  so: 'so-latn-so',\n  soa: 'soa-tavt-th',\n  'soa-thai': 'soa-thai-th',\n  sob: 'sob-latn-id',\n  soc: 'soc-latn-cd',\n  sod: 'sod-latn-cd',\n  soe: 'soe-latn-cd',\n  sog: 'sog-sogd-uz',\n  soi: 'soi-deva-np',\n  sok: 'sok-latn-zz',\n  sol: 'sol-latn-pg',\n  soo: 'soo-latn-cd',\n  sop: 'sop-latn-cd',\n  soq: 'soq-latn-zz',\n  sor: 'sor-latn-td',\n  sos: 'sos-latn-bf',\n  sou: 'sou-thai-th',\n  sov: 'sov-latn-pw',\n  sow: 'sow-latn-pg',\n  sox: 'sox-latn-cm',\n  soy: 'soy-latn-zz',\n  soz: 'soz-latn-tz',\n  spb: 'spb-latn-id',\n  spc: 'spc-latn-ve',\n  spd: 'spd-latn-zz',\n  spe: 'spe-latn-pg',\n  spg: 'spg-latn-my',\n  spi: 'spi-latn-id',\n  spk: 'spk-latn-pg',\n  spl: 'spl-latn-zz',\n  spm: 'spm-latn-pg',\n  spn: 'spn-latn-py',\n  spo: 'spo-latn-us',\n  spp: 'spp-latn-ml',\n  spq: 'spq-latn-pe',\n  spr: 'spr-latn-id',\n  sps: 'sps-latn-zz',\n  spt: 'spt-tibt-in',\n  spv: 'spv-orya-in',\n  sq: 'sq-latn-al',\n  sqa: 'sqa-latn-ng',\n  sqh: 'sqh-latn-ng',\n  sqm: 'sqm-latn-cf',\n  sqo: 'sqo-arab-ir',\n  sqq: 'sqq-laoo-la',\n  sqt: 'sqt-arab-ye',\n  'sqt-latn': 'sqt-latn-ye',\n  squ: 'squ-latn-ca',\n  sr: 'sr-cyrl-rs',\n  'sr-me': 'sr-latn-me',\n  'sr-ro': 'sr-latn-ro',\n  'sr-ru': 'sr-latn-ru',\n  'sr-tr': 'sr-latn-tr',\n  sra: 'sra-latn-pg',\n  srb: 'srb-sora-in',\n  sre: 'sre-latn-id',\n  srf: 'srf-latn-pg',\n  srg: 'srg-latn-ph',\n  srh: 'srh-arab-cn',\n  sri: 'sri-latn-co',\n  srk: 'srk-latn-my',\n  srl: 'srl-latn-id',\n  srm: 'srm-latn-sr',\n  srn: 'srn-latn-sr',\n  sro: 'sro-latn-it',\n  srq: 'srq-latn-bo',\n  srr: 'srr-latn-sn',\n  srs: 'srs-latn-ca',\n  srt: 'srt-latn-id',\n  sru: 'sru-latn-br',\n  srv: 'srv-latn-ph',\n  srw: 'srw-latn-id',\n  srx: 'srx-deva-in',\n  sry: 'sry-latn-pg',\n  srz: 'srz-arab-ir',\n  ss: 'ss-latn-za',\n  ssb: 'ssb-latn-ph',\n  ssc: 'ssc-latn-tz',\n  ssd: 'ssd-latn-zz',\n  sse: 'sse-latn-ph',\n  'sse-arab': 'sse-arab-ph',\n  ssf: 'ssf-latn-tw',\n  ssg: 'ssg-latn-zz',\n  ssh: 'ssh-arab-ae',\n  ssj: 'ssj-latn-pg',\n  ssl: 'ssl-latn-gh',\n  ssm: 'ssm-latn-my',\n  ssn: 'ssn-latn-ke',\n  sso: 'sso-latn-pg',\n  ssq: 'ssq-latn-id',\n  sss: 'sss-laoo-la',\n  'sss-thai': 'sss-thai-th',\n  sst: 'sst-latn-pg',\n  ssu: 'ssu-latn-pg',\n  ssv: 'ssv-latn-vu',\n  ssx: 'ssx-latn-pg',\n  ssy: 'ssy-latn-er',\n  ssz: 'ssz-latn-pg',\n  st: 'st-latn-za',\n  sta: 'sta-latn-zm',\n  stb: 'stb-latn-ph',\n  ste: 'ste-latn-id',\n  stf: 'stf-latn-pg',\n  stg: 'stg-latn-vn',\n  sth: 'sth-latn-ie',\n  sti: 'sti-latn-vn',\n  'sti-kh': 'sti-latn-kh',\n  stj: 'stj-latn-bf',\n  stk: 'stk-latn-zz',\n  stl: 'stl-latn-nl',\n  stm: 'stm-latn-pg',\n  stn: 'stn-latn-sb',\n  sto: 'sto-latn-ca',\n  stp: 'stp-latn-mx',\n  stq: 'stq-latn-de',\n  str: 'str-latn-ca',\n  sts: 'sts-arab-af',\n  stt: 'stt-latn-vn',\n  stv: 'stv-ethi-et',\n  'stv-arab': 'stv-arab-et',\n  stw: 'stw-latn-fm',\n  sty: 'sty-cyrl-ru',\n  su: 'su-latn-id',\n  sua: 'sua-latn-zz',\n  sub: 'sub-latn-cd',\n  suc: 'suc-latn-ph',\n  sue: 'sue-latn-zz',\n  sug: 'sug-latn-pg',\n  sui: 'sui-latn-pg',\n  suj: 'suj-latn-tz',\n  suk: 'suk-latn-tz',\n  suo: 'suo-latn-pg',\n  suq: 'suq-latn-et',\n  'suq-ethi': 'suq-ethi-et',\n  sur: 'sur-latn-zz',\n  sus: 'sus-latn-gn',\n  sut: 'sut-latn-ni',\n  suv: 'suv-latn-in',\n  'suv-beng': 'suv-beng-in',\n  'suv-deva': 'suv-deva-in',\n  suw: 'suw-latn-tz',\n  suy: 'suy-latn-br',\n  suz: 'suz-deva-np',\n  sv: 'sv-latn-se',\n  sva: 'sva-geor-ge',\n  'sva-cyrl': 'sva-cyrl-ge',\n  'sva-latn': 'sva-latn-ge',\n  svb: 'svb-latn-pg',\n  svc: 'svc-latn-vc',\n  sve: 'sve-latn-id',\n  svm: 'svm-latn-it',\n  svs: 'svs-latn-sb',\n  sw: 'sw-latn-tz',\n  swb: 'swb-arab-yt',\n  swc: 'swc-latn-cd',\n  swf: 'swf-latn-cd',\n  swg: 'swg-latn-de',\n  swi: 'swi-hani-cn',\n  swj: 'swj-latn-ga',\n  swk: 'swk-latn-mw',\n  swm: 'swm-latn-pg',\n  swo: 'swo-latn-br',\n  swp: 'swp-latn-zz',\n  swq: 'swq-latn-cm',\n  swr: 'swr-latn-id',\n  sws: 'sws-latn-id',\n  swt: 'swt-latn-id',\n  swu: 'swu-latn-id',\n  swv: 'swv-deva-in',\n  sww: 'sww-latn-vu',\n  swx: 'swx-latn-br',\n  swy: 'swy-latn-td',\n  sxb: 'sxb-latn-ke',\n  sxe: 'sxe-latn-ga',\n  sxn: 'sxn-latn-id',\n  sxr: 'sxr-latn-tw',\n  sxs: 'sxs-latn-ng',\n  sxu: 'sxu-latn-de',\n  'sxu-runr': 'sxu-runr-de',\n  sxw: 'sxw-latn-zz',\n  sya: 'sya-latn-id',\n  syb: 'syb-latn-ph',\n  syc: 'syc-syrc-tr',\n  syi: 'syi-latn-ga',\n  syk: 'syk-latn-ng',\n  syl: 'syl-beng-bd',\n  sym: 'sym-latn-bf',\n  syn: 'syn-syrc-ir',\n  syo: 'syo-latn-kh',\n  syr: 'syr-syrc-iq',\n  sys: 'sys-latn-td',\n  syw: 'syw-deva-np',\n  syx: 'syx-latn-ga',\n  sza: 'sza-latn-my',\n  szb: 'szb-latn-id',\n  szc: 'szc-latn-my',\n  szd: 'szd-latn-my',\n  szg: 'szg-latn-cd',\n  szl: 'szl-latn-pl',\n  szn: 'szn-latn-id',\n  szp: 'szp-latn-id',\n  szv: 'szv-latn-cm',\n  szw: 'szw-latn-id',\n  szy: 'szy-latn-tw',\n  ta: 'ta-taml-in',\n  taa: 'taa-latn-us',\n  tab: 'tab-cyrl-ru',\n  tac: 'tac-latn-mx',\n  tad: 'tad-latn-id',\n  tae: 'tae-latn-br',\n  taf: 'taf-latn-br',\n  tag: 'tag-latn-sd',\n  taj: 'taj-deva-np',\n  tak: 'tak-latn-ng',\n  tal: 'tal-latn-zz',\n  tan: 'tan-latn-zz',\n  tao: 'tao-latn-tw',\n  tap: 'tap-latn-cd',\n  taq: 'taq-latn-zz',\n  tar: 'tar-latn-mx',\n  tas: 'tas-latn-vn',\n  tau: 'tau-latn-us',\n  tav: 'tav-latn-co',\n  taw: 'taw-latn-pg',\n  tax: 'tax-latn-td',\n  tay: 'tay-latn-tw',\n  'tay-hans': 'tay-hans-tw',\n  'tay-hant': 'tay-hant-tw',\n  taz: 'taz-latn-sd',\n  tba: 'tba-latn-br',\n  tbc: 'tbc-latn-zz',\n  tbd: 'tbd-latn-zz',\n  tbe: 'tbe-latn-sb',\n  tbf: 'tbf-latn-zz',\n  tbg: 'tbg-latn-zz',\n  tbh: 'tbh-latn-au',\n  tbi: 'tbi-latn-sd',\n  tbj: 'tbj-latn-pg',\n  tbk: 'tbk-tagb-ph',\n  'tbk-hano': 'tbk-hano-ph',\n  'tbk-latn': 'tbk-latn-ph',\n  tbl: 'tbl-latn-ph',\n  tbm: 'tbm-latn-cd',\n  tbn: 'tbn-latn-co',\n  tbo: 'tbo-latn-zz',\n  tbp: 'tbp-latn-id',\n  tbs: 'tbs-latn-pg',\n  tbt: 'tbt-latn-cd',\n  tbu: 'tbu-latn-mx',\n  tbv: 'tbv-latn-pg',\n  tbw: 'tbw-latn-ph',\n  tbx: 'tbx-latn-pg',\n  tby: 'tby-latn-id',\n  tbz: 'tbz-latn-zz',\n  tca: 'tca-latn-br',\n  tcb: 'tcb-latn-us',\n  tcc: 'tcc-latn-tz',\n  tcd: 'tcd-latn-gh',\n  tce: 'tce-latn-ca',\n  tcf: 'tcf-latn-mx',\n  tcg: 'tcg-latn-id',\n  tch: 'tch-latn-tc',\n  tci: 'tci-latn-zz',\n  tck: 'tck-latn-ga',\n  tcm: 'tcm-latn-id',\n  tcn: 'tcn-tibt-np',\n  tco: 'tco-mymr-mm',\n  tcp: 'tcp-latn-mm',\n  tcq: 'tcq-latn-id',\n  tcs: 'tcs-latn-au',\n  tcu: 'tcu-latn-mx',\n  tcw: 'tcw-latn-mx',\n  tcx: 'tcx-taml-in',\n  tcy: 'tcy-knda-in',\n  tcz: 'tcz-latn-in',\n  tda: 'tda-tfng-ne',\n  'tda-arab': 'tda-arab-ne',\n  'tda-latn': 'tda-latn-ne',\n  tdb: 'tdb-deva-in',\n  'tdb-beng': 'tdb-beng-in',\n  'tdb-kthi': 'tdb-kthi-in',\n  tdc: 'tdc-latn-co',\n  tdd: 'tdd-tale-cn',\n  tde: 'tde-latn-ml',\n  tdg: 'tdg-deva-np',\n  tdh: 'tdh-deva-np',\n  tdi: 'tdi-latn-id',\n  tdj: 'tdj-latn-id',\n  tdk: 'tdk-latn-ng',\n  tdl: 'tdl-latn-ng',\n  tdm: 'tdm-latn-gy',\n  tdn: 'tdn-latn-id',\n  tdo: 'tdo-latn-ng',\n  tdq: 'tdq-latn-ng',\n  tdr: 'tdr-latn-vn',\n  tds: 'tds-latn-id',\n  tdt: 'tdt-latn-tl',\n  tdu: 'tdu-latn-my',\n  tdv: 'tdv-latn-ng',\n  tdx: 'tdx-latn-mg',\n  tdy: 'tdy-latn-ph',\n  te: 'te-telu-in',\n  tea: 'tea-latn-my',\n  teb: 'teb-latn-ec',\n  tec: 'tec-latn-ke',\n  ted: 'ted-latn-zz',\n  tee: 'tee-latn-mx',\n  teg: 'teg-latn-ga',\n  teh: 'teh-latn-ar',\n  tei: 'tei-latn-pg',\n  tek: 'tek-latn-cd',\n  tem: 'tem-latn-sl',\n  ten: 'ten-latn-co',\n  teo: 'teo-latn-ug',\n  tep: 'tep-latn-mx',\n  teq: 'teq-latn-sd',\n  ter: 'ter-latn-br',\n  tes: 'tes-java-id',\n  tet: 'tet-latn-tl',\n  teu: 'teu-latn-ug',\n  tev: 'tev-latn-id',\n  tew: 'tew-latn-us',\n  tex: 'tex-latn-ss',\n  tey: 'tey-latn-sd',\n  tfi: 'tfi-latn-zz',\n  tfn: 'tfn-latn-us',\n  tfo: 'tfo-latn-id',\n  tfr: 'tfr-latn-pa',\n  tft: 'tft-latn-id',\n  tg: 'tg-cyrl-tj',\n  'tg-arab': 'tg-arab-pk',\n  'tg-pk': 'tg-arab-pk',\n  tga: 'tga-latn-ke',\n  tgb: 'tgb-latn-my',\n  tgc: 'tgc-latn-zz',\n  tgd: 'tgd-latn-ng',\n  tge: 'tge-deva-np',\n  tgf: 'tgf-tibt-bt',\n  tgh: 'tgh-latn-tt',\n  tgi: 'tgi-latn-pg',\n  tgj: 'tgj-latn-in',\n  tgn: 'tgn-latn-ph',\n  tgo: 'tgo-latn-zz',\n  tgp: 'tgp-latn-vu',\n  tgq: 'tgq-latn-my',\n  tgs: 'tgs-latn-vu',\n  tgt: 'tgt-latn-ph',\n  'tgt-hano': 'tgt-hano-ph',\n  'tgt-tagb': 'tgt-tagb-ph',\n  tgu: 'tgu-latn-zz',\n  tgv: 'tgv-latn-br',\n  tgw: 'tgw-latn-ci',\n  tgx: 'tgx-latn-ca',\n  tgy: 'tgy-latn-ss',\n  tgz: 'tgz-latn-au',\n  th: 'th-thai-th',\n  thd: 'thd-latn-au',\n  the: 'the-deva-np',\n  thf: 'thf-deva-np',\n  thh: 'thh-latn-mx',\n  thi: 'thi-tale-la',\n  thk: 'thk-latn-ke',\n  thl: 'thl-deva-np',\n  thm: 'thm-thai-th',\n  thp: 'thp-latn-ca',\n  'thp-dupl': 'thp-dupl-ca',\n  thq: 'thq-deva-np',\n  thr: 'thr-deva-np',\n  ths: 'ths-deva-np',\n  tht: 'tht-latn-ca',\n  thu: 'thu-latn-ss',\n  thv: 'thv-latn-dz',\n  'thv-arab': 'thv-arab-dz',\n  'thv-tfng': 'thv-tfng-dz',\n  thy: 'thy-latn-ng',\n  thz: 'thz-latn-ne',\n  'thz-tfng': 'thz-tfng-ne',\n  ti: 'ti-ethi-et',\n  tic: 'tic-latn-sd',\n  tif: 'tif-latn-zz',\n  tig: 'tig-ethi-er',\n  tih: 'tih-latn-my',\n  tii: 'tii-latn-cd',\n  tij: 'tij-deva-np',\n  tik: 'tik-latn-zz',\n  til: 'til-latn-us',\n  tim: 'tim-latn-zz',\n  tin: 'tin-cyrl-ru',\n  tio: 'tio-latn-zz',\n  tip: 'tip-latn-id',\n  tiq: 'tiq-latn-bf',\n  tis: 'tis-latn-ph',\n  tit: 'tit-latn-co',\n  tiu: 'tiu-latn-ph',\n  tiv: 'tiv-latn-ng',\n  tiw: 'tiw-latn-au',\n  tix: 'tix-latn-us',\n  tiy: 'tiy-latn-ph',\n  tja: 'tja-latn-lr',\n  tjg: 'tjg-latn-id',\n  tji: 'tji-latn-cn',\n  tjj: 'tjj-latn-au',\n  tjl: 'tjl-mymr-mm',\n  tjn: 'tjn-latn-ci',\n  tjo: 'tjo-arab-dz',\n  tjp: 'tjp-latn-au',\n  tjs: 'tjs-latn-cn',\n  tju: 'tju-latn-au',\n  tjw: 'tjw-latn-au',\n  tk: 'tk-latn-tm',\n  tka: 'tka-latn-br',\n  tkb: 'tkb-deva-in',\n  tkd: 'tkd-latn-tl',\n  tke: 'tke-latn-mz',\n  tkf: 'tkf-latn-br',\n  tkg: 'tkg-latn-mg',\n  tkl: 'tkl-latn-tk',\n  tkp: 'tkp-latn-sb',\n  tkq: 'tkq-latn-ng',\n  tkr: 'tkr-latn-az',\n  tks: 'tks-arab-ir',\n  tkt: 'tkt-deva-np',\n  tku: 'tku-latn-mx',\n  tkv: 'tkv-latn-pg',\n  tkw: 'tkw-latn-sb',\n  tkx: 'tkx-latn-id',\n  tkz: 'tkz-latn-vn',\n  tl: 'tl-latn-ph',\n  tla: 'tla-latn-mx',\n  tlb: 'tlb-latn-id',\n  tlc: 'tlc-latn-mx',\n  tld: 'tld-latn-id',\n  tlf: 'tlf-latn-zz',\n  tlg: 'tlg-latn-id',\n  tli: 'tli-latn-us',\n  'tli-cyrl': 'tli-cyrl-us',\n  tlj: 'tlj-latn-ug',\n  tlk: 'tlk-latn-id',\n  tll: 'tll-latn-cd',\n  tlm: 'tlm-latn-vu',\n  tln: 'tln-latn-id',\n  tlp: 'tlp-latn-mx',\n  tlq: 'tlq-latn-mm',\n  tlr: 'tlr-latn-sb',\n  tls: 'tls-latn-vu',\n  tlt: 'tlt-latn-id',\n  tlu: 'tlu-latn-id',\n  tlv: 'tlv-latn-id',\n  tlx: 'tlx-latn-zz',\n  tly: 'tly-latn-az',\n  tma: 'tma-latn-td',\n  tmb: 'tmb-latn-vu',\n  tmc: 'tmc-latn-td',\n  tmd: 'tmd-latn-pg',\n  tme: 'tme-latn-br',\n  tmf: 'tmf-latn-py',\n  tmg: 'tmg-latn-id',\n  tmh: 'tmh-latn-ne',\n  tmi: 'tmi-latn-vu',\n  tmj: 'tmj-latn-id',\n  tmk: 'tmk-deva-np',\n  tml: 'tml-latn-id',\n  tmm: 'tmm-latn-vn',\n  tmn: 'tmn-latn-id',\n  tmo: 'tmo-latn-my',\n  tmq: 'tmq-latn-pg',\n  tmr: 'tmr-syrc-il',\n  tmt: 'tmt-latn-vu',\n  tmu: 'tmu-latn-id',\n  tmv: 'tmv-latn-cd',\n  tmw: 'tmw-latn-my',\n  tmy: 'tmy-latn-zz',\n  tmz: 'tmz-latn-ve',\n  tn: 'tn-latn-za',\n  tna: 'tna-latn-bo',\n  tnb: 'tnb-latn-co',\n  tnc: 'tnc-latn-co',\n  tnd: 'tnd-latn-co',\n  tng: 'tng-latn-td',\n  tnh: 'tnh-latn-zz',\n  tni: 'tni-latn-id',\n  tnk: 'tnk-latn-vu',\n  tnl: 'tnl-latn-vu',\n  tnm: 'tnm-latn-id',\n  tnn: 'tnn-latn-vu',\n  tno: 'tno-latn-bo',\n  tnp: 'tnp-latn-vu',\n  tnq: 'tnq-latn-pr',\n  tnr: 'tnr-latn-sn',\n  tns: 'tns-latn-pg',\n  tnt: 'tnt-latn-id',\n  tnv: 'tnv-cakm-bd',\n  tnw: 'tnw-latn-id',\n  tnx: 'tnx-latn-sb',\n  tny: 'tny-latn-tz',\n  to: 'to-latn-to',\n  tob: 'tob-latn-ar',\n  toc: 'toc-latn-mx',\n  tod: 'tod-latn-gn',\n  tof: 'tof-latn-zz',\n  tog: 'tog-latn-mw',\n  toh: 'toh-latn-mz',\n  toi: 'toi-latn-zm',\n  toj: 'toj-latn-mx',\n  tok: 'tok-latn-001',\n  tol: 'tol-latn-us',\n  tom: 'tom-latn-id',\n  too: 'too-latn-mx',\n  top: 'top-latn-mx',\n  toq: 'toq-latn-zz',\n  tor: 'tor-latn-cd',\n  tos: 'tos-latn-mx',\n  tou: 'tou-latn-vn',\n  tov: 'tov-arab-ir',\n  tow: 'tow-latn-us',\n  tox: 'tox-latn-pw',\n  toy: 'toy-latn-id',\n  toz: 'toz-latn-cm',\n  tpa: 'tpa-latn-pg',\n  tpc: 'tpc-latn-mx',\n  tpe: 'tpe-latn-bd',\n  'tpe-beng': 'tpe-beng-bd',\n  tpf: 'tpf-latn-id',\n  tpg: 'tpg-latn-id',\n  tpi: 'tpi-latn-pg',\n  tpj: 'tpj-latn-py',\n  tpk: 'tpk-latn-br',\n  tpl: 'tpl-latn-mx',\n  tpm: 'tpm-latn-zz',\n  tpn: 'tpn-latn-br',\n  tpp: 'tpp-latn-mx',\n  tpr: 'tpr-latn-br',\n  tpt: 'tpt-latn-mx',\n  tpu: 'tpu-khmr-kh',\n  tpv: 'tpv-latn-mp',\n  tpx: 'tpx-latn-mx',\n  tpy: 'tpy-latn-br',\n  tpz: 'tpz-latn-zz',\n  tqb: 'tqb-latn-br',\n  tql: 'tql-latn-vu',\n  tqm: 'tqm-latn-pg',\n  tqn: 'tqn-latn-us',\n  tqo: 'tqo-latn-zz',\n  tqp: 'tqp-latn-pg',\n  tqt: 'tqt-latn-mx',\n  tqu: 'tqu-latn-sb',\n  tqw: 'tqw-latn-us',\n  tr: 'tr-latn-tr',\n  tra: 'tra-arab-af',\n  trb: 'trb-latn-pg',\n  trc: 'trc-latn-mx',\n  tre: 'tre-latn-id',\n  trf: 'trf-latn-tt',\n  trg: 'trg-hebr-il',\n  trh: 'trh-latn-pg',\n  tri: 'tri-latn-sr',\n  trj: 'trj-latn-td',\n  trl: 'trl-latn-gb',\n  trm: 'trm-arab-af',\n  trn: 'trn-latn-bo',\n  tro: 'tro-latn-in',\n  trp: 'trp-latn-in',\n  'trp-beng': 'trp-beng-in',\n  trq: 'trq-latn-mx',\n  trr: 'trr-latn-pe',\n  trs: 'trs-latn-mx',\n  trt: 'trt-latn-id',\n  tru: 'tru-latn-tr',\n  trv: 'trv-latn-tw',\n  trw: 'trw-arab-pk',\n  trx: 'trx-latn-my',\n  try: 'try-latn-in',\n  trz: 'trz-latn-br',\n  ts: 'ts-latn-za',\n  tsa: 'tsa-latn-cg',\n  tsb: 'tsb-latn-et',\n  tsc: 'tsc-latn-mz',\n  tsd: 'tsd-grek-gr',\n  tsf: 'tsf-deva-np',\n  tsg: 'tsg-latn-ph',\n  tsh: 'tsh-latn-cm',\n  tsi: 'tsi-latn-ca',\n  tsj: 'tsj-tibt-bt',\n  tsl: 'tsl-latn-vn',\n  tsp: 'tsp-latn-bf',\n  tsr: 'tsr-latn-vu',\n  tst: 'tst-latn-ml',\n  tsu: 'tsu-latn-tw',\n  tsv: 'tsv-latn-ga',\n  tsw: 'tsw-latn-zz',\n  tsx: 'tsx-latn-pg',\n  tsz: 'tsz-latn-mx',\n  tt: 'tt-cyrl-ru',\n  ttb: 'ttb-latn-ng',\n  ttc: 'ttc-latn-gt',\n  ttd: 'ttd-latn-zz',\n  tte: 'tte-latn-zz',\n  ttf: 'ttf-latn-cm',\n  tth: 'tth-laoo-la',\n  tti: 'tti-latn-id',\n  ttj: 'ttj-latn-ug',\n  ttk: 'ttk-latn-co',\n  ttl: 'ttl-latn-zm',\n  ttm: 'ttm-latn-ca',\n  ttn: 'ttn-latn-id',\n  tto: 'tto-laoo-la',\n  ttp: 'ttp-latn-id',\n  ttr: 'ttr-latn-zz',\n  tts: 'tts-thai-th',\n  ttt: 'ttt-latn-az',\n  ttu: 'ttu-latn-pg',\n  ttv: 'ttv-latn-pg',\n  ttw: 'ttw-latn-my',\n  tty: 'tty-latn-id',\n  tua: 'tua-latn-pg',\n  tub: 'tub-latn-us',\n  tuc: 'tuc-latn-pg',\n  tud: 'tud-latn-br',\n  tue: 'tue-latn-co',\n  tuf: 'tuf-latn-co',\n  tug: 'tug-latn-td',\n  tuh: 'tuh-latn-zz',\n  tui: 'tui-latn-cm',\n  tuj: 'tuj-latn-id',\n  tul: 'tul-latn-zz',\n  tum: 'tum-latn-mw',\n  tun: 'tun-latn-us',\n  tuo: 'tuo-latn-br',\n  tuq: 'tuq-latn-zz',\n  tus: 'tus-latn-ca',\n  tuu: 'tuu-latn-us',\n  tuv: 'tuv-latn-ke',\n  tux: 'tux-latn-br',\n  tuy: 'tuy-latn-ke',\n  tuz: 'tuz-latn-bf',\n  tva: 'tva-latn-sb',\n  tvd: 'tvd-latn-zz',\n  tve: 'tve-latn-id',\n  tvk: 'tvk-latn-vu',\n  tvl: 'tvl-latn-tv',\n  tvm: 'tvm-latn-id',\n  tvn: 'tvn-mymr-mm',\n  tvo: 'tvo-latn-id',\n  tvs: 'tvs-latn-ke',\n  tvt: 'tvt-latn-in',\n  tvu: 'tvu-latn-zz',\n  tvw: 'tvw-latn-id',\n  tvx: 'tvx-latn-tw',\n  twa: 'twa-latn-us',\n  twb: 'twb-latn-ph',\n  twd: 'twd-latn-nl',\n  twe: 'twe-latn-id',\n  twf: 'twf-latn-us',\n  twg: 'twg-latn-id',\n  twh: 'twh-latn-zz',\n  twl: 'twl-latn-mz',\n  twm: 'twm-deva-in',\n  twn: 'twn-latn-cm',\n  two: 'two-latn-bw',\n  twp: 'twp-latn-pg',\n  twq: 'twq-latn-ne',\n  twr: 'twr-latn-mx',\n  twt: 'twt-latn-br',\n  twu: 'twu-latn-id',\n  tww: 'tww-latn-pg',\n  twx: 'twx-latn-mz',\n  twy: 'twy-latn-id',\n  txa: 'txa-latn-my',\n  txe: 'txe-latn-id',\n  txg: 'txg-tang-cn',\n  txi: 'txi-latn-br',\n  txj: 'txj-latn-ng',\n  txm: 'txm-latn-id',\n  txn: 'txn-latn-id',\n  txo: 'txo-toto-in',\n  txq: 'txq-latn-id',\n  txs: 'txs-latn-id',\n  txt: 'txt-latn-id',\n  txu: 'txu-latn-br',\n  txx: 'txx-latn-my',\n  txy: 'txy-latn-mg',\n  ty: 'ty-latn-pf',\n  tya: 'tya-latn-zz',\n  tye: 'tye-latn-ng',\n  tyh: 'tyh-latn-vn',\n  tyi: 'tyi-latn-cg',\n  tyj: 'tyj-latn-vn',\n  tyl: 'tyl-latn-vn',\n  tyn: 'tyn-latn-id',\n  typ: 'typ-latn-au',\n  tyr: 'tyr-tavt-vn',\n  tys: 'tys-latn-vn',\n  tyt: 'tyt-latn-vn',\n  'tyt-tavt': 'tyt-tavt-vn',\n  tyu: 'tyu-latn-bw',\n  tyv: 'tyv-cyrl-ru',\n  tyx: 'tyx-latn-cg',\n  tyy: 'tyy-latn-ng',\n  tyz: 'tyz-latn-vn',\n  tzh: 'tzh-latn-mx',\n  tzj: 'tzj-latn-gt',\n  tzl: 'tzl-latn-001',\n  tzm: 'tzm-latn-ma',\n  tzn: 'tzn-latn-id',\n  tzo: 'tzo-latn-mx',\n  tzx: 'tzx-latn-pg',\n  uam: 'uam-latn-br',\n  uar: 'uar-latn-pg',\n  uba: 'uba-latn-ng',\n  ubi: 'ubi-latn-td',\n  ubl: 'ubl-latn-ph',\n  ubr: 'ubr-latn-pg',\n  ubu: 'ubu-latn-zz',\n  uda: 'uda-latn-ng',\n  ude: 'ude-cyrl-ru',\n  udg: 'udg-mlym-in',\n  udi: 'udi-aghb-ru',\n  udj: 'udj-latn-id',\n  udl: 'udl-latn-cm',\n  udm: 'udm-cyrl-ru',\n  udu: 'udu-latn-sd',\n  ues: 'ues-latn-id',\n  ufi: 'ufi-latn-pg',\n  ug: 'ug-arab-cn',\n  'ug-cyrl': 'ug-cyrl-kz',\n  'ug-kz': 'ug-cyrl-kz',\n  'ug-mn': 'ug-cyrl-mn',\n  uga: 'uga-ugar-sy',\n  ugb: 'ugb-latn-au',\n  uge: 'uge-latn-sb',\n  ugh: 'ugh-cyrl-ru',\n  ugo: 'ugo-thai-th',\n  uha: 'uha-latn-ng',\n  uhn: 'uhn-latn-id',\n  uis: 'uis-latn-pg',\n  uiv: 'uiv-latn-cm',\n  uji: 'uji-latn-ng',\n  uk: 'uk-cyrl-ua',\n  uka: 'uka-latn-id',\n  ukg: 'ukg-latn-pg',\n  ukh: 'ukh-latn-cf',\n  uki: 'uki-orya-in',\n  ukk: 'ukk-latn-mm',\n  ukp: 'ukp-latn-ng',\n  ukq: 'ukq-latn-ng',\n  uku: 'uku-latn-ng',\n  ukv: 'ukv-latn-ss',\n  ukw: 'ukw-latn-ng',\n  uky: 'uky-latn-au',\n  ula: 'ula-latn-ng',\n  ulb: 'ulb-latn-ng',\n  ulc: 'ulc-cyrl-ru',\n  ule: 'ule-latn-ar',\n  ulf: 'ulf-latn-id',\n  uli: 'uli-latn-fm',\n  ulk: 'ulk-latn-au',\n  ulm: 'ulm-latn-id',\n  uln: 'uln-latn-pg',\n  ulu: 'ulu-latn-id',\n  ulw: 'ulw-latn-ni',\n  uma: 'uma-latn-us',\n  umb: 'umb-latn-ao',\n  umd: 'umd-latn-au',\n  umg: 'umg-latn-au',\n  umi: 'umi-latn-my',\n  umm: 'umm-latn-ng',\n  umn: 'umn-latn-mm',\n  umo: 'umo-latn-br',\n  ump: 'ump-latn-au',\n  umr: 'umr-latn-au',\n  ums: 'ums-latn-id',\n  una: 'una-latn-pg',\n  und: 'en-latn-us',\n  'und-002': 'en-latn-ng',\n  'und-003': 'en-latn-us',\n  'und-005': 'pt-latn-br',\n  'und-009': 'en-latn-au',\n  'und-011': 'en-latn-ng',\n  'und-013': 'es-latn-mx',\n  'und-014': 'sw-latn-tz',\n  'und-015': 'ar-arab-eg',\n  'und-017': 'sw-latn-cd',\n  'und-018': 'en-latn-za',\n  'und-019': 'en-latn-us',\n  'und-021': 'en-latn-us',\n  'und-029': 'es-latn-cu',\n  'und-030': 'zh-hans-cn',\n  'und-034': 'hi-deva-in',\n  'und-035': 'id-latn-id',\n  'und-039': 'it-latn-it',\n  'und-053': 'en-latn-au',\n  'und-054': 'en-latn-pg',\n  'und-057': 'en-latn-gu',\n  'und-061': 'sm-latn-ws',\n  'und-142': 'zh-hans-cn',\n  'und-143': 'uz-latn-uz',\n  'und-145': 'ar-arab-sa',\n  'und-150': 'ru-cyrl-ru',\n  'und-151': 'ru-cyrl-ru',\n  'und-154': 'en-latn-gb',\n  'und-155': 'de-latn-de',\n  'und-202': 'en-latn-ng',\n  'und-419': 'es-latn-419',\n  'und-ad': 'ca-latn-ad',\n  'und-adlm': 'ff-adlm-gn',\n  'und-ae': 'ar-arab-ae',\n  'und-af': 'fa-arab-af',\n  'und-aghb': 'udi-aghb-ru',\n  'und-ahom': 'aho-ahom-in',\n  'und-al': 'sq-latn-al',\n  'und-am': 'hy-armn-am',\n  'und-ao': 'pt-latn-ao',\n  'und-aq': 'und-latn-aq',\n  'und-ar': 'es-latn-ar',\n  'und-arab': 'ar-arab-eg',\n  'und-arab-cc': 'ms-arab-cc',\n  'und-arab-cn': 'ug-arab-cn',\n  'und-arab-gb': 'ur-arab-gb',\n  'und-arab-id': 'ms-arab-id',\n  'und-arab-in': 'ur-arab-in',\n  'und-arab-kh': 'cja-arab-kh',\n  'und-arab-mm': 'rhg-arab-mm',\n  'und-arab-mn': 'kk-arab-mn',\n  'und-arab-mu': 'ur-arab-mu',\n  'und-arab-ng': 'ha-arab-ng',\n  'und-arab-pk': 'ur-arab-pk',\n  'und-arab-tg': 'apd-arab-tg',\n  'und-arab-th': 'mfa-arab-th',\n  'und-arab-tj': 'fa-arab-tj',\n  'und-arab-tr': 'apc-arab-tr',\n  'und-arab-yt': 'swb-arab-yt',\n  'und-armi': 'arc-armi-ir',\n  'und-armn': 'hy-armn-am',\n  'und-as': 'sm-latn-as',\n  'und-at': 'de-latn-at',\n  'und-avst': 'ae-avst-ir',\n  'und-aw': 'nl-latn-aw',\n  'und-ax': 'sv-latn-ax',\n  'und-az': 'az-latn-az',\n  'und-ba': 'bs-latn-ba',\n  'und-bali': 'ban-bali-id',\n  'und-bamu': 'bax-bamu-cm',\n  'und-bass': 'bsq-bass-lr',\n  'und-batk': 'bbc-batk-id',\n  'und-bd': 'bn-beng-bd',\n  'und-be': 'nl-latn-be',\n  'und-beng': 'bn-beng-bd',\n  'und-bf': 'fr-latn-bf',\n  'und-bg': 'bg-cyrl-bg',\n  'und-bh': 'ar-arab-bh',\n  'und-bhks': 'sa-bhks-in',\n  'und-bi': 'rn-latn-bi',\n  'und-bj': 'fr-latn-bj',\n  'und-bl': 'fr-latn-bl',\n  'und-bn': 'ms-latn-bn',\n  'und-bo': 'es-latn-bo',\n  'und-bopo': 'zh-bopo-tw',\n  'und-bq': 'pap-latn-bq',\n  'und-br': 'pt-latn-br',\n  'und-brah': 'pka-brah-in',\n  'und-brai': 'fr-brai-fr',\n  'und-bt': 'dz-tibt-bt',\n  'und-bugi': 'bug-bugi-id',\n  'und-buhd': 'bku-buhd-ph',\n  'und-bv': 'und-latn-bv',\n  'und-by': 'be-cyrl-by',\n  'und-cakm': 'ccp-cakm-bd',\n  'und-cans': 'iu-cans-ca',\n  'und-cari': 'xcr-cari-tr',\n  'und-cd': 'sw-latn-cd',\n  'und-cf': 'fr-latn-cf',\n  'und-cg': 'fr-latn-cg',\n  'und-ch': 'de-latn-ch',\n  'und-cham': 'cjm-cham-vn',\n  'und-cher': 'chr-cher-us',\n  'und-chrs': 'xco-chrs-uz',\n  'und-ci': 'fr-latn-ci',\n  'und-cl': 'es-latn-cl',\n  'und-cm': 'fr-latn-cm',\n  'und-cn': 'zh-hans-cn',\n  'und-co': 'es-latn-co',\n  'und-copt': 'cop-copt-eg',\n  'und-cp': 'und-latn-cp',\n  'und-cpmn': 'und-cpmn-cy',\n  'und-cpmn-cy': 'und-cpmn-cy',\n  'und-cprt': 'grc-cprt-cy',\n  'und-cr': 'es-latn-cr',\n  'und-cu': 'es-latn-cu',\n  'und-cv': 'pt-latn-cv',\n  'und-cw': 'pap-latn-cw',\n  'und-cy': 'el-grek-cy',\n  'und-cyrl': 'ru-cyrl-ru',\n  'und-cyrl-al': 'mk-cyrl-al',\n  'und-cyrl-ba': 'sr-cyrl-ba',\n  'und-cyrl-ge': 'ab-cyrl-ge',\n  'und-cyrl-gr': 'mk-cyrl-gr',\n  'und-cyrl-md': 'uk-cyrl-md',\n  'und-cyrl-ro': 'bg-cyrl-ro',\n  'und-cyrl-sk': 'uk-cyrl-sk',\n  'und-cyrl-tr': 'kbd-cyrl-tr',\n  'und-cyrl-xk': 'sr-cyrl-xk',\n  'und-cz': 'cs-latn-cz',\n  'und-de': 'de-latn-de',\n  'und-deva': 'hi-deva-in',\n  'und-deva-bt': 'ne-deva-bt',\n  'und-deva-fj': 'hif-deva-fj',\n  'und-deva-mu': 'bho-deva-mu',\n  'und-deva-pk': 'btv-deva-pk',\n  'und-diak': 'dv-diak-mv',\n  'und-dj': 'aa-latn-dj',\n  'und-dk': 'da-latn-dk',\n  'und-do': 'es-latn-do',\n  'und-dogr': 'doi-dogr-in',\n  'und-dupl': 'fr-dupl-fr',\n  'und-dz': 'ar-arab-dz',\n  'und-ea': 'es-latn-ea',\n  'und-ec': 'es-latn-ec',\n  'und-ee': 'et-latn-ee',\n  'und-eg': 'ar-arab-eg',\n  'und-egyp': 'egy-egyp-eg',\n  'und-eh': 'ar-arab-eh',\n  'und-elba': 'sq-elba-al',\n  'und-elym': 'arc-elym-ir',\n  'und-er': 'ti-ethi-er',\n  'und-es': 'es-latn-es',\n  'und-et': 'am-ethi-et',\n  'und-ethi': 'am-ethi-et',\n  'und-eu': 'en-latn-ie',\n  'und-ez': 'de-latn-ez',\n  'und-fi': 'fi-latn-fi',\n  'und-fo': 'fo-latn-fo',\n  'und-fr': 'fr-latn-fr',\n  'und-ga': 'fr-latn-ga',\n  'und-ge': 'ka-geor-ge',\n  'und-geor': 'ka-geor-ge',\n  'und-gf': 'fr-latn-gf',\n  'und-gh': 'ak-latn-gh',\n  'und-gl': 'kl-latn-gl',\n  'und-glag': 'cu-glag-bg',\n  'und-gn': 'fr-latn-gn',\n  'und-gong': 'wsg-gong-in',\n  'und-gonm': 'esg-gonm-in',\n  'und-goth': 'got-goth-ua',\n  'und-gp': 'fr-latn-gp',\n  'und-gq': 'es-latn-gq',\n  'und-gr': 'el-grek-gr',\n  'und-gran': 'sa-gran-in',\n  'und-grek': 'el-grek-gr',\n  'und-grek-tr': 'bgx-grek-tr',\n  'und-gs': 'und-latn-gs',\n  'und-gt': 'es-latn-gt',\n  'und-gujr': 'gu-gujr-in',\n  'und-guru': 'pa-guru-in',\n  'und-gw': 'pt-latn-gw',\n  'und-hanb': 'zh-hanb-tw',\n  'und-hang': 'ko-hang-kr',\n  'und-hani': 'zh-hani-cn',\n  'und-hano': 'hnn-hano-ph',\n  'und-hans': 'zh-hans-cn',\n  'und-hant': 'zh-hant-tw',\n  'und-hant-ca': 'yue-hant-ca',\n  'und-hebr': 'he-hebr-il',\n  'und-hebr-se': 'yi-hebr-se',\n  'und-hebr-ua': 'yi-hebr-ua',\n  'und-hebr-us': 'yi-hebr-us',\n  'und-hira': 'ja-hira-jp',\n  'und-hk': 'zh-hant-hk',\n  'und-hluw': 'hlu-hluw-tr',\n  'und-hm': 'und-latn-hm',\n  'und-hmng': 'hnj-hmng-la',\n  'und-hmnp': 'hnj-hmnp-us',\n  'und-hn': 'es-latn-hn',\n  'und-hr': 'hr-latn-hr',\n  'und-ht': 'ht-latn-ht',\n  'und-hu': 'hu-latn-hu',\n  'und-hung': 'hu-hung-hu',\n  'und-ic': 'es-latn-ic',\n  'und-id': 'id-latn-id',\n  'und-il': 'he-hebr-il',\n  'und-in': 'hi-deva-in',\n  'und-iq': 'ar-arab-iq',\n  'und-ir': 'fa-arab-ir',\n  'und-is': 'is-latn-is',\n  'und-it': 'it-latn-it',\n  'und-ital': 'ett-ital-it',\n  'und-jamo': 'ko-jamo-kr',\n  'und-java': 'jv-java-id',\n  'und-jo': 'ar-arab-jo',\n  'und-jp': 'ja-jpan-jp',\n  'und-jpan': 'ja-jpan-jp',\n  'und-kali': 'eky-kali-mm',\n  'und-kana': 'ja-kana-jp',\n  'und-kawi': 'kaw-kawi-id',\n  'und-ke': 'sw-latn-ke',\n  'und-kg': 'ky-cyrl-kg',\n  'und-kh': 'km-khmr-kh',\n  'und-khar': 'pra-khar-pk',\n  'und-khmr': 'km-khmr-kh',\n  'und-khoj': 'sd-khoj-in',\n  'und-kits': 'zkt-kits-cn',\n  'und-km': 'ar-arab-km',\n  'und-knda': 'kn-knda-in',\n  'und-kore': 'ko-kore-kr',\n  'und-kp': 'ko-kore-kp',\n  'und-kr': 'ko-kore-kr',\n  'und-kthi': 'bho-kthi-in',\n  'und-kw': 'ar-arab-kw',\n  'und-kz': 'ru-cyrl-kz',\n  'und-la': 'lo-laoo-la',\n  'und-lana': 'nod-lana-th',\n  'und-laoo': 'lo-laoo-la',\n  'und-laoo-au': 'hnj-laoo-au',\n  'und-laoo-cn': 'hnj-laoo-cn',\n  'und-laoo-fr': 'hnj-laoo-fr',\n  'und-laoo-gf': 'hnj-laoo-gf',\n  'und-laoo-mm': 'hnj-laoo-mm',\n  'und-laoo-sr': 'hnj-laoo-sr',\n  'und-laoo-th': 'hnj-laoo-th',\n  'und-laoo-us': 'hnj-laoo-us',\n  'und-laoo-vn': 'hnj-laoo-vn',\n  'und-latn-af': 'tk-latn-af',\n  'und-latn-am': 'ku-latn-am',\n  'und-latn-cn': 'za-latn-cn',\n  'und-latn-cy': 'tr-latn-cy',\n  'und-latn-dz': 'fr-latn-dz',\n  'und-latn-et': 'en-latn-et',\n  'und-latn-ge': 'ku-latn-ge',\n  'und-latn-ir': 'tk-latn-ir',\n  'und-latn-km': 'fr-latn-km',\n  'und-latn-ma': 'fr-latn-ma',\n  'und-latn-mk': 'sq-latn-mk',\n  'und-latn-mm': 'kac-latn-mm',\n  'und-latn-mo': 'pt-latn-mo',\n  'und-latn-mr': 'fr-latn-mr',\n  'und-latn-ru': 'krl-latn-ru',\n  'und-latn-sy': 'fr-latn-sy',\n  'und-latn-tn': 'fr-latn-tn',\n  'und-latn-tw': 'trv-latn-tw',\n  'und-latn-ua': 'pl-latn-ua',\n  'und-lb': 'ar-arab-lb',\n  'und-lepc': 'lep-lepc-in',\n  'und-li': 'de-latn-li',\n  'und-limb': 'lif-limb-in',\n  'und-lina': 'lab-lina-gr',\n  'und-linb': 'grc-linb-gr',\n  'und-lisu': 'lis-lisu-cn',\n  'und-lk': 'si-sinh-lk',\n  'und-ls': 'st-latn-ls',\n  'und-lt': 'lt-latn-lt',\n  'und-lu': 'fr-latn-lu',\n  'und-lv': 'lv-latn-lv',\n  'und-ly': 'ar-arab-ly',\n  'und-lyci': 'xlc-lyci-tr',\n  'und-lydi': 'xld-lydi-tr',\n  'und-ma': 'ar-arab-ma',\n  'und-mahj': 'hi-mahj-in',\n  'und-maka': 'mak-maka-id',\n  'und-mand': 'myz-mand-ir',\n  'und-mani': 'xmn-mani-cn',\n  'und-marc': 'bo-marc-cn',\n  'und-mc': 'fr-latn-mc',\n  'und-md': 'ro-latn-md',\n  'und-me': 'sr-latn-me',\n  'und-medf': 'dmf-medf-ng',\n  'und-mend': 'men-mend-sl',\n  'und-merc': 'xmr-merc-sd',\n  'und-mero': 'xmr-mero-sd',\n  'und-mf': 'fr-latn-mf',\n  'und-mg': 'mg-latn-mg',\n  'und-mk': 'mk-cyrl-mk',\n  'und-ml': 'bm-latn-ml',\n  'und-mlym': 'ml-mlym-in',\n  'und-mm': 'my-mymr-mm',\n  'und-mn': 'mn-cyrl-mn',\n  'und-mo': 'zh-hant-mo',\n  'und-modi': 'mr-modi-in',\n  'und-mong': 'mn-mong-cn',\n  'und-mq': 'fr-latn-mq',\n  'und-mr': 'ar-arab-mr',\n  'und-mroo': 'mro-mroo-bd',\n  'und-mt': 'mt-latn-mt',\n  'und-mtei': 'mni-mtei-in',\n  'und-mu': 'mfe-latn-mu',\n  'und-mult': 'skr-mult-pk',\n  'und-mv': 'dv-thaa-mv',\n  'und-mx': 'es-latn-mx',\n  'und-my': 'ms-latn-my',\n  'und-mymr': 'my-mymr-mm',\n  'und-mymr-in': 'kht-mymr-in',\n  'und-mymr-th': 'mnw-mymr-th',\n  'und-mz': 'pt-latn-mz',\n  'und-na': 'af-latn-na',\n  'und-nagm': 'unr-nagm-in',\n  'und-nand': 'sa-nand-in',\n  'und-narb': 'xna-narb-sa',\n  'und-nbat': 'arc-nbat-jo',\n  'und-nc': 'fr-latn-nc',\n  'und-ne': 'ha-latn-ne',\n  'und-newa': 'new-newa-np',\n  'und-ni': 'es-latn-ni',\n  'und-nkoo': 'man-nkoo-gn',\n  'und-nl': 'nl-latn-nl',\n  'und-no': 'nb-latn-no',\n  'und-np': 'ne-deva-np',\n  'und-nshu': 'zhx-nshu-cn',\n  'und-ogam': 'sga-ogam-ie',\n  'und-olck': 'sat-olck-in',\n  'und-om': 'ar-arab-om',\n  'und-orkh': 'otk-orkh-mn',\n  'und-orya': 'or-orya-in',\n  'und-osge': 'osa-osge-us',\n  'und-osma': 'so-osma-so',\n  'und-ougr': 'oui-ougr-143',\n  'und-pa': 'es-latn-pa',\n  'und-palm': 'arc-palm-sy',\n  'und-pauc': 'ctd-pauc-mm',\n  'und-pe': 'es-latn-pe',\n  'und-perm': 'kv-perm-ru',\n  'und-pf': 'fr-latn-pf',\n  'und-pg': 'tpi-latn-pg',\n  'und-ph': 'fil-latn-ph',\n  'und-phag': 'lzh-phag-cn',\n  'und-phli': 'pal-phli-ir',\n  'und-phlp': 'pal-phlp-cn',\n  'und-phnx': 'phn-phnx-lb',\n  'und-pk': 'ur-arab-pk',\n  'und-pl': 'pl-latn-pl',\n  'und-plrd': 'hmd-plrd-cn',\n  'und-pm': 'fr-latn-pm',\n  'und-pr': 'es-latn-pr',\n  'und-prti': 'xpr-prti-ir',\n  'und-ps': 'ar-arab-ps',\n  'und-pt': 'pt-latn-pt',\n  'und-pw': 'pau-latn-pw',\n  'und-py': 'gn-latn-py',\n  'und-qa': 'ar-arab-qa',\n  'und-qo': 'en-latn-dg',\n  'und-re': 'fr-latn-re',\n  'und-rjng': 'rej-rjng-id',\n  'und-ro': 'ro-latn-ro',\n  'und-rohg': 'rhg-rohg-mm',\n  'und-rs': 'sr-cyrl-rs',\n  'und-ru': 'ru-cyrl-ru',\n  'und-runr': 'non-runr-se',\n  'und-rw': 'rw-latn-rw',\n  'und-sa': 'ar-arab-sa',\n  'und-samr': 'smp-samr-il',\n  'und-sarb': 'xsa-sarb-ye',\n  'und-saur': 'saz-saur-in',\n  'und-sc': 'fr-latn-sc',\n  'und-sd': 'ar-arab-sd',\n  'und-se': 'sv-latn-se',\n  'und-sgnw': 'ase-sgnw-us',\n  'und-shaw': 'en-shaw-gb',\n  'und-shrd': 'sa-shrd-in',\n  'und-si': 'sl-latn-si',\n  'und-sidd': 'sa-sidd-in',\n  'und-sind': 'sd-sind-in',\n  'und-sinh': 'si-sinh-lk',\n  'und-sj': 'nb-latn-sj',\n  'und-sk': 'sk-latn-sk',\n  'und-sm': 'it-latn-sm',\n  'und-sn': 'fr-latn-sn',\n  'und-so': 'so-latn-so',\n  'und-sogd': 'sog-sogd-uz',\n  'und-sogo': 'sog-sogo-uz',\n  'und-sora': 'srb-sora-in',\n  'und-soyo': 'cmg-soyo-mn',\n  'und-sr': 'nl-latn-sr',\n  'und-st': 'pt-latn-st',\n  'und-sund': 'su-sund-id',\n  'und-sv': 'es-latn-sv',\n  'und-sy': 'ar-arab-sy',\n  'und-sylo': 'syl-sylo-bd',\n  'und-syrc': 'syr-syrc-iq',\n  'und-tagb': 'tbw-tagb-ph',\n  'und-takr': 'doi-takr-in',\n  'und-tale': 'tdd-tale-cn',\n  'und-talu': 'khb-talu-cn',\n  'und-taml': 'ta-taml-in',\n  'und-tang': 'txg-tang-cn',\n  'und-tavt': 'blt-tavt-vn',\n  'und-td': 'fr-latn-td',\n  'und-telu': 'te-telu-in',\n  'und-tf': 'fr-latn-tf',\n  'und-tfng': 'zgh-tfng-ma',\n  'und-tg': 'fr-latn-tg',\n  'und-tglg': 'fil-tglg-ph',\n  'und-th': 'th-thai-th',\n  'und-thaa': 'dv-thaa-mv',\n  'und-thai': 'th-thai-th',\n  'und-thai-cn': 'lcp-thai-cn',\n  'und-thai-kh': 'kdt-thai-kh',\n  'und-thai-la': 'kdt-thai-la',\n  'und-tibt': 'bo-tibt-cn',\n  'und-tirh': 'mai-tirh-in',\n  'und-tj': 'tg-cyrl-tj',\n  'und-tk': 'tkl-latn-tk',\n  'und-tl': 'pt-latn-tl',\n  'und-tm': 'tk-latn-tm',\n  'und-tn': 'ar-arab-tn',\n  'und-tnsa': 'nst-tnsa-in',\n  'und-to': 'to-latn-to',\n  'und-toto': 'txo-toto-in',\n  'und-tr': 'tr-latn-tr',\n  'und-tv': 'tvl-latn-tv',\n  'und-tw': 'zh-hant-tw',\n  'und-tz': 'sw-latn-tz',\n  'und-ua': 'uk-cyrl-ua',\n  'und-ug': 'sw-latn-ug',\n  'und-ugar': 'uga-ugar-sy',\n  'und-uy': 'es-latn-uy',\n  'und-uz': 'uz-latn-uz',\n  'und-va': 'it-latn-va',\n  'und-vaii': 'vai-vaii-lr',\n  'und-ve': 'es-latn-ve',\n  'und-vith': 'sq-vith-al',\n  'und-vn': 'vi-latn-vn',\n  'und-vu': 'bi-latn-vu',\n  'und-wara': 'hoc-wara-in',\n  'und-wcho': 'nnp-wcho-in',\n  'und-wf': 'fr-latn-wf',\n  'und-ws': 'sm-latn-ws',\n  'und-xk': 'sq-latn-xk',\n  'und-xpeo': 'peo-xpeo-ir',\n  'und-xsux': 'akk-xsux-iq',\n  'und-ye': 'ar-arab-ye',\n  'und-yezi': 'ku-yezi-ge',\n  'und-yiii': 'ii-yiii-cn',\n  'und-yt': 'fr-latn-yt',\n  'und-zanb': 'cmg-zanb-mn',\n  'und-zw': 'sn-latn-zw',\n  une: 'une-latn-ng',\n  ung: 'ung-latn-au',\n  uni: 'uni-latn-pg',\n  unk: 'unk-latn-br',\n  unm: 'unm-latn-us',\n  unn: 'unn-latn-au',\n  unr: 'unr-beng-in',\n  'unr-deva': 'unr-deva-np',\n  'unr-np': 'unr-deva-np',\n  unu: 'unu-latn-pg',\n  unx: 'unx-beng-in',\n  unz: 'unz-latn-id',\n  uok: 'uok-latn-zz',\n  uon: 'uon-latn-tw',\n  upi: 'upi-latn-pg',\n  upv: 'upv-latn-vu',\n  ur: 'ur-arab-pk',\n  ura: 'ura-latn-pe',\n  urb: 'urb-latn-br',\n  urc: 'urc-latn-au',\n  ure: 'ure-latn-bo',\n  urf: 'urf-latn-au',\n  urg: 'urg-latn-pg',\n  urh: 'urh-latn-ng',\n  uri: 'uri-latn-zz',\n  urk: 'urk-thai-th',\n  urm: 'urm-latn-pg',\n  urn: 'urn-latn-id',\n  uro: 'uro-latn-pg',\n  urp: 'urp-latn-br',\n  urr: 'urr-latn-vu',\n  urt: 'urt-latn-zz',\n  uru: 'uru-latn-br',\n  urv: 'urv-latn-pg',\n  urw: 'urw-latn-zz',\n  urx: 'urx-latn-pg',\n  ury: 'ury-latn-id',\n  urz: 'urz-latn-br',\n  usa: 'usa-latn-zz',\n  ush: 'ush-arab-pk',\n  usi: 'usi-latn-bd',\n  'usi-beng': 'usi-beng-bd',\n  usk: 'usk-latn-cm',\n  usp: 'usp-latn-gt',\n  uss: 'uss-latn-ng',\n  usu: 'usu-latn-pg',\n  uta: 'uta-latn-ng',\n  ute: 'ute-latn-us',\n  uth: 'uth-latn-zz',\n  utp: 'utp-latn-sb',\n  utr: 'utr-latn-zz',\n  utu: 'utu-latn-pg',\n  uum: 'uum-grek-ge',\n  'uum-cyrl': 'uum-cyrl-ge',\n  uur: 'uur-latn-vu',\n  uve: 'uve-latn-nc',\n  uvh: 'uvh-latn-zz',\n  uvl: 'uvl-latn-zz',\n  uwa: 'uwa-latn-au',\n  uya: 'uya-latn-ng',\n  uz: 'uz-latn-uz',\n  'uz-af': 'uz-arab-af',\n  'uz-arab': 'uz-arab-af',\n  'uz-cn': 'uz-cyrl-cn',\n  uzs: 'uzs-arab-af',\n  vaa: 'vaa-taml-in',\n  vae: 'vae-latn-cf',\n  vaf: 'vaf-arab-ir',\n  vag: 'vag-latn-zz',\n  vah: 'vah-deva-in',\n  vai: 'vai-vaii-lr',\n  vaj: 'vaj-latn-na',\n  val: 'val-latn-pg',\n  vam: 'vam-latn-pg',\n  van: 'van-latn-zz',\n  vao: 'vao-latn-vu',\n  vap: 'vap-latn-in',\n  var: 'var-latn-mx',\n  vas: 'vas-deva-in',\n  'vas-gujr': 'vas-gujr-in',\n  vau: 'vau-latn-cd',\n  vav: 'vav-deva-in',\n  'vav-gujr': 'vav-gujr-in',\n  vay: 'vay-deva-np',\n  vbb: 'vbb-latn-id',\n  vbk: 'vbk-latn-ph',\n  ve: 've-latn-za',\n  vec: 'vec-latn-it',\n  vem: 'vem-latn-ng',\n  veo: 'veo-latn-us',\n  vep: 'vep-latn-ru',\n  ver: 'ver-latn-ng',\n  vgr: 'vgr-arab-pk',\n  vi: 'vi-latn-vn',\n  vic: 'vic-latn-sx',\n  vid: 'vid-latn-tz',\n  vif: 'vif-latn-cg',\n  vig: 'vig-latn-bf',\n  vil: 'vil-latn-ar',\n  vin: 'vin-latn-tz',\n  vit: 'vit-latn-ng',\n  viv: 'viv-latn-zz',\n  vka: 'vka-latn-au',\n  vkj: 'vkj-latn-td',\n  vkk: 'vkk-latn-id',\n  vkl: 'vkl-latn-id',\n  vkm: 'vkm-latn-br',\n  vkn: 'vkn-latn-ng',\n  vko: 'vko-latn-id',\n  vkp: 'vkp-latn-in',\n  'vkp-deva': 'vkp-deva-in',\n  vkt: 'vkt-latn-id',\n  vku: 'vku-latn-au',\n  vkz: 'vkz-latn-ng',\n  vlp: 'vlp-latn-vu',\n  vls: 'vls-latn-be',\n  vma: 'vma-latn-au',\n  vmb: 'vmb-latn-au',\n  vmc: 'vmc-latn-mx',\n  vmd: 'vmd-knda-in',\n  vme: 'vme-latn-id',\n  vmf: 'vmf-latn-de',\n  vmg: 'vmg-latn-pg',\n  vmh: 'vmh-arab-ir',\n  vmi: 'vmi-latn-au',\n  vmj: 'vmj-latn-mx',\n  vmk: 'vmk-latn-mz',\n  vml: 'vml-latn-au',\n  vmm: 'vmm-latn-mx',\n  vmp: 'vmp-latn-mx',\n  vmq: 'vmq-latn-mx',\n  vmr: 'vmr-latn-mz',\n  vms: 'vms-latn-id',\n  vmu: 'vmu-latn-au',\n  vmw: 'vmw-latn-mz',\n  vmx: 'vmx-latn-mx',\n  vmy: 'vmy-latn-mx',\n  vmz: 'vmz-latn-mx',\n  vnk: 'vnk-latn-sb',\n  vnm: 'vnm-latn-vu',\n  vnp: 'vnp-latn-vu',\n  vo: 'vo-latn-001',\n  vor: 'vor-latn-ng',\n  vot: 'vot-latn-ru',\n  vra: 'vra-latn-vu',\n  vro: 'vro-latn-ee',\n  vrs: 'vrs-latn-sb',\n  vrt: 'vrt-latn-vu',\n  vto: 'vto-latn-id',\n  vum: 'vum-latn-ga',\n  vun: 'vun-latn-tz',\n  vut: 'vut-latn-zz',\n  vwa: 'vwa-latn-cn',\n  'vwa-mymr': 'vwa-mymr-cn',\n  wa: 'wa-latn-be',\n  waa: 'waa-latn-us',\n  wab: 'wab-latn-pg',\n  wac: 'wac-latn-us',\n  wad: 'wad-latn-id',\n  wae: 'wae-latn-ch',\n  waf: 'waf-latn-br',\n  wag: 'wag-latn-pg',\n  wah: 'wah-latn-id',\n  wai: 'wai-latn-id',\n  waj: 'waj-latn-zz',\n  wal: 'wal-ethi-et',\n  wam: 'wam-latn-us',\n  wan: 'wan-latn-zz',\n  wap: 'wap-latn-gy',\n  waq: 'waq-latn-au',\n  war: 'war-latn-ph',\n  was: 'was-latn-us',\n  wat: 'wat-latn-pg',\n  wau: 'wau-latn-br',\n  wav: 'wav-latn-ng',\n  waw: 'waw-latn-br',\n  wax: 'wax-latn-pg',\n  way: 'way-latn-sr',\n  waz: 'waz-latn-pg',\n  wba: 'wba-latn-ve',\n  wbb: 'wbb-latn-id',\n  wbe: 'wbe-latn-id',\n  wbf: 'wbf-latn-bf',\n  wbh: 'wbh-latn-tz',\n  wbi: 'wbi-latn-tz',\n  wbj: 'wbj-latn-tz',\n  wbk: 'wbk-arab-af',\n  wbl: 'wbl-latn-pk',\n  'wbl-arab': 'wbl-arab-af',\n  'wbl-cyrl': 'wbl-cyrl-tj',\n  wbm: 'wbm-latn-cn',\n  wbp: 'wbp-latn-au',\n  wbq: 'wbq-telu-in',\n  wbr: 'wbr-deva-in',\n  wbt: 'wbt-latn-au',\n  wbv: 'wbv-latn-au',\n  wbw: 'wbw-latn-id',\n  wca: 'wca-latn-br',\n  wci: 'wci-latn-zz',\n  wdd: 'wdd-latn-ga',\n  wdg: 'wdg-latn-pg',\n  wdj: 'wdj-latn-au',\n  wdk: 'wdk-latn-au',\n  wdt: 'wdt-latn-ca',\n  wdu: 'wdu-latn-au',\n  wdy: 'wdy-latn-au',\n  wec: 'wec-latn-ci',\n  wed: 'wed-latn-pg',\n  weg: 'weg-latn-au',\n  weh: 'weh-latn-cm',\n  wei: 'wei-latn-pg',\n  wem: 'wem-latn-bj',\n  weo: 'weo-latn-id',\n  wep: 'wep-latn-de',\n  wer: 'wer-latn-zz',\n  wes: 'wes-latn-cm',\n  wet: 'wet-latn-id',\n  weu: 'weu-latn-mm',\n  wew: 'wew-latn-id',\n  wfg: 'wfg-latn-id',\n  wga: 'wga-latn-au',\n  wgb: 'wgb-latn-pg',\n  wgg: 'wgg-latn-au',\n  wgi: 'wgi-latn-zz',\n  wgo: 'wgo-latn-id',\n  wgu: 'wgu-latn-au',\n  wgy: 'wgy-latn-au',\n  wha: 'wha-latn-id',\n  whg: 'whg-latn-zz',\n  whk: 'whk-latn-id',\n  whu: 'whu-latn-id',\n  wib: 'wib-latn-zz',\n  wic: 'wic-latn-us',\n  wie: 'wie-latn-au',\n  wif: 'wif-latn-au',\n  wig: 'wig-latn-au',\n  wih: 'wih-latn-au',\n  wii: 'wii-latn-pg',\n  wij: 'wij-latn-au',\n  wik: 'wik-latn-au',\n  wil: 'wil-latn-au',\n  wim: 'wim-latn-au',\n  win: 'win-latn-us',\n  wir: 'wir-latn-br',\n  wiu: 'wiu-latn-zz',\n  wiv: 'wiv-latn-zz',\n  wiy: 'wiy-latn-us',\n  wja: 'wja-latn-zz',\n  wji: 'wji-latn-zz',\n  wka: 'wka-latn-tz',\n  wkd: 'wkd-latn-id',\n  wkr: 'wkr-latn-au',\n  wkw: 'wkw-latn-au',\n  wky: 'wky-latn-au',\n  wla: 'wla-latn-pg',\n  wlg: 'wlg-latn-au',\n  wlh: 'wlh-latn-tl',\n  wli: 'wli-latn-id',\n  wlm: 'wlm-latn-gb',\n  wlo: 'wlo-arab-id',\n  wlr: 'wlr-latn-vu',\n  wls: 'wls-latn-wf',\n  wlu: 'wlu-latn-au',\n  wlv: 'wlv-latn-ar',\n  wlw: 'wlw-latn-id',\n  wlx: 'wlx-latn-gh',\n  wma: 'wma-latn-ng',\n  wmb: 'wmb-latn-au',\n  wmc: 'wmc-latn-pg',\n  wmd: 'wmd-latn-br',\n  wme: 'wme-deva-np',\n  wmh: 'wmh-latn-tl',\n  wmi: 'wmi-latn-au',\n  wmm: 'wmm-latn-id',\n  wmn: 'wmn-latn-nc',\n  wmo: 'wmo-latn-zz',\n  wms: 'wms-latn-id',\n  wmt: 'wmt-latn-au',\n  wmw: 'wmw-latn-mz',\n  'wmw-arab': 'wmw-arab-mz',\n  wmx: 'wmx-latn-pg',\n  wnb: 'wnb-latn-pg',\n  wnc: 'wnc-latn-zz',\n  wnd: 'wnd-latn-au',\n  wne: 'wne-arab-pk',\n  wng: 'wng-latn-id',\n  wni: 'wni-arab-km',\n  wnk: 'wnk-latn-id',\n  wnm: 'wnm-latn-au',\n  wnn: 'wnn-latn-au',\n  wno: 'wno-latn-id',\n  wnp: 'wnp-latn-pg',\n  wnu: 'wnu-latn-zz',\n  wnw: 'wnw-latn-us',\n  wny: 'wny-latn-au',\n  wo: 'wo-latn-sn',\n  woa: 'woa-latn-au',\n  wob: 'wob-latn-zz',\n  woc: 'woc-latn-pg',\n  wod: 'wod-latn-id',\n  woe: 'woe-latn-fm',\n  wof: 'wof-latn-gm',\n  'wof-arab': 'wof-arab-gm',\n  wog: 'wog-latn-pg',\n  woi: 'woi-latn-id',\n  wok: 'wok-latn-cm',\n  wom: 'wom-latn-ng',\n  won: 'won-latn-cd',\n  woo: 'woo-latn-id',\n  wor: 'wor-latn-id',\n  wos: 'wos-latn-zz',\n  wow: 'wow-latn-id',\n  wpc: 'wpc-latn-ve',\n  wrb: 'wrb-latn-au',\n  wrg: 'wrg-latn-au',\n  wrh: 'wrh-latn-au',\n  wri: 'wri-latn-au',\n  wrk: 'wrk-latn-au',\n  wrl: 'wrl-latn-au',\n  wrm: 'wrm-latn-au',\n  wro: 'wro-latn-au',\n  wrp: 'wrp-latn-id',\n  wrr: 'wrr-latn-au',\n  wrs: 'wrs-latn-zz',\n  wru: 'wru-latn-id',\n  wrv: 'wrv-latn-pg',\n  wrw: 'wrw-latn-au',\n  wrx: 'wrx-latn-id',\n  wrz: 'wrz-latn-au',\n  wsa: 'wsa-latn-id',\n  wsg: 'wsg-gong-in',\n  wsi: 'wsi-latn-vu',\n  wsk: 'wsk-latn-zz',\n  wsr: 'wsr-latn-pg',\n  wss: 'wss-latn-gh',\n  wsu: 'wsu-latn-br',\n  wsv: 'wsv-arab-af',\n  wtf: 'wtf-latn-pg',\n  wth: 'wth-latn-au',\n  wti: 'wti-latn-et',\n  wtk: 'wtk-latn-pg',\n  wtm: 'wtm-deva-in',\n  wtw: 'wtw-latn-id',\n  'wtw-bugi': 'wtw-bugi-id',\n  wua: 'wua-latn-au',\n  wub: 'wub-latn-au',\n  wud: 'wud-latn-tg',\n  wul: 'wul-latn-id',\n  wum: 'wum-latn-ga',\n  wun: 'wun-latn-tz',\n  wur: 'wur-latn-au',\n  wut: 'wut-latn-pg',\n  wuu: 'wuu-hans-cn',\n  wuv: 'wuv-latn-zz',\n  wux: 'wux-latn-au',\n  wuy: 'wuy-latn-id',\n  wwa: 'wwa-latn-zz',\n  wwb: 'wwb-latn-au',\n  wwo: 'wwo-latn-vu',\n  wwr: 'wwr-latn-au',\n  www: 'www-latn-cm',\n  wxw: 'wxw-latn-au',\n  wyb: 'wyb-latn-au',\n  wyi: 'wyi-latn-au',\n  wym: 'wym-latn-pl',\n  wyn: 'wyn-latn-us',\n  wyr: 'wyr-latn-br',\n  wyy: 'wyy-latn-fj',\n  xaa: 'xaa-latn-es',\n  xab: 'xab-latn-ng',\n  xai: 'xai-latn-br',\n  xaj: 'xaj-latn-br',\n  xak: 'xak-latn-ve',\n  xal: 'xal-cyrl-ru',\n  xam: 'xam-latn-za',\n  xan: 'xan-ethi-et',\n  xao: 'xao-latn-vn',\n  xar: 'xar-latn-pg',\n  xas: 'xas-cyrl-ru',\n  xat: 'xat-latn-br',\n  xau: 'xau-latn-id',\n  xav: 'xav-latn-br',\n  xaw: 'xaw-latn-us',\n  xay: 'xay-latn-id',\n  xbb: 'xbb-latn-au',\n  xbd: 'xbd-latn-au',\n  xbe: 'xbe-latn-au',\n  xbg: 'xbg-latn-au',\n  xbi: 'xbi-latn-zz',\n  xbj: 'xbj-latn-au',\n  xbm: 'xbm-latn-fr',\n  xbn: 'xbn-latn-my',\n  xbp: 'xbp-latn-au',\n  xbr: 'xbr-latn-id',\n  xbw: 'xbw-latn-br',\n  xby: 'xby-latn-au',\n  xch: 'xch-latn-us',\n  xco: 'xco-chrs-uz',\n  xcr: 'xcr-cari-tr',\n  xda: 'xda-latn-au',\n  xdk: 'xdk-latn-au',\n  xdo: 'xdo-latn-ao',\n  xdq: 'xdq-cyrl-ru',\n  xdy: 'xdy-latn-id',\n  xed: 'xed-latn-cm',\n  xeg: 'xeg-latn-za',\n  xem: 'xem-latn-id',\n  xer: 'xer-latn-br',\n  xes: 'xes-latn-zz',\n  xet: 'xet-latn-br',\n  xeu: 'xeu-latn-pg',\n  xgb: 'xgb-latn-ci',\n  xgd: 'xgd-latn-au',\n  xgg: 'xgg-latn-au',\n  xgi: 'xgi-latn-au',\n  xgm: 'xgm-latn-au',\n  xgu: 'xgu-latn-au',\n  xgw: 'xgw-latn-au',\n  xh: 'xh-latn-za',\n  xhe: 'xhe-arab-pk',\n  xhm: 'xhm-khmr-kh',\n  xhv: 'xhv-latn-vn',\n  xii: 'xii-latn-za',\n  xin: 'xin-latn-gt',\n  xir: 'xir-latn-br',\n  xis: 'xis-orya-in',\n  xiy: 'xiy-latn-br',\n  xjb: 'xjb-latn-au',\n  xjt: 'xjt-latn-au',\n  xka: 'xka-arab-pk',\n  xkb: 'xkb-latn-bj',\n  xkc: 'xkc-arab-ir',\n  xkd: 'xkd-latn-id',\n  xke: 'xke-latn-id',\n  xkg: 'xkg-latn-ml',\n  xkj: 'xkj-arab-ir',\n  xkl: 'xkl-latn-id',\n  xkn: 'xkn-latn-id',\n  xkp: 'xkp-arab-ir',\n  xkq: 'xkq-latn-id',\n  xkr: 'xkr-latn-br',\n  xks: 'xks-latn-id',\n  xkt: 'xkt-latn-gh',\n  xku: 'xku-latn-cg',\n  xkv: 'xkv-latn-bw',\n  xkw: 'xkw-latn-id',\n  xkx: 'xkx-latn-pg',\n  xky: 'xky-latn-my',\n  xkz: 'xkz-latn-bt',\n  xla: 'xla-latn-zz',\n  xlc: 'xlc-lyci-tr',\n  xld: 'xld-lydi-tr',\n  xly: 'xly-elym-ir',\n  xma: 'xma-latn-so',\n  xmb: 'xmb-latn-cm',\n  xmc: 'xmc-latn-mz',\n  xmd: 'xmd-latn-cm',\n  xmf: 'xmf-geor-ge',\n  xmg: 'xmg-latn-cm',\n  xmh: 'xmh-latn-au',\n  xmj: 'xmj-latn-cm',\n  xmm: 'xmm-latn-id',\n  xmn: 'xmn-mani-cn',\n  xmo: 'xmo-latn-br',\n  xmp: 'xmp-latn-au',\n  xmq: 'xmq-latn-au',\n  xmr: 'xmr-merc-sd',\n  xmt: 'xmt-latn-id',\n  xmu: 'xmu-latn-au',\n  xmv: 'xmv-latn-mg',\n  xmw: 'xmw-latn-mg',\n  xmx: 'xmx-latn-id',\n  xmy: 'xmy-latn-au',\n  xmz: 'xmz-latn-id',\n  xna: 'xna-narb-sa',\n  xnb: 'xnb-latn-tw',\n  xni: 'xni-latn-au',\n  xnj: 'xnj-latn-tz',\n  xnk: 'xnk-latn-au',\n  xnm: 'xnm-latn-au',\n  xnn: 'xnn-latn-ph',\n  xnq: 'xnq-latn-mz',\n  xnr: 'xnr-deva-in',\n  xnt: 'xnt-latn-us',\n  xnu: 'xnu-latn-au',\n  xny: 'xny-latn-au',\n  xnz: 'xnz-latn-eg',\n  'xnz-arab': 'xnz-arab-eg',\n  xoc: 'xoc-latn-ng',\n  xod: 'xod-latn-id',\n  xog: 'xog-latn-ug',\n  xoi: 'xoi-latn-pg',\n  xok: 'xok-latn-br',\n  xom: 'xom-latn-sd',\n  'xom-ethi': 'xom-ethi-et',\n  xon: 'xon-latn-zz',\n  xoo: 'xoo-latn-br',\n  xop: 'xop-latn-pg',\n  xor: 'xor-latn-br',\n  xow: 'xow-latn-pg',\n  xpa: 'xpa-latn-au',\n  xpb: 'xpb-latn-au',\n  xpd: 'xpd-latn-au',\n  xpf: 'xpf-latn-au',\n  xpg: 'xpg-grek-tr',\n  xph: 'xph-latn-au',\n  xpi: 'xpi-ogam-gb',\n  xpj: 'xpj-latn-au',\n  xpk: 'xpk-latn-br',\n  xpl: 'xpl-latn-au',\n  xpm: 'xpm-cyrl-ru',\n  xpn: 'xpn-latn-br',\n  xpo: 'xpo-latn-mx',\n  xpq: 'xpq-latn-us',\n  xpr: 'xpr-prti-ir',\n  xpt: 'xpt-latn-au',\n  xpv: 'xpv-latn-au',\n  xpw: 'xpw-latn-au',\n  xpx: 'xpx-latn-au',\n  xpz: 'xpz-latn-au',\n  xra: 'xra-latn-br',\n  xrb: 'xrb-latn-zz',\n  xrd: 'xrd-latn-au',\n  xre: 'xre-latn-br',\n  xrg: 'xrg-latn-au',\n  xri: 'xri-latn-br',\n  xrm: 'xrm-cyrl-ru',\n  xrn: 'xrn-cyrl-ru',\n  xrr: 'xrr-latn-it',\n  xru: 'xru-latn-au',\n  xrw: 'xrw-latn-pg',\n  xsa: 'xsa-sarb-ye',\n  xsb: 'xsb-latn-ph',\n  xse: 'xse-latn-id',\n  xsh: 'xsh-latn-ng',\n  xsi: 'xsi-latn-zz',\n  xsm: 'xsm-latn-zz',\n  xsn: 'xsn-latn-ng',\n  xsp: 'xsp-latn-pg',\n  xsq: 'xsq-latn-mz',\n  xsr: 'xsr-deva-np',\n  xss: 'xss-cyrl-ru',\n  xsu: 'xsu-latn-ve',\n  xsy: 'xsy-latn-tw',\n  xta: 'xta-latn-mx',\n  xtb: 'xtb-latn-mx',\n  xtc: 'xtc-latn-sd',\n  xtd: 'xtd-latn-mx',\n  xte: 'xte-latn-id',\n  xth: 'xth-latn-au',\n  xti: 'xti-latn-mx',\n  xtj: 'xtj-latn-mx',\n  xtl: 'xtl-latn-mx',\n  xtm: 'xtm-latn-mx',\n  xtn: 'xtn-latn-mx',\n  xtp: 'xtp-latn-mx',\n  xts: 'xts-latn-mx',\n  xtt: 'xtt-latn-mx',\n  xtu: 'xtu-latn-mx',\n  xtv: 'xtv-latn-au',\n  xtw: 'xtw-latn-br',\n  xty: 'xty-latn-mx',\n  xub: 'xub-taml-in',\n  'xub-knda': 'xub-knda-in',\n  'xub-mlym': 'xub-mlym-in',\n  xud: 'xud-latn-au',\n  xuj: 'xuj-taml-in',\n  xul: 'xul-latn-au',\n  xum: 'xum-latn-it',\n  'xum-ital': 'xum-ital-it',\n  xun: 'xun-latn-au',\n  xuo: 'xuo-latn-td',\n  xut: 'xut-latn-au',\n  xuu: 'xuu-latn-na',\n  xve: 'xve-ital-it',\n  xvi: 'xvi-arab-af',\n  xvn: 'xvn-latn-es',\n  xvo: 'xvo-latn-it',\n  xvs: 'xvs-latn-it',\n  xwa: 'xwa-latn-br',\n  xwd: 'xwd-latn-au',\n  xwe: 'xwe-latn-zz',\n  xwj: 'xwj-latn-au',\n  xwk: 'xwk-latn-au',\n  xwl: 'xwl-latn-bj',\n  xwo: 'xwo-cyrl-ru',\n  xwr: 'xwr-latn-id',\n  xwt: 'xwt-latn-au',\n  xww: 'xww-latn-au',\n  xxb: 'xxb-latn-gh',\n  xxk: 'xxk-latn-id',\n  xxm: 'xxm-latn-au',\n  xxr: 'xxr-latn-br',\n  xxt: 'xxt-latn-id',\n  xya: 'xya-latn-au',\n  xyb: 'xyb-latn-au',\n  xyj: 'xyj-latn-au',\n  xyk: 'xyk-latn-au',\n  xyl: 'xyl-latn-br',\n  xyt: 'xyt-latn-au',\n  xyy: 'xyy-latn-au',\n  xzh: 'xzh-marc-cn',\n  xzp: 'xzp-latn-mx',\n  yaa: 'yaa-latn-pe',\n  yab: 'yab-latn-br',\n  yac: 'yac-latn-id',\n  yad: 'yad-latn-pe',\n  yae: 'yae-latn-ve',\n  yaf: 'yaf-latn-cd',\n  yag: 'yag-latn-cl',\n  yai: 'yai-cyrl-tj',\n  yaj: 'yaj-latn-cf',\n  yak: 'yak-latn-us',\n  yal: 'yal-latn-gn',\n  'yal-arab': 'yal-arab-gn',\n  yam: 'yam-latn-zz',\n  yan: 'yan-latn-ni',\n  yao: 'yao-latn-mz',\n  yap: 'yap-latn-fm',\n  yaq: 'yaq-latn-mx',\n  yar: 'yar-latn-ve',\n  yas: 'yas-latn-zz',\n  yat: 'yat-latn-zz',\n  yau: 'yau-latn-ve',\n  yav: 'yav-latn-cm',\n  yaw: 'yaw-latn-br',\n  yax: 'yax-latn-ao',\n  yay: 'yay-latn-zz',\n  yaz: 'yaz-latn-zz',\n  yba: 'yba-latn-zz',\n  ybb: 'ybb-latn-cm',\n  ybe: 'ybe-latn-cn',\n  'ybe-ougr': 'ybe-ougr-cn',\n  ybh: 'ybh-deva-np',\n  ybi: 'ybi-deva-np',\n  ybj: 'ybj-latn-ng',\n  ybl: 'ybl-latn-ng',\n  ybm: 'ybm-latn-pg',\n  ybn: 'ybn-latn-br',\n  ybo: 'ybo-latn-pg',\n  ybx: 'ybx-latn-pg',\n  yby: 'yby-latn-zz',\n  ycl: 'ycl-latn-cn',\n  ycn: 'ycn-latn-co',\n  yda: 'yda-latn-au',\n  yde: 'yde-latn-pg',\n  ydg: 'ydg-arab-pk',\n  ydk: 'ydk-latn-pg',\n  yea: 'yea-mlym-in',\n  'yea-knda': 'yea-knda-in',\n  yec: 'yec-latn-de',\n  yee: 'yee-latn-pg',\n  yei: 'yei-latn-cm',\n  yej: 'yej-grek-il',\n  yel: 'yel-latn-cd',\n  yer: 'yer-latn-zz',\n  yes: 'yes-latn-ng',\n  yet: 'yet-latn-id',\n  yeu: 'yeu-telu-in',\n  yev: 'yev-latn-pg',\n  yey: 'yey-latn-bw',\n  yga: 'yga-latn-au',\n  ygi: 'ygi-latn-au',\n  ygl: 'ygl-latn-pg',\n  ygm: 'ygm-latn-pg',\n  ygp: 'ygp-plrd-cn',\n  ygr: 'ygr-latn-zz',\n  ygu: 'ygu-latn-au',\n  ygw: 'ygw-latn-zz',\n  yhd: 'yhd-hebr-il',\n  yi: 'yi-hebr-001',\n  yia: 'yia-latn-au',\n  yig: 'yig-yiii-cn',\n  yih: 'yih-hebr-de',\n  yii: 'yii-latn-au',\n  yij: 'yij-latn-au',\n  yil: 'yil-latn-au',\n  yim: 'yim-latn-in',\n  yir: 'yir-latn-id',\n  yis: 'yis-latn-pg',\n  yiv: 'yiv-yiii-cn',\n  yka: 'yka-latn-ph',\n  'yka-arab': 'yka-arab-ph',\n  ykg: 'ykg-cyrl-ru',\n  yki: 'yki-latn-id',\n  ykk: 'ykk-latn-pg',\n  ykm: 'ykm-latn-pg',\n  yko: 'yko-latn-zz',\n  ykr: 'ykr-latn-pg',\n  yky: 'yky-latn-cf',\n  yla: 'yla-latn-pg',\n  ylb: 'ylb-latn-pg',\n  yle: 'yle-latn-zz',\n  ylg: 'ylg-latn-zz',\n  yli: 'yli-latn-id',\n  yll: 'yll-latn-zz',\n  ylr: 'ylr-latn-au',\n  ylu: 'ylu-latn-pg',\n  yly: 'yly-latn-nc',\n  ymb: 'ymb-latn-pg',\n  yme: 'yme-latn-pe',\n  ymg: 'ymg-latn-cd',\n  ymk: 'ymk-latn-mz',\n  'ymk-arab': 'ymk-arab-mz',\n  yml: 'yml-latn-zz',\n  ymm: 'ymm-latn-so',\n  ymn: 'ymn-latn-id',\n  ymo: 'ymo-latn-pg',\n  ymp: 'ymp-latn-pg',\n  yna: 'yna-plrd-cn',\n  ynd: 'ynd-latn-au',\n  yng: 'yng-latn-cd',\n  ynk: 'ynk-cyrl-ru',\n  ynl: 'ynl-latn-pg',\n  ynq: 'ynq-latn-ng',\n  yns: 'yns-latn-cd',\n  ynu: 'ynu-latn-co',\n  yo: 'yo-latn-ng',\n  yob: 'yob-latn-pg',\n  yog: 'yog-latn-ph',\n  yoi: 'yoi-jpan-jp',\n  yok: 'yok-latn-us',\n  yol: 'yol-latn-gb',\n  yom: 'yom-latn-cd',\n  yon: 'yon-latn-zz',\n  yot: 'yot-latn-ng',\n  yoy: 'yoy-thai-th',\n  yra: 'yra-latn-pg',\n  yrb: 'yrb-latn-zz',\n  yre: 'yre-latn-zz',\n  yrk: 'yrk-cyrl-ru',\n  yrl: 'yrl-latn-br',\n  yrm: 'yrm-latn-au',\n  yro: 'yro-latn-br',\n  yrs: 'yrs-latn-id',\n  yrw: 'yrw-latn-pg',\n  yry: 'yry-latn-au',\n  ysd: 'ysd-yiii-cn',\n  ysn: 'ysn-yiii-cn',\n  ysp: 'ysp-yiii-cn',\n  ysr: 'ysr-cyrl-ru',\n  yss: 'yss-latn-zz',\n  ysy: 'ysy-plrd-cn',\n  ytw: 'ytw-latn-pg',\n  yty: 'yty-latn-au',\n  yua: 'yua-latn-mx',\n  yub: 'yub-latn-au',\n  yuc: 'yuc-latn-us',\n  yud: 'yud-hebr-il',\n  yue: 'yue-hant-hk',\n  'yue-cn': 'yue-hans-cn',\n  'yue-hans': 'yue-hans-cn',\n  yuf: 'yuf-latn-us',\n  yug: 'yug-cyrl-ru',\n  yui: 'yui-latn-co',\n  yuj: 'yuj-latn-zz',\n  yul: 'yul-latn-cf',\n  yum: 'yum-latn-us',\n  yun: 'yun-latn-ng',\n  yup: 'yup-latn-co',\n  yuq: 'yuq-latn-bo',\n  yur: 'yur-latn-us',\n  yut: 'yut-latn-zz',\n  yuw: 'yuw-latn-zz',\n  yux: 'yux-cyrl-ru',\n  yuz: 'yuz-latn-bo',\n  yva: 'yva-latn-id',\n  yvt: 'yvt-latn-ve',\n  ywa: 'ywa-latn-pg',\n  ywg: 'ywg-latn-au',\n  ywn: 'ywn-latn-br',\n  ywq: 'ywq-plrd-cn',\n  'ywq-yiii': 'ywq-yiii-cn',\n  ywr: 'ywr-latn-au',\n  ywu: 'ywu-plrd-cn',\n  'ywu-yiii': 'ywu-yiii-cn',\n  yww: 'yww-latn-au',\n  yxa: 'yxa-latn-au',\n  yxg: 'yxg-latn-au',\n  yxl: 'yxl-latn-au',\n  yxm: 'yxm-latn-au',\n  yxu: 'yxu-latn-au',\n  yxy: 'yxy-latn-au',\n  yyr: 'yyr-latn-au',\n  yyu: 'yyu-latn-pg',\n  za: 'za-latn-cn',\n  zaa: 'zaa-latn-mx',\n  zab: 'zab-latn-mx',\n  zac: 'zac-latn-mx',\n  zad: 'zad-latn-mx',\n  zae: 'zae-latn-mx',\n  zaf: 'zaf-latn-mx',\n  zag: 'zag-latn-sd',\n  zah: 'zah-latn-ng',\n  zaj: 'zaj-latn-tz',\n  zak: 'zak-latn-tz',\n  zam: 'zam-latn-mx',\n  zao: 'zao-latn-mx',\n  zap: 'zap-latn-mx',\n  zaq: 'zaq-latn-mx',\n  zar: 'zar-latn-mx',\n  zas: 'zas-latn-mx',\n  zat: 'zat-latn-mx',\n  zau: 'zau-tibt-in',\n  'zau-arab': 'zau-arab-in',\n  zav: 'zav-latn-mx',\n  zaw: 'zaw-latn-mx',\n  zax: 'zax-latn-mx',\n  zay: 'zay-latn-et',\n  'zay-ethi': 'zay-ethi-et',\n  zaz: 'zaz-latn-ng',\n  zba: 'zba-arab-001',\n  zbc: 'zbc-latn-my',\n  zbe: 'zbe-latn-my',\n  zbt: 'zbt-latn-id',\n  zbu: 'zbu-latn-ng',\n  zbw: 'zbw-latn-my',\n  zca: 'zca-latn-mx',\n  zch: 'zch-hani-cn',\n  zdj: 'zdj-arab-km',\n  zea: 'zea-latn-nl',\n  zeg: 'zeg-latn-pg',\n  zeh: 'zeh-hani-cn',\n  zen: 'zen-tfng-mr',\n  'zen-arab': 'zen-arab-mr',\n  zga: 'zga-latn-tz',\n  zgb: 'zgb-hani-cn',\n  zgh: 'zgh-tfng-ma',\n  zgm: 'zgm-hani-cn',\n  zgn: 'zgn-hani-cn',\n  zgr: 'zgr-latn-pg',\n  zh: 'zh-hans-cn',\n  'zh-au': 'zh-hant-au',\n  'zh-bn': 'zh-hant-bn',\n  'zh-bopo': 'zh-bopo-tw',\n  'zh-gb': 'zh-hant-gb',\n  'zh-gf': 'zh-hant-gf',\n  'zh-hanb': 'zh-hanb-tw',\n  'zh-hant': 'zh-hant-tw',\n  'zh-hk': 'zh-hant-hk',\n  'zh-id': 'zh-hant-id',\n  'zh-mo': 'zh-hant-mo',\n  'zh-pa': 'zh-hant-pa',\n  'zh-pf': 'zh-hant-pf',\n  'zh-ph': 'zh-hant-ph',\n  'zh-sr': 'zh-hant-sr',\n  'zh-th': 'zh-hant-th',\n  'zh-tw': 'zh-hant-tw',\n  'zh-us': 'zh-hant-us',\n  'zh-vn': 'zh-hant-vn',\n  zhd: 'zhd-hani-cn',\n  'zhd-latn': 'zhd-latn-vn',\n  zhi: 'zhi-latn-ng',\n  zhn: 'zhn-latn-cn',\n  'zhn-hani': 'zhn-hani-cn',\n  zhw: 'zhw-latn-cm',\n  zhx: 'zhx-nshu-cn',\n  zia: 'zia-latn-zz',\n  zik: 'zik-latn-pg',\n  zil: 'zil-latn-gn',\n  zim: 'zim-latn-td',\n  zin: 'zin-latn-tz',\n  ziw: 'ziw-latn-tz',\n  ziz: 'ziz-latn-ng',\n  zka: 'zka-latn-id',\n  zkb: 'zkb-cyrl-ru',\n  zkd: 'zkd-latn-mm',\n  zko: 'zko-cyrl-ru',\n  zkp: 'zkp-latn-br',\n  zkt: 'zkt-kits-cn',\n  zku: 'zku-latn-au',\n  zkz: 'zkz-cyrl-ru',\n  zla: 'zla-latn-cd',\n  zlj: 'zlj-hani-cn',\n  'zlj-latn': 'zlj-latn-cn',\n  zlm: 'zlm-latn-tg',\n  zln: 'zln-hani-cn',\n  zlq: 'zlq-hani-cn',\n  zma: 'zma-latn-au',\n  zmb: 'zmb-latn-cd',\n  zmc: 'zmc-latn-au',\n  zmd: 'zmd-latn-au',\n  zme: 'zme-latn-au',\n  zmf: 'zmf-latn-cd',\n  zmg: 'zmg-latn-au',\n  zmh: 'zmh-latn-pg',\n  zmi: 'zmi-latn-my',\n  zmj: 'zmj-latn-au',\n  zmk: 'zmk-latn-au',\n  zml: 'zml-latn-au',\n  zmm: 'zmm-latn-au',\n  zmn: 'zmn-latn-ga',\n  zmo: 'zmo-latn-sd',\n  zmp: 'zmp-latn-cd',\n  zmq: 'zmq-latn-cd',\n  zmr: 'zmr-latn-au',\n  zms: 'zms-latn-cd',\n  zmt: 'zmt-latn-au',\n  zmu: 'zmu-latn-au',\n  zmv: 'zmv-latn-au',\n  zmw: 'zmw-latn-cd',\n  zmx: 'zmx-latn-cg',\n  zmy: 'zmy-latn-au',\n  zmz: 'zmz-latn-cd',\n  zna: 'zna-latn-td',\n  zne: 'zne-latn-zz',\n  zng: 'zng-latn-vn',\n  znk: 'znk-latn-au',\n  zns: 'zns-latn-ng',\n  zoc: 'zoc-latn-mx',\n  zoh: 'zoh-latn-mx',\n  zom: 'zom-latn-in',\n  zoo: 'zoo-latn-mx',\n  zoq: 'zoq-latn-mx',\n  zor: 'zor-latn-mx',\n  zos: 'zos-latn-mx',\n  zpa: 'zpa-latn-mx',\n  zpb: 'zpb-latn-mx',\n  zpc: 'zpc-latn-mx',\n  zpd: 'zpd-latn-mx',\n  zpe: 'zpe-latn-mx',\n  zpf: 'zpf-latn-mx',\n  zpg: 'zpg-latn-mx',\n  zph: 'zph-latn-mx',\n  zpi: 'zpi-latn-mx',\n  zpj: 'zpj-latn-mx',\n  zpk: 'zpk-latn-mx',\n  zpl: 'zpl-latn-mx',\n  zpm: 'zpm-latn-mx',\n  zpn: 'zpn-latn-mx',\n  zpo: 'zpo-latn-mx',\n  zpp: 'zpp-latn-mx',\n  zpq: 'zpq-latn-mx',\n  zpr: 'zpr-latn-mx',\n  zps: 'zps-latn-mx',\n  zpt: 'zpt-latn-mx',\n  zpu: 'zpu-latn-mx',\n  zpv: 'zpv-latn-mx',\n  zpw: 'zpw-latn-mx',\n  zpx: 'zpx-latn-mx',\n  zpy: 'zpy-latn-mx',\n  zpz: 'zpz-latn-mx',\n  zqe: 'zqe-hani-cn',\n  'zqe-latn': 'zqe-latn-cn',\n  zrn: 'zrn-latn-td',\n  zro: 'zro-latn-ec',\n  zrp: 'zrp-hebr-fr',\n  zrs: 'zrs-latn-id',\n  zsa: 'zsa-latn-pg',\n  zsr: 'zsr-latn-mx',\n  zsu: 'zsu-latn-pg',\n  zte: 'zte-latn-mx',\n  ztg: 'ztg-latn-mx',\n  ztl: 'ztl-latn-mx',\n  ztm: 'ztm-latn-mx',\n  ztn: 'ztn-latn-mx',\n  ztp: 'ztp-latn-mx',\n  ztq: 'ztq-latn-mx',\n  zts: 'zts-latn-mx',\n  ztt: 'ztt-latn-mx',\n  ztu: 'ztu-latn-mx',\n  ztx: 'ztx-latn-mx',\n  zty: 'zty-latn-mx',\n  zu: 'zu-latn-za',\n  zua: 'zua-latn-ng',\n  zuh: 'zuh-latn-pg',\n  zum: 'zum-arab-om',\n  zun: 'zun-latn-us',\n  zuy: 'zuy-latn-cm',\n  zyg: 'zyg-hani-cn',\n  zyj: 'zyj-latn-cn',\n  'zyj-hani': 'zyj-hani-cn',\n  zyn: 'zyn-hani-cn',\n  zyp: 'zyp-latn-mm',\n  zza: 'zza-latn-tr',\n  zzj: 'zzj-hani-cn'\n}\n","/**\n * @typedef {import('bcp-47').Warning} Warning\n * @typedef {import('bcp-47').Schema} Schema\n * @typedef {import('bcp-47').Extension} Extension\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean} [forgiving]\n *   Passed to `bcp-47` as `options.forgiving`.\n * @property {Warning} [warning]\n *   Passed to `bcp-47` as `options.warning`.\n *\n *   One additional warning is given:\n *\n *   | code | reason                                                     |\n *   | :--- | :--------------------------------------------------------- |\n *   | 7    | Deprecated region `CURRENT`, expected one of `SUGGESTIONS` |\n *\n *   This warning is only given if the region cannot be automatically fixed\n *   (when regions split into multiple regions).\n */\n\nimport {parse, stringify} from 'bcp-47'\nimport {extendedFilter} from 'bcp-47-match'\nimport {matches} from './matches.js'\nimport {fields} from './fields.js'\nimport {many} from './many.js'\nimport {likely} from './likely.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param {Schema} base\n * @param {Partial<Schema>} changes\n * @returns {Schema}\n */\nfunction merge(base, changes) {\n  if (!base.language) base.language = changes.language\n  if (!base.script) base.script = changes.script\n  if (!base.region) base.region = changes.region\n  if (changes.variants) base.variants.push(...changes.variants)\n\n  return base\n}\n\n/**\n * Mostly like:\n * <https://github.com/formatjs/formatjs/blob/a15e757/packages/intl-locale/index.ts#L254>\n * But doesn’t crash.\n *\n * @param {Schema} schema\n * @returns {string}\n */\nfunction addLikelySubtags(schema) {\n  const {language, script, region} = schema\n  /** @type {string|undefined} */\n  let match\n\n  if (\n    script &&\n    region &&\n    (match = likely[stringify({language, script, region})])\n  ) {\n    schema.script = undefined\n    schema.region = undefined\n  } else if (script && (match = likely[stringify({language, script})])) {\n    schema.script = undefined\n  } else if (region && (match = likely[stringify({language, region})])) {\n    schema.region = undefined\n  } else if (language && (match = likely[language])) {\n    // Empty.\n  }\n\n  if (match) {\n    schema.language = undefined\n    merge(schema, parse(match))\n  }\n\n  return stringify(schema)\n}\n\n/**\n * @param {Schema} schema\n */\nfunction removeLikelySubtags(schema) {\n  addLikelySubtags(schema)\n\n  const {language, script, region} = schema\n\n  if (!language) return schema\n\n  const maxLocale = stringify({language, script, region})\n\n  if (maxLocale === addLikelySubtags(parse(language))) {\n    schema.script = undefined\n    schema.region = undefined\n  } else if (\n    region &&\n    maxLocale === addLikelySubtags(parse(language + '-' + region))\n  ) {\n    schema.script = undefined\n  } else if (\n    script &&\n    maxLocale === addLikelySubtags(parse(language + '-' + script))\n  ) {\n    schema.region = undefined\n  }\n\n  return schema\n}\n\n/**\n * Normalize the given BCP 47 tag according to Unicode CLDR suggestions.\n *\n * @param {string} tag\n *   BCP 47 tag.\n * @param {Options} [options]\n *   Configuration (optional).\n * @returns {string}\n *   Normal, canonical, and pretty BCP 47 tag.\n */\nexport function bcp47Normalize(tag, options) {\n  const settings = options || {}\n  // 1. normalize and lowercase the tag (`sgn-be-fr` -> `sfb`).\n  const schema = parse(String(tag || '').toLowerCase(), settings)\n  const value = stringify(schema)\n\n  if (!value) {\n    return value\n  }\n\n  let index = -1\n\n  // 2. Do fancy, expensive replaces (`ha-latn-gh` -> `ha-gh`).\n  while (++index < matches.length) {\n    let from = matches[index].from\n\n    if (from.slice(0, 4) === 'und-' && schema.language) {\n      from = schema.language + from.slice(3)\n    }\n\n    if (extendedFilter(value, from).length > 0) {\n      replace(schema, from, matches[index].to)\n    }\n  }\n\n  // 3. Do basic field replaces (`en-840` -> `en-us`).\n  index = -1\n\n  while (++index < fields.length) {\n    if (remove(schema, fields[index].from.field, fields[index].from.value)) {\n      add(schema, fields[index].to.field, fields[index].to.value)\n    }\n  }\n\n  // 4. Minimize.\n  removeLikelySubtags(schema)\n\n  // 5. Sort variants, and sort extensions on singleton.\n  schema.variants.sort()\n  schema.extensions.sort(compareSingleton)\n\n  // 6. Warn if fields (currently only regions) should be updated but have\n  // multiple choices.\n  if (settings.warning) {\n    /** @type {keyof many} */\n    let key\n\n    for (key in many) {\n      if (own.call(many, key)) {\n        const map = many[key]\n        const value = schema[key]\n        if (value && own.call(map, value)) {\n          const replacements = map[value]\n          settings.warning(\n            'Deprecated ' +\n              key +\n              ' `' +\n              value +\n              '`, expected one of `' +\n              replacements.join('`, `') +\n              '`',\n            -1,\n            7\n          )\n        }\n      }\n    }\n  }\n\n  // 7. Add proper casing back.\n  // Format script (ISO 15924) as titlecase (example: `Latn`):\n  if (schema.script) {\n    schema.script =\n      schema.script.charAt(0).toUpperCase() + schema.script.slice(1)\n  }\n\n  // Format region (ISO 3166) as uppercase (note: this doesn’t affect numeric\n  // codes, which is fine):\n  if (schema.region) {\n    schema.region = schema.region.toUpperCase()\n  }\n\n  return stringify(schema)\n}\n\n/**\n * @param {Schema} schema\n * @param {string} from\n * @param {string} to\n * @returns {void}\n */\nfunction replace(schema, from, to) {\n  const left = parse(from)\n  const right = parse(to)\n  /** @type {Array<string>} */\n  const removed = []\n  /** @type {string|null|undefined} */\n  const lang = left.language\n  /** @type {keyof schema} */\n  let key\n\n  // Remove values from `from`:\n  for (key in left) {\n    if (own.call(left, key)) {\n      const value = left[key]\n      if (value && remove(schema, key, value)) {\n        removed.push(key)\n      }\n    }\n  }\n\n  // Add values from `to`:\n  for (key in right) {\n    if (own.call(right, key)) {\n      const value = right[key]\n      // Only add values that are defined on `to`, and that were either removed by\n      // `from` or are currently empty.\n      if (lang && value && (removed.includes(key) || !schema[key])) {\n        add(schema, key, key === 'language' && value === 'und' ? lang : value)\n      }\n    }\n  }\n}\n\n/**\n * @param {Schema} object\n * @param {keyof Schema} key\n * @param {string|Array<string>|Array<Extension>} value\n * @returns {boolean}\n */\nfunction remove(object, key, value) {\n  let removed = false\n  /** @type {string|Array<string>|Array<Extension>|null|undefined} */\n  let result\n\n  if (value) {\n    const current = object[key]\n    result = current\n\n    if (Array.isArray(current)) {\n      result = []\n      let index = -1\n\n      while (++index < current.length) {\n        const item = current[index]\n\n        // @ts-expect-error: TS can’t handle the two lists.\n        if (value.includes(item)) {\n          removed = true\n        } else {\n          // @ts-expect-error: TS can’t handle the two lists.\n          result.push(item)\n        }\n      }\n    } else if (current === value) {\n      result = null\n      removed = true\n    }\n\n    // @ts-expect-error: Assume the value matches.\n    object[key] = result\n  }\n\n  return removed\n}\n\n/**\n * @param {Schema} object\n * @param {keyof Schema} key\n * @param {string|Array<string>|Array<Extension>} value\n * @returns {void}\n */\nfunction add(object, key, value) {\n  /** @type {string|Array<string>|Array<Extension>|null|undefined} */\n  const current = object[key]\n\n  if (Array.isArray(current)) {\n    const list = Array.isArray(value) ? value : [value]\n    /** @type {number} */\n    let index = -1\n\n    while (++index < list.length) {\n      const item = list[index]\n\n      // @ts-expect-error: TS can’t handle the two lists.\n      if (!current.includes(item)) {\n        // @ts-expect-error: TS can’t handle the two lists.\n        current.push(item)\n      }\n    }\n  } else {\n    // @ts-expect-error: Assume the value matches.\n    object[key] = value\n  }\n}\n\n/**\n * @param {Extension} left\n * @param {Extension} right\n * @returns {number}\n */\nfunction compareSingleton(left, right) {\n  if (left.singleton > right.singleton) {\n    return 1\n  }\n\n  if (left.singleton < right.singleton) {\n    return -1\n  }\n\n  // It is invalid to have more than one extension with the same singleton so\n  // we should never reach this code.\n  return 0\n}\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport Constants from '../constants/Constants.js';\nimport Events from '../../core/events/Events.js';\nimport EventBus from '../../core/EventBus.js';\nimport FactoryMaker from '../../core/FactoryMaker.js';\nimport Debug from '../../core/Debug.js';\nimport {bcp47Normalize} from 'bcp-47-normalize';\nimport {extendedFilter} from 'bcp-47-match';\nimport MediaPlayerEvents from '../MediaPlayerEvents.js';\nimport DashConstants from '../../dash/constants/DashConstants.js';\n\nfunction MediaController() {\n\n    const context = this.context;\n    const eventBus = EventBus(context).getInstance();\n\n    let instance,\n        logger,\n        tracks,\n        settings,\n        initialSettings,\n        lastSelectedTracks,\n        lastSelectedRepresentations,\n        customParametersModel,\n        mediaPlayerModel,\n        videoModel,\n        domStorage;\n\n    function setup() {\n        logger = Debug(context).getInstance().getLogger(instance);\n        reset();\n    }\n\n    function setConfig(config) {\n        if (!config) {\n            return;\n        }\n\n        if (config.domStorage) {\n            domStorage = config.domStorage;\n        }\n\n        if (config.settings) {\n            settings = config.settings;\n        }\n\n        if (config.customParametersModel) {\n            customParametersModel = config.customParametersModel;\n        }\n\n        if (config.mediaPlayerModel) {\n            mediaPlayerModel = config.mediaPlayerModel;\n        }\n\n        if (config.videoModel) {\n            videoModel = config.videoModel;\n        }\n    }\n\n    function initialize() {\n        _registerEvents();\n    }\n\n    function _registerEvents() {\n        eventBus.on(MediaPlayerEvents.REPRESENTATION_SWITCH, _onRepresentationSwitched, instance);\n    }\n\n    function _unRegisterEvents() {\n        eventBus.off(MediaPlayerEvents.REPRESENTATION_SWITCH, _onRepresentationSwitched, instance);\n    }\n\n    /**\n     * Save the last selected bitrate for each media type. In case we transition to a new period and have multiple AdaptationSets that we can choose\n     * from we choose the one with a bitrate closest to the current one.\n     * @param e\n     * @private\n     */\n    function _onRepresentationSwitched(e) {\n        if (!e || !e.currentRepresentation || !e.currentRepresentation.mediaInfo || !e.currentRepresentation.mediaInfo.type) {\n            return\n        }\n        const type = e.currentRepresentation.mediaInfo.type;\n        lastSelectedRepresentations[type] = e.currentRepresentation;\n    }\n\n    /**\n     * @param {string} type\n     * @param {StreamInfo} streamInfo\n     * @memberof MediaController#\n     */\n    function setInitialMediaSettingsForType(type, streamInfo) {\n        let settings = lastSelectedTracks[type] || getInitialSettings(type);\n        const possibleTracks = getTracksFor(type, streamInfo.id);\n        let filteredTracks = [];\n\n        if (!settings || Object.keys(settings).length === 0) {\n            settings = domStorage.getSavedMediaSettings(type);\n            if (settings) {\n                // If the settings are defined locally, do not take codec into account or it'll be too strict.\n                // eg: An audio track should not be selected by codec but merely by lang.\n                delete settings.codec;\n            }\n            setInitialSettings(type, settings);\n        }\n\n        if (!possibleTracks || (possibleTracks.length === 0)) {\n            return;\n        }\n\n        if (settings) {\n            filteredTracks = Array.from(possibleTracks);\n            logger.info('Filtering ' + filteredTracks.length + ' ' + type + ' tracks based on settings');\n\n            filteredTracks = filterTracksBySettings(filteredTracks, matchSettingsId, settings)\n            filteredTracks = filterTracksBySettings(filteredTracks, matchSettingsLang, settings);\n            filteredTracks = filterTracksBySettings(filteredTracks, matchSettingsIndex, settings);\n            filteredTracks = filterTracksBySettings(filteredTracks, matchSettingsViewPoint, settings);\n            if (!(type === Constants.AUDIO && !!lastSelectedTracks[type])) {\n                filteredTracks = filterTracksBySettings(filteredTracks, matchSettingsRole, settings);\n            }\n            filteredTracks = filterTracksBySettings(filteredTracks, matchSettingsAccessibility, settings);\n            filteredTracks = filterTracksBySettings(filteredTracks, matchSettingsAudioChannelConfig, settings);\n            filteredTracks = filterTracksBySettings(filteredTracks, matchSettingsCodec, settings);\n            logger.info('Filtering ' + type + ' tracks ended, found ' + filteredTracks.length + ' matching track(s).');\n        }\n\n        // We did not apply any filter. We can select from all possible tracks\n        if (filteredTracks.length === 0) {\n            setTrack(selectInitialTrack(type, possibleTracks));\n        }\n\n        // We have some tracks based on the filtering we did.\n        else {\n            // More than one possibility\n            if (filteredTracks.length > 1) {\n                setTrack(selectInitialTrack(type, filteredTracks));\n            }\n            // Only one possibility use this one\n            else {\n                setTrack(filteredTracks[0]);\n            }\n        }\n    }\n\n    /**\n     * @param {MediaInfo} track\n     * @memberof MediaController#\n     */\n    function addTrack(track) {\n        if (!track) {\n            return;\n        }\n\n        const mediaType = track.type;\n        if (!_isMultiTrackSupportedByType(mediaType)) {\n            return;\n        }\n\n        let streamId = track.streamInfo.id;\n        if (!tracks[streamId]) {\n            tracks[streamId] = createTrackInfo();\n        }\n\n        const mediaTracks = tracks[streamId][mediaType].list;\n        for (let i = 0, len = mediaTracks.length; i < len; ++i) {\n            //track is already set.\n            if (areTracksEqual(mediaTracks[i], track)) {\n                return;\n            }\n        }\n\n        mediaTracks.push(track);\n    }\n\n    /**\n     * @param {string} type\n     * @param {string} streamId\n     * @returns {Array}\n     * @memberof MediaController#\n     */\n    function getTracksFor(type, streamId) {\n        if (!type) {\n            return [];\n        }\n\n        if (!tracks[streamId] || !tracks[streamId][type]) {\n            return [];\n        }\n\n        return tracks[streamId][type].list;\n    }\n\n    /**\n     * @param {string} type\n     * @param {string} streamId\n     * @returns {Object|null}\n     * @memberof MediaController#\n     */\n    function getCurrentTrackFor(type, streamId) {\n        if (!type || !tracks[streamId] || !tracks[streamId][type]) {\n            return null;\n        }\n        return tracks[streamId][type].current;\n    }\n\n    /**\n     * @param {MediaInfo} track\n     * @returns {boolean}\n     * @memberof MediaController#\n     */\n    function isCurrentTrack(track) {\n        if (!track) {\n            return false;\n        }\n        const type = track.type;\n        const id = track.streamInfo.id;\n\n        return (tracks[id] && tracks[id][type] && areTracksEqual(tracks[id][type].current, track));\n    }\n\n    /**\n     * @param {MediaInfo} track\n     * @param {object} options\n     * @memberof MediaController#\n     */\n    function setTrack(track, options = {}) {\n        if (!track || !track.streamInfo) {\n            return;\n        }\n\n        const type = track.type;\n        const streamInfo = track.streamInfo;\n        const id = streamInfo.id;\n        const current = getCurrentTrackFor(type, id);\n\n        if (!tracks[id] || !tracks[id][type]) {\n            return;\n        }\n\n        tracks[id][type].current = track;\n\n        if (tracks[id][type].current && ((type !== Constants.TEXT && !areTracksEqual(track, current)) || (type === Constants.TEXT && track.isFragmented))) {\n            eventBus.trigger(Events.CURRENT_TRACK_CHANGED, {\n                oldMediaInfo: current,\n                newMediaInfo: track,\n                switchMode: settings.get().streaming.trackSwitchMode[type],\n                options\n            }, { streamId: id });\n        }\n\n        if (!options.hasOwnProperty('noSettingsSave') || !options.noSettingsSave) {\n\n            let settings = extractSettings(track);\n\n            if (!settings || !tracks[id][type].storeLastSettings) {\n                return;\n            }\n\n            if (settings.roles) {\n                settings.role = settings.roles[0];\n                delete settings.roles;\n            }\n\n            if (settings.accessibility) {\n                settings.accessibility = settings.accessibility[0];\n            }\n\n            if (settings.audioChannelConfiguration) {\n                settings.audioChannelConfiguration = settings.audioChannelConfiguration[0];\n            }\n\n            lastSelectedTracks[type] = settings;\n            domStorage.setSavedMediaSettings(type, settings);\n        }\n    }\n\n    /**\n     * @param {string} type\n     * @param {Object} value\n     * @memberof MediaController#\n     */\n    function setInitialSettings(type, value) {\n        if (!type || !value) {\n            return;\n        }\n\n        initialSettings[type] = value;\n    }\n\n    /**\n     * @param {string} type\n     * @returns {Object|null}\n     * @memberof MediaController#\n     */\n    function getInitialSettings(type) {\n        if (!type) {\n            return null;\n        }\n\n        return initialSettings[type];\n    }\n\n    /**\n     * @memberof MediaController#\n     */\n    function saveTextSettingsDisabled() {\n        domStorage.setSavedMediaSettings(Constants.TEXT, null);\n    }\n\n    /**\n     * @param {string} type\n     * @returns {boolean}\n     * @memberof MediaController#\n     */\n    function _isMultiTrackSupportedByType(type) {\n        return (type === Constants.AUDIO || type === Constants.VIDEO || type === Constants.TEXT || type === Constants.IMAGE);\n    }\n\n    /**\n     * @param {MediaInfo} t1 - first track to compare\n     * @param {MediaInfo} t2 - second track to compare\n     * @returns {boolean}\n     * @memberof MediaController#\n     */\n    function areTracksEqual(t1, t2) {\n        if (!t1 && !t2) {\n            return true;\n        }\n\n        if (!t1 || !t2) {\n            return false;\n        }\n\n        const sameId = t1.id === t2.id;\n        const sameViewpoint = JSON.stringify(t1.viewpoint) === JSON.stringify(t2.viewpoint);\n        const sameLang = t1.lang === t2.lang;\n        const sameCodec = t1.codec === t2.codec;\n        const sameRoles = JSON.stringify(t1.roles) === JSON.stringify(t2.roles);\n        const sameAccessibility = JSON.stringify(t1.accessibility) === JSON.stringify(t2.accessibility);\n        const sameAudioChannelConfiguration = JSON.stringify(t1.audioChannelConfiguration) === JSON.stringify(t2.audioChannelConfiguration);\n\n        return (sameId && sameCodec && sameViewpoint && sameLang && sameRoles && sameAccessibility && sameAudioChannelConfiguration);\n    }\n\n\n    /**\n     * @memberof MediaController#\n     */\n    function reset() {\n        tracks = {};\n        lastSelectedTracks = {};\n        lastSelectedRepresentations = {};\n        resetInitialSettings();\n        _unRegisterEvents();\n    }\n\n    function extractSettings(mediaInfo) {\n        const settings = {\n            lang: mediaInfo.lang,\n            viewpoint: mediaInfo.viewpoint,\n            roles: mediaInfo.roles,\n            accessibility: mediaInfo.accessibility,\n            audioChannelConfiguration: mediaInfo.audioChannelConfiguration,\n            codec: mediaInfo.codec\n        };\n        let notEmpty = settings.lang || settings.viewpoint || (settings.role && settings.role.length > 0) ||\n            (settings.accessibility && settings.accessibility.length > 0) || (settings.audioChannelConfiguration && settings.audioChannelConfiguration.length > 0);\n\n        return notEmpty ? settings : null;\n    }\n\n    function filterTracksBySettings(tracks, filterFn, settings) {\n        let tracksAfterMatcher = [];\n        tracks.forEach(function (track) {\n            if (filterFn(settings, track)) {\n                tracksAfterMatcher.push(track);\n            }\n        });\n        if (tracksAfterMatcher.length !== 0) {\n            return tracksAfterMatcher;\n        } else {\n            logger.info('Filter-Function (' + filterFn.name + ') resulted in no tracks; setting ignored');\n        }\n        return tracks;\n    }\n\n    function matchSettingsLang(settings, track) {\n        try {\n            return !settings.lang ||\n            (settings.lang instanceof RegExp) ?\n                (track.lang.match(settings.lang)) : track.lang !== '' ?\n                    (extendedFilter(track.lang, bcp47Normalize(settings.lang)).length > 0) : false;\n        } catch (e) {\n            return false\n        }\n    }\n\n    function matchSettingsIndex(settings, track) {\n        return (settings.index === undefined) || (settings.index === null) || (track.index === settings.index);\n    }\n\n    function matchSettingsId(settings, track) {\n        return (settings.id === undefined) || (settings.id === null) || (track.id === settings.id)\n    }\n\n    function matchSettingsViewPoint(settings, track) {\n        const matchViewPoint = !settings.viewpoint || !!track.viewpoint.filter(function (item) {\n            return _compareDescriptorType(item, settings.viewpoint);\n        })[0];\n        return matchViewPoint;\n    }\n\n    function matchSettingsRole(settings, track, isTrackActive = false) {\n        const matchRole = !settings.role || !!track.roles.filter(function (item) {\n            return _compareDescriptorType(item, settings.role);\n        })[0];\n        return (matchRole || (track.type === Constants.AUDIO && isTrackActive));\n    }\n\n    function matchSettingsAccessibility(settings, track) {\n        let matchAccessibility;\n        if (!settings.accessibility) {\n            // if no accessibility is requested (or request is empty string),\n            // match only those tracks having no accessibility element present\n            matchAccessibility = !track.accessibility.length;\n        } else {\n            matchAccessibility = !!track.accessibility.filter(function (item) {\n                return _compareDescriptorType(item, settings.accessibility);\n            })[0];\n        }\n        return matchAccessibility;\n    }\n\n    function matchSettingsAudioChannelConfig(settings, track) {\n        let matchAudioChannelConfiguration = !settings.audioChannelConfiguration || !!track.audioChannelConfiguration.filter(function (item) {\n            return _compareDescriptorType(item, settings.audioChannelConfiguration);\n        })[0];\n        return matchAudioChannelConfiguration;\n    }\n\n    function matchSettingsCodec(settings, track) {\n        return !settings.codec || (settings.codec === track.codec);\n    }\n\n    function matchSettings(settings, track, isTrackActive = false) {\n        try {\n            let matchLang = false;\n\n            // If there is no language defined in the target settings we got a match\n            if (!settings.lang) {\n                matchLang = true;\n            }\n\n            // If the target language is provided as a RegExp apply match function\n            else if (settings.lang instanceof RegExp) {\n                matchLang = track.lang.match(settings.lang);\n            }\n\n            // If the track has a language and we can normalize the target language check if we got a match\n            else if (track.lang !== '') {\n                const normalizedSettingsLang = bcp47Normalize(settings.lang);\n                if (normalizedSettingsLang) {\n                    matchLang = extendedFilter(track.lang, normalizedSettingsLang).length > 0\n                }\n            }\n\n            const matchIndex = (settings.index === undefined) || (settings.index === null) || (track.index === settings.index);\n            const matchViewPoint = !settings.viewpoint || !!track.viewpoint.filter(function (item) {\n                return _compareDescriptorType(item, settings.viewpoint);\n            })[0];\n            const matchRole = !settings.role || !!track.roles.filter(function (item) {\n                return _compareDescriptorType(item, settings.role);\n            })[0];\n            let matchAccessibility = !settings.accessibility || !!track.accessibility.filter(function (item) {\n                return _compareDescriptorType(item, settings.accessibility);\n            })[0];\n            let matchAudioChannelConfiguration = !settings.audioChannelConfiguration || !!track.audioChannelConfiguration.filter(function (item) {\n                return _compareDescriptorType(item, settings.audioChannelConfiguration);\n            })[0];\n\n            return (matchLang && matchIndex && matchViewPoint && (matchRole || (track.type === Constants.AUDIO && isTrackActive)) && matchAccessibility && matchAudioChannelConfiguration);\n        } catch (e) {\n            return false;\n            logger.error(e);\n        }\n    }\n\n    function resetInitialSettings() {\n        initialSettings = {\n            audio: null,\n            video: null,\n            text: null\n        };\n    }\n\n    function getTracksWithHighestSelectionPriority(trackArr) {\n        let max = 0;\n        let result = [];\n\n        trackArr.forEach((track) => {\n            if (!isNaN(track.selectionPriority)) {\n                // Higher max value. Reset list and add new entry\n                if (track.selectionPriority > max) {\n                    max = track.selectionPriority;\n                    result = [track];\n                }\n                // Same max value add to list\n                else if (track.selectionPriority === max) {\n                    result.push(track);\n                }\n\n            }\n        })\n\n        return result;\n    }\n\n    function getTracksWithHighestBitrate(trackArr) {\n        let max = 0;\n        let result = [];\n        let tmp;\n\n        trackArr.forEach(function (track) {\n            tmp = Math.max.apply(Math, track.bitrateList.map(function (obj) {\n                return obj.bandwidth;\n            }));\n\n            if (tmp > max) {\n                max = tmp;\n                result = [track];\n            } else if (tmp === max) {\n                result.push(track);\n            }\n        });\n\n        return result;\n    }\n\n    function getTracksWithHighestEfficiency(trackArr) {\n        let min = Infinity;\n        let result = [];\n        let tmp;\n\n        trackArr.forEach(function (track) {\n            const sum = track.bitrateList.reduce(function (acc, obj) {\n                const resolution = Math.max(1, obj.width * obj.height);\n                const efficiency = obj.bandwidth / resolution;\n                return acc + efficiency;\n            }, 0);\n            tmp = sum / track.bitrateList.length;\n\n            if (tmp < min) {\n                min = tmp;\n                result = [track];\n            } else if (tmp === min) {\n                result.push(track);\n            }\n        });\n\n        return result;\n    }\n\n    function getTracksWithWidestRange(trackArr) {\n        let max = 0;\n        let result = [];\n        let tmp;\n\n        trackArr.forEach(function (track) {\n            tmp = track.representationCount;\n\n            if (tmp > max) {\n                max = tmp;\n                result = [track];\n            } else if (tmp === max) {\n                result.push(track);\n            }\n        });\n\n        return result;\n    }\n\n    function selectInitialTrack(type, mediaInfos) {\n        if (type === Constants.TEXT) {\n            return _handleInitialTextTrackSelection(mediaInfos);\n        }\n\n        let tmpArr;\n        const customInitialTrackSelectionFunction = customParametersModel.getCustomInitialTrackSelectionFunction();\n\n        tmpArr = _initialFilterMediaInfosByAllowedSettings(mediaInfos);\n\n        // If we have a custom function that selects the track we use this one\n        if (customInitialTrackSelectionFunction && typeof customInitialTrackSelectionFunction === 'function') {\n            tmpArr = customInitialTrackSelectionFunction(tmpArr);\n        }\n\n        // If we know the current selected bitrate for the media type we select the AdaptationSet that comes closest to this. This should only be relevant for multiperiod when we transition to the next period.\n        else if (lastSelectedRepresentations[type]) {\n            tmpArr = _trackSelectionModeClosestBitrate(tmpArr, type)\n        }\n\n        // Use the track selection function that is defined in the settings\n        else {\n            let mode = settings.get().streaming.selectionModeForInitialTrack;\n            switch (mode) {\n                case Constants.TRACK_SELECTION_MODE_HIGHEST_SELECTION_PRIORITY:\n                    tmpArr = _trackSelectionModeHighestSelectionPriority(tmpArr);\n                    break;\n                case Constants.TRACK_SELECTION_MODE_HIGHEST_BITRATE:\n                    tmpArr = _trackSelectionModeHighestBitrate(tmpArr);\n                    break;\n                case Constants.TRACK_SELECTION_MODE_FIRST_TRACK:\n                    tmpArr = _trackSelectionModeFirstTrack(tmpArr);\n                    break;\n                case Constants.TRACK_SELECTION_MODE_HIGHEST_EFFICIENCY:\n                    tmpArr = _trackSelectionModeHighestEfficiency(tmpArr);\n                    break;\n                case Constants.TRACK_SELECTION_MODE_WIDEST_RANGE:\n                    tmpArr = _trackSelectionModeWidestRange(tmpArr);\n                    break;\n                default:\n                    logger.warn(`Track selection mode ${mode} is not supported. Falling back to TRACK_SELECTION_MODE_FIRST_TRACK`);\n                    tmpArr = _trackSelectionModeFirstTrack(tmpArr);\n                    break;\n            }\n        }\n\n        return tmpArr.length > 0 ? tmpArr[0] : mediaInfos[0];\n    }\n\n    function _handleInitialTextTrackSelection(mediaInfos) {\n        if (!mediaInfos || mediaInfos.length === 0) {\n            return null;\n        }\n        const filteredMediaInfos = mediaInfos.filter((mediaInfo) => {\n            if (mediaInfo && mediaInfo.roles && mediaInfo.roles.length > 0) {\n                return mediaInfo.roles.every((role) => {\n                    return role.schemeIdUri !== Constants.DASH_ROLE_SCHEME_ID || role.value !== DashConstants.FORCED_SUBTITLE\n                })\n            }\n            return true\n        })\n\n        if (filteredMediaInfos.length > 0) {\n            return filteredMediaInfos[0];\n        }\n\n        return mediaInfos[0];\n    }\n\n    /**\n     * @param {MediaInfo[]} mediaInfos\n     * @return {MediaInfo[]}\n     */\n    function _initialFilterMediaInfosByAllowedSettings(mediaInfos) {\n        try {\n            let tmpArr;\n\n            tmpArr = _filterMediaInfosByPossibleBitrate(mediaInfos);\n            tmpArr = _filterMediaInfosByPortalSize(tmpArr);\n\n            return tmpArr;\n        } catch (e) {\n            logger.error(e);\n            return mediaInfos\n        }\n    }\n\n    /**\n     * Returns all MediaInfo objects that have at least one bitrate that fulfills the constraint.\n     * If all fail the constraint we return the original array.\n     * @param {MediaInfo[]} mediaInfos\n     * @return {MediaInfo[]}\n     */\n    function _filterMediaInfosByPossibleBitrate(mediaInfos) {\n        try {\n            const filteredArray = mediaInfos.filter((mediaInfo) => {\n                const type = mediaInfo.type;\n\n                return mediaInfo.bitrateList.some((bitrateInfo) => {\n                    const maxBitrate = mediaPlayerModel.getAbrBitrateParameter('maxBitrate', type);\n                    const minBitrate = mediaPlayerModel.getAbrBitrateParameter('minBitrate', type);\n\n                    if (maxBitrate > -1 && bitrateInfo.bandwidth > maxBitrate * 1000) {\n                        return false;\n                    }\n\n                    return !(minBitrate > -1 && bitrateInfo.bandwidth < minBitrate * 1000);\n                })\n\n            })\n\n            if (filteredArray.length > 0) {\n                return filteredArray\n            }\n\n            return mediaInfos\n        } catch (e) {\n            logger.error(e);\n            return mediaInfos\n        }\n    }\n\n    /**\n     * @param {MediaInfo[]} mediaInfos\n     * @return {MediaInfo[]}\n     * @private\n     */\n    function _filterMediaInfosByPortalSize(mediaInfos) {\n        try {\n            if (!settings.get().streaming.abr.limitBitrateByPortal) {\n                return mediaInfos;\n            }\n\n            const { elementWidth } = videoModel.getVideoElementSize();\n\n            const filteredArray = mediaInfos.filter((mediaInfo) => {\n                return mediaInfo.type !== Constants.VIDEO || mediaInfo.bitrateList.some((bitrateInfo) => {\n                    return bitrateInfo.width <= elementWidth\n                });\n            })\n\n            if (filteredArray.length > 0) {\n                return filteredArray\n            }\n\n            return mediaInfos\n        } catch (e) {\n            logger.error(e);\n            return mediaInfos\n        }\n    }\n\n    /**\n     * Find the track that has a bitrate that matches the currenly selected one\n     * @param tracks\n     * @param type\n     * @returns {*}\n     * @private\n     */\n    function _trackSelectionModeClosestBitrate(tracks, type) {\n        if (!tracks || tracks.length === 0 || !type || !lastSelectedRepresentations[type]) {\n            return tracks\n        }\n\n        const targetBitrate = lastSelectedRepresentations[type].bandwidth;\n        if (!targetBitrate || isNaN(targetBitrate)) {\n            return tracks;\n        }\n\n        let current = { min: NaN, track: null };\n        tracks.forEach((track) => {\n            track.bitrateList.forEach((entry) => {\n                const diff = Math.abs(entry.bandwidth - targetBitrate);\n                if (isNaN(current.min) || diff < current.min) {\n                    current.min = diff;\n                    current.track = track;\n                }\n            })\n        })\n\n        return current.track ? [current.track] : tracks\n    }\n\n    function _trackSelectionModeHighestSelectionPriority(tracks) {\n        let tmpArr = getTracksWithHighestSelectionPriority(tracks);\n\n        if (tmpArr.length > 1) {\n            tmpArr = getTracksWithHighestEfficiency(tmpArr);\n        }\n\n        if (tmpArr.length > 1) {\n            tmpArr = getTracksWithHighestBitrate(tmpArr);\n        }\n\n        if (tmpArr.length > 1) {\n            tmpArr = getTracksWithWidestRange(tmpArr);\n        }\n\n        return tmpArr;\n    }\n\n    function _trackSelectionModeHighestBitrate(tracks) {\n        let tmpArr = getTracksWithHighestBitrate(tracks);\n\n        if (tmpArr.length > 1) {\n            tmpArr = getTracksWithWidestRange(tmpArr);\n        }\n\n        return tmpArr;\n    }\n\n    function _trackSelectionModeFirstTrack(tracks) {\n        return tracks[0];\n    }\n\n    function _trackSelectionModeHighestEfficiency(tracks) {\n        let tmpArr = getTracksWithHighestEfficiency(tracks);\n\n        if (tmpArr.length > 1) {\n            tmpArr = getTracksWithHighestBitrate(tmpArr);\n        }\n\n        return tmpArr;\n    }\n\n    function _trackSelectionModeWidestRange(tracks) {\n        let tmpArr = getTracksWithWidestRange(tracks);\n\n        if (tmpArr.length > 1) {\n            tmpArr = getTracksWithHighestBitrate(tracks);\n        }\n\n        return tmpArr;\n    }\n\n    function _compareDescriptorType(v1, v2) {\n        if (v1 && v2) {\n            let t1 = JSON.stringify({\n                schemeIdUri: v1.schemeIdUri,\n                value: v1.value\n            })\n            let t2 = JSON.stringify({\n                schemeIdUri: v2.schemeIdUri,\n                value: v2.value\n            })\n            return t1 === t2;\n        }\n        return false;\n    }\n\n    function createTrackInfo() {\n        const storeLastSettings = settings.get().streaming.saveLastMediaSettingsForCurrentStreamingSession;\n\n        return {\n            audio: {\n                list: [],\n                storeLastSettings,\n                current: null\n            },\n            video: {\n                list: [],\n                storeLastSettings,\n                current: null\n            },\n            text: {\n                list: [],\n                storeLastSettings,\n                current: null\n            },\n            image: {\n                list: [],\n                storeLastSettings,\n                current: null\n            }\n        };\n    }\n\n    function clearDataForStream(streamId) {\n        if (tracks[streamId]) {\n            delete tracks[streamId];\n        }\n    }\n\n\n    instance = {\n        addTrack,\n        areTracksEqual,\n        clearDataForStream,\n        getCurrentTrackFor,\n        getInitialSettings,\n        getTracksFor,\n        getTracksWithHighestSelectionPriority,\n        getTracksWithHighestBitrate,\n        getTracksWithHighestEfficiency,\n        getTracksWithWidestRange,\n        initialize,\n        isCurrentTrack,\n        matchSettings,\n        matchSettingsAccessibility,\n        matchSettingsAudioChannelConfig,\n        matchSettingsIndex,\n        matchSettingsLang,\n        matchSettingsRole,\n        matchSettingsViewPoint,\n        reset,\n        saveTextSettingsDisabled,\n        selectInitialTrack,\n        setConfig,\n        setInitialMediaSettingsForType,\n        setInitialSettings,\n        setTrack,\n    };\n\n    setup();\n\n    return instance;\n}\n\nMediaController.__dashjs_factory_name = 'MediaController';\nconst factory = FactoryMaker.getSingletonFactory(MediaController);\nFactoryMaker.updateSingletonFactory(MediaController.__dashjs_factory_name, factory);\nexport default factory;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport ObjectUtils from '../utils/ObjectUtils.js';\nimport FactoryMaker from '../../core/FactoryMaker.js';\n\nconst DEFAULT_INDEX = NaN;\n\nclass Node {\n    constructor(_baseUrls, _selectedIdx) {\n        this.data = {\n            baseUrls: _baseUrls || null,\n            selectedIdx: _selectedIdx || DEFAULT_INDEX\n        };\n        this.children = [];\n    }\n}\n\nfunction BaseURLTreeModel() {\n    let instance,\n        root,\n        adapter,\n        contentSteeringController;\n\n    const context = this.context;\n    const objectUtils = ObjectUtils(context).getInstance();\n\n    function setup() {\n        reset();\n    }\n\n    function setConfig(config) {\n        if (config.adapter) {\n            adapter = config.adapter;\n        }\n        if (config.contentSteeringController) {\n            contentSteeringController = config.contentSteeringController\n        }\n    }\n\n    function checkConfig() {\n        if (!adapter || !adapter.hasOwnProperty('getBaseURLsFromElement') || !adapter.hasOwnProperty('getRepresentationSortFunction')) {\n            throw new Error('setConfig function has to be called previously');\n        }\n    }\n\n    function updateChildData(node, index, element) {\n        const baseUrls = _getAvailableBaseUrls(element);\n\n        if (!node[index]) {\n            node[index] = new Node(baseUrls);\n        } else {\n            if (!objectUtils.areEqual(baseUrls, node[index].data.baseUrls)) {\n                node[index].data.baseUrls = baseUrls;\n                node[index].data.selectedIdx = DEFAULT_INDEX;\n            }\n        }\n    }\n\n    function getBaseURLCollectionsFromManifest(manifest) {\n        checkConfig();\n\n        const baseUrls = _getAvailableBaseUrls(manifest)\n\n        if (!objectUtils.areEqual(baseUrls, root.data.baseUrls)) {\n            root.data.baseUrls = baseUrls;\n            root.data.selectedIdx = DEFAULT_INDEX;\n        }\n\n        if (manifest && manifest.Period) {\n            manifest.Period.forEach((p, pi) => {\n                updateChildData(root.children, pi, p);\n\n                if (p.AdaptationSet) {\n                    p.AdaptationSet.forEach((a, ai) => {\n                        updateChildData(root.children[pi].children, ai, a);\n\n                        if (a.Representation) {\n                            a.Representation.sort(\n                                adapter.getRepresentationSortFunction()\n                            ).forEach((r, ri) => {\n                                updateChildData(\n                                    root.children[pi].children[ai].children,\n                                    ri,\n                                    r\n                                );\n                            });\n                        }\n                    });\n                }\n            });\n        }\n    }\n\n    function _getAvailableBaseUrls(root) {\n        let targetBaseUrls = adapter.getBaseURLsFromElement(root);\n        const synthesizedBaseUrls = contentSteeringController.getSynthesizedBaseUrlElements(targetBaseUrls);\n\n        if (synthesizedBaseUrls && synthesizedBaseUrls.length > 0) {\n            targetBaseUrls = targetBaseUrls.concat(synthesizedBaseUrls)\n        }\n\n        return targetBaseUrls;\n    }\n\n    function getBaseUrls(manifest) {\n        return _getAvailableBaseUrls(manifest);\n    }\n\n    function walk(callback, node) {\n        const target = node || root;\n\n        callback(target.data);\n\n        if (target.children) {\n            target.children.forEach(child => walk(callback, child));\n        }\n    }\n\n    function invalidateSelectedIndexes(serviceLocation) {\n        walk((data) => {\n            if (!isNaN(data.selectedIdx)) {\n                if (serviceLocation === data.baseUrls[data.selectedIdx].serviceLocation) {\n                    data.selectedIdx = DEFAULT_INDEX;\n                }\n            }\n        });\n    }\n\n    function update(manifest) {\n        getBaseURLCollectionsFromManifest(manifest);\n    }\n\n    function reset() {\n        root = new Node();\n    }\n\n    function getForPath(path) {\n        let target = root;\n        const nodes = [target.data];\n\n        if (path) {\n            path.forEach(p => {\n                target = target.children[p];\n\n                if (target) {\n                    nodes.push(target.data);\n                }\n            });\n        }\n\n        return nodes.filter(n => n.baseUrls.length);\n    }\n\n    instance = {\n        reset,\n        update,\n        getForPath,\n        invalidateSelectedIndexes,\n        setConfig,\n        getBaseUrls\n    };\n\n    setup();\n\n    return instance;\n}\n\nBaseURLTreeModel.__dashjs_factory_name = 'BaseURLTreeModel';\nexport default FactoryMaker.getClassFactory(BaseURLTreeModel);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport FactoryMaker from '../../../core/FactoryMaker.js';\n\nfunction DVBSelector(config) {\n\n    config = config || {};\n    let instance;\n\n    const blacklistController = config.blacklistController;\n\n    function getNonBlacklistedBaseUrls(urls) {\n        let removedPriorities = [];\n\n        const samePrioritiesFilter = function (el) {\n            if (removedPriorities.length) {\n                if ((el.dvbPriority) &&\n                        (removedPriorities.indexOf(el.dvbPriority) !== -1)) {\n                    return false;\n                }\n            }\n\n            return true;\n        };\n\n        const serviceLocationFilter = function (baseUrl) {\n            if (blacklistController.contains(baseUrl.serviceLocation)) {\n                // whenever a BaseURL is removed from the available list of\n                // BaseURLs, any other BaseURL with the same @priority\n                // value as the BaseURL being removed shall also be removed\n                if (baseUrl.dvbPriority) {\n                    removedPriorities.push(baseUrl.dvbPriority);\n                }\n\n                // all URLs in the list which have a @serviceLocation\n                // attribute matching an entry in the blacklist shall be\n                // removed from the available list of BaseURLs\n                return false;\n            }\n\n            return true;\n        };\n\n        return urls.filter(serviceLocationFilter).filter(samePrioritiesFilter);\n    }\n\n    function selectByWeight(availableUrls) {\n        const prioritySorter = function (a, b) {\n            let diff = a.dvbPriority - b.dvbPriority;\n            return isNaN(diff) ? 0 : diff;\n        };\n\n        const topPriorityFilter = function (baseUrl, idx, arr) {\n            return !idx || (\n                (arr[0].dvbPriority && baseUrl.dvbPriority) &&\n                (arr[0].dvbPriority === baseUrl.dvbPriority)\n            );\n        };\n\n        let totalWeight = 0;\n        let cumulWeights = [];\n        let idx = 0;\n        let rn,\n            urls;\n\n        // It shall begin by taking the set of resolved BaseURLs present or inherited at the current\n        // position in the MPD, resolved and filtered as described in 10.8.2.1, that have the lowest\n        // @priority attribute value.\n        urls = availableUrls.sort(prioritySorter).filter(topPriorityFilter);\n\n        if (urls.length) {\n            if (urls.length > 1) {\n                // If there is more than one BaseURL with this lowest @priority attribute value then the Player\n                // shall select one of them at random such that the probability of each BaseURL being chosen\n                // is proportional to the value of its @weight attribute. The method described in RFC 2782\n                // [26] or picking from a number of weighted entries is suitable for this, but there may be other\n                // algorithms which achieve the same effect.\n\n                // add all the weights together, storing the accumulated weight per entry\n                urls.forEach(baseUrl => {\n                    totalWeight += baseUrl.dvbWeight;\n                    cumulWeights.push(totalWeight);\n                });\n\n                // pick a random number between zero and totalWeight\n                rn = Math.floor(Math.random() * (totalWeight - 1));\n\n                // select the index for the range rn falls within\n                cumulWeights.every((limit, index) => {\n                    idx = index;\n\n                    if (rn < limit) {\n                        return false;\n                    }\n\n                    return true;\n                });\n            }\n\n            return urls[idx];\n        }\n    }\n\n    function select(baseUrls) {\n        return baseUrls && selectByWeight(\n            getNonBlacklistedBaseUrls(\n                baseUrls\n            )\n        );\n    }\n\n    instance = {\n        select: select\n    };\n\n    return instance;\n}\n\nDVBSelector.__dashjs_factory_name = 'DVBSelector';\nexport default FactoryMaker.getClassFactory(DVBSelector);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport FactoryMaker from '../../../core/FactoryMaker.js';\n\nfunction BasicSelector(config) {\n\n    config = config || {};\n    let instance;\n\n    const blacklistController = config.blacklistController;\n\n    function select(baseUrls) {\n        let index = 0;\n        let selectedBaseUrl;\n\n        if (baseUrls && baseUrls.some((baseUrl, idx) => {\n            index = idx;\n\n            return (!blacklistController.contains(baseUrl.serviceLocation));\n        })) {\n            selectedBaseUrl = baseUrls[index];\n        }\n\n        return selectedBaseUrl;\n    }\n\n    instance = {\n        select: select\n    };\n\n    return instance;\n}\n\nBasicSelector.__dashjs_factory_name = 'BasicSelector';\nexport default FactoryMaker.getClassFactory(BasicSelector);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport FactoryMaker from '../../../core/FactoryMaker.js';\nimport ContentSteeringController from '../../../dash/controllers/ContentSteeringController.js';\nimport EventBus from '../../../core/EventBus.js';\n\nfunction ContentSteeringSelector() {\n\n    const context = this.context;\n    const eventBus = EventBus(context).getInstance();\n    let instance,\n        contentSteeringController,\n        blacklistController,\n        blacklistResetTimeout = [];\n\n    function setup() {\n        contentSteeringController = ContentSteeringController(context).getInstance();\n    }\n\n    function setConfig(config) {\n        if (config.blacklistController) {\n            blacklistController = config.blacklistController;\n        }\n        if (config.contentSteeringController) {\n            contentSteeringController = config.contentSteeringController;\n        }\n        eventBus.on(config.addBlacklistEventName, _onAddBlackList, instance);\n    }\n\n    function selectBaseUrlIndex(data) {\n        let steeringIndex = NaN;\n\n        // In case we dont have a selected idx yet we consider the defaultServiceLocation\n        if (isNaN(data.selectedIdx)) {\n            const steeringDataFromMpd = contentSteeringController.getSteeringDataFromManifest();\n            if (steeringDataFromMpd && steeringDataFromMpd.defaultServiceLocationArray.length > 0) {\n                steeringIndex = _findexIndexOfServiceLocation(steeringDataFromMpd.defaultServiceLocationArray, data.baseUrls);\n            }\n        }\n\n        // Search in the response data of the steering server\n        const currentSteeringResponseData = contentSteeringController.getCurrentSteeringResponseData();\n        if (data.baseUrls && data.baseUrls.length && currentSteeringResponseData &&\n            currentSteeringResponseData.pathwayPriority && currentSteeringResponseData.pathwayPriority.length) {\n            steeringIndex = _findexIndexOfServiceLocation(currentSteeringResponseData.pathwayPriority, data.baseUrls);\n        }\n\n        return steeringIndex;\n    }\n\n    function reset() {\n        blacklistResetTimeout.forEach(timer => clearTimeout(timer))\n        blacklistResetTimeout = []\n    }\n\n    function _findexIndexOfServiceLocation(pathwayPriority = [], baseUrls = []) {\n        let i = 0;\n        let steeringIndex = NaN;\n        while (i < pathwayPriority.length) {\n            const curr = pathwayPriority[i];\n            const idx = baseUrls.findIndex((elem) => {\n                return elem.serviceLocation && elem.serviceLocation === curr;\n            })\n            if (idx !== -1 && !blacklistController.contains(baseUrls[idx].serviceLocation)) {\n                steeringIndex = idx;\n                break;\n            }\n            i += 1;\n        }\n        return steeringIndex;\n    }\n\n    \n    function _onAddBlackList(e) {\n        const currentSteeringResponseData = contentSteeringController.getCurrentSteeringResponseData();\n        if (!currentSteeringResponseData) {\n            return\n        }\n        const entry = e.entry\n        const timer = setTimeout(() => {\n            blacklistController.remove(entry);\n            blacklistResetTimeout.splice(blacklistResetTimeout.indexOf(timer, 1))\n        }, currentSteeringResponseData.ttl * 1000);\n        blacklistResetTimeout.push(timer)\n    }\n\n\n    instance = {\n        selectBaseUrlIndex,\n        setConfig,\n        reset\n    };\n\n    setup();\n\n    return instance;\n}\n\nContentSteeringSelector.__dashjs_factory_name = 'ContentSteeringSelector';\nexport default FactoryMaker.getClassFactory(ContentSteeringSelector);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport Errors from '../../core/errors/Errors.js';\nimport EventBus from '../../core/EventBus.js';\nimport Events from '../../core/events/Events.js';\nimport BlacklistController from '../controllers/BlacklistController.js';\nimport DVBSelector from './baseUrlResolution/DVBSelector.js';\nimport BasicSelector from './baseUrlResolution/BasicSelector.js';\nimport FactoryMaker from '../../core/FactoryMaker.js';\nimport DashJSError from '../vo/DashJSError.js';\nimport {checkParameterType} from './SupervisorTools.js';\nimport ContentSteeringSelector from './baseUrlResolution/ContentSteeringSelector.js';\nimport Settings from '../../core/Settings.js';\n\nfunction BaseURLSelector() {\n\n    const context = this.context;\n    const eventBus = EventBus(context).getInstance();\n    const settings = Settings(context).getInstance();\n\n    let instance,\n        serviceLocationBlacklistController,\n        basicSelector,\n        dvbSelector,\n        contentSteeringSelector,\n        selector;\n\n    function setup() {\n        serviceLocationBlacklistController = BlacklistController(context).create({\n            updateEventName: Events.SERVICE_LOCATION_BASE_URL_BLACKLIST_CHANGED,\n            addBlacklistEventName: Events.SERVICE_LOCATION_BASE_URL_BLACKLIST_ADD\n        });\n\n        basicSelector = BasicSelector(context).create({\n            blacklistController: serviceLocationBlacklistController\n        });\n\n        dvbSelector = DVBSelector(context).create({\n            blacklistController: serviceLocationBlacklistController\n        });\n\n        contentSteeringSelector = ContentSteeringSelector(context).create();\n        contentSteeringSelector.setConfig({\n            blacklistController: serviceLocationBlacklistController,\n            addBlacklistEventName: Events.SERVICE_LOCATION_BASE_URL_BLACKLIST_ADD\n        })\n\n        selector = basicSelector;\n    }\n\n    function setConfig(config) {\n        if (config.selector) {\n            selector = config.selector;\n        }\n        if (config.contentSteeringSelector) {\n            contentSteeringSelector = config.contentSteeringSelector;\n        }\n    }\n\n    function chooseSelector(isDVB) {\n        checkParameterType(isDVB, 'boolean');\n        selector = isDVB ? dvbSelector : basicSelector;\n    }\n\n    function select(data) {\n        if (!data) {\n            return;\n        }\n\n        // Check if we got any instructions from the content steering element in the MPD or from the content steering server\n        if (settings.get().streaming.applyContentSteering) {\n            const steeringIndex = contentSteeringSelector.selectBaseUrlIndex(data);\n            if (!isNaN(steeringIndex) && steeringIndex !== -1) {\n                data.selectedIdx = steeringIndex;\n            }\n        }\n\n        // Once a random selection has been carried out amongst a group of BaseURLs with the same\n        // @priority attribute value, then that choice should be re-used if the selection needs to be made again\n        // unless the blacklist has been modified or the available BaseURLs have changed.\n        if (!isNaN(data.selectedIdx)) {\n            return data.baseUrls[data.selectedIdx];\n        }\n\n        let selectedBaseUrl = selector.select(data.baseUrls);\n\n        if (!selectedBaseUrl) {\n            eventBus.trigger(Events.URL_RESOLUTION_FAILED, {\n                error: new DashJSError(\n                    Errors.URL_RESOLUTION_FAILED_GENERIC_ERROR_CODE,\n                    Errors.URL_RESOLUTION_FAILED_GENERIC_ERROR_MESSAGE\n                )\n            });\n            if (selector === basicSelector) {\n                reset();\n            }\n            return;\n        }\n\n        data.selectedIdx = data.baseUrls.indexOf(selectedBaseUrl);\n\n        return selectedBaseUrl;\n    }\n\n    function reset() {\n        contentSteeringSelector.reset();\n        serviceLocationBlacklistController.reset();\n    }\n\n    instance = {\n        chooseSelector: chooseSelector,\n        select: select,\n        reset: reset,\n        setConfig: setConfig\n    };\n\n    setup();\n\n    return instance;\n}\n\nBaseURLSelector.__dashjs_factory_name = 'BaseURLSelector';\nexport default FactoryMaker.getClassFactory(BaseURLSelector);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport BaseURLTreeModel from '../models/BaseURLTreeModel.js';\nimport BaseURLSelector from '../utils/BaseURLSelector.js';\nimport URLUtils from '../utils/URLUtils.js';\nimport BaseURL from '../../dash/vo/BaseURL.js';\nimport FactoryMaker from '../../core/FactoryMaker.js';\nimport EventBus from '../../core/EventBus.js';\nimport Events from '../../core/events/Events.js';\nimport MediaPlayerEvents from '../MediaPlayerEvents.js';\n\nfunction BaseURLController() {\n\n    let instance,\n        adapter;\n\n    const context = this.context;\n    const eventBus = EventBus(context).getInstance();\n    const urlUtils = URLUtils(context).getInstance();\n\n    let baseURLTreeModel,\n        baseURLSelector,\n        contentSteeringController;\n\n    function onBlackListChanged(e) {\n        baseURLTreeModel.invalidateSelectedIndexes(e.entry);\n    }\n\n    function setup() {\n        baseURLTreeModel = BaseURLTreeModel(context).create();\n        baseURLSelector = BaseURLSelector(context).create();\n\n        eventBus.on(Events.SERVICE_LOCATION_BASE_URL_BLACKLIST_CHANGED, onBlackListChanged, instance);\n    }\n\n    function setConfig(config) {\n        if (config.baseURLTreeModel) {\n            baseURLTreeModel = config.baseURLTreeModel;\n        }\n\n        if (config.baseURLSelector) {\n            baseURLSelector = config.baseURLSelector;\n        }\n\n        if (config.adapter) {\n            adapter = config.adapter;\n        }\n\n        if (config.contentSteeringController) {\n            contentSteeringController = config.contentSteeringController\n        }\n    }\n\n    function update(manifest) {\n        baseURLTreeModel.update(manifest);\n        baseURLSelector.chooseSelector(adapter.getIsDVB(manifest));\n        eventBus.trigger(MediaPlayerEvents.BASE_URLS_UPDATED, {\n            baseUrls: getBaseUrls(manifest)\n        });\n    }\n\n    function resolve(path) {\n        const baseUrls = baseURLTreeModel.getForPath(path);\n\n        const baseUrl = baseUrls.reduce((p, c) => {\n            const b = baseURLSelector.select(c);\n\n            if (b) {\n                if (!urlUtils.isRelative(b.url)) {\n                    p.url = b.url;\n                    p.serviceLocation = b.serviceLocation;\n                } else {\n                    p.url = urlUtils.resolve(b.url, p.url);\n                }\n                p.availabilityTimeOffset = b.availabilityTimeOffset;\n                p.availabilityTimeComplete = b.availabilityTimeComplete;\n                p.queryParams = b.queryParams;\n            } else {\n                return new BaseURL();\n            }\n\n            return p;\n        }, new BaseURL());\n\n        if (!urlUtils.isRelative(baseUrl.url)) {\n            return baseUrl;\n        }\n    }\n\n    function reset() {\n        baseURLTreeModel.reset();\n        baseURLSelector.reset();\n    }\n\n    function getBaseUrls(manifest) {\n        return baseURLTreeModel.getBaseUrls(manifest);\n    }\n\n    function initialize(data) {\n\n        // report config to baseURLTreeModel and baseURLSelector\n        baseURLTreeModel.setConfig({\n            adapter,\n            contentSteeringController\n        });\n\n        update(data);\n    }\n\n    instance = {\n        reset,\n        initialize,\n        resolve,\n        setConfig,\n        getBaseUrls,\n        update\n    };\n\n    setup();\n\n    return instance;\n}\n\nBaseURLController.__dashjs_factory_name = 'BaseURLController';\nexport default FactoryMaker.getClassFactory(BaseURLController);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nimport Constants from '../constants/Constants.js';\nimport FragmentRequest from './FragmentRequest.js';\n\nclass TextRequest extends FragmentRequest {\n    constructor(url, type) {\n        super();\n        this.url = url || null;\n        this.type = type || null;\n        this.mediaType = Constants.STREAM;\n        this.responseType = ''; //'text' value returns a bad encoding response in Firefox\n    }\n}\n\nexport default TextRequest;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport DashJSError from './vo/DashJSError.js';\nimport URLLoader from './net/URLLoader.js';\nimport {HTTPRequest} from './vo/metrics/HTTPRequest.js';\nimport TextRequest from './vo/TextRequest.js';\nimport EventBus from '../core/EventBus.js';\nimport Events from '../core/events/Events.js';\nimport FactoryMaker from '../core/FactoryMaker.js';\nimport Errors from '../core/errors/Errors.js';\n\nfunction XlinkLoader(config) {\n\n    config = config || {};\n    const RESOLVE_TO_ZERO = 'urn:mpeg:dash:resolve-to-zero:2013';\n\n    const context = this.context;\n    const eventBus = EventBus(context).getInstance();\n\n    let urlLoader = URLLoader(context).create({\n        errHandler: config.errHandler,\n        dashMetrics: config.dashMetrics,\n        mediaPlayerModel: config.mediaPlayerModel,\n        errors: Errors\n    });\n\n    let instance;\n\n    function load(url, element, resolveObject) {\n        const report = function (content, resolveToZero) {\n            element.resolved = true;\n            element.resolvedContent = content ? content : null;\n\n            eventBus.trigger(Events.XLINK_ELEMENT_LOADED, {\n                element: element,\n                resolveObject: resolveObject,\n                error: content || resolveToZero ?\n                    null :\n                    new DashJSError(\n                        Errors.XLINK_LOADER_LOADING_FAILURE_ERROR_CODE,\n                        Errors.XLINK_LOADER_LOADING_FAILURE_ERROR_MESSAGE + url\n                    )\n            });\n        };\n\n        if (url === RESOLVE_TO_ZERO) {\n            report(null, true);\n        } else {\n            const request = new TextRequest(url, HTTPRequest.XLINK_EXPANSION_TYPE);\n\n            urlLoader.load({\n                request: request,\n                success: function (data) {\n                    report(data);\n                },\n                error: function () {\n                    report(null);\n                }\n            });\n        }\n    }\n\n    function reset() {\n        if (urlLoader) {\n            urlLoader.abort();\n            urlLoader = null;\n        }\n    }\n\n    instance = {\n        load: load,\n        reset: reset\n    };\n\n    return instance;\n}\n\nXlinkLoader.__dashjs_factory_name = 'XlinkLoader';\nexport default FactoryMaker.getClassFactory(XlinkLoader);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport XlinkLoader from '../XlinkLoader.js';\nimport EventBus from '../../core/EventBus.js';\nimport Events from '../../core/events/Events.js';\nimport FactoryMaker from '../../core/FactoryMaker.js';\nimport URLUtils from '../utils/URLUtils.js';\nimport DashConstants from '../../dash/constants/DashConstants.js';\n\nconst RESOLVE_TYPE_ONLOAD = 'onLoad';\nconst RESOLVE_TYPE_ONACTUATE = 'onActuate';\nconst RESOLVE_TO_ZERO = 'urn:mpeg:dash:resolve-to-zero:2013';\n\nfunction XlinkController(config) {\n\n    config = config || {};\n    let context = this.context;\n    let eventBus = EventBus(context).getInstance();\n    const urlUtils = URLUtils(context).getInstance();\n\n    let instance,\n        parser,\n        manifest,\n        xlinkLoader;\n\n    function setup() {\n        eventBus.on(Events.XLINK_ELEMENT_LOADED, onXlinkElementLoaded, instance);\n\n        xlinkLoader = XlinkLoader(context).create({\n            errHandler: config.errHandler,\n            dashMetrics: config.dashMetrics,\n            mediaPlayerModel: config.mediaPlayerModel,\n            settings: config.settings\n        });\n    }\n\n    function setParser(value) {\n        if (value) {\n            parser = value;\n        }\n    }\n\n    /**\n     * <p>Triggers the resolution of the xlink.onLoad attributes in the manifest file </p>\n     * @param {Object} mpd - the manifest\n     */\n    function resolveManifestOnLoad(mpd) {\n        let elements;\n        // First resolve all periods, so unnecessary requests inside onLoad Periods with Default content are avoided\n        manifest = mpd;\n\n        if (manifest.Period) {\n            elements = getElementsToResolve(manifest.Period, manifest, DashConstants.PERIOD, RESOLVE_TYPE_ONLOAD);\n            resolve(elements, DashConstants.PERIOD, RESOLVE_TYPE_ONLOAD);\n        } else {\n            eventBus.trigger(Events.XLINK_READY, {manifest: manifest});\n        }\n    }\n\n    function reset() {\n        eventBus.off(Events.XLINK_ELEMENT_LOADED, onXlinkElementLoaded, instance);\n\n        if (xlinkLoader) {\n            xlinkLoader.reset();\n            xlinkLoader = null;\n        }\n    }\n\n    function resolve(elements, type, resolveType) {\n        let resolveObject = {};\n        let element,\n            url;\n\n        resolveObject.elements = elements;\n        resolveObject.type = type;\n        resolveObject.resolveType = resolveType;\n        // If nothing to resolve, directly call allElementsLoaded\n        if (resolveObject.elements.length === 0) {\n            onXlinkAllElementsLoaded(resolveObject);\n        }\n        for (let i = 0; i < resolveObject.elements.length; i++) {\n            element = resolveObject.elements[i];\n            if (urlUtils.isHTTPURL(element.url)) {\n                url = element.url;\n            } else {\n                url = element.originalContent.BaseURL + element.url;\n            }\n            xlinkLoader.load(url, element, resolveObject);\n        }\n    }\n\n    function onXlinkElementLoaded(event) {\n        let element,\n            resolveObject;\n\n        const openingTag = '<response>';\n        const closingTag = '</response>';\n        let mergedContent = '';\n\n        element = event.element;\n        resolveObject = event.resolveObject;\n        // if the element resolved into content parse the content\n        if (element.resolvedContent) {\n            let index = 0;\n            // we add a parent elements so the converter is able to parse multiple elements of the same type which are not wrapped inside a container\n            if (element.resolvedContent.indexOf('<?xml') === 0) {\n                index = element.resolvedContent.indexOf('?>') + 2; //find the closing position of the xml declaration, if it exists.\n            }\n            mergedContent = element.resolvedContent.substr(0,index) + openingTag + element.resolvedContent.substr(index) + closingTag;\n            element.resolvedContent = parser.parseXml(mergedContent).response;\n        }\n        if (isResolvingFinished(resolveObject)) {\n            onXlinkAllElementsLoaded(resolveObject);\n        }\n    }\n\n    // We got to wait till all elements of the current queue are resolved before merging back\n    function onXlinkAllElementsLoaded (resolveObject) {\n        let elements = [];\n        let i,\n            obj;\n\n        mergeElementsBack(resolveObject);\n        if (resolveObject.resolveType === RESOLVE_TYPE_ONACTUATE) {\n            eventBus.trigger(Events.XLINK_READY, { manifest: manifest });\n        }\n        if (resolveObject.resolveType === RESOLVE_TYPE_ONLOAD) {\n            switch (resolveObject.type) {\n                // Start resolving the other elements. We can do Adaptation Set and EventStream in parallel\n                case DashConstants.PERIOD:\n                    for (i = 0; i < manifest[DashConstants.PERIOD].length; i++) {\n                        obj = manifest[DashConstants.PERIOD][i];\n                        if (obj.hasOwnProperty(DashConstants.ADAPTATION_SET)) {\n                            elements = elements.concat(getElementsToResolve(obj[DashConstants.ADAPTATION_SET], obj, DashConstants.ADAPTATION_SET, RESOLVE_TYPE_ONLOAD));\n                        }\n                        if (obj.hasOwnProperty(DashConstants.EVENT_STREAM)) {\n                            elements = elements.concat(getElementsToResolve(obj[DashConstants.EVENT_STREAM], obj, DashConstants.EVENT_STREAM, RESOLVE_TYPE_ONLOAD));\n                        }\n                    }\n                    resolve(elements, DashConstants.ADAPTATION_SET, RESOLVE_TYPE_ONLOAD);\n                    break;\n                case DashConstants.ADAPTATION_SET:\n                    // TODO: Resolve SegmentList here\n                    eventBus.trigger(Events.XLINK_READY, { manifest: manifest });\n                    break;\n            }\n        }\n    }\n\n    // Returns the elements with the specific resolve Type\n    function getElementsToResolve(elements, parentElement, type, resolveType) {\n        let toResolve = [];\n        let element,\n            i,\n            xlinkObject;\n        // first remove all the resolve-to-zero elements\n        for (i = elements.length - 1; i >= 0; i--) {\n            element = elements[i];\n            if (element.hasOwnProperty('xlink:href') && element['xlink:href'] === RESOLVE_TO_ZERO) {\n                elements.splice(i, 1);\n            }\n        }\n        // now get the elements with the right resolve type\n        for (i = 0; i < elements.length; i++) {\n            element = elements[i];\n            if (element.hasOwnProperty('xlink:href') && element.hasOwnProperty('xlink:actuate') && element['xlink:actuate'] === resolveType) {\n                xlinkObject = createXlinkObject(element['xlink:href'], parentElement, type, i, resolveType, element);\n                toResolve.push(xlinkObject);\n            }\n        }\n        return toResolve;\n    }\n\n    function mergeElementsBack(resolveObject) {\n        let resolvedElements = [];\n        let element,\n            type,\n            obj,\n            i,\n            j,\n            k;\n        // Start merging back from the end because of index shifting. Note that the elements with the same parent have to be ordered by index ascending\n        for (i = resolveObject.elements.length - 1; i >= 0; i --) {\n            element = resolveObject.elements[i];\n            type = element.type;\n\n            // Element couldn't be resolved or is TODO Inappropriate target: Remove all Xlink attributes\n            if (!element.resolvedContent || isInappropriateTarget()) {\n                delete element.originalContent['xlink:actuate'];\n                delete element.originalContent['xlink:href'];\n                resolvedElements.push(element.originalContent);\n            }\n            // Element was successfully resolved\n            else if (element.resolvedContent) {\n                for (j = 0; j < element.resolvedContent[type].length; j++) {\n                    //TODO Contains another Xlink attribute with xlink:actuate set to onload. Remove all xLink attributes\n                    obj = element.resolvedContent[type][j];\n                    resolvedElements.push(obj);\n                }\n            }\n            // Replace the old elements in the parent with the resolved ones\n            element.parentElement[type].splice(element.index, 1);\n            for (k = 0; k < resolvedElements.length; k++) {\n                element.parentElement[type].splice(element.index + k, 0, resolvedElements[k]);\n            }\n            resolvedElements = [];\n        }\n        if (resolveObject.elements.length > 0) {\n            parser.getIron().run(manifest);\n        }\n    }\n\n    function createXlinkObject(url, parentElement, type, index, resolveType, originalContent) {\n        return {\n            url: url,\n            parentElement: parentElement,\n            type: type,\n            index: index,\n            resolveType: resolveType,\n            originalContent: originalContent,\n            resolvedContent: null,\n            resolved: false\n        };\n    }\n\n    // Check if all pending requests are finished\n    function isResolvingFinished(elementsToResolve) {\n        let i,\n            obj;\n        for (i = 0; i < elementsToResolve.elements.length; i++) {\n            obj = elementsToResolve.elements[i];\n            if (obj.resolved === false) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    // TODO : Do some syntax check here if the target is valid or not\n    function isInappropriateTarget() {\n        return false;\n    }\n\n    instance = {\n        resolveManifestOnLoad: resolveManifestOnLoad,\n        setParser: setParser,\n        reset: reset\n    };\n\n    setup();\n    return instance;\n}\n\nXlinkController.__dashjs_factory_name = 'XlinkController';\nexport default FactoryMaker.getClassFactory(XlinkController);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport FactoryMaker from '../../core/FactoryMaker.js';\n\nfunction ObjectIron(mappers) {\n\n    function mergeValues(parentItem, childItem) {\n        for (let name in parentItem) {\n            if (!childItem.hasOwnProperty(name)) {\n                childItem[name] = parentItem[name];\n            }\n        }\n    }\n\n    function mapProperties(properties, parent, child) {\n        for (let i = 0, len = properties.length; i < len; ++i) {\n            const property = properties[i];\n\n            if (parent[property.name]) {\n                if (child[property.name]) {\n                    // check to see if we should merge\n                    if (property.merge) {\n                        const parentValue = parent[property.name];\n                        const childValue = child[property.name];\n\n                        // complex objects; merge properties\n                        if (typeof parentValue === 'object' && typeof childValue === 'object') {\n                            mergeValues(parentValue, childValue);\n                        }\n                        // simple objects; merge them together\n                        else {\n                            child[property.name] = parentValue + childValue;\n                        }\n                    }\n                } else {\n                    // just add the property\n                    child[property.name] = parent[property.name];\n                }\n            }\n        }\n    }\n\n    function mapItem(item, node) {\n        for (let i = 0, len = item.children.length; i < len; ++i) {\n            const childItem = item.children[i];\n\n            const array = node[childItem.name];\n            if (array) {\n                for (let v = 0, len2 = array.length; v < len2; ++v) {\n                    const childNode = array[v];\n                    mapProperties(item.properties, node, childNode);\n                    mapItem(childItem, childNode);\n                }\n            }\n        }\n    }\n\n    function run(source) {\n\n        if (source === null || typeof source !== 'object') {\n            return source;\n        }\n\n        if (source.Period && 'period' in mappers) {\n            const periodMapper = mappers.period;\n            const periods = source.Period;\n            for (let i = 0, len = periods.length; i < len; ++i) {\n                const period = periods[i];\n                mapItem(periodMapper, period);\n\n                if ('adaptationset' in mappers) {\n                    const adaptationSets = period.AdaptationSet;\n                    if (adaptationSets) {\n                        const adaptationSetMapper = mappers.adaptationset;\n                        for (let i = 0, len = adaptationSets.length; i < len; ++i) {\n                            mapItem(adaptationSetMapper, adaptationSets[i]);\n                        }\n                    }\n                }\n            }\n        }\n\n        return source;\n    }\n\n    return {\n        run: run\n    };\n}\n\n\nObjectIron.__dashjs_factory_name = 'ObjectIron';\nconst factory = FactoryMaker.getClassFactory(ObjectIron);\nexport default factory;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n\n/**\n * @classdesc a base type for matching and converting types in manifest to\n * something more useful\n * @ignore\n */\nclass BaseMatcher {\n    constructor(test, converter) {\n        this._test = test;\n        this._converter = converter;\n    }\n\n    get test() {\n        return this._test;\n    }\n\n    get converter() {\n        return this._converter;\n    }\n}\n\nexport default BaseMatcher;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @classdesc matches and converts xs:duration to seconds\n */\nimport BaseMatcher from './BaseMatcher.js';\nimport Constants from '../../../streaming/constants/Constants.js';\nimport DashConstants from '../../constants/DashConstants.js';\n\nconst durationRegex = /^([-])?P(([\\d.]*)Y)?(([\\d.]*)M)?(([\\d.]*)D)?T?(([\\d.]*)H)?(([\\d.]*)M)?(([\\d.]*)S)?/;\n\nconst SECONDS_IN_YEAR = 365 * 24 * 60 * 60;\nconst SECONDS_IN_MONTH = 30 * 24 * 60 * 60;\nconst SECONDS_IN_DAY = 24 * 60 * 60;\nconst SECONDS_IN_HOUR = 60 * 60;\nconst SECONDS_IN_MIN = 60;\n\nclass DurationMatcher extends BaseMatcher {\n    constructor() {\n        super(\n            (tagName, attrName, value) => {\n                const attributeList = [\n                    DashConstants.MIN_BUFFER_TIME, DashConstants.MEDIA_PRESENTATION_DURATION,\n                    DashConstants.MINIMUM_UPDATE_PERIOD, DashConstants.TIMESHIFT_BUFFER_DEPTH, DashConstants.MAX_SEGMENT_DURATION,\n                    DashConstants.MAX_SUBSEGMENT_DURATION, DashConstants.SUGGESTED_PRESENTATION_DELAY, DashConstants.START,\n                    Constants.START_TIME, DashConstants.DURATION\n                ];\n                const len = attributeList.length;\n\n                for (let i = 0; i < len; i++) {\n                    if (attrName === attributeList[i]) {\n                        return durationRegex.test(value);\n                    }\n                }\n\n                return false;\n            },\n            str => {\n                //str = \"P10Y10M10DT10H10M10.1S\";\n                const match = durationRegex.exec(str);\n                let result = (parseFloat(match[3] || 0) * SECONDS_IN_YEAR +\n                    parseFloat(match[5] || 0) * SECONDS_IN_MONTH +\n                    parseFloat(match[7] || 0) * SECONDS_IN_DAY +\n                    parseFloat(match[9] || 0) * SECONDS_IN_HOUR +\n                    parseFloat(match[11] || 0) * SECONDS_IN_MIN +\n                    parseFloat(match[13] || 0));\n\n                if (match[1] !== undefined) {\n                    result = -result;\n                }\n\n                return result;\n            }\n        );\n    }\n}\n\nexport default DurationMatcher;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @classdesc matches and converts xs:datetime to Date\n */\nimport BaseMatcher from './BaseMatcher.js';\n\nconst SECONDS_IN_MIN = 60;\nconst MINUTES_IN_HOUR = 60;\nconst MILLISECONDS_IN_SECONDS = 1000;\n\nconst datetimeRegex = /^([0-9]{4})-([0-9]{2})-([0-9]{2})T([0-9]{2}):([0-9]{2})(?::([0-9]*)(\\.[0-9]*)?)?(?:([+-])([0-9]{2})(?::?)([0-9]{2}))?/;\n\nclass DateTimeMatcher extends BaseMatcher {\n    constructor() {\n        super(\n            (tagName, attrName, value) => datetimeRegex.test(value),\n            str => {\n                const match = datetimeRegex.exec(str);\n                let utcDate;\n\n                // If the string does not contain a timezone offset different browsers can interpret it either\n                // as UTC or as a local time so we have to parse the string manually to normalize the given date value for\n                // all browsers\n                utcDate = Date.UTC(\n                    parseInt(match[1], 10),\n                    parseInt(match[2], 10) - 1, // months start from zero\n                    parseInt(match[3], 10),\n                    parseInt(match[4], 10),\n                    parseInt(match[5], 10),\n                    (match[6] && parseInt(match[6], 10) || 0),\n                    (match[7] && parseFloat(match[7]) * MILLISECONDS_IN_SECONDS) || 0);\n\n                // If the date has timezone offset take it into account as well\n                if (match[9] && match[10]) {\n                    const timezoneOffset = parseInt(match[9], 10) * MINUTES_IN_HOUR + parseInt(match[10], 10);\n                    utcDate += (match[8] === '+' ? -1 : +1) * timezoneOffset * SECONDS_IN_MIN * MILLISECONDS_IN_SECONDS;\n                }\n\n                return new Date(utcDate);\n            }\n        );\n    }\n}\n\nexport default DateTimeMatcher;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @classdesc Matches and converts xs:numeric to float\n */\nimport BaseMatcher from './BaseMatcher.js';\nimport DashConstants from '../../constants/DashConstants.js';\n\nconst numericRegex = /^[-+]?[0-9]+[.]?[0-9]*([eE][-+]?[0-9]+)?$/;\n\nconst StringAttributeList = [ DashConstants.ID ]\n\nclass NumericMatcher extends BaseMatcher {\n    constructor() {\n        super(\n            (tagName, attrName, value) => numericRegex.test(value) && StringAttributeList.indexOf(attrName) === -1,\n            str => parseFloat(str)\n        );\n    }\n}\n\nexport default NumericMatcher;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @classdesc Matches and converts any ISO 639 language tag to BCP-47 language tags\n */\nimport BaseMatcher from './BaseMatcher.js';\nimport DashConstants from '../../constants/DashConstants.js';\nimport {bcp47Normalize} from 'bcp-47-normalize';\n\nclass LangMatcher extends BaseMatcher {\n    constructor() {\n        super(\n            (tagName, attr/*, value*/) => {\n                const stringAttrsInElements = {\n                    [DashConstants.ADAPTATION_SET]:                 [ DashConstants.LANG ],\n                    [DashConstants.REPRESENTATION]:                 [ DashConstants.LANG ],\n                    [DashConstants.CONTENT_COMPONENT]:              [ DashConstants.LANG ],\n                    [DashConstants.LABEL]:                          [ DashConstants.LANG ],\n                    [DashConstants.GROUP_LABEL]:                    [ DashConstants.LANG ]\n                    // still missing from 23009-1: Preselection@lang, ProgramInformation@lang\n                };\n                if (stringAttrsInElements.hasOwnProperty(tagName)) {\n                    let attrNames = stringAttrsInElements[tagName];\n                    if (attrNames !== undefined) {\n                        return attrNames.indexOf(attr) >= 0;\n                    } else {\n                        return false;\n                    }\n                }\n                return false;\n            },\n            str => {\n                let lang = bcp47Normalize(str);\n                if (lang) {\n                    return lang;\n                }\n                return String(str);\n            }\n        );\n    }\n}\n\nexport default LangMatcher;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @classdesc a property belonging to a MapNode\n * @ignore\n */\n\nclass CommonProperty {\n    constructor(name) {\n        const getDefaultMergeForName =\n              (n) => n && n.length && n.charAt(0) === n.charAt(0).toUpperCase();\n\n        this._name = name;\n        this._merge = getDefaultMergeForName(name);\n    }\n\n    get name() {\n        return this._name;\n    }\n\n    get merge() {\n        return this._merge;\n    }\n}\n\nexport default CommonProperty;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @classdesc a node at some level in a ValueMap\n */\nimport CommonProperty from './CommonProperty.js';\n\nclass MapNode {\n    constructor(name, properties, children) {\n        this._name = name || '';\n        this._properties = [];\n        this._children = children || [];\n\n        if (Array.isArray(properties)) {\n            properties.forEach(p => {\n                this._properties.push(new CommonProperty(p));\n            });\n        }\n    }\n\n    get name() {\n        return this._name;\n    }\n\n    get children() {\n        return this._children;\n    }\n\n    get properties() {\n        return this._properties;\n    }\n}\n\nexport default MapNode;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @classdesc a RepresentationBaseValuesMap type for input to objectiron\n */\nimport MapNode from './MapNode.js';\nimport DashConstants from '../../constants/DashConstants.js';\n\nclass RepresentationBaseValuesMap extends MapNode {\n    constructor() {\n        const commonProperties = [\n            DashConstants.PROFILES,\n            DashConstants.WIDTH,\n            DashConstants.HEIGHT,\n            DashConstants.SAR,\n            DashConstants.FRAMERATE,\n            DashConstants.AUDIO_SAMPLING_RATE,\n            DashConstants.MIME_TYPE,\n            DashConstants.SEGMENT_PROFILES,\n            DashConstants.CODECS,\n            DashConstants.MAXIMUM_SAP_PERIOD,\n            DashConstants.START_WITH_SAP,\n            DashConstants.MAX_PLAYOUT_RATE,\n            DashConstants.CODING_DEPENDENCY,\n            DashConstants.SCAN_TYPE,\n            DashConstants.FRAME_PACKING,\n            DashConstants.AUDIO_CHANNEL_CONFIGURATION,\n            DashConstants.CONTENT_PROTECTION,\n            DashConstants.INBAND_EVENT_STREAM\n        ];\n\n        super(DashConstants.ADAPTATION_SET, commonProperties, [\n            new MapNode(DashConstants.REPRESENTATION, commonProperties, [\n                new MapNode(DashConstants.SUB_REPRESENTATION, commonProperties)\n            ])\n        ]);\n    }\n}\n\nexport default RepresentationBaseValuesMap;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @classdesc a SegmentValuesMap type for input to objectiron\n */\nimport MapNode from './MapNode.js';\nimport DashConstants from '../../constants/DashConstants.js';\n\nclass SegmentValuesMap extends MapNode {\n    constructor() {\n        const commonProperties = [\n            DashConstants.SEGMENT_BASE, DashConstants.SEGMENT_TEMPLATE, DashConstants.SEGMENT_LIST\n        ];\n\n        super(DashConstants.PERIOD, commonProperties, [\n            new MapNode(DashConstants.ADAPTATION_SET, commonProperties, [\n                new MapNode(DashConstants.REPRESENTATION, commonProperties)\n            ])\n        ]);\n    }\n}\n\nexport default SegmentValuesMap;\n","// ==ClosureCompiler==\n// @output_file_name default.js\n// @compilation_level SIMPLE_OPTIMIZATIONS\n// ==/ClosureCompiler==\n// module.exports = {\n//     parse: parse,\n//     simplify: simplify,\n//     simplifyLostLess: simplifyLostLess,\n//     filter: filter,\n//     stringify: stringify,\n//     toContentString: toContentString,\n//     getElementById: getElementById,\n//     getElementsByClassName: getElementsByClassName,\n//     transformStream: transformStream,\n// };\n\n/**\n * @author: Tobias Nickel\n * @created: 06.04.2015\n * I needed a small xmlparser chat can be used in a worker.\n */\n\n/**\n * @typedef tNode\n * @property {string} tagName\n * @property {object} attributes\n * @property {(tNode|string)[]} children\n **/\n\n/**\n * @typedef TParseOptions\n * @property {number} [pos]\n * @property {string[]} [noChildNodes]\n * @property {boolean} [setPos]\n * @property {boolean} [keepComments]\n * @property {boolean} [keepWhitespace]\n * @property {boolean} [simplify]\n * @property {(a: tNode, b: tNode) => boolean} [filter]\n */\n\n/**\n * Predefined general entities used in XML\n * See https://www.w3.org/TR/xml/#sec-predefined-ent\n */\nexport const XML_ENTITIES = {\n    '&amp;': '&',\n    '&gt;': '>',\n    '&lt;': '<',\n    '&quot;': '\"',\n    '&apos;': \"'\"\n};\n\n/**\n * Translates XML predefined entities and character references to their respective characters.\n * @param {Object} entitiesList\n * @param {String} str\n * @returns {String}\n */\nexport function translateEntitiesAndCharacterReferences(entitiesList, str) {\n    const entitySplit = str.split(/(&[#a-zA-Z0-9]+;)/);\n    if (entitySplit.length <= 1) { // No entities. Skip the rest of the function.\n        return str;\n    }\n\n    for (let i = 1; i < entitySplit.length; i += 2) {\n        const reference = entitySplit[i];\n\n        /*\n         * Check if it is a character reference of the form\n         * /&#[0-9]+;/ - Encoded in decimal, or\n         * /&#x[0-9a-fA-F]+;/ - Encoded in hexadecimal\n         * See https://www.w3.org/TR/xml/#sec-references\n         */\n        if (reference.charAt(1) === '#') {\n            let code;\n            if (reference.charAt(2) === 'x') { // Hexadecimal\n                code = parseInt(reference.substring(3, reference.length - 1), 16);\n            } else { // Decimal\n                code = parseInt(reference.substring(2, reference.length - 1), 10);\n            }\n\n            // Translate into string according to ISO/IEC 10646\n            if (!isNaN(code) && code >= 0 && code <= 0x10FFFF) {\n                entitySplit[i] = String.fromCodePoint(code);\n            }\n        }\n        /*\n         * Translate entity references using a dictionary.\n         */\n        else if (entitiesList.hasOwnProperty(reference)) {\n            entitySplit[i] = entitiesList[reference];\n        }\n    }\n\n    return entitySplit.join('');\n};\n\n/**\n * parseXML / html into a DOM Object. with no validation and some failur tolerance\n * @param {string} S your XML to parse\n * @param {TParseOptions} [options]  all other options:\n * @return {(tNode | string)[]}\n */\n export function parse(S, options) {\n    \"txml\";\n    options = options || {};\n\n    var pos = options.pos || 0;\n    var keepComments = !!options.keepComments;\n    var keepWhitespace = !!options.keepWhitespace\n    // dash.js - BEGIN\n    // Attributes matchers to post-process attributes (for ex to transform from xs:duration format to number of seconds)\n    var attrMatchers = options.attrMatchers || [];\n    // List od node names that must be stored as array within their parent\n    var nodesAsArray = options.nodesAsArray || [];\n    // dash.js - END\n\n    var openBracket = \"<\";\n    var openBracketCC = \"<\".charCodeAt(0);\n    var closeBracket = \">\";\n    var closeBracketCC = \">\".charCodeAt(0);\n    var minusCC = \"-\".charCodeAt(0);\n    var slashCC = \"/\".charCodeAt(0);\n    var exclamationCC = '!'.charCodeAt(0);\n    var singleQuoteCC = \"'\".charCodeAt(0);\n    var doubleQuoteCC = '\"'.charCodeAt(0);\n    var openCornerBracketCC = '['.charCodeAt(0);\n    var closeCornerBracketCC = ']'.charCodeAt(0);\n\n\n    /**\n     * parsing a list of entries\n     */\n    function parseChildren(tagName, parent) {\n        var children = [];\n        while (S[pos]) {\n            if (S.charCodeAt(pos) == openBracketCC) {\n                if (S.charCodeAt(pos + 1) === slashCC) {\n                    var closeStart = pos + 2;\n                    pos = S.indexOf(closeBracket, pos);\n\n                    var closeTag = S.substring(closeStart, pos)\n                    if (closeTag.indexOf(tagName) == -1) {\n                        var parsedText = S.substring(0, pos).split('\\n');\n                        throw new Error(\n                            'Unexpected close tag\\nLine: ' + (parsedText.length - 1) +\n                            '\\nColumn: ' + (parsedText[parsedText.length - 1].length + 1) +\n                            '\\nChar: ' + S[pos]\n                        );\n                    }\n\n                    if (pos + 1) pos += 1\n                    return children;\n                } else if (S.charCodeAt(pos + 1) === exclamationCC) {\n                    if (S.charCodeAt(pos + 2) == minusCC) {\n                        //comment support\n                        const startCommentPos = pos;\n                        while (pos !== -1 && !(S.charCodeAt(pos) === closeBracketCC && S.charCodeAt(pos - 1) == minusCC && S.charCodeAt(pos - 2) == minusCC && pos != -1)) {\n                            pos = S.indexOf(closeBracket, pos + 1);\n                        }\n                        if (pos === -1) {\n                            pos = S.length\n                        }\n                        if (keepComments) {\n                            children.push(S.substring(startCommentPos, pos + 1));\n                        }\n                    } else if (\n                        S.charCodeAt(pos + 2) === openCornerBracketCC &&\n                        S.charCodeAt(pos + 8) === openCornerBracketCC &&\n                        S.substr(pos + 3, 5).toLowerCase() === 'cdata'\n                    ) {\n                        // cdata\n                        var cdataEndIndex = S.indexOf(']]>', pos);\n                        if (cdataEndIndex == -1) {\n                            children.push(S.substr(pos + 9));\n                            pos = S.length;\n                        } else {\n                            children.push(S.substring(pos + 9, cdataEndIndex));\n                            pos = cdataEndIndex + 3;\n                        }\n                        continue;\n                    } else {\n                        // doctypesupport\n                        const startDoctype = pos + 1;\n                        pos += 2;\n                        var encapsuled = false;\n                        while ((S.charCodeAt(pos) !== closeBracketCC || encapsuled === true) && S[pos]) {\n                            if (S.charCodeAt(pos) === openCornerBracketCC) {\n                                encapsuled = true;\n                            } else if (encapsuled === true && S.charCodeAt(pos) === closeCornerBracketCC) {\n                                encapsuled = false;\n                            }\n                            pos++;\n                        }\n                        children.push(S.substring(startDoctype, pos));\n                    }\n                    pos++;\n                    continue;\n                }\n                var node = parseNode();\n                children.push(node);\n\n                if (node.tagName[0] === '?') {\n                    children.push(...node.children);\n                    node.children = [];\n                }\n\n                // dash.js - BEGIN\n                // Transform/process on the fly child nodes to add them to their parent as an array or an object\n                if (parent) {\n                    let tagName = node.tagName;\n                    if (nodesAsArray.indexOf(tagName) !== -1) {\n                        if (!parent[tagName]) {\n                            parent[tagName] = [];\n                        }\n                        parent[tagName].push(node);\n                    } else {\n                        parent[tagName] = node;\n                    }\n                }\n                // dash.js - END\n            } else {\n                var text = parseText();\n                if (!keepWhitespace) {\n                    text = text.trim();\n                }\n                // dash.js - BEGIN\n                // Transform/process on the fly text values to add them to their parent as its \"_text\" property\n                if (parent) {\n                    parent.__text = text;\n                } else {\n                    children.push(text);\n                }\n                // dash.js - END\n                pos++;\n            }\n        }\n        return children;\n    }\n\n    // dash.js - BEGIN\n    // Add function processAttr() used to process node attributes on the fly when parsing nodes (see parseNode()))\n    function processAttr(tagName, attrName, value) {\n        // Specific use case for SegmentTimeline <S> tag\n        if (tagName === 'S') {\n            return parseInt(value);\n        }\n\n        let attrValue = translateEntitiesAndCharacterReferences(XML_ENTITIES, value);\n        attrMatchers.forEach(matcher => {\n            if (matcher.test(tagName, attrName, value)) {\n                attrValue = matcher.converter(value);\n            }\n        });\n        return attrValue;\n    }\n    // dash.js - END\n\n    /**\n     *    returns the text outside of texts until the first '<'\n     */\n    function parseText() {\n        var start = pos;\n        pos = S.indexOf(openBracket, pos) - 1;\n        if (pos === -2)\n            pos = S.length;\n        return translateEntitiesAndCharacterReferences(XML_ENTITIES, S.slice(start, pos + 1));\n    }\n    /**\n     *    returns text until the first nonAlphabetic letter\n     */\n    var nameSpacer = '\\r\\n\\t>/= ';\n\n    function parseName() {\n        var start = pos;\n        while (nameSpacer.indexOf(S[pos]) === -1 && S[pos]) {\n            pos++;\n        }\n        return S.slice(start, pos);\n    }\n    /**\n     *    is parsing a node, including tagName, Attributes and its children,\n     * to parse children it uses the parseChildren again, that makes the parsing recursive\n     */\n    var NoChildNodes = options.noChildNodes || ['img', 'br', 'input', 'meta', 'link', 'hr'];\n\n    function parseNode() {\n        pos++;\n        const tagName = parseName();\n        // dash.js - BEGIN\n        // Set attributes as node properties which names are the attributes names\n        // For child nodes, see parseChildren() function where children are added as object properties\n        // const attributes = {};\n        let children = [];\n        let node = {\n            tagName: tagName\n        };\n\n        // Support tag namespace\n        let p = node.tagName.indexOf(':');\n        if (p !== -1) {\n            node.__prefix = node.tagName.substr(0, p);\n            node.tagName = node.tagName.substr(p + 1);\n        }\n        // dash.js - END\n\n        // parsing attributes\n        while (S.charCodeAt(pos) !== closeBracketCC && S[pos]) {\n            var c = S.charCodeAt(pos);\n            if ((c > 64 && c < 91) || (c > 96 && c < 123)) {\n                //if('abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'.indexOf(S[pos])!==-1 ){\n                var name = parseName();\n                // search beginning of the string\n                var code = S.charCodeAt(pos);\n                while (code && code !== singleQuoteCC && code !== doubleQuoteCC && !((code > 64 && code < 91) || (code > 96 && code < 123)) && code !== closeBracketCC) {\n                    pos++;\n                    code = S.charCodeAt(pos);\n                }\n                if (code === singleQuoteCC || code === doubleQuoteCC) {\n                    var value = parseString();\n                    if (pos === -1) {\n                        return node;\n                    }\n                } else {\n                    value = null;\n                    pos--;\n                }\n                // dash.js - BEGIN\n                // Process attributes and add them as node properties which names are the attributes names\n                value = processAttr(node.tagName, name, value);\n                node[name] = value;\n                // dash.js - END\n            }\n            pos++;\n        }\n        // optional parsing of children\n        if (S.charCodeAt(pos - 1) !== slashCC) {\n            if (tagName == \"script\") {\n                var start = pos + 1;\n                pos = S.indexOf('</script>', pos);\n                children = [S.slice(start, pos)];\n                pos += 9;\n            } else if (tagName == \"style\") {\n                var start = pos + 1;\n                pos = S.indexOf('</style>', pos);\n                children = [S.slice(start, pos)];\n                pos += 8;\n            } else if (NoChildNodes.indexOf(tagName) === -1) {\n                pos++;\n                // dash.js - BEGIN\n                // Add parent to parseChildren()\n                children = parseChildren(tagName, node);\n                // dash.js - END\n            } else {\n                pos++\n            }\n        } else {\n            pos++;\n        }\n        // dash.js - BEGIN\n        node.__children = children;\n        return node;\n        // dash.js - END\n    }\n\n    /**\n     *    is parsing a string, that starts with a char and with the same usually  ' or \"\n     */\n\n    function parseString() {\n        var startChar = S[pos];\n        var startpos = pos + 1;\n        pos = S.indexOf(startChar, startpos)\n        return S.slice(startpos, pos);\n    }\n\n    /**\n     *\n     */\n    function findElements() {\n        var r = new RegExp('\\\\s' + options.attrName + '\\\\s*=[\\'\"]' + options.attrValue + '[\\'\"]').exec(S)\n        if (r) {\n            return r.index;\n        } else {\n            return -1;\n        }\n    }\n\n    var out = null;\n    if (options.attrValue !== undefined) {\n        options.attrName = options.attrName || 'id';\n        var out = [];\n\n        while ((pos = findElements()) !== -1) {\n            pos = S.lastIndexOf('<', pos);\n            if (pos !== -1) {\n                out.push(parseNode());\n            }\n            S = S.substr(pos);\n            pos = 0;\n        }\n    } else if (options.parseNode) {\n        out = parseNode()\n    } else {\n        out = parseChildren('');\n    }\n\n    if (options.filter) {\n        out = filter(out, options.filter);\n    }\n\n    if (options.simplify) {\n        return simplify(Array.isArray(out) ? out : [out]);\n    }\n\n    if (options.setPos) {\n        out.pos = pos;\n    }\n\n    return out;\n}\n\n/**\n * transform the DomObject to an object that is like the object of PHP`s simple_xmp_load_*() methods.\n * this format helps you to write that is more likely to keep your program working, even if there a small changes in the XML schema.\n * be aware, that it is not possible to reproduce the original xml from a simplified version, because the order of elements is not saved.\n * therefore your program will be more flexible and easier to read.\n *\n * @param {tNode[]} children the childrenList\n */\nexport function simplify(children) {\n    var out = {};\n    if (!children.length) {\n        return '';\n    }\n\n    if (children.length === 1 && typeof children[0] == 'string') {\n        return children[0];\n    }\n    // map each object\n    children.forEach(function(child) {\n        if (typeof child !== 'object') {\n            return;\n        }\n        if (!out[child.tagName])\n            out[child.tagName] = [];\n        var kids = simplify(child.children);\n        out[child.tagName].push(kids);\n        if (Object.keys(child.attributes).length && typeof kids !== 'string') {\n            kids._attributes = child.attributes;\n        }\n    });\n\n    for (var i in out) {\n        if (out[i].length == 1) {\n            out[i] = out[i][0];\n        }\n    }\n\n    return out;\n};\n\n\n/**\n * similar to simplify, but lost less\n *\n * @param {tNode[]} children the childrenList\n */\nexport function simplifyLostLess(children, parentAttributes = {}) {\n    var out = {};\n    if (!children.length) {\n        return out;\n    }\n\n    if (children.length === 1 && typeof children[0] == 'string') {\n        return Object.keys(parentAttributes).length ? {\n            _attributes: parentAttributes,\n            value: children[0]\n        } : children[0];\n    }\n    // map each object\n    children.forEach(function(child) {\n        if (typeof child !== 'object') {\n            return;\n        }\n        if (!out[child.tagName])\n            out[child.tagName] = [];\n        var kids = simplifyLostLess(child.children || [], child.attributes);\n        out[child.tagName].push(kids);\n        if (Object.keys(child.attributes).length) {\n            kids._attributes = child.attributes;\n        }\n    });\n\n    return out;\n};\n\n/**\n * behaves the same way as Array.filter, if the filter method return true, the element is in the resultList\n * @params children{Array} the children of a node\n * @param f{function} the filter method\n */\nexport function filter(children, f, dept = 0, path = '') {\n    var out = [];\n    children.forEach(function(child, i) {\n        if (typeof(child) === 'object' && f(child, i, dept, path)) out.push(child);\n        if (child.children) {\n            var kids = filter(child.children, f, dept + 1, (path ? path + '.' : '') + i + '.' + child.tagName);\n            out = out.concat(kids);\n        }\n    });\n    return out;\n};\n\n/**\n * stringify a previously parsed string object.\n * this is useful,\n *  1. to remove whitespace\n * 2. to recreate xml data, with some changed data.\n * @param {tNode} O the object to Stringify\n */\nexport function stringify(O) {\n    var out = '';\n\n    function writeChildren(O) {\n        if (O) {\n            for (var i = 0; i < O.length; i++) {\n                if (typeof O[i] == 'string') {\n                    out += O[i].trim();\n                } else {\n                    writeNode(O[i]);\n                }\n            }\n        }\n    }\n\n    function writeNode(N) {\n        out += \"<\" + N.tagName;\n        for (var i in N.attributes) {\n            if (N.attributes[i] === null) {\n                out += ' ' + i;\n            } else if (N.attributes[i].indexOf('\"') === -1) {\n                out += ' ' + i + '=\"' + N.attributes[i].trim() + '\"';\n            } else {\n                out += ' ' + i + \"='\" + N.attributes[i].trim() + \"'\";\n            }\n        }\n        if (N.tagName[0] === '?') {\n            out += '?>';\n            return;\n        }\n        out += '>';\n        writeChildren(N.children);\n        out += '</' + N.tagName + '>';\n    }\n    writeChildren(O);\n\n    return out;\n};\n\n\n/**\n * use this method to read the text content, of some node.\n * It is great if you have mixed content like:\n * this text has some <b>big</b> text and a <a href=''>link</a>\n * @return {string}\n */\nexport function toContentString(tDom) {\n    if (Array.isArray(tDom)) {\n        var out = '';\n        tDom.forEach(function(e) {\n            out += ' ' + toContentString(e);\n            out = out.trim();\n        });\n        return out;\n    } else if (typeof tDom === 'object') {\n        return toContentString(tDom.children)\n    } else {\n        return ' ' + tDom;\n    }\n};\n\nexport function getElementById(S, id, simplified) {\n    var out = parse(S, {\n        attrValue: id\n    });\n    return simplified ? tXml.simplify(out) : out[0];\n};\n\nexport function getElementsByClassName(S, classname, simplified) {\n    const out = parse(S, {\n        attrName: 'class',\n        attrValue: '[a-zA-Z0-9- ]*' + classname + '[a-zA-Z0-9- ]*'\n    });\n    return simplified ? tXml.simplify(out) : out;\n};\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport FactoryMaker from '../../core/FactoryMaker.js';\nimport DashConstants from '../constants/DashConstants.js';\nimport ObjectIron from './objectiron.js';\nimport DurationMatcher from './matchers/DurationMatcher.js';\nimport DateTimeMatcher from './matchers/DateTimeMatcher.js';\nimport NumericMatcher from './matchers/NumericMatcher.js';\nimport LangMatcher from './matchers/LangMatcher.js';\nimport RepresentationBaseValuesMap from './maps/RepresentationBaseValuesMap.js';\nimport SegmentValuesMap from './maps/SegmentValuesMap.js';\nimport * as tXml from '../../../externals/tXml.js';\n\n// List of node that shall be represented as arrays\nconst arrayNodes = [\n    DashConstants.PERIOD,\n    DashConstants.BASE_URL,\n    DashConstants.ADAPTATION_SET,\n    DashConstants.REPRESENTATION,\n    DashConstants.CONTENT_PROTECTION,\n    DashConstants.ROLE,\n    DashConstants.ACCESSIBILITY,\n    DashConstants.AUDIO_CHANNEL_CONFIGURATION,\n    DashConstants.CONTENT_COMPONENT,\n    DashConstants.ESSENTIAL_PROPERTY,\n    DashConstants.LABEL,\n    DashConstants.S,\n    DashConstants.SEGMENT_URL,\n    DashConstants.EVENT,\n    DashConstants.EVENT_STREAM,\n    DashConstants.LOCATION,\n    DashConstants.SERVICE_DESCRIPTION,\n    DashConstants.SUPPLEMENTAL_PROPERTY,\n    DashConstants.METRICS,\n    DashConstants.REPORTING,\n    DashConstants.PATCH_LOCATION,\n    DashConstants.REPLACE,\n    DashConstants.ADD,\n    DashConstants.REMOVE,\n    DashConstants.UTC_TIMING,\n    DashConstants.INBAND_EVENT_STREAM,\n    DashConstants.PRODUCER_REFERENCE_TIME,\n    DashConstants.CONTENT_STEERING\n];\n\nfunction DashParser(config) {\n\n    config = config || {};\n    const context = this.context;\n    const debug = config.debug;\n\n    let instance,\n        logger,\n        matchers,\n        objectIron;\n\n    function setup() {\n        logger = debug.getLogger(instance);\n        matchers = [\n            new DurationMatcher(),\n            new DateTimeMatcher(),\n            new NumericMatcher(),\n            new LangMatcher()\n        ];\n\n        objectIron = ObjectIron(context).create({\n            adaptationset: new RepresentationBaseValuesMap(),\n            period: new SegmentValuesMap()\n        });\n    }\n\n    function getIron() {\n        return objectIron;\n    }\n\n    function parse(data) {\n        let manifest;\n        const startTime = window.performance.now();\n\n        manifest = parseXml(data);\n\n        if (!manifest) {\n            throw new Error('failed to parse the manifest');\n        }\n\n        // handle full MPD and Patch ironing separately\n        if (manifest.Patch) {\n            manifest = manifest.Patch; // drop root reference\n            // apply iron to patch operations individually\n            if (manifest.add) {\n                manifest.add.forEach((operand) => objectIron.run(operand));\n            }\n            if (manifest.replace) {\n                manifest.replace.forEach((operand) => objectIron.run(operand));\n            }\n            // note that we don't need to iron remove as they contain no children\n        } else {\n            manifest = manifest.MPD; // drop root reference\n            objectIron.run(manifest);\n        }\n\n        const parsedTime = window.performance.now();\n        logger.info('Parsing complete: ' + (parsedTime - startTime).toPrecision(3) + 'ms');\n\n        manifest.protocol = 'DASH';\n\n        return manifest;\n    }\n\n\n    function parseXml(data) {\n        try {\n            let root = tXml.parse(data, {\n                parseNode: true,\n                attrMatchers: matchers,\n                nodesAsArray: arrayNodes\n            });\n            let ret = {};\n            // If root element is xml node, then get first child node as root\n            if (root.tagName.toLowerCase().indexOf('xml') !== -1) {\n                for (let key in root) {\n                    if (Array.isArray(root[key])) {\n                        ret[key] = root[key][0];\n                        break;\n                    } else if (typeof root[key] === 'object') {\n                        ret[key] = root[key];\n                        break;\n                    }\n                }\n            } else {\n                ret[root.tagName] = root;\n                delete root.tagName;\n            }\n            return ret;\n        } catch (e) {\n            return null;\n        }\n    }\n\n    instance = {\n        getIron: getIron,\n        parseXml: parseXml,\n        parse: parse\n    };\n\n    setup();\n\n    return instance;\n}\n\nDashParser.__dashjs_factory_name = 'DashParser';\nexport default FactoryMaker.getClassFactory(DashParser);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport Constants from './constants/Constants.js';\nimport DashConstants from '../dash/constants/DashConstants.js';\nimport XlinkController from './controllers/XlinkController.js';\nimport URLLoader from './net/URLLoader.js';\nimport URLUtils from './utils/URLUtils.js';\nimport TextRequest from './vo/TextRequest.js';\nimport DashJSError from './vo/DashJSError.js';\nimport {HTTPRequest} from './vo/metrics/HTTPRequest.js';\nimport EventBus from '../core/EventBus.js';\nimport Events from '../core/events/Events.js';\nimport Errors from '../core/errors/Errors.js';\nimport FactoryMaker from '../core/FactoryMaker.js';\nimport DashParser from '../dash/parser/DashParser.js';\n\nfunction ManifestLoader(config) {\n\n    config = config || {};\n    const context = this.context;\n    const debug = config.debug;\n    const settings = config.settings;\n    const eventBus = EventBus(context).getInstance();\n    const urlUtils = URLUtils(context).getInstance();\n\n    let instance,\n        logger,\n        urlLoader,\n        xlinkController,\n        parser;\n\n    let mssHandler = config.mssHandler;\n    let errHandler = config.errHandler;\n\n    function setup() {\n        logger = debug.getLogger(instance);\n        eventBus.on(Events.XLINK_READY, onXlinkReady, instance);\n\n        urlLoader = URLLoader(context).create({\n            errHandler: config.errHandler,\n            dashMetrics: config.dashMetrics,\n            mediaPlayerModel: config.mediaPlayerModel,\n            urlUtils: urlUtils,\n            constants: Constants,\n            dashConstants: DashConstants,\n            errors: Errors,\n            requestTimeout: config.settings.get().streaming.manifestRequestTimeout\n        });\n\n        xlinkController = XlinkController(context).create({\n            errHandler: errHandler,\n            dashMetrics: config.dashMetrics,\n            mediaPlayerModel: config.mediaPlayerModel,\n            settings: config.settings\n        });\n\n        parser = null;\n    }\n\n    function onXlinkReady(event) {\n        eventBus.trigger(Events.INTERNAL_MANIFEST_LOADED, { manifest: event.manifest });\n    }\n\n    function createParser(data) {\n        let parser = null;\n        // Analyze manifest content to detect protocol and select appropriate parser\n        if (data.indexOf('SmoothStreamingMedia') > -1) {\n            //do some business to transform it into a Dash Manifest\n            if (mssHandler) {\n                parser = mssHandler.createMssParser();\n                mssHandler.createMssFragmentProcessor();\n                mssHandler.registerEvents();\n            }\n            return parser;\n        } else if (data.indexOf('MPD') > -1 || data.indexOf('Patch') > -1) {\n            return DashParser(context).create({ debug: debug });\n        } else {\n            return parser;\n        }\n    }\n\n    function load(url, serviceLocation = null, queryParams = null) {\n\n        const requestStartDate = new Date();\n        const request = new TextRequest(url, HTTPRequest.MPD_TYPE);\n\n        if (serviceLocation) {\n            request.serviceLocation = serviceLocation;\n        }\n\n        if (queryParams) {\n            request.queryParams = queryParams;\n        }\n\n        if (!request.startDate) {\n            request.startDate = requestStartDate;\n        }\n\n        eventBus.trigger(\n            Events.MANIFEST_LOADING_STARTED, {\n                request\n            }\n        );\n\n        urlLoader.load({\n            request: request,\n            success: function (data, textStatus, responseURL) {\n                // Manage situations in which success is called after calling reset\n                if (!xlinkController) {\n                    return;\n                }\n\n                let actualUrl,\n                    baseUri,\n                    manifest;\n\n                // Handle redirects for the MPD - as per RFC3986 Section 5.1.3\n                // also handily resolves relative MPD URLs to absolute\n                if (responseURL && responseURL !== url) {\n                    baseUri = urlUtils.parseBaseUrl(responseURL);\n                    actualUrl = responseURL;\n                } else {\n                    // usually this case will be caught and resolved by\n                    // responseURL above but it is not available for IE11 and Edge/12 and Edge/13\n                    // baseUri must be absolute for BaseURL resolution later\n                    if (urlUtils.isRelative(url)) {\n                        url = urlUtils.resolve(url, window.location.href);\n                    }\n\n                    baseUri = urlUtils.parseBaseUrl(url);\n                }\n\n                // A response of no content implies in-memory is properly up to date\n                if (textStatus == 'No Content') {\n                    eventBus.trigger(\n                        Events.INTERNAL_MANIFEST_LOADED, {\n                            manifest: null\n                        }\n                    );\n                    return;\n                }\n\n                // Create parser according to manifest type\n                if (parser === null) {\n                    parser = createParser(data);\n                }\n\n                if (parser === null) {\n                    eventBus.trigger(Events.INTERNAL_MANIFEST_LOADED, {\n                        manifest: null,\n                        error: new DashJSError(\n                            Errors.MANIFEST_LOADER_PARSING_FAILURE_ERROR_CODE,\n                            Errors.MANIFEST_LOADER_PARSING_FAILURE_ERROR_MESSAGE + `${url}`\n                        )\n                    });\n                    return;\n                }\n\n                // init xlinkcontroller with created parser\n                xlinkController.setParser(parser);\n\n                try {\n                    manifest = parser.parse(data);\n                } catch (e) {\n                    eventBus.trigger(Events.INTERNAL_MANIFEST_LOADED, {\n                        manifest: null,\n                        error: new DashJSError(\n                            Errors.MANIFEST_LOADER_PARSING_FAILURE_ERROR_CODE,\n                            Errors.MANIFEST_LOADER_PARSING_FAILURE_ERROR_MESSAGE + `${url}`\n                        )\n                    });\n                    return;\n                }\n\n                if (manifest) {\n                    manifest.url = actualUrl || url;\n\n                    // URL from which the MPD was originally retrieved (MPD updates will not change this value)\n                    if (!manifest.originalUrl) {\n                        manifest.originalUrl = manifest.url;\n                    }\n\n                    // If there is a mismatch between the manifest's specified duration and the total duration of all periods,\n                    // and the specified duration is greater than the total duration of all periods,\n                    // overwrite the manifest's duration attribute. This is a patch for if a manifest is generated incorrectly.\n                    if (settings &&\n                        settings.get().streaming.enableManifestDurationMismatchFix &&\n                        manifest.mediaPresentationDuration &&\n                        manifest.Period.length > 1) {\n                        const sumPeriodDurations = manifest.Period.reduce((totalDuration, period) => totalDuration + period.duration, 0);\n                        if (!isNaN(sumPeriodDurations) && manifest.mediaPresentationDuration > sumPeriodDurations) {\n                            logger.warn('Media presentation duration greater than duration of all periods. Setting duration to total period duration');\n                            manifest.mediaPresentationDuration = sumPeriodDurations;\n                        }\n                    }\n\n                    manifest.baseUri = baseUri;\n                    manifest.loadedTime = new Date();\n                    xlinkController.resolveManifestOnLoad(manifest);\n\n                    eventBus.trigger(Events.ORIGINAL_MANIFEST_LOADED, { originalManifest: data });\n                } else {\n                    eventBus.trigger(Events.INTERNAL_MANIFEST_LOADED, {\n                        manifest: null,\n                        error: new DashJSError(\n                            Errors.MANIFEST_LOADER_PARSING_FAILURE_ERROR_CODE,\n                            Errors.MANIFEST_LOADER_PARSING_FAILURE_ERROR_MESSAGE + `${url}`\n                        )\n                    });\n                }\n            },\n            error: function (request, statusText, errorText) {\n                eventBus.trigger(Events.INTERNAL_MANIFEST_LOADED, {\n                    manifest: null,\n                    error: new DashJSError(\n                        Errors.MANIFEST_LOADER_LOADING_FAILURE_ERROR_CODE,\n                        Errors.MANIFEST_LOADER_LOADING_FAILURE_ERROR_MESSAGE + `${url}, ${errorText}`\n                    )\n                });\n            }\n        });\n    }\n\n    function reset() {\n        eventBus.off(Events.XLINK_READY, onXlinkReady, instance);\n\n        if (mssHandler) {\n            mssHandler.reset();\n        }\n\n        if (xlinkController) {\n            xlinkController.reset();\n            xlinkController = null;\n        }\n\n        if (urlLoader) {\n            urlLoader.abort();\n            urlLoader = null;\n        }\n    }\n\n    instance = {\n        load: load,\n        reset: reset\n    };\n\n    setup();\n\n    return instance;\n}\n\nManifestLoader.__dashjs_factory_name = 'ManifestLoader';\n\nconst factory = FactoryMaker.getClassFactory(ManifestLoader);\nexport default factory;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport EventBus from '../../core/EventBus.js';\nimport Events from '../../core/events/Events.js';\nimport FactoryMaker from '../../core/FactoryMaker.js';\n\n/**\n * @module ErrorHandler\n * @ignore\n */\nfunction ErrorHandler() {\n\n    let instance;\n    const context = this.context;\n    const eventBus = EventBus(context).getInstance();\n\n    /**\n     * @param {object} err DashJSError with code, message and data attributes\n     * @memberof module:ErrorHandler\n     */\n    function error(err) {\n        eventBus.trigger(Events.ERROR, { error: err });\n    }\n    instance = {\n        error: error\n    };\n\n    return instance;\n}\n\nErrorHandler.__dashjs_factory_name = 'ErrorHandler';\nexport default FactoryMaker.getSingletonFactory(ErrorHandler);\n","import FactoryMaker from '../../core/FactoryMaker.js';\nimport Debug from '../../core/Debug.js';\nimport Constants from '../constants/Constants.js';\nimport EventBus from '../../core/EventBus.js';\nimport Events from '../../core/events/Events.js';\nimport DashConstants from '../../dash/constants/DashConstants.js';\n\nfunction CapabilitiesFilter() {\n\n    const context = this.context;\n    const eventBus = EventBus(context).getInstance();\n\n    let instance,\n        adapter,\n        capabilities,\n        settings,\n        customParametersModel,\n        protectionController,\n        logger;\n\n\n    function setup() {\n        logger = Debug(context).getInstance().getLogger(instance);\n    }\n\n    function setConfig(config) {\n        if (!config) {\n            return;\n        }\n\n        if (config.adapter) {\n            adapter = config.adapter;\n        }\n\n        if (config.capabilities) {\n            capabilities = config.capabilities;\n        }\n\n        if (config.settings) {\n            settings = config.settings;\n        }\n\n        if (config.protectionController) {\n            protectionController = config.protectionController;\n        }\n\n        if (config.customParametersModel) {\n            customParametersModel = config.customParametersModel;\n        }\n\n    }\n\n    function filterUnsupportedFeatures(manifest) {\n        return new Promise((resolve) => {\n            const mediaTypesToCheck = [Constants.VIDEO, Constants.AUDIO];\n            const promises = [];\n\n            // We determine all the configurations we need to check. Each unique configuration should only be checked once.\n            // This is important especially for large multiperiod MPDs. A redundant configuration check can lead to increased processing time.\n            mediaTypesToCheck.forEach(mediaType => {\n                const configurationsToCheck = _getConfigurationsToCheck(manifest, mediaType);\n                configurationsToCheck.forEach(basicConfiguration => {\n                    promises.push(capabilities.runCodecSupportCheck(basicConfiguration, mediaType));\n                })\n            })\n\n\n            Promise.allSettled(promises)\n                .then(() => {\n                    mediaTypesToCheck.forEach((mediaType) => {\n                        _filterUnsupportedCodecs(mediaType, manifest)\n                    })\n\n                    if (settings.get().streaming.capabilities.filterUnsupportedEssentialProperties) {\n                        _filterUnsupportedEssentialProperties(manifest);\n                    }\n                    return _applyCustomFilters(manifest);\n                })\n                .then(() => {\n                    resolve();\n                })\n                .catch((e) => {\n                    logger.error(e);\n                    resolve();\n                });\n        });\n    }\n\n\n    function _filterUnsupportedCodecs(type, manifest) {\n        if (!manifest || !manifest.Period || manifest.Period.length === 0) {\n            return\n        }\n\n        manifest.Period\n            .forEach((period) => {\n                _filterUnsupportedAdaptationSetsOfPeriod(period, type);\n            })\n    }\n\n    function _filterUnsupportedAdaptationSetsOfPeriod(period, type) {\n        if (!period || !period.AdaptationSet || period.AdaptationSet.length === 0) {\n            return;\n        }\n\n        period.AdaptationSet = period.AdaptationSet.filter((as) => {\n            if (adapter.getIsTypeOf(as, type)) {\n                _filterUnsupportedRepresentationsOfAdaptation(as, type);\n            }\n            const supported = as.Representation && as.Representation.length > 0;\n            if (!supported) {\n                eventBus.trigger(Events.ADAPTATION_SET_REMOVED_NO_CAPABILITIES, {\n                    adaptationSet: as\n                });\n                logger.warn(`[CapabilitiesFilter] AdaptationSet with ID ${as.id ? as.id : 'undefined'} and codec ${as.codecs ? as.codecs : 'undefined'} has been removed because of no supported Representation`);\n            }\n\n            return supported;\n        })\n    }\n\n    function _filterUnsupportedRepresentationsOfAdaptation(as, type) {\n        if (!as.Representation || as.Representation.length === 0) {\n            return;\n        }\n\n        as.Representation = as.Representation.filter((rep, i) => {\n            const codec = adapter.getCodec(as, i, false);\n            const isMainCodecSupported = _isCodecSupported(type, rep, codec);\n\n            let isSupplementalCodecSupported = _isSupplementalCodecSupported(rep, type);\n            if (isSupplementalCodecSupported) {\n                logger.debug(`[CapabilitiesFilter] Codec supported. Upgrading codecs string of Representation with ID ${rep.id}`);\n                rep.codecs = rep[DashConstants.SUPPLEMENTAL_CODECS]\n            }\n\n            if (!isMainCodecSupported && !isSupplementalCodecSupported) {\n                logger.warn(`[CapabilitiesFilter] Codec ${codec} not supported. Removing Representation with ID ${rep.id}`);\n            }\n\n            return isMainCodecSupported || isSupplementalCodecSupported;\n        });\n    }\n\n    function _isSupplementalCodecSupported(rep, type) {\n        let isSupplementalCodecSupported = false;\n        const supplementalCodecs = adapter.getSupplementalCodecs(rep);\n\n        if (supplementalCodecs.length > 0) {\n            if (supplementalCodecs.length > 1) {\n                logger.warn(`[CapabilitiesFilter] Multiple supplemental codecs not supported; using the first in list`);\n            }\n            const supplementalCodec = supplementalCodecs[0];\n            isSupplementalCodecSupported = _isCodecSupported(type, rep, supplementalCodec);\n        }\n\n        return isSupplementalCodecSupported\n    }\n\n    function _isCodecSupported(type, rep, codec) {\n        const config = _createConfiguration(type, rep, codec);\n\n        return capabilities.isCodecSupportedBasedOnTestedConfigurations(config, type);\n    }\n\n    function _getConfigurationsToCheck(manifest, type) {\n        if (!manifest || !manifest.Period || manifest.Period.length === 0) {\n            return [];\n        }\n\n        const configurationsSet = new Set();\n        const configurations = [];\n\n        manifest.Period.forEach((period) => {\n            period.AdaptationSet.forEach((as) => {\n                if (adapter.getIsTypeOf(as, type)) {\n                    as.Representation.forEach((rep, i) => {\n                        const codec = adapter.getCodec(as, i, false);\n                        _processCodecToCheck(type, rep, codec, configurationsSet, configurations);\n\n                        const supplementalCodecs = adapter.getSupplementalCodecs(rep)\n                        if (supplementalCodecs.length > 0) {\n                            _processCodecToCheck(type, rep, supplementalCodecs[0], configurationsSet, configurations);\n                        }\n                    });\n                }\n            });\n        });\n\n        return configurations;\n    }\n\n    function _processCodecToCheck(type, rep, codec, configurationsSet, configurations) {\n        const config = _createConfiguration(type, rep, codec);\n        const configString = JSON.stringify(config);\n\n        if (!configurationsSet.has(configString)) {\n            configurationsSet.add(configString);\n            configurations.push(config);\n        }\n    }\n\n    function _createConfiguration(type, rep, codec) {\n        let config = null;\n        switch (type) {\n            case Constants.VIDEO:\n                config = _createVideoConfiguration(rep, codec);\n                break;\n            case Constants.AUDIO:\n                config = _createAudioConfiguration(rep, codec);\n                break;\n            default:\n                return config;\n        }\n\n        return _addGenericAttributesToConfig(rep, config);\n    }\n\n    function _createVideoConfiguration(rep, codec) {\n        let config = {\n            codec: codec,\n            width: rep.width || null,\n            height: rep.height || null,\n            framerate: rep.frameRate || null,\n            bitrate: rep.bandwidth || null,\n            isSupported: true\n        }\n        if (settings.get().streaming.capabilities.filterVideoColorimetryEssentialProperties) {\n            Object.assign(config, _convertHDRColorimetryToConfig(rep));\n        }\n        let colorimetrySupported = config.isSupported;\n\n        if (settings.get().streaming.capabilities.filterHDRMetadataFormatEssentialProperties) {\n            Object.assign(config, _convertHDRMetadataFormatToConfig(rep));\n        }\n        let metadataFormatSupported = config.isSupported;\n\n        if (!colorimetrySupported || !metadataFormatSupported) {\n            config.isSupported = false; // restore this flag as it may got overridden by 2nd Object.assign\n        }\n\n        return config;\n    }\n\n    function _convertHDRColorimetryToConfig(representation) {\n        let cfg = {\n            colorGamut: null,\n            transferFunction: null,\n            isSupported: true\n        };\n\n        for (const prop of representation.EssentialProperty || []) {\n\n            // note: MCA does not reflect a parameter related to 'urn:mpeg:mpegB:cicp:VideoFullRangeFlag'\n\n            // translate ColourPrimaries signaling into capability queries\n            if (prop.schemeIdUri === Constants.COLOUR_PRIMARIES_SCHEME_ID_URI && ['1', '5', '6', '7'].includes(prop.value.toString())) {\n                cfg.colorGamut = Constants.MEDIA_CAPABILITIES_API.COLORGAMUT.SRGB;\n            } else if (prop.schemeIdUri === Constants.COLOUR_PRIMARIES_SCHEME_ID_URI && ['11', '12'].includes(prop.value.toString())) {\n                cfg.colorGamut = Constants.MEDIA_CAPABILITIES_API.COLORGAMUT.P3;\n            } else if (prop.schemeIdUri === Constants.COLOUR_PRIMARIES_SCHEME_ID_URI && ['9'].includes(prop.value.toString())) {\n                cfg.colorGamut = Constants.MEDIA_CAPABILITIES_API.COLORGAMUT.REC2020;\n            } else if (prop.schemeIdUri === Constants.COLOUR_PRIMARIES_SCHEME_ID_URI && ['2'].includes(prop.value.toString())) {\n                cfg.colorGamut = null;\n            } else if (prop.schemeIdUri === Constants.COLOUR_PRIMARIES_SCHEME_ID_URI) {\n                cfg.isSupported = false;\n            }\n\n            // translate TransferCharacteristics signaling into capability queries\n            if (prop.schemeIdUri === Constants.TRANSFER_CHARACTERISTICS_SCHEME_ID_URI && ['1', '6', '13', '14', '15'].includes(prop.value.toString())) {\n                cfg.transferFunction = Constants.MEDIA_CAPABILITIES_API.TRANSFERFUNCTION.SRGB;\n            } else if (prop.schemeIdUri === Constants.TRANSFER_CHARACTERISTICS_SCHEME_ID_URI && ['16'].includes(prop.value.toString())) {\n                cfg.transferFunction = Constants.MEDIA_CAPABILITIES_API.TRANSFERFUNCTION.PQ;\n            } else if (prop.schemeIdUri === Constants.TRANSFER_CHARACTERISTICS_SCHEME_ID_URI && ['18'].includes(prop.value.toString())) {\n                cfg.transferFunction = Constants.MEDIA_CAPABILITIES_API.TRANSFERFUNCTION.HLG;\n            } else if (prop.schemeIdUri === Constants.TRANSFER_CHARACTERISTICS_SCHEME_ID_URI && ['2'].includes(prop.value.toString())) {\n                cfg.transferFunction = null;\n            } else if (prop.schemeIdUri === Constants.TRANSFER_CHARACTERISTICS_SCHEME_ID_URI) {\n                cfg.isSupported = false;\n            }\n        }\n\n        return cfg;\n    }\n\n    function _convertHDRMetadataFormatToConfig(representation) {\n        let cfg = {\n            isSupported: true,\n            hdrMetadataType: null\n        };\n\n        for (const prop of representation.EssentialProperty || []) {\n            // translate hdrMetadataType signaling into capability queries\n            if (prop.schemeIdUri === Constants.HDR_METADATA_FORMAT_SCHEME_ID_URI && prop.value === Constants.HDR_METADATA_FORMAT_VALUES.ST2094_10) {\n                cfg.hdrMetadataType = Constants.MEDIA_CAPABILITIES_API.HDR_METADATATYPE.SMPTE_ST_2094_10;\n            } else if (prop.schemeIdUri === Constants.HDR_METADATA_FORMAT_SCHEME_ID_URI && prop.value === Constants.HDR_METADATA_FORMAT_VALUES.SL_HDR2) {\n                cfg.hdrMetadataType = Constants.MEDIA_CAPABILITIES_API.HDR_METADATATYPE.SLHDR2; // Note: This is not specified by W3C\n            } else if (prop.schemeIdUri === Constants.HDR_METADATA_FORMAT_SCHEME_ID_URI && prop.value === Constants.HDR_METADATA_FORMAT_VALUES.ST2094_40) {\n                cfg.hdrMetadataType = Constants.MEDIA_CAPABILITIES_API.HDR_METADATATYPE.SMPTE_ST_2094_40;\n            } else if (prop.schemeIdUri === Constants.HDR_METADATA_FORMAT_SCHEME_ID_URI) {\n                cfg.isSupported = false;\n            }\n        }\n\n        return cfg;\n    }\n\n    function _createAudioConfiguration(rep, codec) {\n        const samplerate = rep.audioSamplingRate || null;\n        const bitrate = rep.bandwidth || null;\n\n        return {\n            codec,\n            bitrate,\n            samplerate,\n            isSupported: true\n        };\n    }\n\n    function _addGenericAttributesToConfig(rep, config) {\n        if (rep && rep[DashConstants.CONTENT_PROTECTION] && rep[DashConstants.CONTENT_PROTECTION].length > 0) {\n            config.keySystemsMetadata = protectionController.getSupportedKeySystemMetadataFromContentProtection(rep[DashConstants.CONTENT_PROTECTION])\n        }\n        return config\n    }\n\n    function _filterUnsupportedEssentialProperties(manifest) {\n\n        if (!manifest || !manifest.Period || manifest.Period.length === 0) {\n            return;\n        }\n\n        manifest.Period.forEach((period) => {\n            period.AdaptationSet = period.AdaptationSet.filter((as) => {\n\n                if (!as.Representation || as.Representation.length === 0) {\n                    return true;\n                }\n\n                const adaptationSetEssentialProperties = adapter.getEssentialPropertiesForAdaptationSet(as);\n                const doesSupportEssentialProperties = _doesSupportEssentialProperties(adaptationSetEssentialProperties);\n\n                if (!doesSupportEssentialProperties) {\n                    return false;\n                }\n\n                as.Representation = as.Representation.filter((rep) => {\n                    const essentialProperties = adapter.getEssentialPropertiesForRepresentation(rep);\n                    return _doesSupportEssentialProperties(essentialProperties);\n                });\n\n                return as.Representation && as.Representation.length > 0;\n            });\n        });\n    }\n\n    function _doesSupportEssentialProperties(essentialProperties) {\n        if (!essentialProperties || essentialProperties.length === 0) {\n            return true\n        }\n\n        let i = 0;\n        while (i < essentialProperties.length) {\n            if (!capabilities.supportsEssentialProperty(essentialProperties[i])) {\n                logger.debug('[Stream] EssentialProperty not supported: ' + essentialProperties[i].schemeIdUri);\n                return false;\n            }\n            i += 1;\n        }\n\n        return true\n    }\n\n    function _applyCustomFilters(manifest) {\n        if (!manifest || !manifest.Period || manifest.Period.length === 0) {\n            return Promise.resolve();\n        }\n\n        const promises = [];\n        manifest.Period.forEach((period) => {\n            promises.push(_applyCustomFiltersAdaptationSetsOfPeriod(period));\n        });\n\n        return Promise.all(promises);\n    }\n\n    function _applyCustomFiltersAdaptationSetsOfPeriod(period) {\n        return new Promise((resolve) => {\n\n            if (!period || !period.AdaptationSet || period.AdaptationSet.length === 0) {\n                resolve();\n                return;\n            }\n\n            const promises = [];\n            period.AdaptationSet.forEach((as) => {\n                promises.push(_applyCustomFiltersRepresentationsOfAdaptation(as));\n            });\n\n            Promise.all(promises)\n                .then(() => {\n                    period.AdaptationSet = period.AdaptationSet.filter((as) => {\n                        return as.Representation && as.Representation.length > 0;\n                    });\n                    resolve();\n                })\n                .catch(() => {\n                    resolve();\n                });\n        });\n\n    }\n\n    function _applyCustomFiltersRepresentationsOfAdaptation(as) {\n        return new Promise((resolve) => {\n\n            if (!as.Representation || as.Representation.length === 0) {\n                resolve();\n                return;\n            }\n\n            const promises = [];\n            as.Representation.forEach((rep) => {\n                promises.push(_applyCustomFiltersRepresentation(rep));\n            });\n\n            Promise.all(promises)\n                .then((supported) => {\n                    as.Representation = as.Representation.filter((rep, i) => {\n                        let isReprSupported = supported[i].every((s) => {\n                            return s\n                        });\n                        if (!isReprSupported) {\n                            logger.debug('[Stream] Representation ' + rep.id + ' has been removed because of unsupported CustomFilter');\n                        }\n                        return isReprSupported;\n                    });\n                    resolve();\n                })\n                .catch((err) => {\n                    logger.warn('[Stream] at least one promise rejected in CustomFilter with error: ', err);\n                    resolve();\n                });\n        });\n\n    }\n\n    function _applyCustomFiltersRepresentation(rep) {\n        const promises = [];\n        const customCapabilitiesFilters = customParametersModel.getCustomCapabilitiesFilters();\n\n        if (!customCapabilitiesFilters || customCapabilitiesFilters.length === 0) {\n            promises.push(Promise.resolve(true));\n        } else {\n            customCapabilitiesFilters.forEach(customFilter => {\n                promises.push(new Promise(resolve => resolve(customFilter(rep))));\n            });\n        }\n\n        return Promise.all(promises)\n    }\n\n    instance = {\n        setConfig,\n        filterUnsupportedFeatures,\n    };\n\n    setup();\n\n    return instance;\n}\n\nCapabilitiesFilter.__dashjs_factory_name = 'CapabilitiesFilter';\nexport default FactoryMaker.getSingletonFactory(CapabilitiesFilter);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nclass URIFragmentData {\n    constructor() {\n        this.t = null;\n        this.xywh = null;\n        this.track = null;\n        this.id = null;\n        this.s = null;\n        this.r = null;\n    }\n}\n\nexport default URIFragmentData;\n\n/*\n    From Spec http://www.w3.org/TR/media-frags/\n\n    temporal (t)     - This dimension denotes a specific time range in the original media, such as \"starting at second 10, continuing until second 20\";\n    spatial  (xywh)  - this dimension denotes a specific range of pixels in the original media, such as \"a rectangle with size (100,100) with its top-left at coordinate (10,10)\";\n                       Media fragments support also addressing the media along two additional dimensions (in the advanced version defined in Media Fragments 1.0 URI (advanced)):\n    track    (track) - this dimension denotes one or more tracks in the original media, such as \"the english audio and the video track\";\n    id       (id)    - this dimension denotes a named temporal fragment within the original media, such as \"chapter 2\", and can be seen as a convenient way of specifying a temporal fragment.\n\n\n    ## Note\n    Akamai is purposing to add #s=X to the ISO standard.\n        - (X) Value would be a start time to seek to at startup instead of starting at 0 or live edge\n        - Allows for seeking back before the start time unlike a temporal clipping.\n*/","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport URIFragmentData from '../vo/URIFragmentData.js';\nimport FactoryMaker from '../../core/FactoryMaker.js';\n\n/**\n * Model class managing URI fragments.\n * @ignore\n */\nfunction URIFragmentModel() {\n\n    let instance,\n        URIFragmentDataVO;\n\n    /**\n     * @param {string} uri The URI to parse for fragment extraction\n     * @memberof module:URIFragmentModel\n     * @instance\n     */\n    function initialize(uri) {\n        URIFragmentDataVO = new URIFragmentData();\n\n        if (!uri) {\n            return null;\n        }\n\n        const hashIndex = uri.indexOf('#');\n        if (hashIndex !== -1) {\n            const fragments = uri.substr(hashIndex + 1).split('&');\n            for (let i = 0, len = fragments.length; i < len; ++i) {\n                const fragment = fragments[i];\n                const equalIndex = fragment.indexOf('=');\n                if (equalIndex !== -1) {\n                    const key = fragment.substring(0, equalIndex);\n                    if (URIFragmentDataVO.hasOwnProperty(key)) {\n                        URIFragmentDataVO[key] = fragment.substr(equalIndex + 1);\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @returns {URIFragmentData} Object containing supported URI fragments\n     * @memberof module:URIFragmentModel\n     * @instance\n     */\n    function getURIFragmentData() {\n        return URIFragmentDataVO;\n    }\n\n    instance = {\n        initialize: initialize,\n        getURIFragmentData: getURIFragmentData\n    };\n\n    return instance;\n}\n\nURIFragmentModel.__dashjs_factory_name = 'URIFragmentModel';\nexport default FactoryMaker.getSingletonFactory(URIFragmentModel);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport EventBus from '../../core/EventBus.js';\nimport Events from '../../core/events/Events.js';\nimport FactoryMaker from '../../core/FactoryMaker.js';\n\nfunction ManifestModel() {\n\n    let context = this.context;\n    let eventBus = EventBus(context).getInstance();\n\n    let instance,\n        manifest;\n\n    function getValue() {\n        return manifest;\n    }\n\n    function setValue(value) {\n        manifest = value;\n        if (value) {\n            eventBus.trigger(Events.MANIFEST_LOADED, { data: value });\n        }\n    }\n\n    instance = {\n        getValue: getValue,\n        setValue: setValue\n    };\n\n    return instance;\n}\n\nManifestModel.__dashjs_factory_name = 'ManifestModel';\nexport default FactoryMaker.getSingletonFactory(ManifestModel);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport Debug from '../../core/Debug.js';\nimport FactoryMaker from '../../core/FactoryMaker.js';\nimport Settings from '../../core/Settings.js';\n\nconst CATCHUP_PLAYBACK_RATE_MAX_LIMIT = 1;\nconst CATCHUP_PLAYBACK_RATE_MIN_LIMIT = -0.5;\nconst DEFAULT_CATCHUP_MAX_DRIFT = 12;\nconst DEFAULT_CATCHUP_PLAYBACK_RATE_MAX = 0.5;\nconst DEFAULT_CATCHUP_PLAYBACK_RATE_MIN = -0.5;\nconst DEFAULT_MIN_BUFFER_TIME = 12;\nconst DEFAULT_MIN_BUFFER_TIME_FAST_SWITCH = 20;\nconst LOW_LATENCY_MULTIPLY_FACTOR = 5;\nconst LOW_LATENCY_REDUCTION_FACTOR = 10;\n\n\n/**\n * We use this model as a wrapper/proxy between Settings.js and classes that are using parameters from Settings.js.\n * In some cases we require additional logic to be applied and the settings might need to be adjusted before being used.\n * @class\n * @ignore\n * @constructor\n */\nfunction MediaPlayerModel() {\n\n    let instance,\n        logger,\n        playbackController,\n        serviceDescriptionController;\n\n    const context = this.context;\n    const settings = Settings(context).getInstance();\n\n    function setup() {\n        logger = Debug(context).getInstance().getLogger(instance);\n    }\n\n    function setConfig(config) {\n        if (config.playbackController) {\n            playbackController = config.playbackController;\n        }\n        if (config.serviceDescriptionController) {\n            serviceDescriptionController = config.serviceDescriptionController;\n        }\n    }\n\n    /**\n     * Checks the supplied min playback rate is a valid vlaue and within supported limits\n     * @param {number} rate - Supplied min playback rate\n     * @param {boolean} log - wether to shown warning or not\n     * @returns {number} corrected min playback rate\n     */\n    function _checkMinPlaybackRate(rate, log) {\n        if (isNaN(rate)) {\n            return 0;\n        }\n        if (rate > 0) {\n            if (log) {\n                logger.warn(`Supplied minimum playback rate is a positive value when it should be negative or 0. The supplied rate will not be applied and set to 0: 100% playback speed.`)\n            }\n            return 0;\n        }\n        if (rate < CATCHUP_PLAYBACK_RATE_MIN_LIMIT) {\n            if (log) {\n                logger.warn(`Supplied minimum playback rate is out of range and will be limited to ${CATCHUP_PLAYBACK_RATE_MIN_LIMIT}: ${CATCHUP_PLAYBACK_RATE_MIN_LIMIT * 100}% playback speed.`);\n            }\n            return CATCHUP_PLAYBACK_RATE_MIN_LIMIT;\n        }\n        return rate;\n    };\n\n    /**\n     * Checks the supplied max playback rate is a valid vlaue and within supported limits\n     * @param {number} rate - Supplied max playback rate\n     * @param {boolean} log - wether to shown warning or not\n     * @returns {number} corrected max playback rate\n     */\n    function _checkMaxPlaybackRate(rate, log) {\n        if (isNaN(rate)) {\n            return 0;\n        }\n        if (rate < 0) {\n            if (log) {\n                logger.warn(`Supplied maximum playback rate is a negative value when it should be negative or 0. The supplied rate will not be applied and set to 0: 100% playback speed.`)\n            }\n            return 0;\n        }\n        if (rate > CATCHUP_PLAYBACK_RATE_MAX_LIMIT) {\n            if (log) {\n                logger.warn(`Supplied maximum playback rate is out of range and will be limited to ${CATCHUP_PLAYBACK_RATE_MAX_LIMIT}: ${(1 + CATCHUP_PLAYBACK_RATE_MAX_LIMIT) * 100}% playback speed.`);\n            }\n            return CATCHUP_PLAYBACK_RATE_MAX_LIMIT;\n        }\n        return rate;\n    };\n\n    /**\n     * Returns the maximum drift allowed before applying a seek back to the live edge when the catchup mode is enabled\n     * @return {number}\n     */\n    function getCatchupMaxDrift() {\n        if (!isNaN(settings.get().streaming.liveCatchup.maxDrift) && settings.get().streaming.liveCatchup.maxDrift >= 0) {\n            return settings.get().streaming.liveCatchup.maxDrift;\n        }\n\n        const serviceDescriptionSettings = serviceDescriptionController.getServiceDescriptionSettings();\n        if (serviceDescriptionSettings && serviceDescriptionSettings.liveCatchup && !isNaN(serviceDescriptionSettings.liveCatchup.maxDrift) && serviceDescriptionSettings.liveCatchup.maxDrift >= 0) {\n            return serviceDescriptionSettings.liveCatchup.maxDrift;\n        }\n\n        return DEFAULT_CATCHUP_MAX_DRIFT;\n    }\n\n    /**\n     * Returns the minimum and maximum playback rates to be used when applying the catchup mechanism\n     * If only one of the min/max values has been set then the other will default to 0 (no playback rate change).\n     * @return {number}\n     */\n    function getCatchupPlaybackRates(log) {\n        const settingsPlaybackRate = settings.get().streaming.liveCatchup.playbackRate;\n\n        if (!isNaN(settingsPlaybackRate.min) || !isNaN(settingsPlaybackRate.max)) {\n            return {\n                min: _checkMinPlaybackRate(settingsPlaybackRate.min, log),\n                max: _checkMaxPlaybackRate(settingsPlaybackRate.max, log),\n            }\n        }\n\n        const serviceDescriptionSettings = serviceDescriptionController.getServiceDescriptionSettings();\n        if (serviceDescriptionSettings && serviceDescriptionSettings.liveCatchup && (!isNaN(serviceDescriptionSettings.liveCatchup.playbackRate.min) || !isNaN(serviceDescriptionSettings.liveCatchup.playbackRate.max))) {\n            const sdPlaybackRate = serviceDescriptionSettings.liveCatchup.playbackRate;\n            return {\n                min: _checkMinPlaybackRate(sdPlaybackRate.min, log),\n                max: _checkMaxPlaybackRate(sdPlaybackRate.max, log),\n            }\n        }\n\n        return {\n            min: DEFAULT_CATCHUP_PLAYBACK_RATE_MIN,\n            max: DEFAULT_CATCHUP_PLAYBACK_RATE_MAX\n        }\n    }\n\n    /**\n     * Returns whether the catchup mode is activated via the settings or internally in the PlaybackController\n     * @return {boolean}\n     */\n    function getCatchupModeEnabled() {\n        if (settings.get().streaming.liveCatchup.enabled !== null) {\n            return settings.get().streaming.liveCatchup.enabled;\n        }\n\n        return playbackController.getInitialCatchupModeActivated();\n    }\n\n    /**\n     * Returns the min,max or initial bitrate for a specific media type.\n     * @param {string} field\n     * @param {string} mediaType\n     */\n    function getAbrBitrateParameter(field, mediaType) {\n        try {\n            const setting = settings.get().streaming.abr[field][mediaType];\n            if (!isNaN(setting) && setting !== -1) {\n                return setting;\n            }\n\n            const serviceDescriptionSettings = serviceDescriptionController.getServiceDescriptionSettings();\n            if (serviceDescriptionSettings && serviceDescriptionSettings[field] && !isNaN(serviceDescriptionSettings[field][mediaType])) {\n                return serviceDescriptionSettings[field][mediaType];\n            }\n\n            return -1;\n        } catch (e) {\n            return -1;\n        }\n    }\n\n    /**\n     * Returns the initial buffer level taking the stable buffer time into account\n     * @return {number}\n     */\n    function getInitialBufferLevel() {\n        const initialBufferLevel = settings.get().streaming.buffer.initialBufferLevel;\n\n        if (isNaN(initialBufferLevel) || initialBufferLevel < 0) {\n            return 0;\n        }\n\n        return Math.min(getBufferTimeDefault(), initialBufferLevel);\n    }\n\n    /**\n     * Returns the stable buffer time taking the live delay into account\n     * @return {number}\n     */\n    function getBufferTimeDefault() {\n        const bufferTimeDefault = getBufferTimeDefaultUnadjusted();\n        const liveDelay = playbackController.getLiveDelay();\n\n        return !isNaN(liveDelay) && liveDelay > 0 ? Math.min(bufferTimeDefault, liveDelay) : bufferTimeDefault;\n    }\n\n    /**\n     * Returns the stable buffer\n     * @return {number}\n     */\n    function getBufferTimeDefaultUnadjusted() {\n        return settings.get().streaming.buffer.bufferTimeDefault > 0 ? settings.get().streaming.buffer.bufferTimeDefault : getFastSwitchEnabled() ? DEFAULT_MIN_BUFFER_TIME_FAST_SWITCH : DEFAULT_MIN_BUFFER_TIME;\n    }\n\n    /**\n     * Returns the number of retry attempts for a specific media type\n     * @param type\n     * @return {number}\n     */\n    function getRetryAttemptsForType(type) {\n        const lowLatencyMultiplyFactor = !isNaN(settings.get().streaming.retryAttempts.lowLatencyMultiplyFactor) ? settings.get().streaming.retryAttempts.lowLatencyMultiplyFactor : LOW_LATENCY_MULTIPLY_FACTOR;\n\n        return playbackController.getLowLatencyModeEnabled() ? settings.get().streaming.retryAttempts[type] * lowLatencyMultiplyFactor : settings.get().streaming.retryAttempts[type];\n    }\n\n    /**\n     * Returns the retry interval for a specific media type\n     * @param type\n     * @return {number}\n     */\n    function getRetryIntervalsForType(type) {\n        const lowLatencyReductionFactor = !isNaN(settings.get().streaming.retryIntervals.lowLatencyReductionFactor) ? settings.get().streaming.retryIntervals.lowLatencyReductionFactor : LOW_LATENCY_REDUCTION_FACTOR;\n\n        return playbackController.getLowLatencyModeEnabled() ? settings.get().streaming.retryIntervals[type] / lowLatencyReductionFactor : settings.get().streaming.retryIntervals[type];\n    }\n\n    /**\n     * Returns whether the fast switch mode is defined in the settings options. If not we enable it by default but only for non low-latency playback.\n     * @return {boolean}\n     */\n    function getFastSwitchEnabled() {\n        if (settings.get().streaming.buffer.fastSwitchEnabled !== null) {\n            return settings.get().streaming.buffer.fastSwitchEnabled;\n        }\n\n        return !playbackController.getLowLatencyModeEnabled();\n    }\n\n    function reset() {\n    }\n\n    instance = {\n        getCatchupMaxDrift,\n        getCatchupModeEnabled,\n        getBufferTimeDefault,\n        getBufferTimeDefaultUnadjusted,\n        getFastSwitchEnabled,\n        getInitialBufferLevel,\n        getRetryAttemptsForType,\n        getRetryIntervalsForType,\n        getCatchupPlaybackRates,\n        getAbrBitrateParameter,\n        setConfig,\n        reset\n    };\n\n    setup();\n\n    return instance;\n}\n\nMediaPlayerModel.__dashjs_factory_name = 'MediaPlayerModel';\nexport default FactoryMaker.getSingletonFactory(MediaPlayerModel);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport FactoryMaker from '../../core/FactoryMaker.js';\n\nconst NO_CHANGE = null;\nconst PRIORITY = {\n    DEFAULT: 0.5,\n    STRONG: 1,\n    WEAK: 0\n};\n\nfunction SwitchRequest(rep, reas, prio, r) {\n\n    let instance,\n        representation,\n        priority,\n        reason,\n        rule;\n\n    // check priority value\n    function getPriority(p) {\n        let ret = PRIORITY.DEFAULT;\n\n        // check that p is one of declared priority value\n        if (p === PRIORITY.DEFAULT || p === PRIORITY.STRONG || p === PRIORITY.WEAK) {\n            ret = p;\n        }\n        return ret;\n    }\n\n    // init attributes\n    representation = (rep === undefined) ? NO_CHANGE : rep;\n    priority = getPriority(prio);\n    reason = (reas === undefined) ? null : reas;\n    rule = r === undefined ? null : r;\n\n    instance = {\n        representation,\n        reason,\n        rule,\n        priority\n    };\n\n    return instance;\n}\n\nSwitchRequest.__dashjs_factory_name = 'SwitchRequest';\nconst factory = FactoryMaker.getClassFactory(SwitchRequest);\nfactory.NO_CHANGE = NO_CHANGE;\nfactory.PRIORITY = PRIORITY;\nFactoryMaker.updateClassFactory(SwitchRequest.__dashjs_factory_name, factory);\n\nexport default factory;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport FactoryMaker from '../../../core/FactoryMaker.js';\nimport SwitchRequest from '../SwitchRequest.js';\nimport MetricsConstants from '../../constants/MetricsConstants.js';\nimport Debug from '../../../core/Debug.js';\n\nfunction ThroughputRule(config) {\n\n    config = config || {};\n    const context = this.context;\n    const dashMetrics = config.dashMetrics;\n\n    let instance,\n        logger;\n\n    function setup() {\n        logger = Debug(context).getInstance().getLogger(instance);\n    }\n\n    function getSwitchRequest(rulesContext) {\n        try {\n            const switchRequest = SwitchRequest(context).create();\n            switchRequest.rule = this.getClassName();\n            const mediaInfo = rulesContext.getMediaInfo();\n            const mediaType = rulesContext.getMediaType();\n            const currentBufferState = dashMetrics.getCurrentBufferState(mediaType);\n            const scheduleController = rulesContext.getScheduleController();\n            const abrController = rulesContext.getAbrController();\n            const streamInfo = rulesContext.getStreamInfo();\n            const streamId = streamInfo ? streamInfo.id : null;\n            const isDynamic = streamInfo && streamInfo.manifestInfo ? streamInfo.manifestInfo.isDynamic : null;\n            const throughputController = rulesContext.getThroughputController();\n            const throughput = throughputController.getSafeAverageThroughput(mediaType);\n            const latency = throughputController.getAverageLatency(mediaType);\n\n            if (isNaN(throughput) || !currentBufferState) {\n                return switchRequest;\n            }\n\n            if (abrController.getAbandonmentStateFor(streamId, mediaType) === MetricsConstants.ALLOW_LOAD) {\n                if (currentBufferState.state === MetricsConstants.BUFFER_LOADED || isDynamic) {\n                    switchRequest.representation = abrController.getOptimalRepresentationForBitrate(mediaInfo, throughput, true);\n                    switchRequest.reason = {\n                        throughput,\n                        latency,\n                        message:`[ThroughputRule]: Switching to Representation with bitrate ${switchRequest.representation ? switchRequest.representation.bitrateInKbit : 'n/a'} kbit/s. Throughput: ${throughput}`\n                    };\n                    scheduleController.setTimeToLoadDelay(0);\n                }\n            }\n\n            return switchRequest;\n        } catch (e) {\n            logger.error(e);\n            return SwitchRequest(context).create();\n        }\n    }\n\n    function reset() {\n        // no persistent information to reset\n    }\n\n    instance = {\n        getSwitchRequest,\n        reset\n    };\n\n    setup();\n\n    return instance;\n}\n\nThroughputRule.__dashjs_factory_name = 'ThroughputRule';\nexport default FactoryMaker.getClassFactory(ThroughputRule);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport EventBus from '../../../core/EventBus.js';\nimport Events from '../../../core/events/Events.js';\nimport FactoryMaker from '../../../core/FactoryMaker.js';\nimport Debug from '../../../core/Debug.js';\nimport SwitchRequest from '../SwitchRequest.js';\nimport Constants from '../../constants/Constants.js';\nimport MetricsConstants from '../../constants/MetricsConstants.js';\nimport MediaPlayerEvents from '../../MediaPlayerEvents.js';\nimport Settings from '../../../core/Settings.js';\n\nfunction InsufficientBufferRule(config) {\n\n    config = config || {};\n\n    const context = this.context;\n    const eventBus = EventBus(context).getInstance();\n    const dashMetrics = config.dashMetrics;\n    const settings = Settings(context).getInstance();\n\n    let instance,\n        logger,\n        bufferStateDict;\n\n    function setup() {\n        logger = Debug(context).getInstance().getLogger(instance);\n        _resetInitialSettings();\n        eventBus.on(MediaPlayerEvents.PLAYBACK_SEEKING, _onPlaybackSeeking, instance);\n        eventBus.on(Events.BYTES_APPENDED_END_FRAGMENT, _onBytesAppended, instance);\n    }\n\n\n    /**\n     * If a BUFFER_EMPTY event happens, then InsufficientBufferRule returns switchRequest. Quality=0 until BUFFER_LOADED happens.\n     * Otherwise, InsufficientBufferRule gives a maximum bitrate depending on throughput and bufferLevel such that\n     * a whole fragment can be downloaded before the buffer runs out, subject to a conservative safety factor of 0.5.\n     * If the bufferLevel is low, then InsufficientBufferRule avoids rebuffering risk.\n     * If the bufferLevel is high, then InsufficientBufferRule give a high MaxIndex allowing other rules to take over.\n     * @param rulesContext\n     * @return {object}\n     */\n    function getSwitchRequest(rulesContext) {\n        const switchRequest = SwitchRequest(context).create();\n        switchRequest.rule = this.getClassName();\n\n        if (!rulesContext || !rulesContext.hasOwnProperty('getMediaType')) {\n            return switchRequest;\n        }\n\n        const mediaType = rulesContext.getMediaType();\n        const currentBufferState = dashMetrics.getCurrentBufferState(mediaType);\n        const voRepresentation = rulesContext.getRepresentation();\n        const fragmentDuration = voRepresentation.fragmentDuration;\n        const scheduleController = rulesContext.getScheduleController();\n        const playbackController = scheduleController.getPlaybackController();\n\n        if (!_shouldExecuteRule(playbackController, mediaType, fragmentDuration)) {\n            return switchRequest;\n        }\n\n        const mediaInfo = rulesContext.getMediaInfo();\n        const abrController = rulesContext.getAbrController();\n        if (currentBufferState && currentBufferState.state === MetricsConstants.BUFFER_EMPTY) {\n            logger.debug('[' + mediaType + '] Switch to index 0; buffer is empty.');\n            switchRequest.representation = abrController.getOptimalRepresentationForBitrate(mediaInfo, 0, true);\n            switchRequest.reason = {\n                message: '[InsufficientBufferRule]: Switching to lowest Representation because buffer is empty'\n            };\n        } else {\n            const throughputController = rulesContext.getThroughputController();\n            const bufferLevel = dashMetrics.getCurrentBufferLevel(mediaType);\n            const throughput = throughputController.getAverageThroughput(mediaType, null, NaN);\n            const safeThroughput = throughput * settings.get().streaming.abr.rules.insufficientBufferRule.parameters.throughputSafetyFactor;\n            const bitrate = safeThroughput * bufferLevel / fragmentDuration\n\n            if (isNaN(bitrate) || bitrate <= 0) {\n                return switchRequest\n            }\n\n            switchRequest.representation = abrController.getOptimalRepresentationForBitrate(mediaInfo, bitrate, true);\n            switchRequest.reason = {\n                message: '[InsufficientBufferRule]: Limiting maximum bitrate to avoid a buffer underrun.',\n                bitrate\n            };\n        }\n\n        return switchRequest;\n    }\n\n    function _shouldExecuteRule(playbackController, mediaType, fragmentDuration) {\n        const lowLatencyEnabled = playbackController.getLowLatencyModeEnabled();\n        return !lowLatencyEnabled && bufferStateDict[mediaType].ignoreCount <= 0 && fragmentDuration;\n    }\n\n    function _resetInitialSettings() {\n        const segmentIgnoreCount = settings.get().streaming.abr.rules.insufficientBufferRule.parameters.segmentIgnoreCount\n        bufferStateDict = {};\n        bufferStateDict[Constants.VIDEO] = { ignoreCount: segmentIgnoreCount };\n        bufferStateDict[Constants.AUDIO] = { ignoreCount: segmentIgnoreCount };\n    }\n\n    function _onPlaybackSeeking() {\n        _resetInitialSettings();\n    }\n\n    function _onBytesAppended(e) {\n        if (!isNaN(e.startTime) && (e.mediaType === Constants.AUDIO || e.mediaType === Constants.VIDEO)) {\n            if (bufferStateDict[e.mediaType].ignoreCount > 0) {\n                bufferStateDict[e.mediaType].ignoreCount--;\n            }\n        }\n    }\n\n    function reset() {\n        _resetInitialSettings();\n        eventBus.off(MediaPlayerEvents.PLAYBACK_SEEKING, _onPlaybackSeeking, instance);\n        eventBus.off(Events.BYTES_APPENDED_END_FRAGMENT, _onBytesAppended, instance);\n    }\n\n    instance = {\n        getSwitchRequest,\n        reset\n    };\n\n    setup();\n\n    return instance;\n}\n\nInsufficientBufferRule.__dashjs_factory_name = 'InsufficientBufferRule';\nexport default FactoryMaker.getClassFactory(InsufficientBufferRule);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport SwitchRequest from '../SwitchRequest.js';\nimport FactoryMaker from '../../../core/FactoryMaker.js';\nimport Debug from '../../../core/Debug.js';\nimport Settings from '../../../core/Settings.js';\n\nfunction AbandonRequestsRule(config) {\n\n    config = config || {};\n    const mediaPlayerModel = config.mediaPlayerModel;\n    const dashMetrics = config.dashMetrics;\n    const context = this.context;\n    const settings = Settings(context).getInstance();\n\n    let instance,\n        logger,\n        abandonDict;\n\n    function setup() {\n        logger = Debug(context).getInstance().getLogger(instance);\n        reset();\n    }\n\n\n    function shouldAbandon(rulesContext) {\n        const switchRequest = SwitchRequest(context).create();\n        switchRequest.rule = this.getClassName();\n\n        try {\n            if (!rulesContext) {\n                return switchRequest\n            }\n            const request = rulesContext.getCurrentRequest();\n\n            if (!isNaN(request.index)) {\n\n                // In case we abandoned already or do not have enough information to proceed we return here\n                if (request.firstByteDate === null || abandonDict.hasOwnProperty(request.index)) {\n                    return switchRequest;\n                }\n\n                // Do not abandon if the buffer level is larger than the stable time\n                const stableBufferTime = mediaPlayerModel.getBufferTimeDefault();\n                const mediaType = rulesContext.getMediaType();\n                const bufferLevel = dashMetrics.getCurrentBufferLevel(mediaType);\n                if (bufferLevel > stableBufferTime) {\n                    return switchRequest;\n                }\n\n                // Activate rule once we have enough samples, the initial startup time has elapsed and the download is not finished yet\n                const elapsedTimeSinceFirstByteInMs = Date.now() - request.firstByteDate.getTime();\n                if (request.traces.length >= settings.get().streaming.abr.rules.abandonRequestsRule.parameters.minThroughputSamplesThreshold &&\n                    elapsedTimeSinceFirstByteInMs > settings.get().streaming.abr.rules.abandonRequestsRule.parameters.minSegmentDownloadTimeThresholdInMs &&\n                    request.bytesLoaded < request.bytesTotal) {\n                    return _getSwitchRequest(rulesContext, request, switchRequest);\n                }\n            }\n\n            return switchRequest;\n        } catch (e) {\n            logger.error(e);\n            return switchRequest\n        }\n    }\n\n    function _getSwitchRequest(rulesContext, request, switchRequest) {\n        const mediaInfo = rulesContext.getMediaInfo();\n        const mediaType = rulesContext.getMediaType();\n\n        // Use the traces of the request to derive the mean throughput. We ignore the first entries as they contain the latency of the request.\n        const downloadedBytes = request.traces.reduce((prev, curr) => prev + curr.b[0], 0) - request.traces[0].b[0];\n        const downloadTimeInMs = Math.max(request.traces.reduce((prev, curr) => prev + curr.d, 0) - request.traces[0].d, 1);\n        const throughputInKbit = Math.round((8 * downloadedBytes) / downloadTimeInMs)\n        const estimatedTimeOfDownloadInSeconds = Number((request.bytesTotal * 8 / throughputInKbit) / 1000).toFixed(2);\n\n        // We do not abandon if the estimated download time is below a constant multiple of the segment duration, or if we are on the lowest quality anyway.\n        const representation = rulesContext.getRepresentation();\n        const abrController = rulesContext.getAbrController();\n        if (estimatedTimeOfDownloadInSeconds < request.duration * settings.get().streaming.abr.rules.abandonRequestsRule.parameters.abandonDurationMultiplier || abrController.isPlayingAtLowestQuality(representation)) {\n            return switchRequest;\n        }\n\n        if (!abandonDict.hasOwnProperty(request.index)) {\n            const abrController = rulesContext.getAbrController();\n            const remainingBytesToDownload = request.bytesTotal - request.bytesLoaded;\n            const optimalRepresentationForBitrate = abrController.getOptimalRepresentationForBitrate(mediaInfo, throughputInKbit, true);\n            const currentRequestedRepresentation = request.representation;\n            const totalBytesForOptimalRepresentation = request.bytesTotal * optimalRepresentationForBitrate.bitrateInKbit / currentRequestedRepresentation.bitrateInKbit;\n\n            if (remainingBytesToDownload > totalBytesForOptimalRepresentation) {\n                switchRequest.representation = optimalRepresentationForBitrate;\n                switchRequest.reason = {\n                    throughputInKbit,\n                    message: `[AbandonRequestRule][${mediaType} is asking to abandon and switch to quality to ${optimalRepresentationForBitrate.absoluteIndex}. The measured bandwidth was ${throughputInKbit} kbit/s`\n                }\n                abandonDict[request.index] = true;\n            }\n        }\n\n        return switchRequest\n    }\n\n    function reset() {\n        abandonDict = {};\n    }\n\n    instance = {\n        shouldAbandon,\n        reset\n    };\n\n    setup();\n\n    return instance;\n}\n\nAbandonRequestsRule.__dashjs_factory_name = 'AbandonRequestsRule';\nexport default FactoryMaker.getClassFactory(AbandonRequestsRule);\n","import FactoryMaker from '../../../core/FactoryMaker.js';\nimport SwitchRequest from '../SwitchRequest.js';\nimport Settings from '../../../core/Settings.js';\n\nfunction DroppedFramesRule() {\n\n    const context = this.context;\n    const settings = Settings(context).getInstance();\n    let instance;\n\n    function getSwitchRequest(rulesContext) {\n        const switchRequest = SwitchRequest(context).create();\n        switchRequest.rule = this.getClassName();\n\n        if (!rulesContext || !rulesContext.hasOwnProperty('getDroppedFramesHistory')) {\n            return switchRequest;\n        }\n\n        const droppedFramesHistory = rulesContext.getDroppedFramesHistory();\n        if (!droppedFramesHistory) {\n            return switchRequest\n        }\n        const streamId = rulesContext.getStreamInfo().id;\n        const mediaInfo = rulesContext.getMediaInfo();\n        const abrController = rulesContext.getAbrController();\n        const droppedFramesHistoryData = droppedFramesHistory.getFrameHistory(streamId);\n\n        if (!droppedFramesHistoryData || Object.keys(droppedFramesHistoryData).length === 0) {\n            return switchRequest;\n        }\n\n        let droppedFrames = 0;\n        let totalFrames = 0;\n        const representations = abrController.getPossibleVoRepresentationsFilteredBySettings(mediaInfo, true);\n        let newRepresentation = null;\n\n        //No point in measuring dropped frames for the first index.\n        for (let i = 1; i < representations.length; i++) {\n            const currentRepresentation = representations[i];\n            if (currentRepresentation && droppedFramesHistoryData[currentRepresentation.id]) {\n                droppedFrames = droppedFramesHistoryData[currentRepresentation.id].droppedVideoFrames;\n                totalFrames = droppedFramesHistoryData[currentRepresentation.id].totalVideoFrames;\n\n                if (totalFrames > settings.get().streaming.abr.rules.droppedFramesRule.parameters.minimumSampleSize && droppedFrames / totalFrames > settings.get().streaming.abr.rules.droppedFramesRule.parameters.droppedFramesPercentageThreshold) {\n                    newRepresentation = representations[i - 1];\n                    break;\n                }\n            }\n        }\n        if (newRepresentation) {\n            switchRequest.representation = newRepresentation;\n            switchRequest.reason = {\n                droppedFrames,\n                message: `[DroppedFramesRule]: Switching to index ${newRepresentation.absoluteIndex}. Dropped Frames: ${droppedFrames}, Total Frames: ${totalFrames}`\n            };\n        }\n\n        return switchRequest;\n    }\n\n    instance = {\n        getSwitchRequest\n    };\n\n    return instance;\n}\n\nDroppedFramesRule.__dashjs_factory_name = 'DroppedFramesRule';\nexport default FactoryMaker.getClassFactory(DroppedFramesRule);\n","import FactoryMaker from '../../../core/FactoryMaker.js';\nimport SwitchRequest from '../SwitchRequest.js';\nimport Settings from '../../../core/Settings.js';\n\nfunction SwitchHistoryRule() {\n\n    const context = this.context;\n    const settings = Settings(context).getInstance();\n    let instance;\n\n    function getSwitchRequest(rulesContext) {\n        const switchRequest = SwitchRequest(context).create();\n        switchRequest.rule = this.getClassName();\n\n        if (!rulesContext) {\n            return switchRequest;\n        }\n\n        const streamId = rulesContext.getStreamInfo().id;\n        const mediaType = rulesContext.getMediaType();\n        const switchRequestHistory = rulesContext ? rulesContext.getSwitchRequestHistory() : null;\n        const switchRequests = switchRequestHistory ? switchRequestHistory.getSwitchRequests(streamId, mediaType) : {};\n        const abrController = rulesContext.getAbrController();\n        const mediaInfo = rulesContext.getMediaInfo();\n        const representations = abrController.getPossibleVoRepresentationsFilteredBySettings(mediaInfo, true);\n        let drops = 0;\n        let noDrops = 0;\n\n        for (let i = 0; i < representations.length; i++) {\n            const currentPossibleRepresentation = representations[i];\n            if (currentPossibleRepresentation && switchRequests[currentPossibleRepresentation.id]) {\n                drops += switchRequests[currentPossibleRepresentation.id].drops;\n                noDrops += switchRequests[currentPossibleRepresentation.id].noDrops;\n\n                if (drops + noDrops >= settings.get().streaming.abr.rules.switchHistoryRule.parameters.sampleSize && (drops / noDrops > settings.get().streaming.abr.rules.switchHistoryRule.parameters.switchPercentageThreshold)) {\n                    switchRequest.representation = (i > 0 && switchRequests[currentPossibleRepresentation.id].drops > 0) ? representations[i - 1] : currentPossibleRepresentation;\n                    switchRequest.reason = {\n                        drops: drops,\n                        noDrops: noDrops,\n                        message: `[SwitchHistoryRule]: Switch to index: ${switchRequest.representation.absoluteIndex} samples: ${(drops + noDrops)} drops:  ${drops}`\n                    };\n                    break;\n                }\n            }\n        }\n\n        return switchRequest;\n    }\n\n    instance = {\n        getSwitchRequest\n    };\n\n\n\n    return instance;\n}\n\n\nSwitchHistoryRule.__dashjs_factory_name = 'SwitchHistoryRule';\nexport default FactoryMaker.getClassFactory(SwitchHistoryRule);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2016, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n// For a description of the BOLA adaptive bitrate (ABR) algorithm, see http://arxiv.org/abs/1601.06748\n\nimport MetricsConstants from '../../constants/MetricsConstants.js';\nimport SwitchRequest from '../SwitchRequest.js';\nimport FactoryMaker from '../../../core/FactoryMaker.js';\nimport {HTTPRequest} from '../../vo/metrics/HTTPRequest.js';\nimport EventBus from '../../../core/EventBus.js';\nimport Events from '../../../core/events/Events.js';\nimport Debug from '../../../core/Debug.js';\nimport MediaPlayerEvents from '../../MediaPlayerEvents.js';\nimport Constants from '../../constants/Constants.js';\nimport AbrController from '../../controllers/AbrController.js';\n\n// BOLA_STATE_ONE_BITRATE   : If there is only one bitrate (or initialization failed), always return NO_CHANGE.\n// BOLA_STATE_STARTUP       : Set placeholder buffer such that we download fragments at most recently measured throughput.\n// BOLA_STATE_STEADY        : Buffer primed, we switch to steady operation.\n// TODO: add BOLA_STATE_SEEK and tune BOLA behavior on seeking\nconst BOLA_STATE_ONE_BITRATE = 'BOLA_STATE_ONE_BITRATE';\nconst BOLA_STATE_STARTUP = 'BOLA_STATE_STARTUP';\nconst BOLA_STATE_STEADY = 'BOLA_STATE_STEADY';\n\nconst MINIMUM_BUFFER_S = 10; // BOLA should never add artificial delays if buffer is less than MINIMUM_BUFFER_S.\nconst MINIMUM_BUFFER_PER_BITRATE_LEVEL_S = 2;\n// E.g. if there are 5 bitrates, BOLA switches to top bitrate at buffer = 10 + 5 * 2 = 20s.\n// If Schedule Controller does not allow buffer to reach that level, it can be achieved through the placeholder buffer level.\n\nconst PLACEHOLDER_BUFFER_DECAY = 0.99; // Make sure placeholder buffer does not stick around too long.\n\nfunction BolaRule(config) {\n\n    config = config || {};\n    const context = this.context;\n\n    const dashMetrics = config.dashMetrics;\n    const mediaPlayerModel = config.mediaPlayerModel;\n    const eventBus = EventBus(context).getInstance();\n    const abrController = AbrController(context).getInstance();\n\n    let instance,\n        logger,\n        bolaStateDict;\n\n    function setup() {\n        logger = Debug(context).getInstance().getLogger(instance);\n        resetInitialSettings();\n        eventBus.on(MediaPlayerEvents.BUFFER_EMPTY, _onBufferEmpty, instance);\n        eventBus.on(MediaPlayerEvents.PLAYBACK_SEEKING, _onPlaybackSeeking, instance);\n        eventBus.on(MediaPlayerEvents.METRIC_ADDED, _onMetricAdded, instance);\n        eventBus.on(MediaPlayerEvents.QUALITY_CHANGE_REQUESTED, _onQualityChangeRequested, instance);\n        eventBus.on(MediaPlayerEvents.FRAGMENT_LOADING_ABANDONED, _onFragmentLoadingAbandoned, instance);\n        eventBus.on(Events.MEDIA_FRAGMENT_LOADED, _onMediaFragmentLoaded, instance);\n        eventBus.on(Events.SETTING_UPDATED_MAX_BITRATE, _onMinMaxBitrateUpdated, instance);\n        eventBus.on(Events.SETTING_UPDATED_MIN_BITRATE, _onMinMaxBitrateUpdated, instance);\n    }\n\n    /**\n     * If the buffer is empty, we don't want the placeholder buffer to artificially raise BOLA quality\n     * @param {object} e\n     * @private\n     */\n    function _onBufferEmpty(e) {\n        const mediaType = e.mediaType;\n        const streamId = e.streamId;\n        // if audio buffer runs empty (due to track switch for example) then reset placeholder buffer only for audio (to avoid decrease video BOLA quality)\n        const stateDict = mediaType === Constants.AUDIO ? [Constants.AUDIO] : bolaStateDict[streamId];\n        for (const mediaType in stateDict) {\n            if (bolaStateDict[streamId] && bolaStateDict[streamId].hasOwnProperty(mediaType) && bolaStateDict[streamId][mediaType].state === BOLA_STATE_STEADY) {\n                bolaStateDict[streamId][mediaType].placeholderBuffer = 0;\n            }\n        }\n    }\n\n    /**\n     * Clear BOLA parameters for each media type once we seek. By setting to BOLA_STATE_STARTUP we use the throughput to get the possible quality.\n     * @private\n     */\n    function _onPlaybackSeeking(e) {\n        // TODO: 1. Verify what happens if we seek mid-fragment.\n        // TODO: 2. If e.g. we have 10s fragments and seek, we might want to download the first fragment at a lower quality to restart playback quickly.\n        const streamId = e.streamId\n        for (const mediaType in bolaStateDict[streamId]) {\n            if (bolaStateDict[streamId].hasOwnProperty(mediaType)) {\n                const bolaState = bolaStateDict[streamId][mediaType];\n                if (bolaState.state !== BOLA_STATE_ONE_BITRATE) {\n                    bolaState.state = BOLA_STATE_STARTUP;\n                    _clearBolaStateOnSeek(bolaState);\n                }\n            }\n        }\n    }\n\n    function _clearBolaStateOnSeek(bolaState) {\n        bolaState.placeholderBuffer = 0;\n        bolaState.mostAdvancedSegmentStart = NaN;\n        bolaState.lastSegmentWasReplacement = false;\n        bolaState.lastSegmentStart = NaN;\n        bolaState.lastSegmentDurationS = NaN;\n        bolaState.lastSegmentRequestTimeMs = NaN;\n        bolaState.lastSegmentFinishTimeMs = NaN;\n    }\n\n    /**\n     * Handle situations in which the downloaded quality differs from what the BOLA algorithm recommended\n     * @param e\n     * @private\n     */\n    function _onMetricAdded(e) {\n        try {\n            if (e && e.metric === MetricsConstants.HTTP_REQUEST && e.value && e.value.type === HTTPRequest.MEDIA_SEGMENT_TYPE && e.value.trace && e.value.trace.length) {\n                const bolaState = bolaStateDict[e.value._streamId] && bolaStateDict[e.value._streamId][e.mediaType] ? bolaStateDict[e.value._streamId][e.mediaType] : null;\n                if (bolaState && bolaState.state !== BOLA_STATE_ONE_BITRATE) {\n                    bolaState.lastSegmentRequestTimeMs = e.value.trequest.getTime();\n                    bolaState.lastSegmentFinishTimeMs = e.value._tfinish.getTime();\n                    _checkNewSegment(bolaState, e.mediaType);\n                }\n            }\n        } catch (e) {\n            logger.error(e);\n        }\n    }\n\n    /**\n     * When a new segment is downloaded, we get two notifications: onMediaFragmentLoaded() and onMetricAdded(). It is\n     * possible that the quality for the downloaded segment was lower (not higher) than the quality indicated by BOLA.\n     * This might happen because of other rules such as the DroppedFramesRule. When this happens, we trim the\n     * placeholder buffer to make BOLA more stable. This mechanism also avoids inflating the buffer when BOLA itself\n     * decides not to increase the quality to avoid oscillations.\n     *\n     * We should also check for replacement segments (fast switching). In this case, a segment is downloaded but does\n     * not grow the actual buffer. Fast switching might cause the buffer to deplete, causing BOLA to drop the bitrate.\n     * We avoid this by growing the placeholder buffer.\n     * @param bolaState\n     * @param mediaType\n     */\n    function _checkNewSegment(bolaState, mediaType) {\n        if (!isNaN(bolaState.lastSegmentStart) && !isNaN(bolaState.lastSegmentRequestTimeMs) && !isNaN(bolaState.placeholderBuffer)) {\n            bolaState.placeholderBuffer *= PLACEHOLDER_BUFFER_DECAY;\n\n            // Find what maximum buffer corresponding to last segment was, and ensure placeholder is not relatively larger.\n            if (!isNaN(bolaState.lastSegmentFinishTimeMs)) {\n                const bufferLevel = dashMetrics.getCurrentBufferLevel(mediaType);\n                const bufferAtLastSegmentRequest = bufferLevel + 0.001 * (bolaState.lastSegmentFinishTimeMs - bolaState.lastSegmentRequestTimeMs); // estimate\n                const maxEffectiveBufferForLastSegment = _maxBufferLevelForRepresentation(bolaState, bolaState.currentRepresentation);\n                const maxPlaceholderBuffer = Math.max(0, maxEffectiveBufferForLastSegment - bufferAtLastSegmentRequest);\n                bolaState.placeholderBuffer = Math.min(maxPlaceholderBuffer, bolaState.placeholderBuffer);\n            }\n\n            // then see if we should grow placeholder buffer\n            if (bolaState.lastSegmentWasReplacement && !isNaN(bolaState.lastSegmentDurationS)) {\n                // compensate for segments that were downloaded but did not grow the buffer\n                bolaState.placeholderBuffer += bolaState.lastSegmentDurationS;\n            }\n\n            bolaState.lastSegmentStart = NaN;\n            bolaState.lastSegmentRequestTimeMs = NaN;\n        }\n    }\n\n    /**\n     * Useful to store change requests when abandoning a download.\n     * @param e\n     * @private\n     */\n    function _onQualityChangeRequested(e) {\n        if (e && bolaStateDict[e.streamId] && bolaStateDict[e.streamId][e.mediaType]) {\n            const bolaState = bolaStateDict[e.streamId][e.mediaType];\n            if (bolaState && bolaState.state !== BOLA_STATE_ONE_BITRATE) {\n                bolaState.currentRepresentation = e.newRepresentation;\n            }\n        }\n    }\n\n    /**\n     *\n     * @param rulesContext\n     * @returns {{}}\n     * @private\n     */\n    function _getInitialBolaState(rulesContext) {\n        const initialState = {};\n        const mediaInfo = rulesContext.getMediaInfo();\n        const representations = abrController.getPossibleVoRepresentationsFilteredBySettings(mediaInfo, true);\n        const bitrates = representations.map(r => r.bandwidth);\n        let utilities = bitrates.map(b => Math.log(b));\n        utilities = utilities.map(u => u - utilities[0] + 1); // normalize\n        const bufferTimeDefault = mediaPlayerModel.getBufferTimeDefault();\n        const params = _calculateBolaParameters(bufferTimeDefault, representations, utilities);\n\n        // only happens when there is only one bitrate level\n        if (!params) {\n            initialState.state = BOLA_STATE_ONE_BITRATE;\n        } else {\n            initialState.state = BOLA_STATE_STARTUP;\n            initialState.representations = representations;\n            initialState.utilities = utilities;\n            initialState.bufferTimeDefault = bufferTimeDefault;\n            initialState.Vp = params.Vp;\n            initialState.gp = params.gp;\n            initialState.currentRepresentation = null;\n            _clearBolaStateOnSeek(initialState);\n        }\n\n        return initialState;\n    }\n\n    /**\n     *  NOTE: in live streaming, the real buffer level can drop below minimumBufferS, but BOLA should not stick to lowest bitrate by using a placeholder buffer level\n     * @param bufferTimeDefault\n     * @param representations\n     * @param utilities\n     * @returns {{gp: number, Vp: number}|null}\n     * @private\n     */\n    function _calculateBolaParameters(bufferTimeDefault, representations, utilities) {\n        const highestUtilityIndex = utilities.reduce((highestIndex, u, uIndex) => (u > utilities[highestIndex] ? uIndex : highestIndex), 0);\n\n        // if highestUtilityIndex === 0, then always use lowest bitrate\n        if (highestUtilityIndex === 0) {\n            return null;\n        }\n\n        const bufferTime = Math.max(bufferTimeDefault, MINIMUM_BUFFER_S + MINIMUM_BUFFER_PER_BITRATE_LEVEL_S * representations.length);\n\n        // TODO: Investigate if following can be better if utilities are not the default Math.log utilities.\n        // If using Math.log utilities, we can choose Vp and gp to always prefer bitrates[0] at minimumBufferS and bitrates[max] at bufferTarget.\n        // (Vp * (utility + gp) - bufferLevel) / bitrate has the maxima described when:\n        // Vp * (utilities[0] + gp - 1) === minimumBufferS and Vp * (utilities[max] + gp - 1) === bufferTarget\n        // giving:\n        const gp = (utilities[highestUtilityIndex] - 1) / (bufferTime / MINIMUM_BUFFER_S - 1);\n        const Vp = MINIMUM_BUFFER_S / gp;\n        // note that expressions for gp and Vp assume utilities[0] === 1, which is true because of normalization\n\n        return { gp: gp, Vp: Vp };\n    }\n\n    /**\n     * If the buffer target is changed (can this happen mid-stream?), then adjust BOLA parameters accordingly.\n     * @param bolaState\n     * @param mediaType\n     * @private\n     */\n    function _checkBolaStateBufferTimeDefault(bolaState, mediaType) {\n        const bufferTimeDefault = mediaPlayerModel.getBufferTimeDefault();\n        if (bolaState.bufferTimeDefault !== bufferTimeDefault) {\n            const params = _calculateBolaParameters(bufferTimeDefault, bolaState.representations, bolaState.utilities);\n            if (params.Vp !== bolaState.Vp || params.gp !== bolaState.gp) {\n                // correct placeholder buffer using two criteria:\n                // 1. do not change effective buffer level at effectiveBufferLevel === MINIMUM_BUFFER_S ( === Vp * gp )\n                // 2. scale placeholder buffer by Vp subject to offset indicated in 1.\n\n                const bufferLevel = dashMetrics.getCurrentBufferLevel(mediaType);\n                let effectiveBufferLevel = bufferLevel + bolaState.placeholderBuffer;\n\n                effectiveBufferLevel -= MINIMUM_BUFFER_S;\n                effectiveBufferLevel *= params.Vp / bolaState.Vp;\n                effectiveBufferLevel += MINIMUM_BUFFER_S;\n\n                bolaState.bufferTimeDefault = bufferTimeDefault;\n                bolaState.Vp = params.Vp;\n                bolaState.gp = params.gp;\n                bolaState.placeholderBuffer = Math.max(0, effectiveBufferLevel - bufferLevel);\n            }\n        }\n    }\n\n    /**\n     * The core idea of BOLA.\n     * @param bolaState\n     * @param bufferLevel\n     * @returns {Representation}\n     * @private\n     */\n    function _getRepresentationFromBufferLevel(bolaState, bufferLevel) {\n        const bitrateCount = bolaState.representations.length;\n        let quality = NaN;\n        let score = NaN;\n        for (let i = 0; i < bitrateCount; ++i) {\n            let s = (bolaState.Vp * (bolaState.utilities[i] - 1 + bolaState.gp) - bufferLevel) / bolaState.representations[i].bandwidth;\n            if (isNaN(score) || s >= score) {\n                score = s;\n                quality = i;\n            }\n        }\n        return bolaState.representations[quality];\n    }\n\n    /**\n     * Maximum buffer level which prefers to download at quality rather than wait\n     * @param bolaState\n     * @param representation\n     * @returns {number}\n     * @private\n     */\n    function _maxBufferLevelForRepresentation(bolaState, representation) {\n        return bolaState.Vp * (bolaState.utilities[representation.absoluteIndex] + bolaState.gp);\n    }\n\n\n    /**\n     *  The placeholder buffer increases the effective buffer that is used to calculate the bitrate.\n     *  There are two main reasons we might want to increase the placeholder buffer:\n     *\n     *  1. When a segment finishes downloading, we would expect to get a call on getSwitchRequest() regarding the quality for\n     *  the next segment. However, there might be a delay before the next call. E.g. when streaming live content, the\n     *  next segment might not be available yet. If the call to getSwitchRequest() does happens after a delay, we don't\n     *  want the delay to change the BOLA decision - we only want to factor download time to decide on bitrate level.\n     *\n     * 2. It is possible to get a call to getSwitchRequest() without having a segment download. The buffer target in dash.js\n     * is different for top-quality segments and lower-quality segments. If getSwitchRequest() returns a lower-than-top\n     * quality, then the buffer controller might decide not to download a segment. When dash.js is ready for the next\n     * segment, getSwitchRequest() will be called again. We don't want this extra delay to factor in the bitrate decision.\n     * @param bolaState\n     * @param mediaType\n     * @private\n     */\n    function _updatePlaceholderBuffer(bolaState, mediaType) {\n        const nowMs = Date.now();\n\n        if (!isNaN(bolaState.lastSegmentFinishTimeMs)) {\n            // compensate for non-bandwidth-derived delays, e.g., live streaming availability, buffer controller\n            const delay = 0.001 * (nowMs - bolaState.lastSegmentFinishTimeMs);\n            bolaState.placeholderBuffer += Math.max(0, delay);\n        } else if (!isNaN(bolaState.lastCallTimeMs)) {\n            // no download after last call, compensate for delay between calls\n            const delay = 0.001 * (nowMs - bolaState.lastCallTimeMs);\n            bolaState.placeholderBuffer += Math.max(0, delay);\n        }\n\n        bolaState.lastCallTimeMs = nowMs;\n        bolaState.lastSegmentStart = NaN;\n        bolaState.lastSegmentRequestTimeMs = NaN;\n        bolaState.lastSegmentFinishTimeMs = NaN;\n\n        _checkBolaStateBufferTimeDefault(bolaState, mediaType);\n    }\n\n    function _onMediaFragmentLoaded(e) {\n        if (e && e.chunk && e.chunk.representation.mediaInfo && bolaStateDict[e.streamId]) {\n            const bolaState = bolaStateDict[e.streamId][e.chunk.representation.mediaInfo.type];\n            if (bolaState && bolaState.state !== BOLA_STATE_ONE_BITRATE) {\n                const start = e.chunk.start;\n                if (isNaN(bolaState.mostAdvancedSegmentStart) || start > bolaState.mostAdvancedSegmentStart) {\n                    bolaState.mostAdvancedSegmentStart = start;\n                    bolaState.lastSegmentWasReplacement = false;\n                } else {\n                    bolaState.lastSegmentWasReplacement = true;\n                }\n\n                bolaState.lastSegmentStart = start;\n                bolaState.lastSegmentDurationS = e.chunk.duration;\n                bolaState.currentRepresentation = e.chunk.representation;\n                _checkNewSegment(bolaState, e.chunk.representation.mediaInfo.type);\n            }\n        }\n    }\n\n    /**\n     * We need to reset the Bola State once the min/max bitrate settings have been updated. Otherwise, the utility function works on outdated values\n     * @private\n     */\n    function _onMinMaxBitrateUpdated() {\n        resetInitialSettings()\n    }\n\n\n    /**\n     * The minimum buffer level that would cause BOLA to choose target quality rather than a lower bitrate\n     * @param bolaState\n     * @param representation\n     * @returns {number}\n     * @private\n     */\n    function _minBufferLevelForRepresentation(bolaState, representation) {\n        const absoluteIndex = representation.absoluteIndex\n        const qBitrate = representation.bandwidth;\n        const qUtility = bolaState.utilities[absoluteIndex];\n\n        let min = 0;\n\n        // for each bitrate less than bitrates[absoluteIndex], BOLA should prefer quality (unless other bitrate has higher utility)\n        for (let i = absoluteIndex - 1; i >= 0; --i) {\n            if (bolaState.utilities[i] < bolaState.utilities[absoluteIndex]) {\n                const iBitrate = bolaState.representations[i].bandwidth;\n                const iUtility = bolaState.utilities[i];\n\n                const level = bolaState.Vp * (bolaState.gp + (qBitrate * iUtility - iBitrate * qUtility) / (qBitrate - iBitrate));\n                min = Math.max(min, level); // we want min to be small but at least level(i) for all i\n            }\n        }\n        return min;\n    }\n\n    /**\n     *\n     * @param e\n     * @private\n     */\n    function _onFragmentLoadingAbandoned(e) {\n        if (e && bolaStateDict[e.streamId]) {\n            const bolaState = bolaStateDict[e.streamId][e.mediaType];\n            if (bolaState && bolaState.state !== BOLA_STATE_ONE_BITRATE) {\n                // deflate placeholderBuffer - note that we want to be conservative when abandoning\n                const bufferLevel = dashMetrics.getCurrentBufferLevel(e.mediaType);\n                let wantEffectiveBufferLevel;\n                if (bolaState.currentRepresentation.absoluteIndex > 0) {\n                    // deflate to point where BOLA just chooses newQuality over newQuality-1\n                    wantEffectiveBufferLevel = _minBufferLevelForRepresentation(bolaState, bolaState.currentRepresentation);\n                } else {\n                    wantEffectiveBufferLevel = MINIMUM_BUFFER_S;\n                }\n                const maxPlaceholderBuffer = Math.max(0, wantEffectiveBufferLevel - bufferLevel);\n                bolaState.placeholderBuffer = Math.min(bolaState.placeholderBuffer, maxPlaceholderBuffer);\n            }\n        }\n    }\n\n    function handleNewMediaInfo(newMediaInfo) {\n        if (!newMediaInfo || !newMediaInfo.streamInfo || !newMediaInfo.type) {\n            return\n        }\n        if (bolaStateDict[newMediaInfo.streamInfo.id] && bolaStateDict[newMediaInfo.streamInfo.id][newMediaInfo.type]) {\n            delete bolaStateDict[newMediaInfo.streamInfo.id][newMediaInfo.type];\n        }\n    }\n\n    /**\n     * At startup we decide on the best quality based on the throughput. The placeholderBuffer is adjusted accordingly.\n     * @param switchRequest\n     * @param rulesContext\n     * @param bolaState\n     * @private\n     */\n    function _handleBolaStateStartup(switchRequest, rulesContext, bolaState) {\n        const mediaType = rulesContext.getMediaType();\n        const throughputController = rulesContext.getThroughputController();\n        const safeThroughput = throughputController.getSafeAverageThroughput(mediaType);\n\n        if (isNaN(safeThroughput)) {\n            return\n        }\n\n        const mediaInfo = rulesContext.getMediaInfo();\n        const representation = abrController.getOptimalRepresentationForBitrate(mediaInfo, safeThroughput, true);\n        const bufferLevel = dashMetrics.getCurrentBufferLevel(mediaType);\n        switchRequest.representation = representation;\n        switchRequest.reason.throughput = safeThroughput;\n        bolaState.placeholderBuffer = Math.max(0, _minBufferLevelForRepresentation(bolaState, representation) - bufferLevel);\n        bolaState.currentRepresentation = representation;\n\n        if (!isNaN(bolaState.lastSegmentDurationS) && bufferLevel >= bolaState.lastSegmentDurationS) {\n            bolaState.state = BOLA_STATE_STEADY;\n        }\n    }\n\n    /**\n     *\n     * @param switchRequest\n     * @param rulesContext\n     * @param bolaState\n     * @private\n     */\n    function _handleBolaStateSteady(switchRequest, rulesContext, bolaState) {\n        const mediaType = rulesContext.getMediaType();\n        const throughputController = rulesContext.getThroughputController();\n        const mediaInfo = rulesContext.getMediaInfo();\n        const safeThroughput = throughputController.getSafeAverageThroughput(mediaType);\n        const scheduleController = rulesContext.getScheduleController();\n        _updatePlaceholderBuffer(bolaState, mediaType);\n\n        const bufferLevel = dashMetrics.getCurrentBufferLevel(mediaType);\n        // NB: The placeholder buffer is added to bufferLevel to come up with a bitrate.\n        //     This might lead BOLA to be too optimistic and to choose a bitrate that would lead to rebuffering -\n        //     if the real buffer bufferLevel runs out, the placeholder buffer cannot prevent rebuffering.\n        //     However, the InsufficientBufferRule takes care of this scenario.\n        let representation = _getRepresentationFromBufferLevel(bolaState, bufferLevel + bolaState.placeholderBuffer);\n\n        // we want to avoid oscillations\n        // We implement the \"BOLA-O\" variant: when network bandwidth lies between two encoded bitrate levels, stick to the lowest level.\n        const representationForThroughput = abrController.getOptimalRepresentationForBitrate(mediaInfo, safeThroughput, true);\n        if (representation.absoluteIndex > bolaState.currentRepresentation.absoluteIndex && representation.absoluteIndex > representationForThroughput.absoluteIndex) {\n            // only intervene if we are trying to *increase* quality to an *unsustainable* level\n            // we are only avoid oscillations - do not drop below last quality\n            representation = representationForThroughput.absoluteIndex > bolaState.currentRepresentation.absoluteIndex ? representationForThroughput : bolaState.currentRepresentation;\n        }\n\n        // We do not want to overfill buffer with low quality chunks.\n        // Note that there will be no delay if buffer level is below MINIMUM_BUFFER_S, probably even with some margin higher than MINIMUM_BUFFER_S.\n        let delayS = Math.max(0, bufferLevel + bolaState.placeholderBuffer - _maxBufferLevelForRepresentation(bolaState, representation));\n\n        // First reduce placeholder buffer, then tell schedule controller to pause.\n        if (delayS <= bolaState.placeholderBuffer) {\n            bolaState.placeholderBuffer -= delayS;\n            delayS = 0;\n        } else {\n            delayS -= bolaState.placeholderBuffer;\n            bolaState.placeholderBuffer = 0;\n\n            if (!abrController.isPlayingAtTopQuality(representation)) {\n                // At top quality, allow schedule controller to decide how far to fill buffer.\n                scheduleController.setTimeToLoadDelay(1000 * delayS);\n            } else {\n                delayS = 0;\n            }\n        }\n\n        switchRequest.representation = representation;\n        switchRequest.reason.throughput = safeThroughput;\n        switchRequest.reason.bufferLevel = bufferLevel;\n        switchRequest.reason.placeholderBuffer = bolaState.placeholderBuffer;\n        switchRequest.reason.delay = delayS;\n        bolaState.currentRepresentation = representation;\n    }\n\n    /**\n     * Bad state we should not have arrived here. Try to recover.\n     * @param switchRequest\n     * @param rulesContext\n     * @param bolaState\n     */\n    function _handleBolaStateBad(switchRequest, rulesContext, bolaState) {\n        logger.debug('BOLA ABR rule invoked in bad state.');\n        const mediaInfo = rulesContext.getMediaInfo();\n        const mediaType = rulesContext.getMediaType();\n        const throughputController = rulesContext.getThroughputController();\n        const safeThroughput = throughputController.getSafeAverageThroughput(mediaType);\n        switchRequest.representation = abrController.getOptimalRepresentationForBitrate(mediaInfo, safeThroughput, true);\n        switchRequest.reason.state = bolaState.state;\n        switchRequest.reason.throughput = safeThroughput;\n        bolaState.state = BOLA_STATE_STARTUP;\n        _clearBolaStateOnSeek(bolaState);\n    }\n\n    function getSwitchRequest(rulesContext) {\n        try {\n            const switchRequest = SwitchRequest(context).create();\n\n            const scheduleController = rulesContext.getScheduleController();\n            scheduleController.setTimeToLoadDelay(0);\n\n            switchRequest.rule = this.getClassName();\n            switchRequest.reason = switchRequest.reason || {};\n\n            const bolaState = _getBolaState(rulesContext);\n            switchRequest.reason.state = bolaState.state;\n\n            switch (bolaState.state) {\n                case BOLA_STATE_ONE_BITRATE:\n                    break;\n                case BOLA_STATE_STARTUP:\n                    _handleBolaStateStartup(switchRequest, rulesContext, bolaState);\n                    break;\n                case BOLA_STATE_STEADY:\n                    _handleBolaStateSteady(switchRequest, rulesContext, bolaState)\n                    break;\n                default:\n                    _handleBolaStateBad(switchRequest, rulesContext, bolaState)\n                    break;\n            }\n\n            return switchRequest;\n        } catch (e) {\n            logger.error(e);\n            return SwitchRequest(context).create();\n        }\n    }\n\n    function _getBolaState(rulesContext) {\n        const mediaType = rulesContext.getMediaType();\n        const streamId = rulesContext.getStreamInfo().id;\n        if (!bolaStateDict[streamId]) {\n            bolaStateDict = {};\n            bolaStateDict[streamId] = {};\n        }\n        let bolaState = bolaStateDict[streamId][mediaType];\n        if (!bolaState) {\n            bolaState = _getInitialBolaState(rulesContext);\n            bolaStateDict[streamId][mediaType] = bolaState;\n        } else if (bolaState.state !== BOLA_STATE_ONE_BITRATE) {\n            _checkBolaStateBufferTimeDefault(bolaState, mediaType);\n        }\n        return bolaState;\n    }\n\n    function resetInitialSettings() {\n        bolaStateDict = {};\n    }\n\n    function reset() {\n        resetInitialSettings();\n\n        eventBus.off(MediaPlayerEvents.BUFFER_EMPTY, _onBufferEmpty, instance);\n        eventBus.off(MediaPlayerEvents.PLAYBACK_SEEKING, _onPlaybackSeeking, instance);\n        eventBus.off(MediaPlayerEvents.METRIC_ADDED, _onMetricAdded, instance);\n        eventBus.off(MediaPlayerEvents.QUALITY_CHANGE_REQUESTED, _onQualityChangeRequested, instance);\n        eventBus.off(MediaPlayerEvents.FRAGMENT_LOADING_ABANDONED, _onFragmentLoadingAbandoned, instance);\n        eventBus.off(Events.MEDIA_FRAGMENT_LOADED, _onMediaFragmentLoaded, instance);\n        eventBus.off(Events.SETTING_UPDATED_MAX_BITRATE, _onMinMaxBitrateUpdated, instance);\n        eventBus.off(Events.SETTING_UPDATED_MIN_BITRATE, _onMinMaxBitrateUpdated, instance);\n    }\n\n    instance = {\n        getSwitchRequest,\n        handleNewMediaInfo,\n        reset\n    };\n\n    setup();\n    return instance;\n}\n\nBolaRule.__dashjs_factory_name = 'BolaRule';\nexport default FactoryMaker.getClassFactory(BolaRule);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2020, Unified Streaming.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n// For a description of the Learn2Adapt-LowLatency (L2A-LL) bitrate adaptation algorithm, see https://github.com/unifiedstreaming/Learn2Adapt-LowLatency/blob/master/Online_learning_for_bitrate_adaptation_in_low_latency_live_streaming_CR.pdf\n\nimport MetricsConstants from '../../constants/MetricsConstants.js';\nimport SwitchRequest from '../SwitchRequest.js';\nimport FactoryMaker from '../../../core/FactoryMaker.js';\nimport {HTTPRequest} from '../../vo/metrics/HTTPRequest.js';\nimport EventBus from '../../../core/EventBus.js';\nimport Events from '../../../core/events/Events.js';\nimport Debug from '../../../core/Debug.js';\nimport Constants from '../../constants/Constants.js';\n\nconst L2A_STATE_ONE_BITRATE = 'L2A_STATE_ONE_BITRATE'; // If there is only one bitrate (or initialization failed), always return NO_CHANGE.\nconst L2A_STATE_STARTUP = 'L2A_STATE_STARTUP'; // Set placeholder buffer such that we download fragments at most recently measured throughput.\nconst L2A_STATE_STEADY = 'L2A_STATE_STEADY'; // Buffer primed, we switch to steady operation.\nconst HORIZON = 4; // Optimization horizon (The amount of steps required to achieve convergence)\nconst VL = Math.pow(HORIZON, 0.99);// Cautiousness parameter, used to control aggressiveness of the bitrate decision process.\nconst REACT = 2;\n\nfunction L2ARule(config) {\n    config = config || {};\n    const context = this.context;\n\n    const dashMetrics = config.dashMetrics;\n    const eventBus = EventBus(context).getInstance();\n\n    let instance,\n        l2AStateDict,\n        l2AParameterDict,\n        logger;\n\n    /**\n     * Setup function to initialize L2ARule\n     */\n    function setup() {\n        logger = Debug(context).getInstance().getLogger(instance);\n        _resetInitialSettings();\n\n        eventBus.on(Events.PLAYBACK_SEEKING, _onPlaybackSeeking, instance);\n        eventBus.on(Events.MEDIA_FRAGMENT_LOADED, _onMediaFragmentLoaded, instance);\n        eventBus.on(Events.METRIC_ADDED, _onMetricAdded, instance);\n    }\n\n    /**\n     * Sets the initial state of the algorithm. Calls the initialize function for the paramteters.\n     * @param {object} rulesContext\n     * @return {object} initialState\n     * @private\n     */\n    function _getInitialL2AState(rulesContext) {\n        const initialState = {};\n        const mediaInfo = rulesContext.getMediaInfo();\n\n        initialState.state = L2A_STATE_STARTUP;\n        initialState.currentRepresentation = null;\n\n        _initializeL2AParameters(mediaInfo);\n        _clearL2AStateOnSeek(initialState);\n\n        return initialState;\n    }\n\n    /**\n     * Initializes the parameters of the algorithm. This will be done once for each media type.\n     * @param {object} mediaInfo\n     * @private\n     */\n    function _initializeL2AParameters(mediaInfo) {\n\n        if (!mediaInfo || !mediaInfo.type) {\n            return;\n        }\n        l2AParameterDict[mediaInfo.type] = {};\n        l2AParameterDict[mediaInfo.type].w = []; //Vector of probabilities associated with bitrate decisions\n        l2AParameterDict[mediaInfo.type].prev_w = []; //Vector of probabilities associated with bitrate decisions calculated in the previous step\n        l2AParameterDict[mediaInfo.type].Q = 0; //Initialization of Lagrangian multiplier (This keeps track of the buffer displacement)\n        l2AParameterDict[mediaInfo.type].segment_request_start_s = 0;\n        l2AParameterDict[mediaInfo.type].segment_download_finish_s = 0;\n        l2AParameterDict[mediaInfo.type].B_target = 1.5; //Target buffer level\n    }\n\n\n    /**\n     * Clears the state object\n     * @param {object} l2AState\n     * @private\n     */\n    function _clearL2AStateOnSeek(l2AState) {\n        l2AState.placeholderBuffer = 0;\n        l2AState.mostAdvancedSegmentStart = NaN;\n        l2AState.lastSegmentWasReplacement = false;\n        l2AState.lastSegmentStart = NaN;\n        l2AState.lastSegmentDurationS = NaN;\n        l2AState.lastSegmentRequestTimeMs = NaN;\n        l2AState.lastSegmentFinishTimeMs = NaN;\n        l2AState.lastSegmentUrl = '';\n    }\n\n\n    /**\n     * Returns the state object for a fiven media type. If the state object is not yet defined _getInitialL2AState is called\n     * @param {object} rulesContext\n     * @return {object} l2AState\n     * @private\n     */\n    function _getL2AState(rulesContext) {\n        const mediaType = rulesContext.getMediaType();\n        let l2AState = l2AStateDict[mediaType];\n\n        if (!l2AState) {\n            l2AState = _getInitialL2AState(rulesContext);\n            l2AStateDict[mediaType] = l2AState;\n        }\n\n        return l2AState;\n    }\n\n    /**\n     * Event handler for the seeking event.\n     * @private\n     */\n    function _onPlaybackSeeking() {\n        for (const mediaType in l2AStateDict) {\n            if (l2AStateDict.hasOwnProperty(mediaType)) {\n                const l2aState = l2AStateDict[mediaType];\n                if (l2aState.state !== L2A_STATE_ONE_BITRATE) {\n                    l2aState.state = L2A_STATE_STARTUP;\n                    _clearL2AStateOnSeek(l2aState);\n                }\n            }\n        }\n    }\n\n    /**\n     * Event handler for the mediaFragmentLoaded event\n     * @param {object} e\n     * @private\n     */\n    function _onMediaFragmentLoaded(e) {\n        if (e && e.chunk && e.chunk.representation && e.chunk.representation.mediaInfo) {\n            const l2AState = l2AStateDict[e.chunk.representation.mediaInfo.type];\n            const l2AParameters = l2AParameterDict[e.chunk.representation.mediaInfo.type];\n\n            if (l2AState && l2AState.state !== L2A_STATE_ONE_BITRATE) {\n                const start = e.chunk.start;\n                if (isNaN(l2AState.mostAdvancedSegmentStart) || start > l2AState.mostAdvancedSegmentStart) {\n                    l2AState.mostAdvancedSegmentStart = start;\n                    l2AState.lastSegmentWasReplacement = false;\n                } else {\n                    l2AState.lastSegmentWasReplacement = true;\n                }\n\n                l2AState.lastSegmentStart = start;\n                l2AState.lastSegmentDurationS = e.chunk.duration;\n                l2AState.currentRepresentation = e.chunk.representation;\n\n                _checkNewSegment(l2AState, l2AParameters);\n            }\n        }\n    }\n\n    /**\n     * Event handler for the metricAdded event\n     * @param {object} e\n     * @private\n     */\n    function _onMetricAdded(e) {\n        if (e && e.metric === MetricsConstants.HTTP_REQUEST && e.value && e.value.type === HTTPRequest.MEDIA_SEGMENT_TYPE && e.value.trace && e.value.trace.length) {\n            const l2AState = l2AStateDict[e.mediaType];\n            const l2AParameters = l2AParameterDict[e.mediaType];\n\n            if (l2AState && l2AState.state !== L2A_STATE_ONE_BITRATE) {\n                l2AState.lastSegmentRequestTimeMs = e.value.trequest.getTime();\n                l2AState.lastSegmentFinishTimeMs = e.value._tfinish.getTime();\n                _checkNewSegment(l2AState, l2AParameters);\n            }\n        }\n    }\n\n    /**\n     * When a new metric has been added or a media fragment has been loaded the state is adjusted accordingly\n     * @param {object} L2AState\n     * @param {object} l2AParameters\n     * @private\n     */\n    function _checkNewSegment(L2AState, l2AParameters) {\n        if (!isNaN(L2AState.lastSegmentStart) && !isNaN(L2AState.lastSegmentRequestTimeMs)) {\n            l2AParameters.segment_request_start_s = 0.001 * L2AState.lastSegmentRequestTimeMs;\n            l2AParameters.segment_download_finish_s = 0.001 * L2AState.lastSegmentFinishTimeMs;\n            L2AState.lastSegmentStart = NaN;\n            L2AState.lastSegmentRequestTimeMs = NaN;\n        }\n    }\n\n\n    /**\n     * Dot multiplication of two arrays\n     * @param {array} arr1\n     * @param {array} arr2\n     * @return {number} sumdot\n     * @private\n     */\n\n    function _dotmultiplication(arr1, arr2) {\n        if (arr1.length !== arr2.length) {\n            return -1;\n        }\n        let sumdot = 0;\n        for (let i = 0; i < arr1.length; i++) {\n            sumdot = sumdot + arr1[i] * arr2[i];\n        }\n        return sumdot;\n    }\n\n    /**\n     * Project an n-dim vector y to the simplex Dn\n     * Dn = { x : x n-dim, 1 >= x >= 0, sum(x) = 1}\n     * Algorithm is explained at http://arxiv.org/abs/1101.6081\n     * @param {array} arr\n     * @return {array}\n     */\n    function euclideanProjection(arr) {\n        const m = arr.length;\n        let bget = false;\n        let arr2 = [];\n        for (let ii = 0; ii < m; ++ii) {\n            arr2[ii] = arr[ii];\n        }\n        let s = arr.sort(function (a, b) {\n            return b - a;\n        });\n        let tmpsum = 0;\n        let tmax = 0;\n        let x = [];\n        for (let ii = 0; ii < m - 1; ++ii) {\n            tmpsum = tmpsum + s[ii];\n            tmax = (tmpsum - 1) / (ii + 1);\n            if (tmax >= s[ii + 1]) {\n                bget = true;\n                break;\n            }\n        }\n        if (!bget) {\n            tmax = (tmpsum + s[m - 1] - 1) / m;\n        }\n        for (let ii = 0; ii < m; ++ii) {\n            x[ii] = Math.max(arr2[ii] - tmax, 0);\n        }\n        return x;\n    }\n\n    /**\n     *\n     * @param rulesContext\n     * @param switchRequest\n     * @param l2AState\n     * @private\n     */\n    function _handleStartupState(rulesContext, switchRequest, l2AState) {\n        const mediaInfo = rulesContext.getMediaInfo();\n        const mediaType = rulesContext.getMediaType();\n        const throughputController = rulesContext.getThroughputController();\n        const safeThroughput = throughputController.getSafeAverageThroughput(mediaType);\n\n        if (isNaN(safeThroughput)) {\n            // still starting up - not enough information\n            return switchRequest;\n        }\n\n        const abrController = rulesContext.getAbrController();\n        const representation = abrController.getOptimalRepresentationForBitrate(mediaInfo, safeThroughput, true);//During strat-up phase abr.controller is responsible for bitrate decisions.\n        const bufferLevel = dashMetrics.getCurrentBufferLevel(mediaType, true);\n        const l2AParameter = l2AParameterDict[mediaType];\n        const possibleRepresentations = abrController.getPossibleVoRepresentationsFilteredBySettings(mediaInfo, true);\n\n        switchRequest.representation = representation;\n        switchRequest.reason.throughput = safeThroughput;\n        l2AState.currentRepresentation = representation;\n\n        if (!isNaN(l2AState.lastSegmentDurationS) && bufferLevel >= l2AParameter.B_target) {\n            l2AState.state = L2A_STATE_STEADY;\n            l2AParameter.Q = VL;// Initialization of Q langrangian multiplier\n            // Update of probability vector w, to be used in main adaptation logic of L2A below (steady state)\n            for (let i = 0; i < possibleRepresentations.length; ++i) {\n                const rep = possibleRepresentations[i];\n                if (rep.id === l2AState.currentRepresentation.id) {\n                    l2AParameter.prev_w[i] = 1;\n                } else {\n                    l2AParameter.prev_w[i] = 0;\n                }\n            }\n        }\n    }\n\n    function _handleSteadyState(rulesContext, switchRequest, l2AState) {\n        let diff1 = []; //Used to calculate the difference between consecutive decisions (w-w_prev)\n        const throughputController = rulesContext.getThroughputController();\n        const mediaType = rulesContext.getMediaType();\n        let lastThroughput = throughputController.getAverageThroughput(mediaType, Constants.THROUGHPUT_CALCULATION_MODES.ARITHMETIC_MEAN, 1);\n        let currentHttpRequest = dashMetrics.getCurrentHttpRequest(mediaType);\n        let selectedRepresentation = null;\n        const l2AParameter = l2AParameterDict[mediaType];\n\n        //To avoid division with 0 (avoid infinity) in case of an absolute network outage\n        if (lastThroughput < 1) {\n            lastThroughput = 1;\n        }\n\n        // Note that for SegmentBase addressing the request url does not change.\n        // As this is not relevant for low latency streaming at this point the check below is sufficient\n        if (currentHttpRequest.url === l2AState.lastSegmentUrl ||\n            currentHttpRequest.type === HTTPRequest.INIT_SEGMENT_TYPE) {\n            // No change to inputs or init segment so use previously calculated quality\n            selectedRepresentation = l2AState.currentRepresentation;\n\n        } else { // Recalculate Q\n            let V = l2AState.lastSegmentDurationS;\n            let sign = 1;\n\n            //Main adaptation logic of L2A-LL\n            const abrController = rulesContext.getAbrController();\n            const mediaInfo = rulesContext.getMediaInfo();\n            const possibleRepresentations = abrController.getPossibleVoRepresentationsFilteredBySettings(mediaInfo, true);\n            const videoModel = rulesContext.getVideoModel();\n            let currentPlaybackRate = videoModel.getPlaybackRate();\n            const alpha = Math.max(Math.pow(HORIZON, 1), VL * Math.sqrt(HORIZON));// Step size, used for gradient descent exploration granularity\n            for (let i = 0; i < possibleRepresentations.length; ++i) {\n                const rep = possibleRepresentations[i];\n\n                // In this case buffer would deplete, leading to a stall, which increases latency and thus the particular probability of selection of bitrate[i] should be decreased.\n                if (currentPlaybackRate * rep.bitrateInKbit > lastThroughput) {\n                    sign = -1;\n                }\n\n                // The objective of L2A is to minimize the overall latency=request-response time + buffer length after download+ potential stalling (if buffer less than chunk downlad time)\n                l2AParameter.w[i] = l2AParameter.prev_w[i] + sign * (V / (2 * alpha)) * ((l2AParameter.Q + VL) * (currentPlaybackRate * rep.bitrateInKbit / lastThroughput));//Lagrangian descent\n            }\n\n            // Apply euclidean projection on w to ensure w expresses a probability distribution\n            l2AParameter.w = euclideanProjection(l2AParameter.w);\n\n            for (let i = 0; i < possibleRepresentations.length; ++i) {\n                diff1[i] = l2AParameter.w[i] - l2AParameter.prev_w[i];\n                l2AParameter.prev_w[i] = l2AParameter.w[i];\n            }\n\n            // Lagrangian multiplier Q calculation:\n            const bitrates = possibleRepresentations.map((rep) => {\n                return rep.bandwidth;\n            })\n            l2AParameter.Q = Math.max(0, l2AParameter.Q - V + V * currentPlaybackRate * ((_dotmultiplication(bitrates, l2AParameter.prev_w) + _dotmultiplication(bitrates, diff1)) / lastThroughput));\n\n            // Quality is calculated as argmin of the absolute difference between available bitrates (bitrates[i]) and bitrate estimation (dotmultiplication(w,bitrates)).\n            let temp = [];\n            for (let i = 0; i < bitrates.length; ++i) {\n                temp[i] = Math.abs(bitrates[i] - _dotmultiplication(l2AParameter.w, bitrates));\n            }\n\n            // Quality is calculated based on the probability distribution w (the output of L2A)\n            const absoluteIndex = temp.indexOf(Math.min(...temp));\n            selectedRepresentation = abrController.getRepresentationByAbsoluteIndex(absoluteIndex, mediaInfo, true);\n\n            // We employ a cautious -stepwise- ascent\n            if (selectedRepresentation.absoluteIndex > l2AState.currentRepresentation.absoluteIndex) {\n                if (bitrates[l2AState.currentRepresentation.absoluteIndex + 1] <= lastThroughput) {\n                    selectedRepresentation = abrController.getRepresentationByAbsoluteIndex(l2AState.currentRepresentation.absoluteIndex + 1, mediaInfo, true);\n                }\n            }\n\n            // Provision against bitrate over-estimation, by re-calibrating the Lagrangian multiplier Q, to be taken into account for the next chunk\n            if (selectedRepresentation.bitrateInKbit >= lastThroughput) {\n                l2AParameter.Q = REACT * Math.max(VL, l2AParameter.Q);\n            }\n            l2AState.lastSegmentUrl = currentHttpRequest.url;\n        }\n        switchRequest.representation = selectedRepresentation;\n        l2AState.currentRepresentation = switchRequest.representation;\n    }\n\n    function _handleErrorState(rulesContext, switchRequest, l2AState) {\n        const abrController = rulesContext.getAbrController();\n        const mediaInfo = rulesContext.getMediaInfo();\n        const mediaType = rulesContext.getMediaType();\n        const throughputController = rulesContext.getThroughputController();\n        const safeThroughput = throughputController.getSafeAverageThroughput(mediaType);\n\n        switchRequest.representation = abrController.getOptimalRepresentationForBitrate(mediaInfo, safeThroughput, true);//During strat-up phase abr.controller is responsible for bitrate decisions.\n        switchRequest.reason.throughput = safeThroughput;\n        l2AState.state = L2A_STATE_STARTUP;\n        _clearL2AStateOnSeek(l2AState);\n    }\n\n    /**\n     * Returns a switch request object indicating which quality is to be played\n     * @param {object} rulesContext\n     * @return {object}\n     */\n    function getSwitchRequest(rulesContext) {\n        try {\n            const switchRequest = SwitchRequest(context).create();\n            switchRequest.rule = this.getClassName();\n            const mediaType = rulesContext.getMediaType();\n            const scheduleController = rulesContext.getScheduleController();\n\n            switchRequest.reason = switchRequest.reason || {};\n\n            // L2A decides bitrate only for video. Audio to be included in decision process in a later stage\n            if ((mediaType === Constants.AUDIO)) {\n                return switchRequest;\n            }\n\n            scheduleController.setTimeToLoadDelay(0);\n\n            const l2AState = _getL2AState(rulesContext);\n            const l2AParameter = l2AParameterDict[mediaType];\n            if (!l2AParameter) {\n                return switchRequest;\n            }\n\n            switchRequest.reason.state = l2AState.state;\n\n            switch (l2AState.state) {\n                case L2A_STATE_ONE_BITRATE:\n                    break;\n                case L2A_STATE_STARTUP:\n                    _handleStartupState(rulesContext, switchRequest, l2AState);\n                    break;\n                case L2A_STATE_STEADY:\n                    _handleSteadyState(rulesContext, switchRequest, l2AState);\n                    break;\n                default:\n                    _handleErrorState(rulesContext, switchRequest, l2AState)\n            }\n            return switchRequest;\n        } catch (e) {\n            logger.error(e);\n            return SwitchRequest(context).create();\n        }\n    }\n\n    /**\n     * Reset objects to their initial state\n     * @private\n     */\n    function _resetInitialSettings() {\n        l2AStateDict = {};\n        l2AParameterDict = {};\n    }\n\n    /**\n     * Reset the rule\n     */\n    function reset() {\n        _resetInitialSettings();\n        eventBus.off(Events.PLAYBACK_SEEKING, _onPlaybackSeeking, instance);\n        eventBus.off(Events.MEDIA_FRAGMENT_LOADED, _onMediaFragmentLoaded, instance);\n        eventBus.off(Events.METRIC_ADDED, _onMetricAdded, instance);\n    }\n\n    instance = {\n        getSwitchRequest,\n        reset\n    };\n\n    setup();\n    return instance;\n}\n\nL2ARule.__dashjs_factory_name = 'L2ARule';\nexport default FactoryMaker.getClassFactory(L2ARule);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * Authors:\n * Abdelhak Bentaleb | National University of Singapore | bentaleb@comp.nus.edu.sg\n * Mehmet N. Akcay | Ozyegin University | necmettin.akcay@ozu.edu.tr\n * May Lim | National University of Singapore | maylim@comp.nus.edu.sg\n */\n\nimport FactoryMaker from '../../../../core/FactoryMaker.js';\nimport Debug from '../../../../core/Debug.js';\n\nconst WEIGHT_SELECTION_MODES = {\n    MANUAL: 'manual_weight_selection',\n    RANDOM: 'random_weight_selection',\n    DYNAMIC: 'dynamic_weight_selection'\n};\n\nfunction LearningAbrController() {\n    const context = this.context;\n\n    let instance,\n        logger,\n        somBitrateNeurons,\n        bitrateNormalizationFactor,\n        latencyNormalizationFactor,\n        minBitrate,\n        weights,\n        sortedCenters,\n        weightSelectionMode;\n\n    /**\n     * Setup the class\n     */\n    function _setup() {\n        logger = Debug(context).getInstance().getLogger(instance);\n        _resetInitialSettings();\n    }\n\n    /**\n     * Reset all values\n     */\n    function reset() {\n        _resetInitialSettings();\n    }\n\n    /**\n     * Reset to initial settings\n     * @private\n     */\n    function _resetInitialSettings() {\n        somBitrateNeurons = null;\n        bitrateNormalizationFactor = 1;\n        latencyNormalizationFactor = 100;\n        minBitrate = 0;\n        weights = null;\n        sortedCenters = null;\n        weightSelectionMode = WEIGHT_SELECTION_MODES.DYNAMIC;\n    }\n\n    /**\n     * Returns the maximum throughput\n     * @return {number}\n     * @private\n     */\n    function _getMaxThroughput() {\n        let maxThroughput = 0;\n\n        if (somBitrateNeurons) {\n            for (let i = 0; i < somBitrateNeurons.length; i++) {\n                let neuron = somBitrateNeurons[i];\n                if (neuron.state.throughput > maxThroughput) {\n                    maxThroughput = neuron.state.throughput;\n                }\n            }\n        }\n\n        return maxThroughput;\n    }\n\n    /**\n     *\n     * @param {array} w\n     * @return {number}\n     * @private\n     */\n    function _getMagnitude(w) {\n        const magnitude = w.map((x) => (Math.pow(x, 2))).reduce((sum, now) => sum + now);\n\n        return Math.sqrt(magnitude);\n    }\n\n    /**\n     *\n     * @param {array} a\n     * @param {array} b\n     * @param {array} w\n     * @return {number}\n     * @private\n     */\n    function _getDistance(a, b, w) {\n        let sum = a\n            .map((x, i) => (w[i] * (Math.pow(x - b[i], 2)))) // square the difference*w\n            .reduce((sum, now) => sum + now); // sum\n        let sign = (sum < 0) ? -1 : 1;\n\n        return sign * Math.sqrt(Math.abs(sum));\n    }\n\n    /**\n     *\n     * @param {object} a\n     * @param {object} b\n     * @return {number}\n     * @private\n     */\n    function _getNeuronDistance(a, b) {\n        let aState = [a.state.throughput, a.state.latency, a.state.rebuffer, a.state.switch];\n        let bState = [b.state.throughput, b.state.latency, b.state.rebuffer, b.state.switch];\n\n        return _getDistance(aState, bState, [1, 1, 1, 1]);\n    }\n\n    /**\n     *\n     * @param {object} winnerNeuron\n     * @param {array} somElements\n     * @param {array} x\n     * @private\n     */\n    function _updateNeurons(winnerNeuron, x) {\n        for (let i = 0; i < somBitrateNeurons.length; i++) {\n            let somNeuron = somBitrateNeurons[i];\n            let sigma = 0.1;\n            const neuronDistance = _getNeuronDistance(somNeuron, winnerNeuron);\n            let neighbourHood = Math.exp(-1 * Math.pow(neuronDistance, 2) / (2 * Math.pow(sigma, 2)));\n            _updateNeuronState(somNeuron, x, neighbourHood);\n        }\n    }\n\n    /**\n     *\n     * @param {object} neuron\n     * @param {array} x\n     * @param {object} neighbourHood\n     * @private\n     */\n    function _updateNeuronState(neuron, x, neighbourHood) {\n        let state = neuron.state;\n        let w = [0.01, 0.01, 0.01, 0.01]; // learning rate\n\n        state.throughput = state.throughput + (x[0] - state.throughput) * w[0] * neighbourHood;\n        state.latency = state.latency + (x[1] - state.latency) * w[1] * neighbourHood;\n        state.rebuffer = state.rebuffer + (x[2] - state.rebuffer) * w[2] * neighbourHood;\n        state.switch = state.switch + (x[3] - state.switch) * w[3] * neighbourHood;\n    }\n\n    /**\n     *\n     * @param {object} currentNeuron\n     * @param {number} currentThroughput\n     * @return {object}\n     * @private\n     */\n    function _getDownShiftNeuron(currentNeuron, currentThroughput) {\n        let maxSuitableBitrate = 0;\n        let result = currentNeuron;\n\n        if (somBitrateNeurons) {\n            for (let i = 0; i < somBitrateNeurons.length; i++) {\n                let n = somBitrateNeurons[i];\n                if (n.representation.bandwidth < currentNeuron.representation.bandwidth && n.representation.bandwidth > maxSuitableBitrate && currentThroughput > n.representation.bandwidth) {\n                    // possible downshiftable neuron\n                    maxSuitableBitrate = n.representation.bandwidth;\n                    result = n;\n                }\n            }\n        }\n\n        return result;\n    }\n\n    /**\n     *\n     * @param {object} abrController\n     * @param {object} mediaInfo\n     * @param {number} throughput\n     * @param {number} latency\n     * @param {number} currentBufferLevel\n     * @param {number} playbackRate\n     * @param {object} currentRepresentation\n     * @param {object} dynamicWeightsSelector\n     * @return {null|*}\n     */\n    function getNextQuality(abrController, mediaInfo, throughput, latency, currentBufferLevel, playbackRate, currentRepresentation, dynamicWeightsSelector) {\n        // For Dynamic Weights Selector\n        let currentLatency = latency;\n        let currentThroughput = throughput;\n\n        _setSomBitrateNeurons(mediaInfo, abrController);\n        // normalize throughput\n        let throughputNormalized = throughput / bitrateNormalizationFactor;\n        // saturate values higher than 1\n        if (throughputNormalized > 1) {\n            throughputNormalized = _getMaxThroughput();\n        }\n        // normalize latency\n        latency = latency / latencyNormalizationFactor;\n\n        const targetLatency = 0;\n        const targetRebufferLevel = 0;\n        // 10K + video encoding is the recommended throughput\n        const throughputDelta = 10000;\n\n        let currentNeuron = somBitrateNeurons.find(entry => entry.representation.id === currentRepresentation.id);\n        let downloadTime = (currentNeuron.representation.bandwidth * dynamicWeightsSelector.getSegmentDuration()) / currentThroughput;\n        let rebuffer = Math.max(0, (downloadTime - currentBufferLevel));\n\n        // check buffer for possible stall\n        if (currentBufferLevel - downloadTime < dynamicWeightsSelector.getMinBuffer()) {\n            logger.debug(`Buffer is low for bitrate= ${currentNeuron.representation.bandwidth} downloadTime=${downloadTime} currentBuffer=${currentBufferLevel} rebuffer=${rebuffer}`);\n            return _getDownShiftNeuron(currentNeuron, currentThroughput).representation;\n        }\n\n        switch (weightSelectionMode) {\n            case WEIGHT_SELECTION_MODES.MANUAL:\n                _manualWeightSelection();\n                break;\n            case WEIGHT_SELECTION_MODES.RANDOM:\n                _randomWeightSelection();\n                break;\n            case WEIGHT_SELECTION_MODES.DYNAMIC:\n                _dynamicWeightSelection(dynamicWeightsSelector, currentLatency, currentBufferLevel, rebuffer, currentThroughput, playbackRate);\n                break;\n            default:\n                _dynamicWeightSelection(dynamicWeightsSelector, currentLatency, currentBufferLevel, rebuffer, currentThroughput, playbackRate);\n\n        }\n\n        let minDistance = null;\n        let targetRepresentation = null;\n        let winnerNeuron = null;\n\n        for (let i = 0; i < somBitrateNeurons.length; i++) {\n            let somNeuron = somBitrateNeurons[i];\n            let somNeuronState = somNeuron.state;\n            let somData = [somNeuronState.throughput,\n                somNeuronState.latency,\n                somNeuronState.rebuffer,\n                somNeuronState.switch];\n\n            let distanceWeights = weights.slice();\n            let nextBuffer = dynamicWeightsSelector.getNextBufferWithBitrate(somNeuron.representation.bandwidth, currentBufferLevel, currentThroughput);\n            let isBufferLow = nextBuffer < dynamicWeightsSelector.getMinBuffer();\n            if (isBufferLow) {\n                logger.debug(`Buffer is low for bitrate=${somNeuron.representation.bandwidth} downloadTime=${downloadTime} currentBuffer=${currentBufferLevel} nextBuffer=${nextBuffer}`);\n            }\n            // special condition downshift immediately\n            if (somNeuron.representation.bandwidth > throughput - throughputDelta || isBufferLow) {\n                if (somNeuron.representation.bandwidth !== minBitrate) {\n                    // encourage to pick smaller bitrates throughputWeight=100\n                    distanceWeights[0] = 100;\n                }\n            }\n\n            // calculate the distance with the target\n            let distance = _getDistance(somData, [throughputNormalized, targetLatency, targetRebufferLevel, 0], distanceWeights);\n            if (minDistance === null || distance < minDistance) {\n                minDistance = distance;\n                targetRepresentation = somNeuron.representation;\n                winnerNeuron = somNeuron;\n            }\n        }\n\n        // update current neuron and the neighbourhood with the calculated QoE\n        // will punish current if it is not picked\n        let bitrateSwitch = Math.abs(currentNeuron.representation.bandwidth - winnerNeuron.representation.bandwidth) / bitrateNormalizationFactor;\n        _updateNeurons(currentNeuron, [throughputNormalized, latency, rebuffer, bitrateSwitch]);\n\n        // update bmu and  neighbours with targetQoE=1, targetLatency=0\n        _updateNeurons(winnerNeuron, [throughputNormalized, targetLatency, targetRebufferLevel, bitrateSwitch]);\n\n        return targetRepresentation;\n    }\n\n    /**\n     * Option 1: Manual weights\n     * @private\n     */\n    function _manualWeightSelection() {\n        let throughputWeight = 0.4;\n        let latencyWeight = 0.4;\n        let bufferWeight = 0.4;\n        let switchWeight = 0.4;\n\n        weights = [throughputWeight, latencyWeight, bufferWeight, switchWeight]; // throughput, latency, buffer, switch\n    }\n\n    /**\n     * Option 2: Random (Xavier) weights\n     * @private\n     */\n    function _randomWeightSelection() {\n        weights = _getXavierWeights(somBitrateNeurons.length, 4);\n    }\n\n    /**\n     * Dynamic Weight Selector weights\n     * @param {object} dynamicWeightsSelector\n     * @param {array} somElements\n     * @param {number} currentLatency\n     * @param {number} currentBuffer\n     * @param {number} rebuffer\n     * @param {number} currentThroughput\n     * @param {number} playbackRate\n     * @private\n     */\n    function _dynamicWeightSelection(dynamicWeightsSelector, currentLatency, currentBuffer, rebuffer, currentThroughput, playbackRate) {\n        if (!weights) {\n            weights = sortedCenters[sortedCenters.length - 1];\n        }\n        // Dynamic Weights Selector (step 2/2: find weights)\n        let weightVector = dynamicWeightsSelector.findWeightVector(somBitrateNeurons, currentLatency, currentBuffer, rebuffer, currentThroughput, playbackRate);\n        if (weightVector !== null && weightVector !== -1) { // null: something went wrong, -1: constraints not met\n            weights = weightVector;\n        }\n    }\n\n    /**\n     *\n     * @param {number }neuronCount\n     * @param {number }weightCount\n     * @return {array}\n     * @private\n     */\n    function _getXavierWeights(neuronCount, weightCount) {\n        let W = [];\n        let upperBound = Math.sqrt((2 / neuronCount));\n\n        for (let i = 0; i < weightCount; i++) {\n            W.push(Math.random() * upperBound);\n        }\n\n        weights = W;\n\n        return weights;\n    }\n\n    /**\n     *\n     * @param {object} mediaInfo\n     * @param abrController\n     * @return {array}\n     * @private\n     */\n    function _setSomBitrateNeurons(mediaInfo, abrController) {\n        if (!somBitrateNeurons) {\n            somBitrateNeurons = [];\n            const possibleRepresentations = abrController.getPossibleVoRepresentationsFilteredBySettings(mediaInfo, true);\n            const bitrateList = possibleRepresentations.map((r) => r.bandwidth);\n            minBitrate = Math.min(...bitrateList);\n            bitrateNormalizationFactor = _getMagnitude(bitrateList);\n\n            possibleRepresentations.forEach((rep) => {\n                let neuron = {\n                    representation: rep,\n                    state: {\n                        // normalize throughputs\n                        throughput: rep.bandwidth / bitrateNormalizationFactor,\n                        latency: 0,\n                        rebuffer: 0,\n                        switch: 0\n                    }\n                };\n                somBitrateNeurons.push(neuron);\n            })\n\n            sortedCenters = _getInitialKmeansPlusPlusCenters(somBitrateNeurons);\n        }\n\n        return somBitrateNeurons;\n    }\n\n    /**\n     *\n     * @param {number} size\n     * @return {array}\n     * @private\n     */\n    function _getRandomData(size) {\n        let dataArray = [];\n\n        for (let i = 0; i < size; i++) {\n            let data = [\n                Math.random() * _getMaxThroughput(), //throughput\n                Math.random(), //latency\n                Math.random(), //buffersize\n                Math.random() //switch\n            ];\n            dataArray.push(data);\n        }\n\n        return dataArray;\n    }\n\n    /**\n     *\n     * @param {array} somBitrateNeurons\n     * @return {array}\n     * @private\n     */\n    function _getInitialKmeansPlusPlusCenters(somBitrateNeurons) {\n        let centers = [];\n        let randomDataSet = _getRandomData(Math.pow(somBitrateNeurons.length, 2));\n        centers.push(randomDataSet[0]);\n        let distanceWeights = [1, 1, 1, 1];\n\n        for (let k = 1; k < somBitrateNeurons.length; k++) {\n            let nextPoint = null;\n            let maxDistance = null;\n            for (let i = 0; i < randomDataSet.length; i++) {\n                let currentPoint = randomDataSet[i];\n                let minDistance = null;\n                for (let j = 0; j < centers.length; j++) {\n                    let distance = _getDistance(currentPoint, centers[j], distanceWeights);\n                    if (minDistance === null || distance < minDistance) {\n                        minDistance = distance;\n                    }\n                }\n                if (maxDistance === null || minDistance > maxDistance) {\n                    nextPoint = currentPoint;\n                    maxDistance = minDistance;\n                }\n            }\n            centers.push(nextPoint);\n        }\n\n        // find the least similar center\n        let maxDistance = null;\n        let leastSimilarIndex = null;\n        for (let i = 0; i < centers.length; i++) {\n            let distance = 0;\n            for (let j = 0; j < centers.length; j++) {\n                if (i === j) {\n                    continue;\n                }\n                distance += _getDistance(centers[i], centers[j], distanceWeights);\n            }\n            if (maxDistance === null || distance > maxDistance) {\n                maxDistance = distance;\n                leastSimilarIndex = i;\n            }\n        }\n\n        // move centers to sortedCenters\n        let sortedCenters = [];\n        sortedCenters.push(centers[leastSimilarIndex]);\n        centers.splice(leastSimilarIndex, 1);\n        while (centers.length > 0) {\n            let minDistance = null;\n            let minIndex = null;\n            for (let i = 0; i < centers.length; i++) {\n                let distance = _getDistance(sortedCenters[0], centers[i], distanceWeights);\n                if (minDistance === null || distance < minDistance) {\n                    minDistance = distance;\n                    minIndex = i;\n                }\n            }\n            sortedCenters.push(centers[minIndex]);\n            centers.splice(minIndex, 1);\n        }\n\n        return sortedCenters;\n    }\n\n    instance = {\n        getNextQuality,\n        reset\n    };\n\n    _setup();\n    return instance;\n}\n\nLearningAbrController.__dashjs_factory_name = 'LearningAbrController';\nexport default FactoryMaker.getClassFactory(LearningAbrController);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * @class\n * @ignore\n */\nclass QoeInfo {\n\n    constructor() {\n        // Type e.g. 'segment'\n        this.type = null;\n\n        // Store lastBitrate for calculation of bitrateSwitchWSum\n        this.lastBitrate = null;\n\n        // Weights for each Qoe factor\n        this.weights = {};\n        this.weights.bitrateReward = null;\n        this.weights.bitrateSwitchPenalty = null;\n        this.weights.rebufferPenalty = null;\n        this.weights.latencyPenalty = null;\n        this.weights.playbackSpeedPenalty = null;\n\n        // Weighted Sum for each Qoe factor\n        this.bitrateWSum = 0;// kbps\n        this.bitrateSwitchWSum = 0;// kbps\n        this.rebufferWSum = 0;// seconds\n        this.latencyWSum = 0;// seconds\n        this.playbackSpeedWSum = 0;// e.g. 0.95, 1.0, 1.05\n\n        // Store total Qoe value based on current Weighted Sum values\n        this.totalQoe = 0;\n    }\n}\n\nexport default QoeInfo;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * Authors:\n * Abdelhak Bentaleb | National University of Singapore | bentaleb@comp.nus.edu.sg\n * Mehmet N. Akcay | Ozyegin University | necmettin.akcay@ozu.edu.tr\n * May Lim | National University of Singapore | maylim@comp.nus.edu.sg\n */\nimport FactoryMaker from '../../../../core/FactoryMaker.js';\nimport QoeInfo from './QoeInfo.js';\n\nfunction LoLpQoeEvaluator() {\n\n    let instance,\n        voPerSegmentQoeInfo,\n        segmentDuration,\n        maxBitrateKbps,\n        minBitrateKbps;\n\n    function _setup() {\n        _resetInitialSettings();\n    }\n\n    function _resetInitialSettings() {\n        voPerSegmentQoeInfo = null;\n        segmentDuration = null;\n        maxBitrateKbps = null;\n        minBitrateKbps = null;\n    }\n\n    function setupPerSegmentQoe(sDuration, maxBrKbps, minBrKbps) {\n        // Set up Per Segment QoeInfo\n        voPerSegmentQoeInfo = _createQoeInfo('segment', sDuration, maxBrKbps, minBrKbps);\n        segmentDuration = sDuration;\n        maxBitrateKbps = maxBrKbps;\n        minBitrateKbps = minBrKbps;\n    }\n\n    function _createQoeInfo(fragmentType, fragmentDuration, maxBitrateKbps, minBitrateKbps) {\n        /*\n         * [Weights][Source: Abdelhak Bentaleb, 2020 (last updated: 30 Mar 2020)]\n         * bitrateReward:           segment duration, e.g. 0.5s\n         * bitrateSwitchPenalty:    0.02s or 1s if the bitrate switch is too important\n         * rebufferPenalty:         max encoding bitrate, e.g. 1000kbps\n         * latencyPenalty:          if L ≤ 1.1 seconds then = min encoding bitrate * 0.05, otherwise = max encoding bitrate * 0.1\n         * playbackSpeedPenalty:    min encoding bitrate, e.g. 200kbps\n         */\n\n        // Create new QoeInfo object\n        let qoeInfo = new QoeInfo();\n        qoeInfo.type = fragmentType;\n\n        // Set weight: bitrateReward\n        // set some safe value, else consider throwing error\n        if (!fragmentDuration) {\n            qoeInfo.weights.bitrateReward = 1;\n        } else {\n            qoeInfo.weights.bitrateReward = fragmentDuration;\n        }\n\n        // Set weight: bitrateSwitchPenalty\n        // qoeInfo.weights.bitrateSwitchPenalty = 0.02;\n        qoeInfo.weights.bitrateSwitchPenalty = 1;\n\n        // Set weight: rebufferPenalty\n        // set some safe value, else consider throwing error\n        if (!maxBitrateKbps) {\n            qoeInfo.weights.rebufferPenalty = 1000;\n        } else {\n            qoeInfo.weights.rebufferPenalty = maxBitrateKbps;\n        }\n\n        // Set weight: latencyPenalty\n        qoeInfo.weights.latencyPenalty = [];\n        qoeInfo.weights.latencyPenalty.push({ threshold: 1.1, penalty: (minBitrateKbps * 0.05) });\n        qoeInfo.weights.latencyPenalty.push({ threshold: 100000000, penalty: (maxBitrateKbps * 0.1) });\n\n        // Set weight: playbackSpeedPenalty\n        if (!minBitrateKbps) {\n            qoeInfo.weights.playbackSpeedPenalty = 200;\n        } // set some safe value, else consider throwing error\n        else {\n            qoeInfo.weights.playbackSpeedPenalty = minBitrateKbps;\n        }\n\n        return qoeInfo;\n    }\n\n    function logSegmentMetrics(segmentBitrate, segmentRebufferTime, currentLatency, currentPlaybackSpeed) {\n        if (voPerSegmentQoeInfo) {\n            _logMetricsInQoeInfo(segmentBitrate, segmentRebufferTime, currentLatency, currentPlaybackSpeed, voPerSegmentQoeInfo);\n        }\n    }\n\n    function _logMetricsInQoeInfo(bitrate, rebufferTime, latency, playbackSpeed, qoeInfo) {\n        // Update: bitrate Weighted Sum value\n        qoeInfo.bitrateWSum += (qoeInfo.weights.bitrateReward * bitrate);\n\n        // Update: bitrateSwitch Weighted Sum value\n        if (qoeInfo.lastBitrate) {\n            qoeInfo.bitrateSwitchWSum += (qoeInfo.weights.bitrateSwitchPenalty * Math.abs(bitrate - qoeInfo.lastBitrate));\n        }\n        qoeInfo.lastBitrate = bitrate;\n\n        // Update: rebuffer Weighted Sum value\n        qoeInfo.rebufferWSum += (qoeInfo.weights.rebufferPenalty * rebufferTime);\n\n        // Update: latency Weighted Sum value\n        for (let i = 0; i < qoeInfo.weights.latencyPenalty.length; i++) {\n            let latencyRange = qoeInfo.weights.latencyPenalty[i];\n            if (latency <= latencyRange.threshold) {\n                qoeInfo.latencyWSum += (latencyRange.penalty * latency);\n                break;\n            }\n        }\n\n        // Update: playbackSpeed Weighted Sum value\n        qoeInfo.playbackSpeedWSum += (qoeInfo.weights.playbackSpeedPenalty * Math.abs(1 - playbackSpeed));\n\n        // Update: Total Qoe value\n        qoeInfo.totalQoe = qoeInfo.bitrateWSum - qoeInfo.bitrateSwitchWSum - qoeInfo.rebufferWSum - qoeInfo.latencyWSum - qoeInfo.playbackSpeedWSum;\n    }\n\n    // Returns current Per Segment QoeInfo\n    function getPerSegmentQoe() {\n        return voPerSegmentQoeInfo;\n    }\n\n    // For one-time use only\n    // Returns totalQoe based on a single set of metrics.\n    function calculateSingleUseQoe(segmentBitrate, segmentRebufferTime, currentLatency, currentPlaybackSpeed) {\n        let singleUseQoeInfo = null;\n\n        if (segmentDuration && maxBitrateKbps && minBitrateKbps) {\n            singleUseQoeInfo = _createQoeInfo('segment', segmentDuration, maxBitrateKbps, minBitrateKbps);\n        }\n\n        if (singleUseQoeInfo) {\n            _logMetricsInQoeInfo(segmentBitrate, segmentRebufferTime, currentLatency, currentPlaybackSpeed, singleUseQoeInfo);\n            return singleUseQoeInfo.totalQoe;\n        } else {\n            // Something went wrong..\n            return 0;\n        }\n    }\n\n    function reset() {\n        _resetInitialSettings();\n    }\n\n    instance = {\n        setupPerSegmentQoe,\n        logSegmentMetrics,\n        getPerSegmentQoe,\n        calculateSingleUseQoe,\n        reset\n    };\n\n    _setup();\n\n    return instance;\n}\n\nLoLpQoeEvaluator.__dashjs_factory_name = 'LoLpQoeEvaluator';\nexport default FactoryMaker.getClassFactory(LoLpQoeEvaluator);\n\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * Authors:\n * Abdelhak Bentaleb | National University of Singapore | bentaleb@comp.nus.edu.sg\n * Mehmet N. Akcay | Ozyegin University | necmettin.akcay@ozu.edu.tr\n * May Lim | National University of Singapore | maylim@comp.nus.edu.sg\n */\n\nimport FactoryMaker from '../../../../core/FactoryMaker.js';\n\nfunction LoLpWeightSelector(config) {\n    let targetLatency = config.targetLatency;\n    let bufferMin = config.bufferMin;\n    let segmentDuration = config.segmentDuration;\n    let qoeEvaluator = config.qoeEvaluator;\n    let instance,\n        valueList,\n        weightTypeCount,\n        weightOptions,\n        previousLatency;\n\n    /**\n     *\n     * @private\n     */\n    function _setup() {\n        _resetInitialSettings();\n    }\n\n    /**\n     *\n     * @private\n     */\n    function _resetInitialSettings() {\n        valueList = [0.2, 0.4, 0.6, 0.8, 1];\n        weightTypeCount = 4;\n        weightOptions = _getPermutations(valueList, weightTypeCount);\n        previousLatency = 0;\n    }\n\n    /**\n     * Next, at each segment boundary, ABR to input current neurons and target state (only used in Method II) to find the desired weight vector\n     * @param {array} neurons\n     * @param {number} currentLatency\n     * @param {number} currentBuffer\n     * @param {number} currentRebuffer\n     * @param {number} currentThroughput\n     * @param {number} playbackRate\n     * @return {number|null}\n     * @private\n     */\n    function findWeightVector(neurons, currentLatency, currentBuffer, currentRebuffer, currentThroughput, playbackRate) {\n        let maxQoE = null;\n        let winnerWeights = null;\n        let winnerBitrate = null;\n        let deltaLatency = Math.abs(currentLatency - previousLatency);\n\n        // For each neuron, m\n        neurons.forEach((neuron) => {\n\n            // For each possible weight vector, z\n            // E.g. For [ throughput, latency, buffer, playbackRate, QoE ]\n            //      Possible weightVector = [ 0.2, 0.4, 0.2, 0, 0.2 ]\n            weightOptions.forEach((weightVector) => {\n\n                // Apply weightVector to neuron, compute utility and determine winnerWeights\n                // Method I: Utility based on QoE given current state\n\n                let weightsObj = {\n                    throughput: weightVector[0],\n                    latency: weightVector[1],\n                    buffer: weightVector[2],\n                    switch: weightVector[3]\n                };\n\n                let downloadTime = (neuron.representation.bandwidth * segmentDuration) / currentThroughput;\n                let nextBuffer = getNextBuffer(currentBuffer, downloadTime);\n                let rebuffer = Math.max(0.00001, (downloadTime - nextBuffer));\n                let wt;\n                if (weightsObj.buffer === 0) {\n                    wt = 10;\n                } else {\n                    wt = (1 / weightsObj.buffer);\n                }\n                let weightedRebuffer = wt * rebuffer;\n\n                if (weightsObj.latency === 0) {\n                    wt = 10;\n                } else {\n                    wt = (1 / weightsObj.latency); // inverse the weight because wt and latency should have positive relationship, i.e., higher latency = higher wt\n                }\n                let weightedLatency = wt * neuron.state.latency;\n\n                let totalQoE = qoeEvaluator.calculateSingleUseQoe(neuron.representation.bandwidth, weightedRebuffer, weightedLatency, playbackRate);\n                if ((maxQoE === null || totalQoE > maxQoE) && _checkConstraints(currentLatency, nextBuffer, deltaLatency)) {\n                    maxQoE = totalQoE;\n                    winnerWeights = weightVector;\n                    winnerBitrate = neuron.representation.bandwidth;\n                }\n            });\n        });\n\n        // winnerWeights was found, check if constraints are satisfied\n        if (winnerWeights === null && winnerBitrate === null) {\n            winnerWeights = -1;\n        }\n\n        previousLatency = currentLatency;\n        return winnerWeights;\n    }\n\n    /**\n     *\n     * @param {number} nextLatency\n     * @param {number} nextBuffer\n     * @param {number} deltaLatency\n     * @return {boolean}\n     * @private\n     */\n    function _checkConstraints(nextLatency, nextBuffer, deltaLatency) {\n        // A1\n        // disabled till we find a better way of estimating latency\n        // fails for all with current value\n        if (nextLatency > targetLatency + deltaLatency) {\n            return false;\n        }\n\n        return nextBuffer >= bufferMin;\n    }\n\n    /**\n     *\n     * @param {array} list\n     * @param {number} length\n     * @return {*}\n     * @private\n     */\n    function _getPermutations(list, length) {\n        // Copy initial values as arrays\n        let perm = list.map(function (val) {\n            return [val];\n        });\n        // Our permutation generator\n        let generate = function (perm, length, currLen) {\n            // Reached desired length\n            if (currLen === length) {\n                return perm;\n            }\n            // For each existing permutation\n            let len = perm.length;\n            for (let i = 0; i < len; i++) {\n                let currPerm = perm.shift();\n                // Create new permutation\n                for (let k = 0; k < list.length; k++) {\n                    perm.push(currPerm.concat(list[k]));\n                }\n            }\n            // Recurse\n            return generate(perm, length, currLen + 1);\n        };\n        // Start with size 1 because of initial values\n        return generate(perm, length, 1);\n    }\n\n    /**\n     *\n     * @return {number}\n     */\n    function getMinBuffer() {\n        return bufferMin;\n    }\n\n    /**\n     *\n     * @return {number}\n     */\n    function getSegmentDuration() {\n        return segmentDuration;\n    }\n\n    /**\n     *\n     * @param {number} bitrateToDownload\n     * @param {number} currentBuffer\n     * @param {number} currentThroughput\n     * @return {number}\n     */\n    function getNextBufferWithBitrate(bitrateToDownload, currentBuffer, currentThroughput) {\n        let downloadTime = (bitrateToDownload * segmentDuration) / currentThroughput;\n        return getNextBuffer(currentBuffer, downloadTime);\n    }\n\n    /**\n     *\n     * @param {number} currentBuffer\n     * @param {number} downloadTime\n     * @return {number}\n     */\n    function getNextBuffer(currentBuffer, downloadTime) {\n        const segmentDuration = getSegmentDuration();\n        let nextBuffer;\n        if (downloadTime > segmentDuration) {\n            nextBuffer = currentBuffer - segmentDuration;\n        } else {\n            nextBuffer = currentBuffer + segmentDuration - downloadTime;\n        }\n        return nextBuffer;\n    }\n\n    instance = {\n        getMinBuffer,\n        getSegmentDuration,\n        getNextBufferWithBitrate,\n        getNextBuffer,\n        findWeightVector\n    };\n\n    _setup();\n\n    return instance;\n}\n\nLoLpWeightSelector.__dashjs_factory_name = 'LoLpWeightSelector';\nexport default FactoryMaker.getClassFactory(LoLpWeightSelector);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * Authors:\n * Abdelhak Bentaleb | National University of Singapore | bentaleb@comp.nus.edu.sg\n * Mehmet N. Akcay | Ozyegin University | necmettin.akcay@ozu.edu.tr\n * May Lim | National University of Singapore | maylim@comp.nus.edu.sg\n */\n\nimport Debug from '../../../../core/Debug.js';\nimport FactoryMaker from '../../../../core/FactoryMaker.js';\nimport LearningAbrController from './LearningAbrController.js';\nimport LoLpQoeEvaluator from './LoLpQoEEvaluator.js';\nimport SwitchRequest from '../../SwitchRequest.js';\nimport MetricsConstants from '../../../constants/MetricsConstants.js';\nimport LoLpWeightSelector from './LoLpWeightSelector.js';\nimport Constants from '../../../constants/Constants.js';\n\nconst DWS_TARGET_LATENCY = 1.5;\nconst DWS_BUFFER_MIN = 0.3;\n\nfunction LoLPRule(config) {\n\n    config = config || {};\n\n    let dashMetrics = config.dashMetrics;\n    let context = this.context;\n\n    let logger,\n        instance,\n        learningController,\n        qoeEvaluator;\n\n    function _setup() {\n        logger = Debug(context).getInstance().getLogger(instance);\n        learningController = LearningAbrController(context).create();\n        qoeEvaluator = LoLpQoeEvaluator(context).create();\n    }\n\n    function getSwitchRequest(rulesContext) {\n        try {\n            let switchRequest = SwitchRequest(context).create();\n            switchRequest.rule = this.getClassName();\n            let mediaType = rulesContext.getMediaInfo().type;\n            let abrController = rulesContext.getAbrController();\n            const streamInfo = rulesContext.getStreamInfo();\n            let currentRepresentation = rulesContext.getRepresentation();\n            const mediaInfo = rulesContext.getMediaInfo();\n            const bufferStateVO = dashMetrics.getCurrentBufferState(mediaType);\n            const scheduleController = rulesContext.getScheduleController();\n            const currentBufferLevel = dashMetrics.getCurrentBufferLevel(mediaType, true);\n            const playbackController = scheduleController.getPlaybackController();\n            let latency = playbackController.getCurrentLiveLatency();\n\n            if ((mediaType === Constants.AUDIO)) {\n                return switchRequest;\n            }\n\n            if (!latency) {\n                latency = 0;\n            }\n\n            const playbackRate = playbackController.getPlaybackRate();\n            const throughputController = rulesContext.getThroughputController();\n            const throughput = throughputController.getSafeAverageThroughput(mediaType);\n            logger.debug(`Throughput ${Math.round(throughput)} kbps`);\n\n            if (isNaN(throughput) || !bufferStateVO) {\n                return switchRequest;\n            }\n\n            if (abrController.getAbandonmentStateFor(streamInfo.id, mediaType) === MetricsConstants.ABANDON_LOAD) {\n                return switchRequest;\n            }\n\n            // QoE parameters\n            const possibleRepresentations = abrController.getPossibleVoRepresentationsFilteredBySettings(mediaInfo, true);\n            let bandwidths = possibleRepresentations.map(r => r.bandwidth);\n            let segmentDuration = rulesContext.getRepresentation().fragmentDuration;\n            let minBitrateKbps = Math.min(...bandwidths) / 1000.0; // min bitrate level\n            let maxBitrateKbps = Math.max(...bandwidths) / 1000.0; // max bitrate level\n\n            // Learning rule pre-calculations\n            let currentBitrate = currentRepresentation.bandwidth;\n            let currentBitrateKbps = currentBitrate / 1000.0;\n            let httpRequest = dashMetrics.getCurrentHttpRequest(mediaType, true);\n            let lastFragmentDownloadTime = (httpRequest.tresponse.getTime() - httpRequest.trequest.getTime()) / 1000;\n            let segmentRebufferTime = lastFragmentDownloadTime > segmentDuration ? lastFragmentDownloadTime - segmentDuration : 0;\n            qoeEvaluator.setupPerSegmentQoe(segmentDuration, maxBitrateKbps, minBitrateKbps);\n            qoeEvaluator.logSegmentMetrics(currentBitrateKbps, segmentRebufferTime, latency, playbackRate);\n\n            /*\n            * Dynamic Weights Selector (step 1/2: initialization)\n            */\n            let dynamicWeightsSelector = LoLpWeightSelector(context).create({\n                targetLatency: DWS_TARGET_LATENCY,\n                bufferMin: DWS_BUFFER_MIN,\n                segmentDuration,\n                qoeEvaluator\n            });\n\n            /*\n             * Select next quality\n             */\n            switchRequest.representation = learningController.getNextQuality(\n                abrController,\n                mediaInfo,\n                throughput * 1000,\n                latency,\n                currentBufferLevel,\n                playbackRate,\n                currentRepresentation,\n                dynamicWeightsSelector\n            );\n            switchRequest.reason = { throughput: throughput, latency: latency };\n            switchRequest.priority = SwitchRequest.PRIORITY.STRONG;\n\n            scheduleController.setTimeToLoadDelay(0);\n\n            return switchRequest;\n        } catch (e) {\n            throw e;\n        }\n    }\n\n    /**\n     * Reset objects to their initial state\n     * @private\n     */\n    function _resetInitialSettings() {\n        learningController.reset();\n        qoeEvaluator.reset();\n    }\n\n    /**\n     * Reset the rule\n     */\n    function reset() {\n        _resetInitialSettings();\n    }\n\n    instance = {\n        getSwitchRequest,\n        reset\n    };\n\n    _setup();\n\n    return instance;\n}\n\nLoLPRule.__dashjs_factory_name = 'LoLPRule';\nexport default FactoryMaker.getClassFactory(LoLPRule);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport ThroughputRule from './ThroughputRule.js';\nimport InsufficientBufferRule from './InsufficientBufferRule.js';\nimport AbandonRequestsRule from './AbandonRequestsRule.js';\nimport DroppedFramesRule from './DroppedFramesRule.js';\nimport SwitchHistoryRule from './SwitchHistoryRule.js';\nimport BolaRule from './BolaRule.js';\nimport L2ARule from './L2ARule.js';\nimport LoLPRule from './lolp/LoLpRule.js';\nimport FactoryMaker from '../../../core/FactoryMaker.js';\nimport SwitchRequest from '../SwitchRequest.js';\nimport EventBus from '../../../core/EventBus.js';\nimport Events from '../../../core/events/Events.js';\nimport Constants from '../../constants/Constants.js';\n\n\nfunction ABRRulesCollection(config) {\n\n    config = config || {};\n    const context = this.context;\n\n    const mediaPlayerModel = config.mediaPlayerModel;\n    const customParametersModel = config.customParametersModel;\n    const dashMetrics = config.dashMetrics;\n    const settings = config.settings;\n    const eventBus = EventBus(context).getInstance();\n\n    let instance,\n        qualitySwitchRules,\n        abandonFragmentRules,\n        shouldUseBolaRuleByMediaType;\n\n    function initialize() {\n        qualitySwitchRules = [];\n        abandonFragmentRules = [];\n        shouldUseBolaRuleByMediaType = {};\n        _updateRules();\n\n        eventBus.on(Events.SETTING_UPDATED_ABR_ACTIVE_RULES, _onAbrSettingsActiveRulesUpdated, instance);\n    }\n\n    /**\n     * Adds and removes rules to/from the respective rules arrays\n     * @private\n     */\n    function _updateRules() {\n        let qualitySwitchRulesList = Object.values(Constants.QUALITY_SWITCH_RULES)\n        qualitySwitchRulesList.forEach((ruleName) => {\n            qualitySwitchRules = _handleRuleUpdate(ruleName, qualitySwitchRules)\n        })\n\n        let abandonFragmentRulesList = Object.values(Constants.ABANDON_FRAGMENT_RULES)\n        abandonFragmentRulesList.forEach((ruleName) => {\n            abandonFragmentRules = _handleRuleUpdate(ruleName, abandonFragmentRules)\n        })\n\n        // add custom ABR rules if any\n        const customRules = customParametersModel.getAbrCustomRules();\n        customRules.forEach(function (rule) {\n            if (rule.type === Constants.RULES_TYPES.QUALITY_SWITCH_RULES) {\n                qualitySwitchRules.push(rule.rule(context).create());\n            }\n\n            if (rule.type === Constants.RULES_TYPES.ABANDON_FRAGMENT_RULES) {\n                abandonFragmentRulesList.push(rule.rule(context).create());\n            }\n        });\n\n        // If we still got no rule for quality switch use Throughput and Bola\n        if (qualitySwitchRules.length === 0) {\n            qualitySwitchRules.push(\n                BolaRule(context).create({\n                    dashMetrics: dashMetrics,\n                    mediaPlayerModel: mediaPlayerModel,\n                    settings: settings\n                })\n            );\n            qualitySwitchRules.push(\n                ThroughputRule(context).create({\n                    dashMetrics: dashMetrics\n                })\n            );\n        }\n    }\n\n    function _handleRuleUpdate(ruleName, rulesCollection) {\n        // we use camel case in the settings while the rules start with a capital latter. Not ideal but convert between these formats\n        const attribute = ruleName.charAt(0).toLowerCase() + ruleName.slice(1);\n        if (settings.get().streaming.abr.rules[attribute].active && !_arrayContainsRule(rulesCollection, ruleName)) {\n            rulesCollection.push(\n                _createRuleInstance(ruleName)\n            );\n\n            return rulesCollection\n        } else if (!settings.get().streaming.abr.rules[attribute].active) {\n            return _removeRuleFromArray(rulesCollection, ruleName)\n        }\n\n        return rulesCollection\n    }\n\n    function _createRuleInstance(rule) {\n        switch (rule) {\n            case Constants.QUALITY_SWITCH_RULES.BOLA_RULE:\n                return BolaRule(context).create({\n                    dashMetrics: dashMetrics,\n                    mediaPlayerModel: mediaPlayerModel,\n                    settings: settings\n                })\n            case Constants.QUALITY_SWITCH_RULES.THROUGHPUT_RULE:\n                return ThroughputRule(context).create({\n                    dashMetrics: dashMetrics\n                })\n            case Constants.QUALITY_SWITCH_RULES.INSUFFICIENT_BUFFER_RULE:\n                return InsufficientBufferRule(context).create({\n                    dashMetrics: dashMetrics,\n                    settings\n                })\n            case Constants.QUALITY_SWITCH_RULES.SWITCH_HISTORY_RULE:\n                return SwitchHistoryRule(context).create()\n            case Constants.QUALITY_SWITCH_RULES.DROPPED_FRAMES_RULE:\n                return DroppedFramesRule(context).create()\n            case Constants.QUALITY_SWITCH_RULES.LEARN_TO_ADAPT_RULE:\n                return L2ARule(context).create({\n                    dashMetrics: dashMetrics,\n                    settings: settings\n                })\n            case Constants.QUALITY_SWITCH_RULES.LOL_PLUS_RULE:\n                return LoLPRule(context).create({\n                    dashMetrics: dashMetrics\n                })\n            case Constants.ABANDON_FRAGMENT_RULES.ABANDON_REQUEST_RULE:\n                return AbandonRequestsRule(context).create({\n                    dashMetrics: dashMetrics,\n                    mediaPlayerModel: mediaPlayerModel,\n                    settings: settings\n                })\n\n        }\n    }\n\n    function _arrayContainsRule(arr, ruleName) {\n        return arr.filter((rule) => {\n            return rule.getClassName() === ruleName\n        }).length > 0\n    }\n\n    function _removeRuleFromArray(arr, ruleName) {\n        return arr.filter((rule) => {\n            return rule.getClassName() !== ruleName\n        })\n    }\n\n    function _getRulesWithChange(srArray) {\n        return srArray.filter(sr => sr.representation !== SwitchRequest.NO_CHANGE);\n    }\n\n    /**\n     *\n     * @param {array} srArray\n     * @return {object} SwitchRequest\n     */\n    function getMinSwitchRequest(srArray) {\n        const values = {};\n        let newSwitchReq = null;\n        let i,\n            len,\n            currentSwitchRequest;\n\n        if (srArray.length === 0) {\n            return;\n        }\n\n        values[SwitchRequest.PRIORITY.STRONG] = null;\n        values[SwitchRequest.PRIORITY.WEAK] = null;\n        values[SwitchRequest.PRIORITY.DEFAULT] = null;\n\n        for (i = 0, len = srArray.length; i < len; i += 1) {\n            currentSwitchRequest = srArray[i];\n            if (currentSwitchRequest.representation !== SwitchRequest.NO_CHANGE) {\n                // We only use the new quality in case the bitrate is lower than the already saved one or if no new quality has been selected for the respective priority\n                if (values[currentSwitchRequest.priority] === null ||\n                    (values[currentSwitchRequest.priority].representation !== SwitchRequest.NO_CHANGE && currentSwitchRequest.representation.bitrateInKbit < values[currentSwitchRequest.priority].representation.bitrateInKbit)) {\n                    values[currentSwitchRequest.priority] = currentSwitchRequest;\n                }\n            }\n        }\n\n        if (values[SwitchRequest.PRIORITY.WEAK] && values[SwitchRequest.PRIORITY.WEAK].representation !== SwitchRequest.NO_CHANGE) {\n            newSwitchReq = values[SwitchRequest.PRIORITY.WEAK];\n        }\n\n        if (values[SwitchRequest.PRIORITY.DEFAULT] && values[SwitchRequest.PRIORITY.DEFAULT].representation !== SwitchRequest.NO_CHANGE) {\n            newSwitchReq = values[SwitchRequest.PRIORITY.DEFAULT];\n        }\n\n        if (values[SwitchRequest.PRIORITY.STRONG] && values[SwitchRequest.PRIORITY.STRONG].representation !== SwitchRequest.NO_CHANGE) {\n            newSwitchReq = values[SwitchRequest.PRIORITY.STRONG];\n        }\n\n        return newSwitchReq\n    }\n\n    function getBestPossibleSwitchRequest(rulesContext) {\n        if (!rulesContext) {\n            return SwitchRequest(context).create()\n        }\n        // Only Throughput or Bola are active at the same time.\n        const activeQualitySwitchRules = qualitySwitchRules.filter((rule) => {\n            const ruleName = rule.getClassName();\n\n            if (ruleName !== Constants.QUALITY_SWITCH_RULES.BOLA_RULE && ruleName !== Constants.QUALITY_SWITCH_RULES.THROUGHPUT_RULE) {\n                return true\n            }\n            const mediaType = rulesContext.getMediaType();\n\n            return (shouldUseBolaRuleByMediaType[mediaType] && ruleName === Constants.QUALITY_SWITCH_RULES.BOLA_RULE) || (!shouldUseBolaRuleByMediaType[mediaType] && ruleName === Constants.QUALITY_SWITCH_RULES.THROUGHPUT_RULE)\n        })\n        const switchRequestArray = activeQualitySwitchRules.map(rule => rule.getSwitchRequest(rulesContext));\n        const activeRules = _getRulesWithChange(switchRequestArray);\n        const maxQuality = getMinSwitchRequest(activeRules);\n\n        return maxQuality || SwitchRequest(context).create();\n    }\n\n    function shouldAbandonFragment(rulesContext) {\n        if (!rulesContext) {\n            return SwitchRequest(context).create()\n        }\n        const abandonRequestArray = abandonFragmentRules.map(rule => rule.shouldAbandon(rulesContext));\n        const activeRules = _getRulesWithChange(abandonRequestArray);\n        const shouldAbandon = getMinSwitchRequest(activeRules);\n\n        if (shouldAbandon) {\n            shouldAbandon.reason.forceAbandon = true\n        }\n\n        return shouldAbandon || SwitchRequest(context).create();\n    }\n\n    function reset() {\n        [qualitySwitchRules, abandonFragmentRules].forEach(rules => {\n            if (rules && rules.length) {\n                rules.forEach(rule => rule.reset && rule.reset());\n            }\n        });\n        qualitySwitchRules = [];\n        abandonFragmentRules = [];\n        shouldUseBolaRuleByMediaType = {}\n        eventBus.off(Events.SETTING_UPDATED_ABR_ACTIVE_RULES, _onAbrSettingsActiveRulesUpdated, instance);\n    }\n\n    function clearDataForStream(streamId) {\n        [qualitySwitchRules, abandonFragmentRules].forEach(rules => {\n            if (rules && rules.length) {\n                rules.forEach(rule => rule.clearDataForStream && typeof rule.clearDataForStream === 'function' && rule.clearDataForStream(streamId));\n            }\n        });\n    }\n\n    function getQualitySwitchRules() {\n        return qualitySwitchRules;\n    }\n\n    function getAbandonFragmentRules() {\n        return abandonFragmentRules\n    }\n\n    function setBolaState(mediaType, value) {\n        shouldUseBolaRuleByMediaType[mediaType] = value\n    }\n\n    function getBolaState(mediaType) {\n        return shouldUseBolaRuleByMediaType[mediaType]\n    }\n\n    function _onAbrSettingsActiveRulesUpdated() {\n        _updateRules()\n    }\n\n    function handleNewMediaInfo(newMediaInfo) {\n        qualitySwitchRules.forEach(rule => rule.handleNewMediaInfo && rule.handleNewMediaInfo(newMediaInfo));\n        abandonFragmentRules.forEach(rule => rule.handleNewMediaInfo && rule.handleNewMediaInfo(newMediaInfo));\n    }\n\n    instance = {\n        clearDataForStream,\n        getAbandonFragmentRules,\n        getBestPossibleSwitchRequest,\n        getBolaState,\n        getMinSwitchRequest,\n        getQualitySwitchRules,\n        handleNewMediaInfo,\n        initialize,\n        reset,\n        setBolaState,\n        shouldAbandonFragment,\n    };\n\n    return instance;\n}\n\nABRRulesCollection.__dashjs_factory_name = 'ABRRulesCollection';\nconst factory = FactoryMaker.getClassFactory(ABRRulesCollection);\nFactoryMaker.updateSingletonFactory(ABRRulesCollection.__dashjs_factory_name, factory);\n\nexport default factory;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport FactoryMaker from '../../core/FactoryMaker.js';\n\nfunction RulesContext(config) {\n\n    config = config || {};\n    let instance;\n    const abrController = config.abrController;\n    const throughputController = config.throughputController;\n    const switchRequestHistory = config.switchRequestHistory;\n    const droppedFramesHistory = config.droppedFramesHistory;\n    const currentRequest = config.currentRequest;\n    const scheduleController = config.streamProcessor ? config.streamProcessor.getScheduleController() : null;\n    const voRepresentation = config.streamProcessor ? config.streamProcessor.getRepresentation() : null;\n    const videoModel = config.videoModel ? config.videoModel : null;\n\n    function getMediaType() {\n        const mediaInfo = getMediaInfo();\n        return mediaInfo ? mediaInfo.type : null;\n    }\n\n    function getStreamInfo() {\n        const mediaInfo = getMediaInfo();\n        return mediaInfo ? mediaInfo.streamInfo : null;\n    }\n\n    function getMediaInfo() {\n        return voRepresentation ? voRepresentation.mediaInfo : null;\n    }\n\n    function getRepresentation() {\n        return voRepresentation;\n    }\n\n    function getScheduleController() {\n        return scheduleController;\n    }\n\n    function getAbrController() {\n        return abrController;\n    }\n\n    function getThroughputController() {\n        return throughputController;\n    }\n\n    function getSwitchRequestHistory() {\n        return switchRequestHistory;\n    }\n\n    function getVideoModel() {\n        return videoModel;\n    }\n\n    function getDroppedFramesHistory() {\n        return droppedFramesHistory;\n    }\n\n    function getCurrentRequest() {\n        return currentRequest;\n    }\n\n    instance = {\n        getAbrController,\n        getCurrentRequest,\n        getDroppedFramesHistory,\n        getMediaInfo,\n        getMediaType,\n        getRepresentation,\n        getScheduleController,\n        getStreamInfo,\n        getSwitchRequestHistory,\n        getThroughputController,\n        getVideoModel,\n    };\n\n    return instance;\n}\n\nRulesContext.__dashjs_factory_name = 'RulesContext';\nexport default FactoryMaker.getClassFactory(RulesContext);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport FactoryMaker from '../../core/FactoryMaker.js';\nimport Settings from '../../core/Settings.js';\n\nfunction SwitchRequestHistory() {\n    let switchRequests = {};\n    let switchRequestHistory = {};\n    const context = this.context;\n    const settings = Settings(context).getInstance();\n\n    function push(switchRequest) {\n        const currentRepresentation = switchRequest.currentRepresentation;\n        const newRepresentation = switchRequest.newRepresentation;\n\n        // Don`t compare quality switches between different periods or different AdaptationSets\n        if (currentRepresentation.mediaInfo.streamInfo.id !== newRepresentation.mediaInfo.streamInfo.id || newRepresentation.mediaInfo.id !== currentRepresentation.mediaInfo.id) {\n            return;\n        }\n\n        const streamId = currentRepresentation.mediaInfo.streamInfo.id;\n        if (!switchRequests[streamId]) {\n            _initializeForStream(streamId)\n        }\n\n        const mediaType = currentRepresentation.mediaInfo.type;\n        if (!switchRequests[streamId][mediaType]) {\n            _initializeForMediaType(streamId, mediaType);\n        }\n\n        const currentRepresentationId = switchRequest.currentRepresentation.id\n        if (!switchRequests[streamId][mediaType][currentRepresentationId]) {\n            _initializeForRepresentation(streamId, mediaType, currentRepresentationId);\n        }\n\n        // Set switch details\n        let indexDiff = switchRequest.newRepresentation.absoluteIndex - switchRequest.currentRepresentation.absoluteIndex;\n        let drop = (indexDiff < 0) ? 1 : 0;\n        let dropSize = drop ? -indexDiff : 0;\n        let noDrop = drop ? 0 : 1;\n\n        // Update running totals\n        switchRequests[streamId][mediaType][switchRequest.currentRepresentation.id].drops += drop;\n        switchRequests[streamId][mediaType][switchRequest.currentRepresentation.id].dropSize += dropSize;\n        switchRequests[streamId][mediaType][switchRequest.currentRepresentation.id].noDrops += noDrop;\n\n        // Save to history\n        switchRequestHistory[streamId][mediaType].push({\n            id: switchRequest.currentRepresentation.id,\n            noDrop: noDrop,\n            drop: drop,\n            dropSize: dropSize\n        });\n\n        // Remove outdated entries from history\n        const removedHistorySample = _adjustSwitchRequestHistory(streamId, mediaType);\n\n        // Adjust current values based on the removed sample\n        if (removedHistorySample) {\n            _adjustSwitchRequestDrops(streamId, mediaType, removedHistorySample)\n        }\n\n    }\n\n    function _initializeForStream(streamId) {\n        switchRequests[streamId] = {};\n        switchRequestHistory[streamId] = {};\n    }\n\n    function _initializeForMediaType(streamId, mediaType) {\n        switchRequests[streamId][mediaType] = {};\n        switchRequestHistory[streamId][mediaType] = [];\n    }\n\n    function _initializeForRepresentation(streamId, mediaType, representationId) {\n        switchRequests[streamId][mediaType][representationId] = {\n            noDrops: 0,\n            drops: 0,\n            dropSize: 0\n        };\n    }\n\n    function _adjustSwitchRequestHistory(streamId, mediaType) {\n        // Shift the earliest switch off srHistory and readjust to keep depth of running totals constant\n        if (switchRequestHistory[streamId][mediaType].length > settings.get().streaming.abr.rules.switchHistoryRule.parameters.sampleSize) {\n            return switchRequestHistory[streamId][mediaType].shift();\n        }\n\n        return null\n    }\n\n    function _adjustSwitchRequestDrops(streamId, mediaType, removedHistorySample) {\n        switchRequests[streamId][mediaType][removedHistorySample.id].drops -= removedHistorySample.drop;\n        switchRequests[streamId][mediaType][removedHistorySample.id].dropSize -= removedHistorySample.dropSize;\n        switchRequests[streamId][mediaType][removedHistorySample.id].noDrops -= removedHistorySample.noDrop;\n    }\n\n    function getSwitchRequests(streamId, mediaType) {\n        if (streamId === null || typeof streamId === 'undefined'\n            || mediaType === null || typeof mediaType === 'undefined'\n            || !switchRequests[streamId] || !switchRequests[streamId][mediaType]) {\n            return {}\n        }\n\n        return switchRequests[streamId][mediaType];\n    }\n\n    function clearForStream(streamId) {\n        delete switchRequests[streamId];\n        delete switchRequestHistory[streamId];\n    }\n\n    function reset() {\n        switchRequests = {};\n        switchRequestHistory = {};\n    }\n\n    return {\n        clearForStream,\n        getSwitchRequests,\n        push,\n        reset\n    };\n}\n\nSwitchRequestHistory.__dashjs_factory_name = 'SwitchRequestHistory';\nconst factory = FactoryMaker.getClassFactory(SwitchRequestHistory);\nexport default factory;\n","import FactoryMaker from '../../core/FactoryMaker.js';\n\nfunction DroppedFramesHistory() {\n\n    let values = {};\n    let lastDroppedFrames = {};\n    let lastTotalFrames = {};\n\n    function push(streamId, representationId, playbackQuality) {\n\n        if (!representationId) {\n            return;\n        }\n\n        if (!values[streamId]) {\n            _initializeForStream(streamId);\n        }\n\n        let droppedVideoFrames = playbackQuality && playbackQuality.droppedVideoFrames ? playbackQuality.droppedVideoFrames : 0;\n        let totalVideoFrames = playbackQuality && playbackQuality.totalVideoFrames ? playbackQuality.totalVideoFrames : 0;\n\n        let intervalDroppedFrames = droppedVideoFrames - lastDroppedFrames[streamId];\n        lastDroppedFrames[streamId] = droppedVideoFrames;\n\n        let intervalTotalFrames = totalVideoFrames - lastTotalFrames[streamId];\n        lastTotalFrames[streamId] = totalVideoFrames;\n\n        const current = values[streamId];\n        if (!current[representationId]) {\n            current[representationId] = {\n                droppedVideoFrames: intervalDroppedFrames,\n                totalVideoFrames: intervalTotalFrames\n            };\n        } else {\n            current[representationId].droppedVideoFrames += intervalDroppedFrames;\n            current[representationId].totalVideoFrames += intervalTotalFrames;\n        }\n\n    }\n\n    function _initializeForStream(streamId) {\n        values[streamId] = [];\n        lastDroppedFrames[streamId] = 0;\n        lastTotalFrames[streamId] = 0;\n    }\n\n    function getFrameHistory(streamId) {\n        return values[streamId];\n    }\n\n    function clearForStream(streamId) {\n        delete values[streamId];\n        delete lastDroppedFrames[streamId];\n        delete lastTotalFrames[streamId];\n    }\n\n    function reset() {\n        values = {};\n        lastDroppedFrames = {};\n        lastTotalFrames = {};\n    }\n\n    return {\n        clearForStream,\n        getFrameHistory,\n        push,\n        reset\n    };\n}\n\nDroppedFramesHistory.__dashjs_factory_name = 'DroppedFramesHistory';\nconst factory = FactoryMaker.getClassFactory(DroppedFramesHistory);\nexport default factory;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport ABRRulesCollection from '../rules/abr/ABRRulesCollection.js';\nimport Constants from '../constants/Constants.js';\nimport MetricsConstants from '../constants/MetricsConstants.js';\nimport FragmentModel from '../models/FragmentModel.js';\nimport EventBus from '../../core/EventBus.js';\nimport Events from '../../core/events/Events.js';\nimport FactoryMaker from '../../core/FactoryMaker.js';\nimport RulesContext from '../rules/RulesContext.js';\nimport SwitchRequest from '../rules/SwitchRequest.js';\nimport SwitchRequestHistory from '../rules/SwitchRequestHistory.js';\nimport DroppedFramesHistory from '../rules/DroppedFramesHistory.js';\nimport Debug from '../../core/Debug.js';\nimport MediaPlayerEvents from '../MediaPlayerEvents.js';\n\nconst DEFAULT_VIDEO_BITRATE = 1000;\nconst DEFAULT_BITRATE = 100;\n\nfunction AbrController() {\n\n    const context = this.context;\n    const debug = Debug(context).getInstance();\n    const eventBus = EventBus(context).getInstance();\n\n    let instance,\n        logger,\n        abrRulesCollection,\n        streamController,\n        capabilities,\n        streamProcessorDict,\n        abandonmentStateDict,\n        abandonmentTimeout,\n        windowResizeEventCalled,\n        adapter,\n        videoModel,\n        mediaPlayerModel,\n        customParametersModel,\n        cmsdModel,\n        domStorage,\n        playbackRepresentationId,\n        switchRequestHistory,\n        droppedFramesHistory,\n        throughputController,\n        dashMetrics,\n        settings;\n\n    function setup() {\n        logger = debug.getLogger(instance);\n        resetInitialSettings();\n    }\n\n    /**\n     * Initialize everything that is not period specific. We only have one instance of the ABR Controller for all periods.\n     */\n    function initialize() {\n        droppedFramesHistory = DroppedFramesHistory(context).create();\n        switchRequestHistory = SwitchRequestHistory(context).create();\n        abrRulesCollection = ABRRulesCollection(context).create({\n            dashMetrics,\n            customParametersModel,\n            mediaPlayerModel,\n            settings\n        });\n        abrRulesCollection.initialize();\n\n        eventBus.on(MediaPlayerEvents.QUALITY_CHANGE_RENDERED, _onQualityChangeRendered, instance);\n        eventBus.on(MediaPlayerEvents.METRIC_ADDED, _onMetricAdded, instance);\n        eventBus.on(Events.LOADING_PROGRESS, _onFragmentLoadProgress, instance);\n    }\n\n    /**\n     * Whenever a StreamProcessor is created it is added to the list of streamProcessorDict\n     * In addition, the corresponding objects for this object and its stream id are created\n     * @param {object} type\n     * @param {object} streamProcessor\n     */\n    function registerStreamType(type, streamProcessor) {\n        const streamId = streamProcessor.getStreamInfo().id;\n\n        if (!streamProcessorDict[streamId]) {\n            streamProcessorDict[streamId] = {};\n        }\n        streamProcessorDict[streamId][type] = streamProcessor;\n\n        if (!abandonmentStateDict[streamId]) {\n            abandonmentStateDict[streamId] = {};\n        }\n        abandonmentStateDict[streamId][type] = {};\n        abandonmentStateDict[streamId][type].state = MetricsConstants.ALLOW_LOAD;\n\n        // Do not change current value if it has been set before\n        const currentState = abrRulesCollection.getBolaState(type)\n        if (currentState === undefined) {\n            abrRulesCollection.setBolaState(type, settings.get().streaming.abr.rules.bolaRule.active && !_shouldApplyDynamicAbrStrategy());\n        }\n\n    }\n\n    /**\n     * Remove all parameters that belong to a specific period\n     * @param {string} streamId\n     * @param {string} type\n     */\n    function unRegisterStreamType(streamId, type) {\n        try {\n            if (streamProcessorDict[streamId] && streamProcessorDict[streamId][type]) {\n                delete streamProcessorDict[streamId][type];\n            }\n\n            if (abandonmentStateDict[streamId] && abandonmentStateDict[streamId][type]) {\n                delete abandonmentStateDict[streamId][type];\n            }\n\n        } catch (e) {\n\n        }\n    }\n\n    function resetInitialSettings() {\n        abandonmentStateDict = {};\n        streamProcessorDict = {};\n\n        if (windowResizeEventCalled === undefined) {\n            windowResizeEventCalled = false;\n        }\n        if (droppedFramesHistory) {\n            droppedFramesHistory.reset();\n        }\n\n        if (switchRequestHistory) {\n            switchRequestHistory.reset();\n        }\n\n        playbackRepresentationId = undefined;\n        droppedFramesHistory = undefined;\n        switchRequestHistory = undefined;\n        clearTimeout(abandonmentTimeout);\n        abandonmentTimeout = null;\n    }\n\n    function reset() {\n\n        resetInitialSettings();\n\n        eventBus.off(MediaPlayerEvents.QUALITY_CHANGE_RENDERED, _onQualityChangeRendered, instance);\n        eventBus.off(MediaPlayerEvents.METRIC_ADDED, _onMetricAdded, instance);\n        eventBus.off(Events.LOADING_PROGRESS, _onFragmentLoadProgress, instance);\n\n        if (abrRulesCollection) {\n            abrRulesCollection.reset();\n        }\n    }\n\n    function setConfig(config) {\n        if (!config) {\n            return;\n        }\n\n        if (config.streamController) {\n            streamController = config.streamController;\n        }\n        if (config.throughputController) {\n            throughputController = config.throughputController;\n        }\n        if (config.domStorage) {\n            domStorage = config.domStorage;\n        }\n        if (config.mediaPlayerModel) {\n            mediaPlayerModel = config.mediaPlayerModel;\n        }\n        if (config.customParametersModel) {\n            customParametersModel = config.customParametersModel;\n        }\n        if (config.cmsdModel) {\n            cmsdModel = config.cmsdModel\n        }\n        if (config.dashMetrics) {\n            dashMetrics = config.dashMetrics;\n        }\n        if (config.adapter) {\n            adapter = config.adapter;\n        }\n        if (config.videoModel) {\n            videoModel = config.videoModel;\n        }\n        if (config.settings) {\n            settings = config.settings;\n        }\n        if (config.capabilities) {\n            capabilities = config.capabilities;\n        }\n    }\n\n    function getOptimalRepresentationForBitrate(mediaInfo, bitrateInKbit, includeCompatibleMediaInfos = true) {\n        const possibleVoRepresentations = getPossibleVoRepresentationsFilteredBySettings(mediaInfo, includeCompatibleMediaInfos);\n\n        if (!possibleVoRepresentations || possibleVoRepresentations.length === 0) {\n            return null;\n        }\n\n        // If bitrate should be as small as possible return the Representation with the lowest bitrate\n        const smallestRepresentation = possibleVoRepresentations.reduce((a, b) => {\n            return a.bandwidth < b.bandwidth ? a : b;\n        })\n        if (bitrateInKbit <= 0) {\n            return smallestRepresentation\n        }\n\n        // Get all Representations that have lower or equal bitrate than our target bitrate\n        const targetRepresentations = possibleVoRepresentations.filter((rep) => {\n            return rep.bitrateInKbit <= bitrateInKbit\n        });\n\n        if (!targetRepresentations || targetRepresentations.length === 0) {\n            return smallestRepresentation\n        }\n\n        return targetRepresentations.reduce((max, curr) => {\n            return (curr.absoluteIndex > max.absoluteIndex) ? curr : max;\n        })\n\n    }\n\n    function getRepresentationByAbsoluteIndex(absoluteIndex, mediaInfo, includeCompatibleMediaInfos = true) {\n        if (isNaN(absoluteIndex) || absoluteIndex < 0) {\n            return null;\n        }\n\n        const possibleVoRepresentations = getPossibleVoRepresentationsFilteredBySettings(mediaInfo, includeCompatibleMediaInfos);\n\n        return possibleVoRepresentations.find((rep) => {\n            return rep.absoluteIndex === absoluteIndex\n        })\n    }\n\n    function getPossibleVoRepresentations(mediaInfo, includeCompatibleMediaInfos = true) {\n        return _getPossibleVoRepresentations(mediaInfo, includeCompatibleMediaInfos)\n    }\n\n    function getPossibleVoRepresentationsFilteredBySettings(mediaInfo, includeCompatibleMediaInfos = true) {\n        let voRepresentations = _getPossibleVoRepresentations(mediaInfo, includeCompatibleMediaInfos);\n\n        // Filter the list of options based on the provided settings\n        voRepresentations = _filterByAllowedSettings(voRepresentations)\n\n        return voRepresentations;\n    }\n\n    function _getPossibleVoRepresentations(mediaInfo, includeCompatibleMediaInfos) {\n        let voRepresentations = [];\n        if (!mediaInfo) {\n            return voRepresentations;\n        }\n\n        const mediaInfos = _getPossibleMediaInfos(mediaInfo)\n        mediaInfos.forEach((mediaInfo) => {\n            let currentVoRepresentations = adapter.getVoRepresentations(mediaInfo);\n\n            if (currentVoRepresentations && currentVoRepresentations.length > 0) {\n                voRepresentations = voRepresentations.concat(currentVoRepresentations)\n            }\n        })\n\n        // Now sort by quality (usually simply by bitrate)\n        voRepresentations = _sortRepresentationsByQuality(voRepresentations);\n\n        // Add an absolute index\n        voRepresentations.forEach((rep, index) => {\n            rep.absoluteIndex = index\n        })\n\n        // Filter the Representations in case we do not want to include compatible Media Infos\n        // We can not apply the filter before otherwise the absolute index would be wrong\n        // Also ignore Representations with a key ID that is not usable\n\n        voRepresentations = voRepresentations.filter((representation) => {\n            const isMediaInfoAllowed = includeCompatibleMediaInfos ? true : adapter.areMediaInfosEqual(representation.mediaInfo, mediaInfo);\n            const areKeyIdsUsable =\n                representation && representation.mediaInfo ? capabilities.areKeyIdsUsable(representation.mediaInfo) : true;\n            return isMediaInfoAllowed && areKeyIdsUsable\n        })\n\n        return voRepresentations\n    }\n\n    function _getPossibleMediaInfos(mediaInfo) {\n        try {\n            const possibleMediaInfos = [];\n\n            if (mediaInfo) {\n                possibleMediaInfos.push(mediaInfo);\n            }\n\n            // If AS switching is disabled return only the current MediaInfo\n            if (!settings.get().streaming.abr.enableSupplementalPropertyAdaptationSetSwitching\n                || !mediaInfo.adaptationSetSwitchingCompatibleIds\n                || mediaInfo.adaptationSetSwitchingCompatibleIds.length === 0) {\n                return possibleMediaInfos\n            }\n\n            // Otherwise add everything that is compatible\n            const mediaInfoArr = streamProcessorDict[mediaInfo.streamInfo.id][mediaInfo.type].getAllMediaInfos()\n            const compatibleMediaInfos = mediaInfoArr.filter((entry) => {\n                return mediaInfo.adaptationSetSwitchingCompatibleIds.includes(entry.id)\n            })\n\n            return possibleMediaInfos.concat(compatibleMediaInfos);\n        } catch (e) {\n            return [mediaInfo]\n        }\n    }\n\n    /**\n     * @param {Representation[]} voRepresentations\n     * @return {Representation[]}\n     */\n    function _filterByAllowedSettings(voRepresentations) {\n        try {\n            voRepresentations = _filterByPossibleBitrate(voRepresentations);\n            voRepresentations = _filterByPortalSize(voRepresentations);\n            voRepresentations = _filterByCmsdMaxBitrate(voRepresentations);\n\n            return voRepresentations;\n        } catch (e) {\n            logger.error(e);\n            return voRepresentations\n        }\n    }\n\n    /**\n     * Returns all RepresentationInfo objects that have at least one bitrate that fulfills the constraint\n     * @param {Representation[]} voRepresentations\n     * @return {Representation[]}\n     */\n    function _filterByPossibleBitrate(voRepresentations) {\n        try {\n            const filteredArray = voRepresentations.filter((voRepresentation) => {\n                const type = voRepresentation.mediaInfo.type;\n                const representationBitrate = voRepresentation.bitrateInKbit;\n                const maxBitrate = mediaPlayerModel.getAbrBitrateParameter('maxBitrate', type);\n                const minBitrate = mediaPlayerModel.getAbrBitrateParameter('minBitrate', type);\n\n                if (maxBitrate > -1 && representationBitrate > maxBitrate) {\n                    return false;\n                }\n\n                return !(minBitrate > -1 && representationBitrate < minBitrate);\n            })\n\n            if (filteredArray.length > 0) {\n                return filteredArray\n            }\n\n            return voRepresentations\n        } catch (e) {\n            logger.error(e);\n            return voRepresentations\n        }\n    }\n\n    /**\n     * @param {Representation[]} voRepresentations\n     * @return {Representation[]}\n     * @private\n     */\n    function _filterByPortalSize(voRepresentations) {\n        try {\n            if (!settings.get().streaming.abr.limitBitrateByPortal) {\n                return voRepresentations;\n            }\n\n            const { elementWidth } = videoModel.getVideoElementSize();\n\n            const filteredArray = voRepresentations.filter((voRepresentation) => {\n                return voRepresentation.mediaInfo.type !== Constants.VIDEO || voRepresentation.width <= elementWidth;\n            })\n\n            if (filteredArray.length > 0) {\n                return filteredArray\n            }\n\n            return voRepresentations\n        } catch (e) {\n            logger.error(e);\n            return voRepresentations\n        }\n    }\n\n    /**\n     * @param {Representation[]} voRepresentations\n     * @return {Representation[]}\n     */\n    function _filterByCmsdMaxBitrate(voRepresentations) {\n        try {\n            // Check CMSD max suggested bitrate only for video segments\n            if (!settings.get().streaming.cmsd.enabled || !settings.get().streaming.cmsd.abr.applyMb) {\n                return voRepresentations\n            }\n\n            const filteredArray = voRepresentations.filter((voRepresentation) => {\n                const type = voRepresentation.mediaInfo.type;\n                let maxCmsdBitrate = cmsdModel.getMaxBitrate(type);\n\n                if (type !== Constants.VIDEO || maxCmsdBitrate < 0) {\n                    return true\n                }\n                // Subtract audio bitrate\n                const streamId = voRepresentation.mediaInfo.streamInfo.id;\n                const streamProcessor = streamProcessorDict[streamId][Constants.AUDIO];\n                const representation = streamProcessor.getRepresentation();\n                const audioBitrate = representation.bitrateInKbit;\n                maxCmsdBitrate -= audioBitrate ? audioBitrate : 0;\n                return voRepresentation.bitrateInKbit <= maxCmsdBitrate\n            })\n\n            if (filteredArray.length > 0) {\n                return filteredArray\n            }\n\n            return voRepresentations\n        } catch (e) {\n            logger.error(e);\n            return voRepresentations\n        }\n    }\n\n    function _sortRepresentationsByQuality(voRepresentations) {\n        if (_shouldSortByQualityRankingAttribute(voRepresentations)) {\n            voRepresentations = _sortByQualityRankingAttribute(voRepresentations)\n        } else {\n            voRepresentations = _sortByDefaultParameters(voRepresentations)\n        }\n\n        return voRepresentations\n    }\n\n    function _shouldSortByQualityRankingAttribute(voRepresentations) {\n        let firstMediaInfo = null;\n        const filteredRepresentations = voRepresentations.filter((rep) => {\n            if (!firstMediaInfo) {\n                firstMediaInfo = rep.mediaInfo;\n            }\n            return !isNaN(rep.qualityRanking) && adapter.areMediaInfosEqual(firstMediaInfo, rep.mediaInfo);\n        })\n\n        return filteredRepresentations.length === voRepresentations.length\n    }\n\n    function _sortByQualityRankingAttribute(voRepresentations) {\n        voRepresentations.sort((a, b) => {\n            return b.qualityRanking - a.qualityRanking;\n        })\n\n        return voRepresentations\n    }\n\n\n    function _sortByDefaultParameters(voRepresentations) {\n        voRepresentations.sort((a, b) => {\n\n            // In case both Representations are coming from the same MediaInfo then choose the one with the highest resolution and highest bitrate\n            if (adapter.areMediaInfosEqual(a.mediaInfo, b.mediaInfo)) {\n                if (!isNaN(a.pixelsPerSecond) && !isNaN(b.pixelsPerSecond) && a.pixelsPerSecond !== b.pixelsPerSecond) {\n                    return a.pixelsPerSecond - b.pixelsPerSecond\n                } else {\n                    return a.bandwidth - b.bandwidth\n                }\n            }\n\n            // In case the Representations are coming from different MediaInfos they might have different codecs. The bandwidth is not a good indicator, use bits per pixel instead\n            else {\n                if (!isNaN(a.pixelsPerSecond) && !isNaN(b.pixelsPerSecond) && a.pixelsPerSecond !== b.pixelsPerSecond) {\n                    return a.pixelsPerSecond - b.pixelsPerSecond\n                } else if (!isNaN(a.bitsPerPixel) && !isNaN(b.bitsPerPixel)) {\n                    return b.bitsPerPixel - a.bitsPerPixel\n                } else {\n                    return a.bandwidth - b.bandwidth\n                }\n            }\n        })\n\n        return voRepresentations\n    }\n\n\n    /**\n     * While fragment loading is in progress we check if we might need to abort the request\n     * @param {object} e\n     * @private\n     */\n    function _onFragmentLoadProgress(e) {\n        const type = e.request.mediaType;\n        const streamId = e.streamId;\n\n        if (!type || !streamId || !streamProcessorDict[streamId] || !settings.get().streaming.abr.autoSwitchBitrate[type]) {\n            return;\n        }\n\n        const streamProcessor = streamProcessorDict[streamId][type];\n        if (!streamProcessor) {\n            return;\n        }\n\n        const rulesContext = RulesContext(context).create({\n            abrController: instance,\n            streamProcessor,\n            currentRequest: e.request,\n            throughputController,\n            adapter,\n            videoModel\n        });\n        const switchRequest = abrRulesCollection.shouldAbandonFragment(rulesContext);\n\n        if (switchRequest && switchRequest.representation !== SwitchRequest.NO_CHANGE) {\n            _onSegmentDownloadShouldBeAbandoned(e, streamId, type, streamProcessor, switchRequest);\n        }\n    }\n\n    function _onSegmentDownloadShouldBeAbandoned(e, streamId, type, streamProcessor, switchRequest) {\n        const fragmentModel = streamProcessor.getFragmentModel();\n        const request = fragmentModel.getRequests({\n            state: FragmentModel.FRAGMENT_MODEL_LOADING,\n            index: e.request.index\n        })[0];\n        if (request) {\n            const targetAbandonmentStateDict = _getAbandonmentStateDictFor(streamId, type);\n\n            if (targetAbandonmentStateDict) {\n                targetAbandonmentStateDict.state = MetricsConstants.ABANDON_LOAD;\n            }\n            switchRequestHistory.reset();\n            setPlaybackQuality(type, streamController.getActiveStreamInfo(), switchRequest.representation, switchRequest.reason);\n\n            clearTimeout(abandonmentTimeout);\n            abandonmentTimeout = setTimeout(\n                () => {\n                    if (targetAbandonmentStateDict) {\n                        abandonmentStateDict[streamId][type].state = MetricsConstants.ALLOW_LOAD;\n                    }\n                    abandonmentTimeout = null;\n                },\n                settings.get().streaming.abandonLoadTimeout\n            );\n        }\n    }\n\n    /**\n     * Update dropped frames history when the quality was changed\n     * @param {object} e\n     * @private\n     */\n    function _onQualityChangeRendered(e) {\n        if (e.mediaType === Constants.VIDEO) {\n            if (playbackRepresentationId !== undefined) {\n                droppedFramesHistory.push(e.streamId, playbackRepresentationId, videoModel.getPlaybackQuality());\n            }\n            playbackRepresentationId = e.newRepresentation.id;\n        }\n    }\n\n    /**\n     * When the buffer level is updated we check if we need to change the ABR strategy\n     * @param e\n     * @private\n     */\n    function _onMetricAdded(e) {\n        if (_shouldApplyDynamicAbrStrategy()\n            && e.metric === MetricsConstants.BUFFER_LEVEL\n            && (e.mediaType === Constants.AUDIO || e.mediaType === Constants.VIDEO)) {\n            _updateDynamicAbrStrategy(e.mediaType, 0.001 * e.value.level);\n        }\n    }\n\n    /**\n     * Returns the initial bitrate for a specific media type\n     * @param {string} type\n     * @returns {number} A value of the initial bitrate, kbps\n     * @memberof AbrController#\n     */\n    function getInitialBitrateFor(type) {\n\n        if (type === Constants.TEXT) {\n            return NaN;\n        }\n\n        let configBitrate = mediaPlayerModel.getAbrBitrateParameter('initialBitrate', type);\n        if (configBitrate > 0) {\n            return configBitrate;\n        }\n\n        let savedBitrate = NaN;\n        if (domStorage && domStorage.hasOwnProperty('getSavedBitrateSettings')) {\n            savedBitrate = domStorage.getSavedBitrateSettings(type);\n        }\n        if (!isNaN(savedBitrate)) {\n            return savedBitrate\n        }\n\n        const averageThroughput = throughputController.getAverageThroughput(type);\n        if (!isNaN(averageThroughput) && averageThroughput > 0) {\n            return averageThroughput\n        }\n\n        return (type === Constants.VIDEO) ? DEFAULT_VIDEO_BITRATE : DEFAULT_BITRATE;\n    }\n\n    /**\n     * This function is called by the scheduleControllers to check if the quality should be changed.\n     * Consider this the main entry point for the ABR decision logic\n     * @param {string} type\n     * @param {string} streamId\n     */\n    function checkPlaybackQuality(type, streamId) {\n        try {\n            if (!type || !streamProcessorDict || !streamProcessorDict[streamId] || !streamProcessorDict[streamId][type]) {\n                return false;\n            }\n\n            if (droppedFramesHistory) {\n                const playbackQuality = videoModel.getPlaybackQuality();\n                if (playbackQuality) {\n                    droppedFramesHistory.push(streamId, playbackRepresentationId, playbackQuality);\n                }\n            }\n\n            if (!settings.get().streaming.abr.autoSwitchBitrate[type]) {\n                return false;\n            }\n\n            const streamProcessor = streamProcessorDict[streamId][type];\n            const currentRepresentation = streamProcessor.getRepresentation();\n            const rulesContext = RulesContext(context).create({\n                abrController: instance,\n                throughputController,\n                switchRequestHistory,\n                droppedFramesHistory,\n                streamProcessor,\n                adapter,\n                videoModel\n            });\n            const switchRequest = abrRulesCollection.getBestPossibleSwitchRequest(rulesContext);\n\n            if (!switchRequest || !switchRequest.representation) {\n                return false;\n            }\n\n            let newRepresentation = switchRequest.representation;\n            switchRequestHistory.push({\n                currentRepresentation,\n                newRepresentation\n            });\n\n            if (newRepresentation.id !== currentRepresentation.id && (abandonmentStateDict[streamId][type].state === MetricsConstants.ALLOW_LOAD || newRepresentation.absoluteIndex < currentRepresentation.absoluteIndex)) {\n                _changeQuality(currentRepresentation, newRepresentation, switchRequest.reason);\n                return true;\n            }\n\n            return false;\n        } catch (e) {\n            logger.error(e);\n            return false;\n        }\n    }\n\n    /**\n     * Sets the new playback quality. Starts from index 0.\n     * If the index of the new quality is the same as the old one changeQuality will not be called.\n     * @param {string} type\n     * @param {object} streamInfo\n     * @param {Representation} representation\n     * @param {string} reason\n     * @param {string} rule\n     */\n    function setPlaybackQuality(type, streamInfo, representation, reason = {}) {\n        if (!streamInfo || !streamInfo.id || !type || !streamProcessorDict || !streamProcessorDict[streamInfo.id] || !streamProcessorDict[streamInfo.id][type] || !representation) {\n            return;\n        }\n\n        const streamProcessor = streamProcessorDict[streamInfo.id][type];\n        const currentRepresentation = streamProcessor.getRepresentation();\n\n\n        if (!currentRepresentation || representation.id !== currentRepresentation.id) {\n            _changeQuality(currentRepresentation, representation, reason);\n        }\n    }\n\n    /**\n     *\n     * @param {string} streamId\n     * @param {type} type\n     * @return {*|null}\n     */\n    function getAbandonmentStateFor(streamId, type) {\n        return abandonmentStateDict[streamId] && abandonmentStateDict[streamId][type] ? abandonmentStateDict[streamId][type].state : null;\n    }\n\n    function _getAbandonmentStateDictFor(streamId, type) {\n        return abandonmentStateDict[streamId] && abandonmentStateDict[streamId][type] ? abandonmentStateDict[streamId][type] : null;\n\n    }\n\n\n    /**\n     * Changes the internal qualityDict values according to the new quality\n     * @param {Representation} oldRepresentation\n     * @param {Representation} newRepresentation\n     * @param {string} reason\n     * @private\n     */\n    function _changeQuality(oldRepresentation, newRepresentation, reason) {\n        const streamId = newRepresentation.mediaInfo.streamInfo.id;\n        const type = newRepresentation.mediaInfo.type;\n        if (type && streamProcessorDict[streamId] && streamProcessorDict[streamId][type]) {\n            const streamInfo = streamProcessorDict[streamId][type].getStreamInfo();\n            const bufferLevel = dashMetrics.getCurrentBufferLevel(type);\n            const isAdaptationSetSwitch = oldRepresentation !== null && !adapter.areMediaInfosEqual(oldRepresentation.mediaInfo, newRepresentation.mediaInfo);\n\n            const oldBitrate = oldRepresentation ? oldRepresentation.bitrateInKbit : 0;\n            logger.info(`[AbrController]: Switching quality in period ${streamId} for media type ${type}. Switch from bitrate ${oldBitrate} to bitrate ${newRepresentation.bitrateInKbit}. Current buffer level: ${bufferLevel}. Reason:` + (reason ? JSON.stringify(reason) : '/'));\n\n            eventBus.trigger(Events.QUALITY_CHANGE_REQUESTED,\n                {\n                    oldRepresentation: oldRepresentation,\n                    newRepresentation: newRepresentation,\n                    reason,\n                    streamInfo,\n                    mediaType: type,\n                    isAdaptationSetSwitch\n                },\n                { streamId: streamInfo.id, mediaType: type }\n            );\n            const bitrate = throughputController.getAverageThroughput(type);\n            if (!isNaN(bitrate)) {\n                domStorage.setSavedBitrateSettings(type, bitrate);\n            }\n        }\n    }\n\n\n    /**\n     * If both BOLA and Throughput Rule are active we switch dynamically between both of them\n     * @returns {boolean}\n     * @private\n     */\n    function _shouldApplyDynamicAbrStrategy() {\n        return settings.get().streaming.abr.rules.bolaRule.active && settings.get().streaming.abr.rules.throughputRule.active\n    }\n\n    /**\n     * Switch between BOLA and ThroughputRule\n     * @param mediaType\n     * @param bufferLevel\n     * @private\n     */\n    function _updateDynamicAbrStrategy(mediaType, bufferLevel) {\n        try {\n            const bufferTimeDefault = mediaPlayerModel.getBufferTimeDefault();\n            const switchOnThreshold = bufferTimeDefault;\n            const switchOffThreshold = 0.5 * bufferTimeDefault;\n\n            const isUsingBolaRule = abrRulesCollection.getBolaState(mediaType)\n            const shouldUseBolaRule = bufferLevel >= (isUsingBolaRule ? switchOffThreshold : switchOnThreshold); // use hysteresis to avoid oscillating rules\n            abrRulesCollection.setBolaState(mediaType, shouldUseBolaRule);\n\n            if (shouldUseBolaRule !== isUsingBolaRule) {\n                if (shouldUseBolaRule) {\n                    logger.info('[' + mediaType + '] switching from throughput to buffer occupancy ABR rule (buffer: ' + bufferLevel.toFixed(3) + ').');\n                } else {\n                    logger.info('[' + mediaType + '] switching from buffer occupancy to throughput ABR rule (buffer: ' + bufferLevel.toFixed(3) + ').');\n                }\n            }\n        } catch (e) {\n            logger.error(e);\n        }\n    }\n\n    /**\n     * Checks if the provided Representation has the lowest possible quality\n     * @param representation\n     * @returns {boolean}\n     */\n    function isPlayingAtLowestQuality(representation) {\n        const voRepresentations = getPossibleVoRepresentationsFilteredBySettings(representation.mediaInfo, true);\n\n        return voRepresentations[0].id === representation.id\n    }\n\n    /**\n     * Checks if the provided Representation has the highest possible quality\n     * @param representation\n     * @returns {boolean}\n     */\n    function isPlayingAtTopQuality(representation) {\n        if (!representation) {\n            return true;\n        }\n        const voRepresentations = getPossibleVoRepresentationsFilteredBySettings(representation.mediaInfo, true);\n\n        return voRepresentations[voRepresentations.length - 1].id === representation.id;\n    }\n\n    function setWindowResizeEventCalled(value) {\n        windowResizeEventCalled = value;\n    }\n\n    function clearDataForStream(streamId) {\n        if (droppedFramesHistory) {\n            droppedFramesHistory.clearForStream(streamId);\n        }\n        if (streamProcessorDict[streamId]) {\n            delete streamProcessorDict[streamId];\n        }\n        if (switchRequestHistory) {\n            switchRequestHistory.clearForStream(streamId);\n        }\n        if (abandonmentStateDict[streamId]) {\n            delete abandonmentStateDict[streamId];\n        }\n\n        abrRulesCollection.clearDataForStream(streamId);\n    }\n\n    function handleNewMediaInfo(newMediaInfo) {\n        abrRulesCollection.handleNewMediaInfo(newMediaInfo);\n    }\n\n\n    instance = {\n        checkPlaybackQuality,\n        clearDataForStream,\n        getAbandonmentStateFor,\n        getInitialBitrateFor,\n        getOptimalRepresentationForBitrate,\n        getPossibleVoRepresentations,\n        getPossibleVoRepresentationsFilteredBySettings,\n        getRepresentationByAbsoluteIndex,\n        handleNewMediaInfo,\n        initialize,\n        isPlayingAtLowestQuality,\n        isPlayingAtTopQuality,\n        registerStreamType,\n        reset,\n        setConfig,\n        setPlaybackQuality,\n        setWindowResizeEventCalled,\n        unRegisterStreamType,\n    };\n\n    setup();\n\n    return instance;\n}\n\nAbrController.__dashjs_factory_name = 'AbrController';\nconst factory = FactoryMaker.getSingletonFactory(AbrController);\nFactoryMaker.updateSingletonFactory(AbrController.__dashjs_factory_name, factory);\nexport default factory;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport FactoryMaker from '../../core/FactoryMaker.js';\nimport EventBus from '../../core/EventBus.js';\nimport Events from '../../core/events/Events.js';\nimport Debug from '../../core/Debug.js';\nimport Constants from '../constants/Constants.js';\nimport Settings from '../../core/Settings.js';\n\n\nconst READY_STATES_TO_EVENT_NAMES = new Map([\n    [Constants.VIDEO_ELEMENT_READY_STATES.HAVE_METADATA, 'loadedmetadata'],\n    [Constants.VIDEO_ELEMENT_READY_STATES.HAVE_CURRENT_DATA, 'loadeddata'],\n    [Constants.VIDEO_ELEMENT_READY_STATES.HAVE_FUTURE_DATA, 'canplay'],\n    [Constants.VIDEO_ELEMENT_READY_STATES.HAVE_ENOUGH_DATA, 'canplaythrough']\n]);\n\nfunction VideoModel() {\n\n    let instance,\n        logger,\n        settings,\n        element,\n        _currentTime,\n        setCurrentTimeReadyStateFunction,\n        resumeReadyStateFunction,\n        TTMLRenderingDiv,\n        vttRenderingDiv,\n        previousPlaybackRate,\n        timeout;\n\n    const VIDEO_MODEL_WRONG_ELEMENT_TYPE = 'element is not video or audio DOM type!';\n\n    const context = this.context;\n    const eventBus = EventBus(context).getInstance();\n    const stalledStreams = [];\n\n    function setup() {\n        logger = Debug(context).getInstance().getLogger(instance);\n        settings = Settings(context).getInstance();\n        _currentTime = NaN;\n    }\n\n    function initialize() {\n        eventBus.on(Events.PLAYBACK_PLAYING, onPlaying, this);\n    }\n\n    function reset() {\n        clearTimeout(timeout);\n        eventBus.off(Events.PLAYBACK_PLAYING, onPlaying, this);\n        stalledStreams.length = 0;\n    }\n\n    function setConfig(config) {\n        if (!config) {\n            return;\n        }\n\n        if (config.settings) {\n            settings = config.settings;\n        }\n    }\n\n    function setPlaybackRate(value, ignoreReadyState = false) {\n        if (!element) {\n            return;\n        }\n\n        if (ignoreReadyState) {\n            element.playbackRate = value;\n            return;\n        }\n\n        // If media element hasn't loaded enough data to play yet, wait until it has\n        waitForReadyState(Constants.VIDEO_ELEMENT_READY_STATES.HAVE_FUTURE_DATA, () => {\n            element.playbackRate = value;\n        });\n    }\n\n    //TODO Move the DVR window calculations from MediaPlayer to Here.\n    function setCurrentTime(currentTime, stickToBuffered) {\n        if (element) {\n            if (setCurrentTimeReadyStateFunction && setCurrentTimeReadyStateFunction.func && setCurrentTimeReadyStateFunction.event) {\n                removeEventListener(setCurrentTimeReadyStateFunction.event, setCurrentTimeReadyStateFunction.func);\n            }\n            _currentTime = currentTime;\n            setCurrentTimeReadyStateFunction = waitForReadyState(Constants.VIDEO_ELEMENT_READY_STATES.HAVE_METADATA, () => {\n                if (!element) {\n                    return;\n                }\n\n                // We don't set the same currentTime because it can cause firing unexpected Pause event in IE11\n                // providing playbackRate property equals to zero.\n                if (element.currentTime === _currentTime) {\n                    _currentTime = NaN;\n                    return;\n                }\n\n                // TODO Despite the fact that MediaSource 'open' event has been fired IE11 cannot set videoElement.currentTime\n                // immediately (it throws InvalidStateError). It seems that this is related to videoElement.readyState property\n                // Initially it is 0, but soon after 'open' event it goes to 1 and setting currentTime is allowed. Chrome allows to\n                // set currentTime even if readyState = 0.\n                // setTimeout is used to workaround InvalidStateError in IE11\n                try {\n                    _currentTime = stickToBuffered ? stickTimeToBuffered(_currentTime) : _currentTime;\n                    if (!isNaN(_currentTime)) {\n                        element.currentTime = _currentTime;\n                    }\n                    _currentTime = NaN;\n                } catch (e) {\n                    if (element.readyState === 0 && e.code === e.INVALID_STATE_ERR) {\n                        timeout = setTimeout(function () {\n                            element.currentTime = _currentTime;\n                            _currentTime = NaN;\n                        }, 400);\n                    }\n                }\n            });\n        }\n    }\n\n    function stickTimeToBuffered(time) {\n        const buffered = getBufferRange();\n        let closestTime = time;\n        let closestDistance = 9999999999;\n        if (buffered) {\n            for (let i = 0; i < buffered.length; i++) {\n                const start = buffered.start(i);\n                const end = buffered.end(i);\n                const distanceToStart = Math.abs(start - time);\n                const distanceToEnd = Math.abs(end - time);\n\n                if (time >= start && time <= end) {\n                    return time;\n                }\n\n                if (distanceToStart < closestDistance) {\n                    closestDistance = distanceToStart;\n                    closestTime = start;\n                }\n\n                if (distanceToEnd < closestDistance) {\n                    closestDistance = distanceToEnd;\n                    closestTime = end;\n                }\n            }\n        }\n        return closestTime;\n    }\n\n    function getElement() {\n        return element;\n    }\n\n    function setElement(value) {\n        //add check of value type\n        if (value === null || value === undefined || (value && (/^(VIDEO|AUDIO)$/i).test(value.nodeName))) {\n            element = value;\n            // Workaround to force Firefox to fire the canplay event.\n            if (element) {\n                element.preload = 'auto';\n            }\n        } else {\n            throw VIDEO_MODEL_WRONG_ELEMENT_TYPE;\n        }\n    }\n\n    function setSource(source) {\n        if (element) {\n            if (source) {\n                element.src = source;\n            } else {\n                element.removeAttribute('src');\n                element.load();\n            }\n        }\n    }\n\n    function setDisableRemotePlayback(value) {\n        if (element) {\n            element.disableRemotePlayback = value;\n        }\n    }\n\n    function getSource() {\n        return element ? element.src : null;\n    }\n\n    function getTTMLRenderingDiv() {\n        return TTMLRenderingDiv;\n    }\n\n    function getVttRenderingDiv() {\n        return vttRenderingDiv;\n    }\n\n    function setTTMLRenderingDiv(div) {\n        TTMLRenderingDiv = div;\n        // The styling will allow the captions to match the video window size and position.\n        TTMLRenderingDiv.style.position = 'absolute';\n        TTMLRenderingDiv.style.display = 'flex';\n        TTMLRenderingDiv.style.overflow = 'hidden';\n        TTMLRenderingDiv.style.pointerEvents = 'none';\n        TTMLRenderingDiv.style.top = 0;\n        TTMLRenderingDiv.style.left = 0;\n    }\n\n    function setVttRenderingDiv(div) {\n        vttRenderingDiv = div;\n    }\n\n    function setStallState(type, state) {\n        stallStream(type, state);\n    }\n\n    function isStalled() {\n        return (stalledStreams.length > 0);\n    }\n\n    function addStalledStream(type) {\n        if (type === null || !element || element.seeking || stalledStreams.indexOf(type) !== -1) {\n            return;\n        }\n\n        stalledStreams.push(type);\n\n        if (settings.get().streaming.buffer.syntheticStallEvents.enabled && element && stalledStreams.length === 1 && (settings.get().streaming.buffer.syntheticStallEvents.ignoreReadyState || getReadyState() >= Constants.VIDEO_ELEMENT_READY_STATES.HAVE_FUTURE_DATA)) {\n            // Halt playback until nothing is stalled\n            previousPlaybackRate = element.playbackRate;\n            setPlaybackRate(0, true);\n\n            const event = document.createEvent('Event');\n            event.initEvent('waiting', true, false);\n            element.dispatchEvent(event);\n        }\n    }\n\n    function removeStalledStream(type) {\n        let index = stalledStreams.indexOf(type);\n\n        if (type === null) {\n            return;\n        }\n        if (index !== -1) {\n            stalledStreams.splice(index, 1);\n        }\n\n        if (settings.get().streaming.buffer.syntheticStallEvents.enabled && element && !isStalled()) {\n            const resume = () => {\n                setPlaybackRate(previousPlaybackRate || 1, settings.get().streaming.buffer.syntheticStallEvents.ignoreReadyState);\n\n                if (!element.paused) {\n                    const event = document.createEvent('Event');\n                    event.initEvent('playing', true, false);\n                    element.dispatchEvent(event);\n                }\n            }\n            \n            if (settings.get().streaming.buffer.syntheticStallEvents.ignoreReadyState) {\n                resume();\n            } else {\n                if (resumeReadyStateFunction && resumeReadyStateFunction.func && resumeReadyStateFunction.event) {\n                    removeEventListener(resumeReadyStateFunction.event, resumeReadyStateFunction.func);\n                }\n                resumeReadyStateFunction = waitForReadyState(Constants.VIDEO_ELEMENT_READY_STATES.HAVE_FUTURE_DATA, resume);\n            }\n        }\n    }\n\n    function stallStream(type, isStalled) {\n        if (isStalled) {\n            addStalledStream(type);\n        } else {\n            removeStalledStream(type);\n        }\n    }\n\n    //Calling play on the element will emit playing - even if the stream is stalled. If the stream is stalled, emit a waiting event.\n    function onPlaying() {\n        if (element && isStalled() && element.playbackRate === 0) {\n            const event = document.createEvent('Event');\n            event.initEvent('waiting', true, false);\n            element.dispatchEvent(event);\n        }\n    }\n\n    function getPlaybackQuality() {\n        if (!element) {\n            return null;\n        }\n        let hasWebKit = ('webkitDroppedFrameCount' in element) && ('webkitDecodedFrameCount' in element);\n        let hasQuality = ('getVideoPlaybackQuality' in element);\n        let result = null;\n\n        if (hasQuality) {\n            result = element.getVideoPlaybackQuality();\n        } else if (hasWebKit) {\n            result = {\n                droppedVideoFrames: element.webkitDroppedFrameCount,\n                totalVideoFrames: element.webkitDroppedFrameCount + element.webkitDecodedFrameCount,\n                creationTime: new Date()\n            };\n        }\n\n        return result;\n    }\n\n    function play() {\n        if (element) {\n            element.autoplay = true;\n            const p = element.play();\n            if (p && p.catch && typeof Promise !== 'undefined') {\n                p.catch((e) => {\n                    if (e.name === 'NotAllowedError') {\n                        eventBus.trigger(Events.PLAYBACK_NOT_ALLOWED);\n                    }\n                    logger.warn(`Caught pending play exception - continuing (${e})`);\n                });\n            }\n        }\n    }\n\n    function isPaused() {\n        return element ? element.paused : null;\n    }\n\n    function pause() {\n        if (element) {\n            element.pause();\n            element.autoplay = false;\n        }\n    }\n\n    function isSeeking() {\n        return element ? (element.seeking || !isNaN(_currentTime)) : null;\n    }\n\n    function getTime() {\n        return element ? (!isNaN(_currentTime) ? _currentTime : element.currentTime) : null;\n    }\n\n    function getPlaybackRate() {\n        return element ? element.playbackRate : null;\n    }\n\n    function getPlayedRanges() {\n        return element ? element.played : null;\n    }\n\n    function getEnded() {\n        return element ? element.ended : null;\n    }\n\n    function addEventListener(eventName, eventCallBack) {\n        if (element) {\n            element.addEventListener(eventName, eventCallBack);\n        }\n    }\n\n    function removeEventListener(eventName, eventCallBack) {\n        if (element) {\n            element.removeEventListener(eventName, eventCallBack);\n        }\n    }\n\n    function getReadyState() {\n        return element ? element.readyState : NaN;\n    }\n\n    function getBufferRange() {\n        return element ? element.buffered : null;\n    }\n\n    function getClientWidth() {\n        return element ? element.clientWidth : NaN;\n    }\n\n    function getClientHeight() {\n        return element ? element.clientHeight : NaN;\n    }\n\n    function getVideoWidth() {\n        return element ? element.videoWidth : NaN;\n    }\n\n    function getVideoHeight() {\n        return element ? element.videoHeight : NaN;\n    }\n\n    function getVideoRelativeOffsetTop() {\n        if (element) {\n            const parentElement = element.parentNode.host || element.parentNode;\n            return parentElement ? element.getBoundingClientRect().top - parentElement.getBoundingClientRect().top : NaN;\n        }\n        return NaN;\n    }\n\n    function getVideoRelativeOffsetLeft() {\n        if (element) {\n            const parentElement = element.parentNode.host || element.parentNode;\n            return parentElement ? element.getBoundingClientRect().left - parentElement.getBoundingClientRect().left : NaN;\n        }\n        return NaN;\n    }\n\n    function getTextTracks() {\n        return element ? element.textTracks : [];\n    }\n\n    function getTextTrack(kind, label, lang, isTTML, isEmbedded) {\n        if (element) {\n            for (let i = 0; i < element.textTracks.length; i++) {\n                //label parameter could be a number (due to adaptationSet), but label, the attribute of textTrack, is a string => to modify...\n                //label could also be undefined (due to adaptationSet)\n                if (element.textTracks[i].kind === kind && (label ? element.textTracks[i].label == label : true) &&\n                    element.textTracks[i].language === lang && element.textTracks[i].isTTML === isTTML && element.textTracks[i].isEmbedded === isEmbedded) {\n                    return element.textTracks[i];\n                }\n            }\n        }\n\n        return null;\n    }\n\n    function addTextTrack(kind, label, lang, isTTML, isEmbedded) {\n        if (!element) {\n            return null;\n        }\n        // check if track of same type has not been already created for previous stream\n        // then use it (no way to remove existing text track from video element)\n        let track = getTextTrack(kind, label, lang, isTTML, isEmbedded);\n        if (!track) {\n            track = element.addTextTrack(kind, label, lang);\n            track.isEmbedded = isEmbedded;\n            track.isTTML = isTTML;\n        }\n        return track;\n    }\n\n    function appendChild(childElement) {\n        if (element) {\n            element.appendChild(childElement);\n            //in Chrome, we need to differenciate textTrack with same lang, kind and label but different format (vtt, ttml, etc...)\n            if (childElement.isTTML !== undefined) {\n                element.textTracks[element.textTracks.length - 1].isTTML = childElement.isTTML;\n                element.textTracks[element.textTracks.length - 1].isEmbedded = childElement.isEmbedded;\n            }\n        }\n    }\n\n    function removeChild(childElement) {\n        if (element) {\n            element.removeChild(childElement);\n        }\n    }\n\n    function waitForReadyState(targetReadyState, callback) {\n        if (targetReadyState === Constants.VIDEO_ELEMENT_READY_STATES.HAVE_NOTHING ||\n            getReadyState() >= targetReadyState) {\n            callback();\n            return null;\n        } else {\n            // wait for the appropriate callback before checking again\n            const event = READY_STATES_TO_EVENT_NAMES.get(targetReadyState);\n            return _listenOnce(event, callback);\n        }\n    }\n\n    function _listenOnce(event, callback) {\n        const func = () => {\n            // Stop listening to this event.\n            removeEventListener(event, func);\n            // Call the original listener.\n            callback(event);\n        };\n        addEventListener(event, func);\n\n        return { func, event }\n    }\n\n    function getVideoElementSize() {\n        const hasPixelRatio = settings.get().streaming.abr.usePixelRatioInLimitBitrateByPortal && window.hasOwnProperty('devicePixelRatio');\n        const pixelRatio = hasPixelRatio ? window.devicePixelRatio : 1;\n        const elementWidth = getClientWidth() * pixelRatio;\n        const elementHeight = getClientHeight() * pixelRatio;\n\n        return {\n            elementWidth,\n            elementHeight\n        }\n    }\n\n    instance = {\n        addEventListener,\n        addTextTrack,\n        appendChild,\n        getBufferRange,\n        getClientHeight,\n        getClientWidth,\n        getElement,\n        getEnded,\n        getPlaybackQuality,\n        getPlaybackRate,\n        getPlayedRanges,\n        getReadyState,\n        getSource,\n        getTTMLRenderingDiv,\n        getTextTrack,\n        getTextTracks,\n        getTime,\n        getVideoElementSize,\n        getVideoHeight,\n        getVideoRelativeOffsetLeft,\n        getVideoRelativeOffsetTop,\n        getVideoWidth,\n        getVttRenderingDiv,\n        initialize,\n        isPaused,\n        isSeeking,\n        isStalled,\n        pause,\n        play,\n        removeChild,\n        removeEventListener,\n        reset,\n        setConfig,\n        setCurrentTime,\n        setDisableRemotePlayback,\n        setElement,\n        setPlaybackRate,\n        setSource,\n        setStallState,\n        setTTMLRenderingDiv,\n        setVttRenderingDiv,\n        waitForReadyState,\n    };\n\n    setup();\n\n    return instance;\n}\n\nVideoModel.__dashjs_factory_name = 'VideoModel';\nexport default FactoryMaker.getSingletonFactory(VideoModel);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport FactoryMaker from '../../core/FactoryMaker.js';\nimport Debug from '../../core/Debug.js';\nimport Constants from '../constants/Constants.js';\n\nconst legacyKeysAndReplacements = [\n    { oldKey: 'dashjs_vbitrate', newKey: 'dashjs_video_bitrate' },\n    { oldKey: 'dashjs_abitrate', newKey: 'dashjs_audio_bitrate' },\n    { oldKey: 'dashjs_vsettings', newKey: 'dashjs_video_settings' },\n    { oldKey: 'dashjs_asettings', newKey: 'dashjs_audio_settings' }\n];\n\nconst LOCAL_STORAGE_BITRATE_KEY_TEMPLATE = 'dashjs_?_bitrate';\nconst LOCAL_STORAGE_SETTINGS_KEY_TEMPLATE = 'dashjs_?_settings';\n\nconst STORAGE_TYPE_LOCAL = 'localStorage';\nconst STORAGE_TYPE_SESSION = 'sessionStorage';\nconst LAST_BITRATE = 'lastBitrate';\nconst LAST_MEDIA_SETTINGS = 'lastMediaSettings';\n\nfunction DOMStorage(config) {\n\n    config = config || {};\n    const context = this.context;\n    const settings = config.settings;\n\n    let instance,\n        logger,\n        supported;\n\n    function setup() {\n        logger = Debug(context).getInstance().getLogger(instance);\n        translateLegacyKeys();\n    }\n\n    //type can be local, session\n    function isSupported(type) {\n        if (supported !== undefined) {\n            return supported;\n        }\n\n        supported = false;\n\n        const testKey = '1';\n        const testValue = '1';\n        let storage;\n\n        try {\n            if (typeof window !== 'undefined') {\n                storage = window[type];\n            }\n        } catch (error) {\n            logger.warn('DOMStorage access denied: ' + error.message);\n            return supported;\n        }\n\n        if (!storage || (type !== STORAGE_TYPE_LOCAL && type !== STORAGE_TYPE_SESSION)) {\n            return supported;\n        }\n\n        /* When Safari (OS X or iOS) is in private browsing mode, it appears as though localStorage is available, but trying to call setItem throws an exception.\n         http://stackoverflow.com/questions/14555347/html5-localstorage-error-with-safari-quota-exceeded-err-dom-exception-22-an\n\n         Check if the storage can be used\n         */\n        try {\n            storage.setItem(testKey, testValue);\n            storage.removeItem(testKey);\n            supported = true;\n        } catch (error) {\n            logger.warn('DOMStorage is supported, but cannot be used: ' + error.message);\n        }\n\n        return supported;\n    }\n\n    function translateLegacyKeys() {\n        if (isSupported(STORAGE_TYPE_LOCAL)) {\n            legacyKeysAndReplacements.forEach(entry => {\n                const value = localStorage.getItem(entry.oldKey);\n\n                if (value) {\n                    localStorage.removeItem(entry.oldKey);\n\n                    try {\n                        localStorage.setItem(entry.newKey, value);\n                    } catch (e) {\n                        logger.error(e.message);\n                    }\n                }\n            });\n        }\n    }\n\n    // Return current epoch time, ms, rounded to the nearest 10m to avoid fingerprinting user\n    function getTimestamp() {\n        const ten_minutes_ms = 60 * 1000 * 10;\n        return Math.round(new Date().getTime() / ten_minutes_ms) * ten_minutes_ms;\n    }\n\n    function canStore(storageType, key) {\n        return isSupported(storageType) && settings.get().streaming[key + 'CachingInfo'].enabled;\n    }\n\n    function checkConfig() {\n        if (!settings) {\n            throw new Error(Constants.MISSING_CONFIG_ERROR);\n        }\n    }\n\n    function getSavedMediaSettings(type) {\n        checkConfig();\n\n        if (!settings.get().streaming.lastMediaSettingsCachingInfo.enabled) {\n            return null;\n        }\n\n        let mediaSettings = null;\n\n        //Checks local storage to see if there is valid, non-expired media settings\n        if (canStore(STORAGE_TYPE_LOCAL, LAST_MEDIA_SETTINGS)) {\n            const key = LOCAL_STORAGE_SETTINGS_KEY_TEMPLATE.replace(/\\?/, type);\n            try {\n                const obj = JSON.parse(localStorage.getItem(key)) || {};\n                const isExpired = (new Date().getTime() - parseInt(obj.timestamp, 10)) >= settings.get().streaming.lastMediaSettingsCachingInfo.ttl || false;\n                mediaSettings = obj.settings;\n\n                if (isExpired) {\n                    localStorage.removeItem(key);\n                    mediaSettings = null;\n                }\n            } catch (e) {\n                return null;\n            }\n        }\n        return mediaSettings;\n    }\n\n    function getSavedBitrateSettings(type) {\n        checkConfig();\n\n        if (!settings.get().streaming.lastBitrateCachingInfo.enabled) {\n            return NaN;\n        }\n\n        let savedBitrate = NaN;\n\n        //Checks local storage to see if there is valid, non-expired bit rate\n        //hinting from the last play session to use as a starting bit rate.\n        if (canStore(STORAGE_TYPE_LOCAL, LAST_BITRATE)) {\n            const key = LOCAL_STORAGE_BITRATE_KEY_TEMPLATE.replace(/\\?/, type);\n            try {\n                const obj = JSON.parse(localStorage.getItem(key)) || {};\n                const isExpired = (new Date().getTime() - parseInt(obj.timestamp, 10)) >= settings.get().streaming.lastBitrateCachingInfo.ttl || false;\n                const bitrate = parseFloat(obj.bitrate);\n\n                if (!isNaN(bitrate) && !isExpired) {\n                    savedBitrate = bitrate;\n                    logger.debug('Last saved bitrate for ' + type + ' was ' + bitrate);\n                } else if (isExpired) {\n                    localStorage.removeItem(key);\n                }\n            } catch (e) {\n                return null;\n            }\n        }\n        return savedBitrate;\n    }\n\n    function setSavedMediaSettings(type, value) {\n        if (canStore(STORAGE_TYPE_LOCAL, LAST_MEDIA_SETTINGS)) {\n            const key = LOCAL_STORAGE_SETTINGS_KEY_TEMPLATE.replace(/\\?/, type);\n            try {\n                localStorage.setItem(key, JSON.stringify({ settings: value, timestamp: getTimestamp() }));\n            } catch (e) {\n                logger.error(e.message);\n            }\n        }\n    }\n\n    function setSavedBitrateSettings(type, bitrate) {\n        if (canStore(STORAGE_TYPE_LOCAL, LAST_BITRATE) && bitrate) {\n            const key = LOCAL_STORAGE_BITRATE_KEY_TEMPLATE.replace(/\\?/, type);\n            try {\n                localStorage.setItem(key, JSON.stringify({ bitrate: bitrate.toFixed(3), timestamp: getTimestamp() }));\n            } catch (e) {\n                logger.error(e.message);\n            }\n        }\n    }\n\n    instance = {\n        getSavedBitrateSettings,\n        setSavedBitrateSettings,\n        getSavedMediaSettings,\n        setSavedMediaSettings\n    };\n\n    setup();\n    return instance;\n}\n\nDOMStorage.__dashjs_factory_name = 'DOMStorage';\nconst factory = FactoryMaker.getSingletonFactory(DOMStorage);\nexport default factory;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport Segment from './vo/Segment.js';\nimport DashJSError from '../streaming/vo/DashJSError.js';\nimport FactoryMaker from '../core/FactoryMaker.js';\nimport FragmentRequest from '../streaming/vo/FragmentRequest.js';\nimport URLLoader from '../streaming/net/URLLoader.js';\n\nfunction SegmentBaseLoader() {\n\n    const context = this.context;\n\n    let instance,\n        logger,\n        errHandler,\n        boxParser,\n        dashMetrics,\n        mediaPlayerModel,\n        urlLoader,\n        errors,\n        constants,\n        dashConstants,\n        urlUtils,\n        baseURLController;\n\n    function setup() {\n    }\n\n    function initialize() {\n        urlLoader = URLLoader(context).create({\n            errHandler: errHandler,\n            dashMetrics: dashMetrics,\n            mediaPlayerModel: mediaPlayerModel,\n            boxParser: boxParser,\n            errors: errors,\n            urlUtils: urlUtils,\n            constants: constants,\n            dashConstants: dashConstants\n        });\n    }\n\n    function setConfig(config) {\n        if (config.baseURLController) {\n            baseURLController = config.baseURLController;\n        }\n\n        if (config.dashMetrics) {\n            dashMetrics = config.dashMetrics;\n        }\n\n        if (config.mediaPlayerModel) {\n            mediaPlayerModel = config.mediaPlayerModel;\n        }\n\n        if (config.errHandler) {\n            errHandler = config.errHandler;\n        }\n\n        if (config.boxParser) {\n            boxParser = config.boxParser;\n        }\n\n        if (config.debug) {\n            logger = config.debug.getLogger(instance);\n        }\n\n        if (config.errors) {\n            errors = config.errors;\n        }\n\n        if (config.urlUtils) {\n            urlUtils = config.urlUtils;\n        }\n\n        if (config.constants) {\n            constants = config.constants;\n        }\n\n        if (config.dashConstants) {\n            dashConstants = config.dashConstants;\n        }\n    }\n\n    function loadInitialization(representation, mediaType) {\n        return new Promise((resolve) => {\n            _loadInitializationRecursively(representation, mediaType, resolve);\n        });\n    }\n\n    function _loadInitializationRecursively(representation, mediaType, resolve, loadingInfo) {\n        let initRange = null;\n        const baseUrl = representation ? baseURLController.resolve(representation.path) : null;\n        const info = loadingInfo || {\n            init: true,\n            url: baseUrl ? baseUrl.url : undefined,\n            range: {\n                start: 0,\n                end: 1500\n            },\n            searching: false,\n            bytesLoaded: 0,\n            bytesToLoad: 1500,\n            mediaType: mediaType,\n            representation\n        };\n\n        logger.debug('Start searching for initialization.');\n\n        const request = getFragmentRequest(info);\n\n        const onload = function (response) {\n            info.bytesLoaded = info.range.end;\n            initRange = boxParser.findInitRange(response);\n\n            if (initRange) {\n                representation.range = initRange;\n                // note that we don't explicitly set rep.initialization as this\n                // will be computed when all BaseURLs are resolved later\n                resolve(representation);\n            } else {\n                info.range.end = info.bytesLoaded + info.bytesToLoad;\n                return _loadInitializationRecursively(representation, mediaType, resolve, info);\n            }\n        };\n\n        const onerror = function () {\n            resolve(representation);\n        };\n\n        urlLoader.load({ request: request, success: onload, error: onerror });\n\n        logger.debug('Perform init search: ' + info.url);\n    }\n\n    function loadSegments(representation, mediaType, range) {\n        return new Promise((resolve) => {\n            _loadSegmentsRecursively(representation, mediaType, range, resolve);\n        });\n    }\n\n    function _loadSegmentsRecursively(representation, mediaType, range, resolve, callback, loadingInfo) {\n        if (range && (range.start === undefined || range.end === undefined)) {\n            const parts = range ? range.toString().split('-') : null;\n            range = parts ? { start: parseFloat(parts[0]), end: parseFloat(parts[1]) } : null;\n        }\n\n        callback = !callback ? onLoaded : callback;\n        let isoFile = null;\n        let sidx = null;\n        const hasRange = !!range;\n        const baseUrl = representation ? baseURLController.resolve(representation.path) : null;\n        const info = {\n            init: false,\n            url: baseUrl ? baseUrl.url : undefined,\n            range: hasRange ? range : { start: 0, end: 1500 },\n            searching: !hasRange,\n            bytesLoaded: loadingInfo ? loadingInfo.bytesLoaded : 0,\n            bytesToLoad: 1500,\n            mediaType: mediaType,\n            representation\n        };\n\n        const request = getFragmentRequest(info);\n\n        const onload = function (response) {\n            const extraBytes = info.bytesToLoad;\n            const loadedLength = response.byteLength;\n\n            info.bytesLoaded = info.range.end - info.range.start;\n            isoFile = boxParser.parse(response);\n            sidx = isoFile.getBox('sidx');\n\n            if (!sidx || !sidx.isComplete) {\n                if (sidx) {\n                    info.range.start = sidx.offset || info.range.start;\n                    info.range.end = info.range.start + (sidx.size || extraBytes);\n                } else if (loadedLength < info.bytesLoaded) {\n                    // if we have reached a search limit or if we have reached the end of the file we have to stop trying to find sidx\n                    callback(null, representation, resolve);\n                    return;\n                } else {\n                    const lastBox = isoFile.getLastBox();\n\n                    if (lastBox && lastBox.size) {\n                        info.range.start = lastBox.offset + lastBox.size;\n                        info.range.end = info.range.start + extraBytes;\n                    } else {\n                        info.range.end += extraBytes;\n                    }\n                }\n                _loadSegmentsRecursively(representation, mediaType, info.range, resolve, null, info);\n            } else {\n                const ref = sidx.references;\n                let loadMultiSidx,\n                    segments;\n\n                if (ref !== null && ref !== undefined && ref.length > 0) {\n                    loadMultiSidx = (ref[0].reference_type === 1);\n                }\n\n                if (loadMultiSidx) {\n                    logger.debug('Initiate multiple SIDX load.');\n                    info.range.end = info.range.start + sidx.size;\n\n                    let j, len, ss, se, r;\n                    let segs = [];\n                    let count = 0;\n                    let offset = (sidx.offset || info.range.start) + sidx.size;\n                    const tmpCallback = function (result) {\n                        if (result) {\n                            segs = segs.concat(result);\n                            count++;\n\n                            if (count >= len) {\n                                // http requests can be processed in a wrong order, so, we have to reorder segments with an ascending start Time order\n                                segs.sort(function (a, b) {\n                                    return a.startTime - b.startTime < 0 ? -1 : 0;\n                                });\n                                callback(segs, representation, resolve);\n                            }\n                        } else {\n                            callback(null, representation, resolve);\n                        }\n                    };\n\n                    for (j = 0, len = ref.length; j < len; j++) {\n                        ss = offset;\n                        se = offset + ref[j].referenced_size - 1;\n                        offset = offset + ref[j].referenced_size;\n                        r = { start: ss, end: se };\n                        _loadSegmentsRecursively(representation, mediaType, r, resolve, tmpCallback, info);\n                    }\n\n                } else {\n                    logger.debug('Parsing segments from SIDX. representation ' + mediaType + ' - id: ' + representation.id + ' for range : ' + info.range.start + ' - ' + info.range.end);\n                    segments = getSegmentsForSidx(sidx, info);\n                    callback(segments, representation, resolve);\n                }\n            }\n        };\n\n        const onerror = function () {\n            callback(null, representation, resolve);\n        };\n\n        urlLoader.load({ request: request, success: onload, error: onerror });\n        logger.debug(`Perform SIDX load for type ${mediaType} : ${info.url} with range ${info.range.start} - ${info.range.end}`);\n    }\n\n    function onLoaded(segments, representation, resolve) {\n        resolve({\n            segments: segments,\n            representation: representation,\n            error: segments ? undefined : new DashJSError(errors.SEGMENT_BASE_LOADER_ERROR_CODE, errors.SEGMENT_BASE_LOADER_ERROR_MESSAGE)\n        });\n    }\n\n    function reset() {\n        if (urlLoader) {\n            urlLoader.abort();\n            urlLoader = null;\n        }\n    }\n\n    function getSegmentsForSidx(sidx, info) {\n        const refs = sidx.references;\n        const len = refs.length;\n        const timescale = sidx.timescale;\n        let time = sidx.earliest_presentation_time;\n        let start = info.range.start + sidx.offset + sidx.first_offset + sidx.size;\n        const segments = [];\n        let segment,\n            end,\n            duration,\n            size;\n\n        for (let i = 0; i < len; i++) {\n            duration = refs[i].subsegment_duration;\n            size = refs[i].referenced_size;\n\n            segment = new Segment();\n            // note that we don't explicitly set segment.media as this will be\n            // computed when all BaseURLs are resolved later\n            segment.duration = duration;\n            segment.startTime = time;\n            segment.timescale = timescale;\n            end = start + size - 1;\n            segment.mediaRange = start + '-' + end;\n            segments.push(segment);\n            time += duration;\n            start += size;\n        }\n\n        return segments;\n    }\n\n    function getFragmentRequest(info) {\n        if (!info.url) {\n            return;\n        }\n        const request = new FragmentRequest();\n        request.setInfo(info);\n        return request;\n    }\n\n    instance = {\n        setConfig,\n        initialize,\n        loadInitialization,\n        loadSegments,\n        reset\n    };\n\n    setup();\n\n    return instance;\n}\n\nSegmentBaseLoader.__dashjs_factory_name = 'SegmentBaseLoader';\nexport default FactoryMaker.getSingletonFactory(SegmentBaseLoader);\n","import FactoryMaker from '../../core/FactoryMaker.js';\n\n/**\n * Creates an instance of an EBMLParser class which implements a large subset\n * of the functionality required to parse Matroska EBML\n *\n * @param {Object} config object with data member which is the buffer to parse\n * @ignore\n */\nfunction EBMLParser(config) {\n\n    config = config || {};\n    let instance;\n\n    let data = new DataView(config.data);\n    let pos = 0;\n\n    function getPos() {\n        return pos;\n    }\n\n    function setPos(value) {\n        pos = value;\n    }\n\n    /**\n     * Consumes an EBML tag from the data stream.\n     *\n     * @param {Object} tag to parse, A tag is an object with at least a {number} tag and\n     * {boolean} required flag.\n     * @param {boolean} test whether or not the function should throw if a required\n     * tag is not found\n     * @return {boolean} whether or not the tag was found\n     * @throws will throw an exception if a required tag is not found and test\n     * param is false or undefined, or if the stream is malformed.\n     * @memberof EBMLParser\n     */\n    function consumeTag(tag, test) {\n        let found = true;\n        let bytesConsumed = 0;\n        let p1,\n            p2;\n\n        if (test === undefined) {\n            test = false;\n        }\n\n        if (tag.tag > 0xFFFFFF) {\n            if (data.getUint32(pos) !== tag.tag) {\n                found = false;\n            }\n            bytesConsumed = 4;\n        } else if (tag.tag > 0xFFFF) {\n            // 3 bytes\n            p1 = data.getUint16(pos);\n            p2 = data.getUint8(pos + 2);\n\n            // shift p1 over a byte and add p2\n            if (p1 * 256 + p2 !== tag.tag) {\n                found = false;\n            }\n            bytesConsumed = 3;\n        } else if (tag.tag > 0xFF) {\n            if (data.getUint16(pos) !== tag.tag) {\n                found = false;\n            }\n            bytesConsumed = 2;\n        } else {\n            if (data.getUint8(pos) !== tag.tag) {\n                found = false;\n            }\n            bytesConsumed = 1;\n        }\n\n        if (!found && tag.required && !test) {\n            throw new Error('required tag not found');\n        }\n\n        if (found) {\n            pos += bytesConsumed;\n        }\n\n        return found;\n    }\n\n    /**\n     * Consumes an EBML tag from the data stream.   If the tag is found then this\n     * function will also remove the size field which follows the tag from the\n     * data stream.\n     *\n     * @param {Object} tag to parse, A tag is an object with at least a {number} tag and\n     * {boolean} required flag.\n     * @param {boolean} test whether or not the function should throw if a required\n     * tag is not found\n     * @return {boolean} whether or not the tag was found\n     * @throws will throw an exception if a required tag is not found and test\n     * param is false or undefined, or if the stream is malformedata.\n     * @memberof EBMLParser\n     */\n    function consumeTagAndSize(tag, test) {\n        let found = consumeTag(tag, test);\n\n        if (found) {\n            getMatroskaCodedNum();\n        }\n\n        return found;\n    }\n\n    /**\n     * Consumes an EBML tag from the data stream.   If the tag is found then this\n     * function will also remove the size field which follows the tag from the\n     * data stream.  It will use the value of the size field to parse a binary\n     * field, using a parser defined in the tag itself\n     *\n     * @param {Object} tag to parse, A tag is an object with at least a {number} tag,\n     * {boolean} required flag, and a parse function which takes a size parameter\n     * @return {boolean} whether or not the tag was found\n     * @throws will throw an exception if a required tag is not found,\n     * or if the stream is malformed\n     * @memberof EBMLParser\n     */\n    function parseTag(tag) {\n        let size;\n\n        consumeTag(tag);\n        size = getMatroskaCodedNum();\n        return instance[tag.parse](size);\n    }\n\n    /**\n     * Consumes an EBML tag from the data stream.   If the tag is found then this\n     * function will also remove the size field which follows the tag from the\n     * data stream.  It will use the value of the size field to skip over the\n     * entire section of EBML encapsulated by the tag.\n     *\n     * @param {Object} tag to parse, A tag is an object with at least a {number} tag, and\n     * {boolean} required flag\n     * @param {boolean} test a flag to indicate if an exception should be thrown\n     * if a required tag is not found\n     * @return {boolean} whether or not the tag was found\n     * @throws will throw an exception if a required tag is not found and test is\n     * false or undefined or if the stream is malformed\n     * @memberof EBMLParser\n     */\n    function skipOverElement(tag, test) {\n        let found = consumeTag(tag, test);\n        let headerSize;\n\n        if (found) {\n            headerSize = getMatroskaCodedNum();\n            pos += headerSize;\n        }\n\n        return found;\n    }\n\n    /**\n     * Returns and consumes a number encoded according to the Matroska EBML\n     * specification from the bitstream.\n     *\n     * @param {boolean} retainMSB whether or not to retain the Most Significant Bit (the\n     * first 1). this is usually true when reading Tag IDs.\n     * @return {number} the decoded number\n     * @throws will throw an exception if the bit stream is malformed or there is\n     * not enough data\n     * @memberof EBMLParser\n     */\n    function getMatroskaCodedNum(retainMSB) {\n        let bytesUsed = 1;\n        let mask = 0x80;\n        let maxBytes = 8;\n        let extraBytes = -1;\n        let num = 0;\n        let ch = data.getUint8(pos);\n        let i = 0;\n\n        for (i = 0; i < maxBytes; i += 1) {\n            if ((ch & mask) === mask) {\n                num = (retainMSB === undefined) ? ch & ~mask : ch;\n                extraBytes = i;\n                break;\n            }\n            mask >>= 1;\n        }\n\n        for (i = 0; i < extraBytes; i += 1, bytesUsed += 1) {\n            num = (num << 8) | (0xff & data.getUint8(pos + bytesUsed));\n        }\n\n        pos += bytesUsed;\n\n        return num;\n    }\n\n    /**\n     * Returns and consumes a float from the bitstream.\n     *\n     * @param {number} size 4 or 8 byte floats are supported\n     * @return {number} the decoded number\n     * @throws will throw an exception if the bit stream is malformed or there is\n     * not enough data\n     * @memberof EBMLParser\n     */\n    function getMatroskaFloat(size) {\n        let outFloat;\n\n        switch (size) {\n            case 4:\n                outFloat = data.getFloat32(pos);\n                pos += 4;\n                break;\n            case 8:\n                outFloat = data.getFloat64(pos);\n                pos += 8;\n                break;\n        }\n        return outFloat;\n    }\n\n    /**\n     * Consumes and returns an unsigned int from the bitstream.\n     *\n     * @param {number} size 1 to 8 bytes\n     * @return {number} the decoded number\n     * @throws will throw an exception if the bit stream is malformed, there is\n     * not enough data, or if the value exceeds the maximum safe integer value\n     * @memberof EBMLParser\n     */\n    function getMatroskaUint(size) {\n        if (size > 4) {\n            return getMatroskaUintLarge(size);\n        }\n\n        let val = 0;\n\n        for (let i = 0; i < size; i += 1) {\n            val <<= 8;\n            val |= data.getUint8(pos + i) & 0xff;\n        }\n\n        pos += size;\n        return val >>> 0;\n    }\n\n    /**\n     * Consumes and returns an unsigned int from the bitstream.\n     *\n     * @param {number} size 1 to 8 bytes\n     * @return {number} the decoded number\n     * @throws will throw an exception if the bit stream is malformed, there is\n     * not enough data, or if the value exceeds the maximum safe integer value\n     */\n    function getMatroskaUintLarge(size) {\n        const limit = Math.floor(Number.MAX_SAFE_INTEGER / 256);\n        let val = 0;\n\n        for (let i = 0; i < size; i += 1) {\n            if (val > limit) {\n                throw new Error('Value exceeds safe integer limit');\n            }\n            val *= 256;\n            const n = data.getUint8(pos + i);\n            if (val > Number.MAX_SAFE_INTEGER - n) {\n                throw new Error('Value exceeds safe integer limit');\n            }\n            val += n;\n        }\n\n        pos += size;\n        return val;\n    }\n\n    /**\n     * Tests whether there is more data in the bitstream for parsing\n     *\n     * @return {boolean} whether there is more data to parse\n     * @memberof EBMLParser\n     */\n    function moreData() {\n        return pos < data.byteLength;\n    }\n\n    instance = {\n        getPos: getPos,\n        setPos: setPos,\n        consumeTag: consumeTag,\n        consumeTagAndSize: consumeTagAndSize,\n        parseTag: parseTag,\n        skipOverElement: skipOverElement,\n        getMatroskaCodedNum: getMatroskaCodedNum,\n        getMatroskaFloat: getMatroskaFloat,\n        getMatroskaUint: getMatroskaUint,\n        moreData: moreData\n    };\n\n    return instance;\n}\n\nEBMLParser.__dashjs_factory_name = 'EBMLParser';\nexport default FactoryMaker.getClassFactory(EBMLParser);\n","import EBMLParser from '../streaming/utils/EBMLParser.js';\nimport Constants from '../streaming/constants/Constants.js';\nimport FactoryMaker from '../core/FactoryMaker.js';\nimport Segment from './vo/Segment.js';\nimport FragmentRequest from '../streaming/vo/FragmentRequest.js';\nimport URLLoader from '../streaming/net/URLLoader.js';\nimport DashJSError from '../streaming/vo/DashJSError.js';\n\nfunction WebmSegmentBaseLoader() {\n\n    const context = this.context;\n\n    let instance,\n        logger,\n        WebM,\n        errHandler,\n        dashMetrics,\n        mediaPlayerModel,\n        urlLoader,\n        errors,\n        baseURLController;\n\n    function setup() {\n        WebM = {\n            EBML: {\n                tag: 0x1A45DFA3,\n                required: true\n            },\n            Segment: {\n                tag: 0x18538067,\n                required: true,\n                SeekHead: {\n                    tag: 0x114D9B74,\n                    required: true\n                },\n                Info: {\n                    tag: 0x1549A966,\n                    required: true,\n                    TimecodeScale: {\n                        tag: 0x2AD7B1,\n                        required: true,\n                        parse: 'getMatroskaUint'\n                    },\n                    Duration: {\n                        tag: 0x4489,\n                        required: true,\n                        parse: 'getMatroskaFloat'\n                    }\n                },\n                Tracks: {\n                    tag: 0x1654AE6B,\n                    required: true\n                },\n                Cues: {\n                    tag: 0x1C53BB6B,\n                    required: true,\n                    CuePoint: {\n                        tag: 0xBB,\n                        required: true,\n                        CueTime: {\n                            tag: 0xB3,\n                            required: true,\n                            parse: 'getMatroskaUint'\n                        },\n                        CueTrackPositions: {\n                            tag: 0xB7,\n                            required: true,\n                            CueTrack: {\n                                tag: 0xF7,\n                                required: true,\n                                parse: 'getMatroskaUint'\n                            },\n                            CueClusterPosition: {\n                                tag: 0xF1,\n                                required: true,\n                                parse: 'getMatroskaUint'\n                            }\n                        }\n                    }\n                }\n            },\n            Void: {\n                tag: 0xEC,\n                required: true\n            }\n        };\n    }\n\n    function initialize() {\n        urlLoader = URLLoader(context).create({\n            errHandler: errHandler,\n            dashMetrics: dashMetrics,\n            mediaPlayerModel: mediaPlayerModel,\n            errors: errors\n        });\n    }\n\n    function setConfig(config) {\n        if (!config.baseURLController || !config.dashMetrics || !config.mediaPlayerModel || !config.errHandler) {\n            throw new Error(Constants.MISSING_CONFIG_ERROR);\n        }\n        baseURLController = config.baseURLController;\n        dashMetrics = config.dashMetrics;\n        mediaPlayerModel = config.mediaPlayerModel;\n        errHandler = config.errHandler;\n        errors = config.errors;\n        logger = config.debug.getLogger(instance);\n    }\n\n    function parseCues(ab) {\n        let cues = [];\n        let ebmlParser = EBMLParser(context).create({\n            data: ab\n        });\n        let cue,\n            cueTrack;\n\n        ebmlParser.consumeTagAndSize(WebM.Segment.Cues);\n\n        while (ebmlParser.moreData() &&\n        ebmlParser.consumeTagAndSize(WebM.Segment.Cues.CuePoint, true)) {\n            cue = {};\n\n            cue.CueTime = ebmlParser.parseTag(WebM.Segment.Cues.CuePoint.CueTime);\n\n            cue.CueTracks = [];\n            while (ebmlParser.moreData() &&\n            ebmlParser.consumeTag(WebM.Segment.Cues.CuePoint.CueTrackPositions, true)) {\n                const cueTrackPositionSize = ebmlParser.getMatroskaCodedNum();\n                const startPos = ebmlParser.getPos();\n                cueTrack = {};\n\n                cueTrack.Track = ebmlParser.parseTag(WebM.Segment.Cues.CuePoint.CueTrackPositions.CueTrack);\n                if (cueTrack.Track === 0) {\n                    throw new Error('Cue track cannot be 0');\n                }\n\n                cueTrack.ClusterPosition =\n                    ebmlParser.parseTag(WebM.Segment.Cues.CuePoint.CueTrackPositions.CueClusterPosition);\n\n                cue.CueTracks.push(cueTrack);\n\n                // we're not interested any other elements - skip remaining bytes\n                ebmlParser.setPos(startPos + cueTrackPositionSize);\n            }\n\n            if (cue.CueTracks.length === 0) {\n                throw new Error('Mandatory cuetrack not found');\n            }\n            cues.push(cue);\n        }\n\n        if (cues.length === 0) {\n            throw new Error('mandatory cuepoint not found');\n        }\n        return cues;\n    }\n\n    function parseSegments(data, segmentStart, segmentEnd, segmentDuration) {\n        let duration,\n            parsed,\n            segments,\n            segment,\n            i,\n            len,\n            start,\n            end;\n\n        parsed = parseCues(data);\n        segments = [];\n\n        // we are assuming one cue track per cue point\n        // both duration and media range require the i + 1 segment\n        // the final segment has to use global segment parameters\n        for (i = 0, len = parsed.length; i < len; i += 1) {\n            segment = new Segment();\n            duration = 0;\n\n            if (i < parsed.length - 1) {\n                duration = parsed[i + 1].CueTime - parsed[i].CueTime;\n            } else {\n                duration = segmentDuration - parsed[i].CueTime;\n            }\n\n            // note that we don't explicitly set segment.media as this will be\n            // computed when all BaseURLs are resolved later\n            segment.duration = duration;\n            segment.startTime = parsed[i].CueTime;\n            segment.timescale = 1000; // hardcoded for ms\n            start = parsed[i].CueTracks[0].ClusterPosition + segmentStart;\n\n            if (i < parsed.length - 1) {\n                end = parsed[i + 1].CueTracks[0].ClusterPosition + segmentStart - 1;\n            } else {\n                end = segmentEnd - 1;\n            }\n\n            segment.mediaRange = start + '-' + end;\n            segments.push(segment);\n        }\n\n        logger.debug('Parsed cues: ' + segments.length + ' cues.');\n\n        return segments;\n    }\n\n    function parseEbmlHeader(data, media, theRange, callback) {\n        if (!data || data.byteLength === 0) {\n            callback(null);\n            return;\n        }\n        let ebmlParser = EBMLParser(context).create({\n            data: data\n        });\n        let duration,\n            segments,\n            segmentEnd,\n            segmentStart;\n        let parts = theRange ? theRange.split('-') : null;\n        let request = null;\n        let info = {\n            url: media,\n            range: {\n                start: parts ? parseFloat(parts[0]) : null,\n                end: parts ? parseFloat(parts[1]) : null\n            },\n            request: request\n        };\n\n        logger.debug('Parse EBML header: ' + info.url);\n\n        // skip over the header itself\n        ebmlParser.skipOverElement(WebM.EBML);\n        ebmlParser.consumeTag(WebM.Segment);\n\n        // segments start here\n        segmentEnd = ebmlParser.getMatroskaCodedNum();\n        segmentEnd += ebmlParser.getPos();\n        segmentStart = ebmlParser.getPos();\n\n        // skip over any top level elements to get to the segment info\n        while (ebmlParser.moreData() &&\n        !ebmlParser.consumeTagAndSize(WebM.Segment.Info, true)) {\n            if (!(ebmlParser.skipOverElement(WebM.Segment.SeekHead, true) ||\n                ebmlParser.skipOverElement(WebM.Segment.Tracks, true) ||\n                ebmlParser.skipOverElement(WebM.Segment.Cues, true) ||\n                ebmlParser.skipOverElement(WebM.Void, true))) {\n                throw new Error('no valid top level element found');\n            }\n        }\n\n        // we only need one thing in segment info, duration\n        while (duration === undefined) {\n            let infoTag = ebmlParser.getMatroskaCodedNum(true);\n            let infoElementSize = ebmlParser.getMatroskaCodedNum();\n\n            switch (infoTag) {\n                case WebM.Segment.Info.Duration.tag:\n                    duration = ebmlParser[WebM.Segment.Info.Duration.parse](infoElementSize);\n                    break;\n                default:\n                    ebmlParser.setPos(ebmlParser.getPos() + infoElementSize);\n                    break;\n            }\n        }\n\n        // once we have what we need from segment info, we jump right to the\n        // cues\n\n        request = _getFragmentRequest(info);\n\n        const onload = function (response) {\n            segments = parseSegments(response, segmentStart, segmentEnd, duration);\n            callback(segments);\n        };\n\n        const onloadend = function () {\n            logger.error('Download Error: Cues ' + info.url);\n            callback(null);\n        };\n\n        urlLoader.load({\n            request: request,\n            success: onload,\n            error: onloadend\n        });\n\n        logger.debug('Perform cues load: ' + info.url + ' bytes=' + info.range.start + '-' + info.range.end);\n    }\n\n    function loadInitialization(representation, mediaType) {\n        return new Promise((resolve) => {\n            let request = null;\n            let baseUrl = representation ? baseURLController.resolve(representation.path) : null;\n            let initRange = representation ? representation.range.split('-') : null;\n            let info = {\n                range: {\n                    start: initRange ? parseFloat(initRange[0]) : null,\n                    end: initRange ? parseFloat(initRange[1]) : null\n                },\n                request: request,\n                url: baseUrl ? baseUrl.url : undefined,\n                init: true,\n                mediaType: mediaType\n            };\n\n            logger.info('Start loading initialization.');\n\n            request = _getFragmentRequest(info);\n\n            const onload = function () {\n                // note that we don't explicitly set rep.initialization as this\n                // will be computed when all BaseURLs are resolved later\n                resolve(representation);\n            };\n\n            const onloadend = function () {\n                resolve(representation);\n            };\n\n            urlLoader.load({\n                request: request,\n                success: onload,\n                error: onloadend\n            });\n\n            logger.debug('Perform init load: ' + info.url);\n        });\n    }\n\n    function loadSegments(representation, mediaType, theRange) {\n        return new Promise((resolve) => {\n            let request = null;\n            let baseUrl = representation ? baseURLController.resolve(representation.path) : null;\n            let media = baseUrl ? baseUrl.url : undefined;\n            let bytesToLoad = 8192;\n            let info = {\n                bytesLoaded: 0,\n                bytesToLoad: bytesToLoad,\n                range: {\n                    start: 0,\n                    end: bytesToLoad\n                },\n                request: request,\n                url: media,\n                init: false,\n                mediaType: mediaType,\n                representation\n            };\n\n            request = _getFragmentRequest(info);\n\n            // first load the header, but preserve the manifest range so we can\n            // load the cues after parsing the header\n            // NOTE: we expect segment info to appear in the first 8192 bytes\n            logger.debug('Parsing ebml header');\n\n            const onload = function (response) {\n                parseEbmlHeader(response, media, theRange, function (segments) {\n                    resolve({\n                        segments: segments,\n                        representation: representation,\n                        error: segments ? undefined : new DashJSError(errors.SEGMENT_BASE_LOADER_ERROR_CODE, errors.SEGMENT_BASE_LOADER_ERROR_MESSAGE)\n                    });\n                });\n            };\n\n            const onloadend = function () {\n                resolve({\n                    representation: representation,\n                    error: new DashJSError(errors.SEGMENT_BASE_LOADER_ERROR_CODE, errors.SEGMENT_BASE_LOADER_ERROR_MESSAGE)\n                });\n            };\n\n            urlLoader.load({\n                request: request,\n                success: onload,\n                error: onloadend\n            });\n        });\n\n    }\n\n\n    function _getFragmentRequest(info) {\n        const request = new FragmentRequest();\n        request.setInfo(info);\n        return request;\n    }\n\n    function reset() {\n        if (urlLoader) {\n            urlLoader.abort();\n            urlLoader = null;\n        }\n    }\n\n    instance = {\n        setConfig,\n        initialize,\n        loadInitialization,\n        loadSegments,\n        reset\n    };\n\n    setup();\n\n    return instance;\n}\n\nWebmSegmentBaseLoader.__dashjs_factory_name = 'WebmSegmentBaseLoader';\nexport default FactoryMaker.getSingletonFactory(WebmSegmentBaseLoader);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport FactoryMaker from '../../core/FactoryMaker.js';\n\nimport SegmentBaseLoader from '../SegmentBaseLoader.js';\nimport WebmSegmentBaseLoader from '../WebmSegmentBaseLoader.js';\n\nfunction SegmentBaseController(config) {\n    config = config || {};\n\n    const context = this.context;\n    const eventBus = config.eventBus;\n    const events = config.events;\n    const dashMetrics = config.dashMetrics;\n    const mediaPlayerModel = config.mediaPlayerModel;\n    const errHandler = config.errHandler;\n    const baseURLController = config.baseURLController;\n    const debug = config.debug;\n    const boxParser = config.boxParser;\n    const errors = config.errors;\n\n    let instance,\n        segmentBaseLoader,\n        webmSegmentBaseLoader;\n\n    function setup() {\n        segmentBaseLoader = SegmentBaseLoader(context).getInstance();\n        webmSegmentBaseLoader = WebmSegmentBaseLoader(context).getInstance();\n\n        segmentBaseLoader.setConfig({\n            baseURLController: baseURLController,\n            dashMetrics: dashMetrics,\n            mediaPlayerModel: mediaPlayerModel,\n            errHandler: errHandler,\n            eventBus: eventBus,\n            events: events,\n            errors: errors,\n            debug: debug,\n            boxParser: boxParser\n        });\n\n        webmSegmentBaseLoader.setConfig({\n            baseURLController: baseURLController,\n            dashMetrics: dashMetrics,\n            mediaPlayerModel: mediaPlayerModel,\n            errHandler: errHandler,\n            eventBus: eventBus,\n            events: events,\n            errors: errors,\n            debug: debug\n        });\n    }\n\n    function isWebM(mimeType) {\n        const type = mimeType ? mimeType.split('/')[1] : '';\n        return 'webm' === type.toLowerCase();\n    }\n\n    function initialize() {\n        segmentBaseLoader.initialize();\n        webmSegmentBaseLoader.initialize();\n    }\n\n    function getSegmentBaseInitSegment(data) {\n        if (isWebM(data.representation.mimeType)) {\n            return webmSegmentBaseLoader.loadInitialization(data.representation, data.mediaType);\n        } else {\n            return segmentBaseLoader.loadInitialization(data.representation, data.mediaType);\n        }\n    }\n\n    function getSegmentList(e) {\n        if (isWebM(e.mimeType)) {\n            return webmSegmentBaseLoader.loadSegments(e.representation, e.mediaType, e.representation ? e.representation.indexRange : null);\n        } else {\n            return segmentBaseLoader.loadSegments(e.representation, e.mediaType, e.representation ? e.representation.indexRange : null);\n        }\n    }\n\n    function reset() {\n        segmentBaseLoader.reset();\n        webmSegmentBaseLoader.reset();\n    }\n\n\n    instance = {\n        initialize,\n        getSegmentBaseInitSegment,\n        getSegmentList,\n        reset\n    };\n\n    setup();\n\n    return instance;\n}\n\nSegmentBaseController.__dashjs_factory_name = 'SegmentBaseController';\nconst factory = FactoryMaker.getSingletonFactory(SegmentBaseController);\nexport default factory;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nclass MediaInfo {\n    constructor() {\n        this.accessibility = null;\n        this.adaptationSetSwitchingCompatibleIds = [];\n        this.audioChannelConfiguration = null;\n        this.bitrateList = null;\n        this.codec = null;\n        this.contentProtection = null;\n        this.essentialProperties = [];\n        this.id = null;\n        this.index = null;\n        this.isEmbedded = null;\n        this.isFragmented = null;\n        this.isText = false;\n        this.labels = null;\n        this.lang = null;\n        this.mimeType = null;\n        this.normalizedKeyIds = new Set();\n        this.representationCount = 0;\n        this.roles = null;\n        this.segmentAlignment = false;\n        this.selectionPriority = 1;\n        this.streamInfo = null;\n        this.subSegmentAlignment = false;\n        this.supplementalProperties = [];\n        this.type = null;\n        this.viewpoint = null;\n    }\n\n}\n\nexport default MediaInfo;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nclass StreamInfo {\n    constructor() {\n        this.id = null;\n        this.index = null;\n        this.start = NaN;\n        this.duration = NaN;\n        this.manifestInfo = null;\n        this.isLast = true;\n        this.isEncrypted = false;\n    }\n}\n\nexport default StreamInfo;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nclass ManifestInfo {\n    constructor() {\n        this.dvrWindowSize = NaN;\n        this.loadedTime = null;\n        this.availableFrom = null;\n        this.minBufferTime = NaN;\n        this.duration = NaN;\n        this.isDynamic = false;\n        this.maxFragmentDuration = null;\n        this.serviceDescriptions = [];\n        this.protocol = null;\n    }\n}\n\nexport default ManifestInfo;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nclass SimpleXPath {\n    constructor(selector) {\n        // establish validation of the path, to catch unsupported cases\n        this.valid = selector[0] == '/'; // first check, we only support absolute addressing\n\n        // establish parsed path, example:\n        // /MPD/Period[@id=\"foobar\"]/AdaptationSet[@id=\"2\"]/SegmentTemplate/SegmentTimeline\n        this.path = selector.split('/')\n            .filter((component) => component.length !== 0) // remove excess empty components\n            .map((component) => {\n                let parsed = {\n                    name: component\n                };\n\n                let qualifierPoint = component.indexOf('[');\n                if (qualifierPoint != -1) {\n                    parsed.name = component.substring(0, qualifierPoint);\n\n                    let qualifier = component.substring(qualifierPoint + 1, component.length - 1);\n\n                    // quick sanity check are there additional qualifiers making this invalid\n                    this.valid = this.valid && qualifier.indexOf('[') == -1;\n\n                    let equalityPoint = qualifier.indexOf('=');\n                    if (equalityPoint != -1) {\n                        parsed.attribute = {\n                            name: qualifier.substring(1, equalityPoint), // skip the @\n                            value: qualifier.substring(equalityPoint + 1)\n                        };\n\n                        // check for single and double quoted attribute values\n                        if (['\\'', '\"'].indexOf(parsed.attribute.value[0]) != -1) {\n                            parsed.attribute.value = parsed.attribute.value.substring(1, parsed.attribute.value.length - 1);\n                        }\n                    } else {\n                        // positional access in xpath is 1-based index\n                        // internal processes will assume 0-based so we normalize that here\n                        parsed.position = parseInt(qualifier, 10) - 1;\n                    }\n                }\n\n                return parsed;\n            });\n    }\n\n    isValid() {\n        return this.valid;\n    }\n\n    findsElement() {\n        return !this.findsAttribute();\n    }\n\n    findsAttribute() {\n        return this.path[this.path.length - 1].name.startsWith('@');\n    }\n\n    findsTextReplace() {\n        return this.path[this.path.length - 1].name === 'text()';\n    }\n\n    getMpdTarget(root, isSiblingOperation) {\n        let parent = null;\n        let leaf = root;\n        // assume root is MPD and we start at next level match\n        let level = 1;\n        let name = 'MPD';\n\n        while ( level < this.path.length && leaf !== null) {\n            // set parent to current\n            parent = leaf;\n\n            // select next leaf based on component\n            let component = this.path[level];\n            name = component.name;\n\n            // stop one early if this is the last element and an attribute\n            if (level !== this.path.length - 1 || (!name.startsWith('@') && name !== 'text()')) {\n                let children = parent[name] || [];\n                if (children.length === 0 && parent[name]) {\n                    children.push(parent[name]);\n                }\n\n                if (component.position) {\n                    leaf = children[component.position] || null;\n                } else if (component.attribute) {\n                    let attr = component.attribute;\n                    leaf = children.filter((elm) => elm[attr.name] == attr.value)[0] || null;\n                } else {\n                    // default case, select element itself or first element if as array\n                    leaf = Array.isArray(children) ? children[0] : children;\n                }\n            }\n\n            level++;\n        }\n\n        if (leaf === null) {\n            // given path not found in root\n            return null;\n        }\n\n        // attributes the target is the leaf node, the name is the attribute\n        if (name.startsWith('@')) {\n            return {\n                name: name.substring(1),\n                leaf: leaf,\n                target: leaf\n            };\n        }\n\n        // for replacing a text node the target is the leaf node, the name is __text\n        else if (name === 'text()') {\n            return {\n                name: '__text',\n                leaf: leaf,\n                target: leaf\n            };\n        }\n\n        // otherwise we target the parent for sibling operations and leaf for child operations\n        return {\n            name: name,\n            leaf: leaf,\n            target: isSiblingOperation ? parent : leaf\n        };\n    }\n}\n\nexport default SimpleXPath;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nclass PatchOperation {\n    constructor(action, xpath, value) {\n        this.action = action;\n        this.xpath = xpath;\n        this.value = value;\n        this.position = null;\n    }\n\n    getMpdTarget(root) {\n        let isSiblingOperation = this.action === 'remove' || this.action === 'replace' || this.position === 'before' || this.position === 'after';\n        return this.xpath.getMpdTarget(root, isSiblingOperation);\n    }\n}\n\nexport default PatchOperation;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport DashConstants from '../constants/DashConstants.js';\nimport FactoryMaker from '../../core/FactoryMaker.js';\nimport Debug from '../../core/Debug.js';\nimport SimpleXPath from '../vo/SimpleXPath.js';\nimport PatchOperation from '../vo/PatchOperation.js';\n\nfunction PatchManifestModel() {\n    let instance,\n        logger;\n\n    const context = this.context;\n\n    function setup() {\n        logger = Debug(context).getInstance().getLogger(instance);\n    }\n\n    function getIsPatch(patch) {\n        return patch && patch.hasOwnProperty(DashConstants.ORIGINAL_MPD_ID) || false;\n    }\n\n    function getPublishTime(patch) {\n        return patch && patch.hasOwnProperty(DashConstants.PUBLISH_TIME) ? new Date(patch[DashConstants.PUBLISH_TIME]) : null;\n    }\n\n    function getOriginalPublishTime(patch) {\n        return patch && patch.hasOwnProperty(DashConstants.ORIGINAL_PUBLISH_TIME) ? new Date(patch[DashConstants.ORIGINAL_PUBLISH_TIME]) : null;\n    }\n\n    function getMpdId(patch) {\n        return (patch && patch[DashConstants.ORIGINAL_MPD_ID]) || null;\n    }\n\n    function getPatchOperations(patch) {\n        if (!patch) {\n            return [];\n        }\n\n        // Go through the patch operations in order and parse their actions out for usage\n        return (patch.__children || []).map((node) => {\n            const action = node.tagName;\n\n            // we only look add add/remove/replace actions\n            if (action !== 'add' && action !== 'remove' && action !== 'replace') {\n                logger.warn(`Ignoring node of invalid action: ${action}`);\n                return null;\n            }\n\n            let selector = node.sel;\n\n            // add action can have special targeting via the 'type' attribute\n            if (action === 'add' && node.type) {\n                if (!node.type.startsWith('@')) {\n                    logger.warn(`Ignoring add action for prefixed namespace declaration: ${node.type}=${node.__text}`);\n                    return null;\n                }\n\n                // for our purposes adding/replacing attribute are equivalent and we can normalize\n                // our processing logic by appending the attribute to the selector path\n                selector = `${selector}/${node.type}`;\n            }\n\n            let xpath = new SimpleXPath(selector);\n            if (!xpath.isValid()) {\n                logger.warn(`Ignoring action with invalid selector: ${action} - ${selector}`);\n                return null;\n            }\n\n            let value = null;\n            if (xpath.findsAttribute() || xpath.findsTextReplace()) {\n                value = node.__text || '';\n            } else if (action !== 'remove') {\n                value = node.__children.reduce((groups, child) => {\n                    let key = child.tagName;\n                    // we also ignore\n                    if (key !== '#text') {\n                        groups[key] = groups[key] || [];\n                        groups[key].push(child);\n                    }\n                    return groups;\n                }, {});\n            }\n\n            let operation = new PatchOperation(action, xpath, value);\n\n            if (action === 'add') {\n                operation.position = node.pos;\n            }\n\n            return operation;\n        }).filter((operation) => !!operation);\n    }\n\n    instance = {\n        getIsPatch,\n        getMpdId,\n        getOriginalPublishTime,\n        getPatchOperations,\n        getPublishTime\n    };\n\n    setup();\n\n    return instance;\n}\n\nPatchManifestModel.__dashjs_factory_name = 'PatchManifestModel';\nexport default FactoryMaker.getSingletonFactory(PatchManifestModel);\n","// http://stackoverflow.com/questions/8936984/uint8array-to-string-in-javascript/22373197\n// http://www.onicos.com/staff/iz/amuse/javascript/expert/utf.txt\n/* utf.js - UTF-8 <=> UTF-16 convertion\n *\n * Copyright (C) 1999 Masanao Izumo <iz@onicos.co.jp>\n * Version: 1.0\n * LastModified: Dec 25 1999\n * This library is free.  You can redistribute it and/or modify it.\n */\n\n/**\n * Converts a UTF-8 array to a string.\n *\n * @param array - The UTF-8 array to convert\n *\n * @returns The string\n *\n * @group Utils\n *\n * @beta\n */\nexport function utf8ArrayToStr(\n\tarray: Uint8Array,\n\texitOnNull: boolean = false,\n): string {\n\tif (typeof TextDecoder !== 'undefined') {\n\t\tconst decoder = new TextDecoder('utf-8');\n\t\tconst decoded = decoder.decode(array);\n\n\t\tif (exitOnNull) {\n\t\t\t// grab up to the first null\n\t\t\tconst idx = decoded.indexOf('\\0');\n\t\t\treturn idx !== -1 ? decoded.substring(0, idx) : decoded;\n\t\t}\n\n\t\t// remove any null characters\n\t\treturn decoded.replace(/\\0/g, '');\n\t}\n\n\tconst len = array.length;\n\tlet c;\n\tlet char2;\n\tlet char3;\n\tlet out = '';\n\tlet i = 0;\n\twhile (i < len) {\n\t\tc = array[i++];\n\t\tif (c === 0x00 && exitOnNull) {\n\t\t\treturn out;\n\t\t}\n\t\telse if (c === 0x00 || c === 0x03) {\n\t\t\t// If the character is 3 (END_OF_TEXT) or 0 (NULL) then skip it\n\t\t\tcontinue;\n\t\t}\n\t\tswitch (c >> 4) {\n\t\t\tcase 0:\n\t\t\tcase 1:\n\t\t\tcase 2:\n\t\t\tcase 3:\n\t\t\tcase 4:\n\t\t\tcase 5:\n\t\t\tcase 6:\n\t\t\tcase 7:\n\t\t\t\t// 0xxxxxxx\n\t\t\t\tout += String.fromCharCode(c);\n\t\t\t\tbreak;\n\t\t\tcase 12:\n\t\t\tcase 13:\n\t\t\t\t// 110x xxxx   10xx xxxx\n\t\t\t\tchar2 = array[i++];\n\t\t\t\tout += String.fromCharCode(((c & 0x1f) << 6) | (char2 & 0x3f));\n\t\t\t\tbreak;\n\t\t\tcase 14:\n\t\t\t\t// 1110 xxxx  10xx xxxx  10xx xxxx\n\t\t\t\tchar2 = array[i++];\n\t\t\t\tchar3 = array[i++];\n\t\t\t\tout += String.fromCharCode(\n\t\t\t\t\t((c & 0x0f) << 12) | ((char2 & 0x3f) << 6) | ((char3 & 0x3f) << 0),\n\t\t\t\t);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t}\n\t}\n\treturn out;\n}\n","export function toUint8(\n\tdata: BufferSource,\n\toffset: number = 0,\n\tlength: number = Infinity,\n): Uint8Array {\n\treturn view(data, offset, length, Uint8Array);\n}\n\nfunction view<T extends ArrayBufferView>(\n\tdata: BufferSource,\n\toffset: number,\n\tlength: number,\n\tType: { new(buffer: ArrayBuffer, byteOffset: number, length: number): T },\n): T {\n\tconst buffer = unsafeGetArrayBuffer(data);\n\tlet bytesPerElement: any = 1;\n\tif ('BYTES_PER_ELEMENT' in Type) {\n\t\tbytesPerElement = Type.BYTES_PER_ELEMENT;\n\t}\n\t// Absolute end of the |data| view within |buffer|.\n\tconst dataOffset = isArrayBufferView(data) ? data.byteOffset : 0;\n\tconst dataEnd = ((dataOffset) + data.byteLength) / bytesPerElement;\n\t// Absolute start of the result within |buffer|.\n\tconst rawStart = ((dataOffset) + offset) / bytesPerElement;\n\tconst start = Math.floor(Math.max(0, Math.min(rawStart, dataEnd)));\n\t// Absolute end of the result within |buffer|.\n\tconst end = Math.floor(Math.min(start + Math.max(length, 0), dataEnd));\n\treturn new Type(buffer, start, end - start);\n}\n\nfunction unsafeGetArrayBuffer(view: BufferSource) {\n\tif (view instanceof ArrayBuffer) {\n\t\treturn view;\n\t}\n\telse {\n\t\treturn view.buffer;\n\t}\n}\n\nfunction isArrayBufferView(obj: any): obj is ArrayBufferView {\n\treturn obj && obj.buffer instanceof ArrayBuffer && obj.byteLength !== undefined && obj.byteOffset !== undefined;\n}\n","import type { Id3Frame } from '../Id3Frame.js';\nimport type { RawId3Frame } from './RawFrame.js';\nimport { decodeId3PrivFrame } from './decodeId3PrivFrame.js';\nimport { decodeId3TextFrame } from './decodeId3TextFrame.js';\nimport { decodeId3UrlFrame } from './decodeId3UrlFrame.js';\nimport { decodeId3ImageFrame } from './decodeId3ImageFrame.js';\n\n/**\n * Decode an ID3 frame.\n *\n * @param frame - the ID3 frame\n *\n * @returns The decoded ID3 frame\n *\n * @internal\n *\n * @group ID3\n */\nexport function decodeId3Frame(frame: RawId3Frame): Id3Frame | undefined {\n\tif (frame.type === 'PRIV') {\n\t\treturn decodeId3PrivFrame(frame);\n\t}\n\telse if (frame.type[0] === 'W') {\n\t\treturn decodeId3UrlFrame(frame);\n\t}\n\n\telse if (frame.type === 'APIC') {\n\t\treturn decodeId3ImageFrame(frame);\n\t}\n\n\treturn decodeId3TextFrame(frame);\n}\n","import { utf8ArrayToStr } from '../../utils/utf8ArrayToStr.js';\nimport type { DecodedId3Frame } from '../DecodedId3Frame.js';\nimport type { RawId3Frame } from './RawFrame.js';\n\n/**\n * Decode an ID3 PRIV frame.\n *\n * @param frame - the ID3 PRIV frame\n *\n * @returns The decoded ID3 PRIV frame\n *\n * @internal\n *\n * @group ID3\n */\nexport function decodeId3PrivFrame(\n\tframe: RawId3Frame,\n): DecodedId3Frame<ArrayBuffer> | undefined {\n\t/*\n\tFormat: <text string>\\0<binary data>\n\t*/\n\tif (frame.size < 2) {\n\t\treturn undefined;\n\t}\n\n\tconst owner = utf8ArrayToStr(frame.data, true);\n\tconst privateData = new Uint8Array(frame.data.subarray(owner.length + 1));\n\n\treturn { key: frame.type, info: owner, data: privateData.buffer };\n}\n","import { utf8ArrayToStr } from '../../utils/utf8ArrayToStr.js';\nimport type { DecodedId3Frame } from '../DecodedId3Frame.js';\nimport type { RawId3Frame } from './RawFrame.js';\n\n/**\n * Decode a URL frame\n *\n * @param frame - the ID3 URL frame\n *\n * @returns The decoded ID3 URL frame\n *\n * @internal\n *\n * @group ID3\n */\nexport function decodeId3UrlFrame(frame: RawId3Frame): DecodedId3Frame<string> | undefined {\n\tif (frame.type === 'WXXX') {\n\t\t/*\n\t\tFormat:\n\t\t[0]   = {Text Encoding}\n\t\t[1-?] = {Description}\\0{URL}\n\t\t*/\n\t\tif (frame.size < 2) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tlet index = 1;\n\t\tconst description: string = utf8ArrayToStr(\n\t\t\tframe.data.subarray(index),\n\t\t\ttrue,\n\t\t);\n\n\t\tindex += description.length + 1;\n\t\tconst value: string = utf8ArrayToStr(frame.data.subarray(index));\n\n\t\treturn { key: frame.type, info: description, data: value };\n\t}\n\t/*\n\tFormat:\n\t[0-?] = {URL}\n\t*/\n\tconst url: string = utf8ArrayToStr(frame.data);\n\treturn { key: frame.type, info: '', data: url };\n}\n","import type { DecodedId3Frame } from '../DecodedId3Frame.js';\nimport type { RawId3Frame } from './RawFrame.js';\nimport { toUint8 } from './utf8.js';\nimport { toArrayBuffer } from './toArrayBuffer.js';\nimport { utf8ArrayToStr } from '../../utils.js'; \n\ntype MetadataFrame = {\n\tkey: string;\n\tdescription: string;\n\tdata: string | ArrayBuffer;\n\tmimeType: string | null;\n\tpictureType: number | null;\n}\n\nexport function decodeId3ImageFrame(\n\tframe: RawId3Frame,\n): DecodedId3Frame<string | ArrayBuffer> | undefined {\n\tconst metadataFrame: MetadataFrame = {\n\t\tkey: frame.type,\n\t\tdescription: '',\n\t\tdata: '',\n\t\tmimeType: null,\n\t\tpictureType: null,\n\t};\n\n\tconst utf8Encoding = 0x03;\n\n\tif (frame.size < 2) {\n\t\treturn undefined;\n\t}\n\tif (frame.data[0] !== utf8Encoding) {\n\t\tconsole.log('Ignore frame with unrecognized character ' + 'encoding');\n\t\treturn undefined;\n\t}\n\n\tconst mimeTypeEndIndex = frame.data.subarray(1).indexOf(0);\n\tif (mimeTypeEndIndex === -1) {\n\t\treturn undefined;\n\t}\n\tconst mimeType = utf8ArrayToStr(toUint8(frame.data, 1, mimeTypeEndIndex));\n\tconst pictureType = frame.data[2 + mimeTypeEndIndex];\n\tconst descriptionEndIndex = frame.data\n\t\t.subarray(3 + mimeTypeEndIndex)\n\t\t.indexOf(0);\n\tif (descriptionEndIndex === -1) {\n\t\treturn undefined;\n\t}\n\tconst description = utf8ArrayToStr(\n\t\ttoUint8(frame.data, 3 + mimeTypeEndIndex, descriptionEndIndex),\n\t);\n\n\tlet data;\n\tif (mimeType === '-->') {\n\t\tdata = utf8ArrayToStr(\n\t\t\ttoUint8(frame.data, 4 + mimeTypeEndIndex + descriptionEndIndex),\n\t\t);\n\t} \n\telse {\n\t\tdata = toArrayBuffer(\n\t\t\tframe.data.subarray(4 + mimeTypeEndIndex + descriptionEndIndex),\n\t\t);\n\t}\n\n\tmetadataFrame.mimeType = mimeType;\n\tmetadataFrame.pictureType = pictureType;\n\tmetadataFrame.description = description;\n\tmetadataFrame.data = data;\n\treturn metadataFrame;\n}\n","type TypedArray =\n\t| Int8Array\n\t| Uint8Array\n\t| Int16Array\n\t| Uint16Array\n\t| Int32Array\n\t| Uint32Array\n\t| Float32Array\n\t| Float64Array\n\t| Uint8ClampedArray;\n\nexport function toArrayBuffer(view: ArrayBuffer | TypedArray): ArrayBuffer {\n\tif (view instanceof ArrayBuffer) {\n\t\treturn view;\n\t} \n\telse {\n\t\tif (view.byteOffset == 0 && view.byteLength == view.buffer.byteLength) {\n\t\t\t// This is a TypedArray over the whole buffer.\n\t\t\treturn view.buffer;\n\t\t}\n\t\t// This is a 'view' on the buffer.  Create a new buffer that only contains\n\t\t// the data.  Note that since this isn't an ArrayBuffer, the 'new' call\n\t\t// will allocate a new buffer to hold the copy.\n\t\treturn new Uint8Array(view).buffer;\n\t}\n}\n","import { utf8ArrayToStr } from '../../utils/utf8ArrayToStr.js';\nimport type { DecodedId3Frame } from '../DecodedId3Frame.js';\nimport type { RawId3Frame } from './RawFrame.js';\n\n/**\n * Decodes an ID3 text frame\n *\n * @param frame - the ID3 text frame\n *\n * @returns The decoded ID3 text frame\n *\n * @internal\n *\n * @group ID3\n */\nexport function decodeId3TextFrame(frame: RawId3Frame): DecodedId3Frame<string> | undefined {\n\tif (frame.size < 2) {\n\t\treturn undefined;\n\t}\n\n\tif (frame.type === 'TXXX') {\n\t\t/*\n\t\tFormat:\n\t\t[0]   = {Text Encoding}\n\t\t[1-?] = {Description}\\0{Value}\n\t\t*/\n\t\tlet index = 1;\n\t\tconst description = utf8ArrayToStr(frame.data.subarray(index), true);\n\n\t\tindex += description.length + 1;\n\t\tconst value = utf8ArrayToStr(frame.data.subarray(index));\n\n\t\treturn { key: frame.type, info: description, data: value };\n\t}\n\t/*\n\tFormat:\n\t[0]   = {Text Encoding}\n\t[1-?] = {Value}\n\t*/\n\tconst text = utf8ArrayToStr(frame.data.subarray(1));\n\treturn { key: frame.type, info: '', data: text };\n}\n","/**\n * Read ID3 size\n *\n * @param data - The data to read from\n * @param offset - The offset at which to start reading\n *\n * @returns The size\n *\n * @internal\n *\n * @group ID3\n */\nexport function readId3Size(data: Uint8Array, offset: number): number {\n\tlet size = 0;\n\tsize = (data[offset] & 0x7f) << 21;\n\tsize |= (data[offset + 1] & 0x7f) << 14;\n\tsize |= (data[offset + 2] & 0x7f) << 7;\n\tsize |= data[offset + 3] & 0x7f;\n\treturn size;\n}\n","import type { RawId3Frame } from './RawFrame.js';\nimport { readId3Size } from './readId3Size.js';\n\n/**\n * Returns the data of an ID3 frame.\n *\n * @param data - The data to read from\n *\n * @returns The data of the ID3 frame\n *\n * @internal\n *\n * @group ID3\n */\nexport function getId3FrameData(data: Uint8Array): RawId3Frame {\n\t/*\n\tFrame ID       $xx xx xx xx (four characters)\n\tSize           $xx xx xx xx\n\tFlags          $xx xx\n\t*/\n\tconst type: string = String.fromCharCode(data[0], data[1], data[2], data[3]);\n\tconst size: number = readId3Size(data, 4);\n\n\t// skip frame id, size, and flags\n\tconst offset = 10;\n\n\treturn { type, size, data: data.subarray(offset, offset + size) };\n}\n","/**\n * Returns true if an ID3 footer can be found at offset in data\n *\n * @param data - The data to search in\n * @param offset - The offset at which to start searching\n *\n * @returns `true` if an ID3 footer is found\n *\n * @internal\n *\n * @group ID3\n */\nexport function isId3Footer(data: Uint8Array, offset: number): boolean {\n\t/*\n\t * The footer is a copy of the header, but with a different identifier\n\t */\n\tif (offset + 10 <= data.length) {\n\t\t// look for '3DI' identifier\n\t\tif (\n\t\t\tdata[offset] === 0x33 &&\n\t\t\tdata[offset + 1] === 0x44 &&\n\t\t\tdata[offset + 2] === 0x49\n\t\t) {\n\t\t\t// check version is within range\n\t\t\tif (data[offset + 3] < 0xff && data[offset + 4] < 0xff) {\n\t\t\t\t// check size is within range\n\t\t\t\tif (\n\t\t\t\t\tdata[offset + 6] < 0x80 &&\n\t\t\t\t\tdata[offset + 7] < 0x80 &&\n\t\t\t\t\tdata[offset + 8] < 0x80 &&\n\t\t\t\t\tdata[offset + 9] < 0x80\n\t\t\t\t) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn false;\n}\n","/**\n * Returns true if an ID3 header can be found at offset in data\n *\n * @param data - The data to search in\n * @param offset - The offset at which to start searching\n *\n * @returns `true` if an ID3 header is found\n *\n * @internal\n *\n * @group ID3\n */\nexport function isId3Header(data: Uint8Array, offset: number): boolean {\n\t/*\n\t * http://id3.org/id3v2.3.0\n\t * [0]     = 'I'\n\t * [1]     = 'D'\n\t * [2]     = '3'\n\t * [3,4]   = {Version}\n\t * [5]     = {Flags}\n\t * [6-9]   = {ID3 Size}\n\t *\n\t * An ID3v2 tag can be detected with the following pattern:\n\t *  $49 44 33 yy yy xx zz zz zz zz\n\t * Where yy is less than $FF, xx is the 'flags' byte and zz is less than $80\n\t */\n\tif (offset + 10 <= data.length) {\n\t\t// look for 'ID3' identifier\n\t\tif (\n\t\t\tdata[offset] === 0x49 &&\n\t\t\tdata[offset + 1] === 0x44 &&\n\t\t\tdata[offset + 2] === 0x33\n\t\t) {\n\t\t\t// check version is within range\n\t\t\tif (data[offset + 3] < 0xff && data[offset + 4] < 0xff) {\n\t\t\t\t// check size is within range\n\t\t\t\tif (\n\t\t\t\t\tdata[offset + 6] < 0x80 &&\n\t\t\t\t\tdata[offset + 7] < 0x80 &&\n\t\t\t\t\tdata[offset + 8] < 0x80 &&\n\t\t\t\t\tdata[offset + 9] < 0x80\n\t\t\t\t) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn false;\n}\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport DashConstants from './constants/DashConstants.js';\nimport MediaInfo from './vo/MediaInfo.js';\nimport StreamInfo from './vo/StreamInfo.js';\nimport ManifestInfo from './vo/ManifestInfo.js';\nimport Event from './vo/Event.js';\nimport FactoryMaker from '../core/FactoryMaker.js';\nimport DashManifestModel from './models/DashManifestModel.js';\nimport PatchManifestModel from './models/PatchManifestModel.js';\nimport Representation from './vo/Representation.js';\nimport {bcp47Normalize} from 'bcp-47-normalize';\nimport {getId3Frames} from '@svta/common-media-library/id3/getId3Frames.js';\nimport Constants from '../streaming/constants/Constants.js';\n\n/**\n * @module DashAdapter\n * @description The DashAdapter module can be accessed using the MediaPlayer API getDashAdapter()\n */\n\nfunction DashAdapter() {\n    let instance,\n        dashManifestModel,\n        patchManifestModel,\n        voPeriods,\n        constants,\n        cea608parser;\n\n    const context = this.context;\n\n    const PROFILE_DVB = 'urn:dvb:dash:profile:dvb-dash:2014';\n\n    function setup() {\n        dashManifestModel = DashManifestModel(context).getInstance();\n        patchManifestModel = PatchManifestModel(context).getInstance();\n        reset();\n    }\n\n    // #region PUBLIC FUNCTIONS\n    // --------------------------------------------------\n    function setConfig(config) {\n        if (!config) {\n            return;\n        }\n\n        if (config.constants) {\n            constants = config.constants;\n        }\n\n        if (config.cea608parser) {\n            cea608parser = config.cea608parser;\n        }\n        if (config.errHandler) {\n            dashManifestModel.setConfig({ errHandler: config.errHandler });\n        }\n\n        if (config.BASE64) {\n            dashManifestModel.setConfig({ BASE64: config.BASE64 });\n        }\n    }\n\n    /**\n     * Returns a MediaInfo object for a given media type and the corresponding streamInfo.\n     * @param {object} streamInfo\n     * @param {MediaType }type\n     * @returns {null|MediaInfo} mediaInfo\n     * @memberOf module:DashAdapter\n     * @instance\n     */\n    function getMediaInfoForType(streamInfo, type) {\n        if (voPeriods.length === 0 || !streamInfo) {\n            return null;\n        }\n\n        let selectedVoPeriod = getPeriodForStreamInfo(streamInfo, voPeriods);\n        if (!selectedVoPeriod) {\n            return null;\n        }\n\n        const voAdaptations = dashManifestModel.getAdaptationsForPeriod(selectedVoPeriod);\n\n        let realAdaptation = getMainAdaptationForType(type, streamInfo);\n        if (!realAdaptation) {\n            return null;\n        }\n        let idx = dashManifestModel.getIndexForAdaptation(realAdaptation, voPeriods[0].mpd.manifest, streamInfo.index);\n\n        return convertAdaptationToMediaInfo(voAdaptations[idx]);\n    }\n\n    /**\n     * Checks if the role of the specified AdaptationSet is set to main\n     * @param {object} adaptation\n     * @returns {boolean}\n     * @memberOf module:DashAdapter\n     * @instance\n     */\n    function getIsMain(adaptation) {\n        return dashManifestModel.getRolesForAdaptation(adaptation).filter(function (role) {\n            return role.value === DashConstants.MAIN;\n        })[0];\n    }\n\n    /**\n     * Returns the AdaptationSet for a given period index and a given mediaType.\n     * @param {number} periodIndex\n     * @param {MediaType} type\n     * @param {object} streamInfo\n     * @returns {null|object} adaptation\n     * @memberOf module:DashAdapter\n     * @instance\n     */\n    function getMainAdaptationForType(type, streamInfo) {\n        const index = streamInfo ? streamInfo.index : 0;\n        const adaptations = dashManifestModel.getAdaptationsForType(voPeriods[index].mpd.manifest, index, type);\n\n        if (!adaptations || adaptations.length === 0) {\n            return null;\n        }\n\n        if (adaptations.length > 1 && streamInfo) {\n            for (let i = 0, ln = adaptations.length; i < ln; i++) {\n                if (getIsMain(adaptations[i])) {\n                    return adaptations[i];\n                }\n            }\n        }\n\n        return adaptations[0];\n    }\n\n    /**\n     * Compares two mediaInfo objects\n     * @param {MediaInfo} mInfoOne\n     * @param {MediaInfo} mInfoTwo\n     * @returns {boolean}\n     * @memberof module:DashAdapter\n     * @instance\n     */\n    function areMediaInfosEqual(mInfoOne, mInfoTwo) {\n        if (!mInfoOne || !mInfoTwo) {\n            return false;\n        }\n\n        const sameId = mInfoOne.id === mInfoTwo.id;\n        const sameCodec = mInfoOne.codec === mInfoTwo.codec;\n        const sameViewpoint = JSON.stringify(mInfoOne.viewpoint) === JSON.stringify(mInfoTwo.viewpoint);\n        const sameLang = mInfoOne.lang === mInfoTwo.lang;\n        const sameRoles = JSON.stringify(mInfoOne.roles) === JSON.stringify(mInfoTwo.roles);\n        const sameAccessibility = JSON.stringify(mInfoOne.accessibility) === JSON.stringify(mInfoTwo.accessibility);\n        const sameAudioChannelConfiguration = JSON.stringify(mInfoOne.audioChannelConfiguration) === JSON.stringify(mInfoTwo.audioChannelConfiguration);\n\n        return (sameId && sameCodec && sameViewpoint && sameLang && sameRoles && sameAccessibility && sameAudioChannelConfiguration);\n    }\n\n    function _getAllMediaInfo(manifest, period, streamInfo, adaptations, type, embeddedText) {\n        let mediaArr = [];\n        let data,\n            media,\n            idx,\n            i,\n            j,\n            ln;\n\n        if (!adaptations || adaptations.length === 0) {\n            return [];\n        }\n\n        const voAdaptations = dashManifestModel.getAdaptationsForPeriod(period);\n\n        for (i = 0, ln = adaptations.length; i < ln; i++) {\n            data = adaptations[i];\n            idx = dashManifestModel.getIndexForAdaptation(data, manifest, streamInfo.index);\n            media = convertAdaptationToMediaInfo(voAdaptations[idx]);\n\n            if (embeddedText) {\n                let accessibilityLength = media.accessibility.length;\n                for (j = 0; j < accessibilityLength; j++) {\n                    if (!media) {\n                        continue;\n                    }\n                    let accessibility = media.accessibility[j];\n                    if (accessibility.schemeIdUri === constants.ACCESSIBILITY_CEA608_SCHEME) {\n                        if (!accessibility.value || accessibility.value === '') {\n                            convertVideoInfoToEmbeddedTextInfo(media, constants.CC1, 'eng');\n                            mediaArr.push(media);\n                            media = null;\n                        } else {\n                            let value = accessibility.value;\n                            let parts = value.split(';');\n                            if (parts[0].substring(0, 2) === 'CC') {\n                                for (j = 0; j < parts.length; j++) {\n                                    if (!media) {\n                                        media = convertAdaptationToMediaInfo.call(this, voAdaptations[idx]);\n                                    }\n                                    convertVideoInfoToEmbeddedTextInfo(media, parts[j].substring(0, 3), parts[j].substring(4));\n                                    mediaArr.push(media);\n                                    media = null;\n                                }\n                            } else {\n                                for (j = 0; j < parts.length; j++) { // Only languages for CC1, CC2, ...\n                                    if (!media) {\n                                        media = convertAdaptationToMediaInfo.call(this, voAdaptations[idx]);\n                                    }\n                                    convertVideoInfoToEmbeddedTextInfo(media, 'CC' + (j + 1), parts[j]);\n                                    mediaArr.push(media);\n                                    media = null;\n                                }\n                            }\n                        }\n                    }\n                }\n            } else if (type === constants.IMAGE) {\n                convertVideoInfoToThumbnailInfo(media);\n                mediaArr.push(media);\n                media = null;\n            } else if (media) {\n                mediaArr.push(media);\n            }\n        }\n\n        return mediaArr;\n    }\n\n    /**\n     * Returns all the mediaInfos for a given mediaType and the corresponding streamInfo.\n     * @param {object} streamInfo\n     * @param {MediaType} type\n     * @param {object} externalManifest Set to null or undefined if no external manifest is to be used\n     * @returns {Array} mediaArr\n     * @memberOf module:DashAdapter\n     * @instance\n     */\n    function getAllMediaInfoForType(streamInfo, type, externalManifest) {\n        let voLocalPeriods = voPeriods;\n        let manifest = externalManifest;\n        let mediaArr = [];\n\n        if (manifest) {\n            checkConfig();\n\n            voLocalPeriods = getRegularPeriods(manifest);\n        } else {\n            if (voPeriods.length > 0) {\n                manifest = voPeriods[0].mpd.manifest;\n            } else {\n                return mediaArr;\n            }\n        }\n\n        const selectedVoPeriod = getPeriodForStreamInfo(streamInfo, voLocalPeriods);\n        let adaptationsForType = dashManifestModel.getAdaptationsForType(manifest, streamInfo ? streamInfo.index : null, type);\n\n        mediaArr = _getAllMediaInfo(manifest, selectedVoPeriod, streamInfo, adaptationsForType, type);\n\n        // Search for embedded text in video track\n        if (type === constants.TEXT) {\n            adaptationsForType = dashManifestModel.getAdaptationsForType(manifest, streamInfo ? streamInfo.index : null, constants.VIDEO);\n            mediaArr = mediaArr.concat(_getAllMediaInfo(manifest, selectedVoPeriod, streamInfo, adaptationsForType, type, true));\n        }\n\n        return mediaArr;\n    }\n\n    /**\n     * Update the internal voPeriods array with the information from the new manifest\n     * @param {object} newManifest\n     * @returns {*}\n     * @memberOf module:DashAdapter\n     * @instance\n     * @ignore\n     */\n    function updatePeriods(newManifest) {\n        if (!newManifest) {\n            return null;\n        }\n\n        checkConfig();\n\n        voPeriods = getRegularPeriods(newManifest);\n    }\n\n    /**\n     * Returns an array of streamInfo objects\n     * @param {object} externalManifest\n     * @param {number} maxStreamsInfo\n     * @returns {Array} streams\n     * @memberOf module:DashAdapter\n     * @instance\n     * @ignore\n     */\n    function getStreamsInfo(externalManifest, maxStreamsInfo) {\n        const streams = [];\n        let voLocalPeriods = voPeriods;\n\n        //if manifest is defined, getStreamsInfo is for an outside manifest, not the current one\n        if (externalManifest) {\n            checkConfig();\n            voLocalPeriods = getRegularPeriods(externalManifest);\n        }\n\n        if (voLocalPeriods.length > 0) {\n            if (!maxStreamsInfo || maxStreamsInfo > voLocalPeriods.length) {\n                maxStreamsInfo = voLocalPeriods.length;\n            }\n            for (let i = 0; i < maxStreamsInfo; i++) {\n                streams.push(convertPeriodToStreamInfo(voLocalPeriods[i]));\n            }\n        }\n\n        return streams;\n    }\n\n    /**\n     * Returns the AdaptationSet as saved in the DashManifestModel\n     * @param {object} streamInfo\n     * @param {object} mediaInfo\n     * @returns {object} realAdaptation\n     * @memberOf module:DashAdapter\n     * @instance\n     */\n    function getRealAdaptation(streamInfo, mediaInfo) {\n        let id,\n            realAdaptation;\n\n        const selectedVoPeriod = getPeriodForStreamInfo(streamInfo, voPeriods);\n\n        id = mediaInfo ? mediaInfo.id : null;\n\n        if (voPeriods.length > 0 && selectedVoPeriod) {\n            realAdaptation = id ? dashManifestModel.getAdaptationForId(id, voPeriods[0].mpd.manifest, selectedVoPeriod.index) : dashManifestModel.getAdaptationForIndex(mediaInfo ? mediaInfo.index : null, voPeriods[0].mpd.manifest, selectedVoPeriod.index);\n        }\n\n        return realAdaptation;\n    }\n\n    /**\n     * Returns the ProducerReferenceTimes as saved in the DashManifestModel if present\n     * @param {object} streamInfo\n     * @param {object} mediaInfo\n     * @returns {object} producerReferenceTimes\n     * @memberOf module:DashAdapter\n     * @instance\n     */\n    function getProducerReferenceTimes(streamInfo, mediaInfo) {\n        let id, realAdaptation;\n\n        const selectedVoPeriod = getPeriodForStreamInfo(streamInfo, voPeriods);\n        id = mediaInfo ? mediaInfo.id : null;\n\n        if (voPeriods.length > 0 && selectedVoPeriod) {\n            realAdaptation = id ? dashManifestModel.getAdaptationForId(id, voPeriods[0].mpd.manifest, selectedVoPeriod.index) : dashManifestModel.getAdaptationForIndex(mediaInfo ? mediaInfo.index : null, voPeriods[0].mpd.manifest, selectedVoPeriod.index);\n        }\n\n        if (!realAdaptation) {\n            return [];\n        }\n        return dashManifestModel.getProducerReferenceTimesForAdaptation(realAdaptation);\n    }\n\n    /**\n     * Return all EssentialProperties of an AdaptationSet\n     * @param {object} adaptationSet\n     * @return {array}\n     */\n    function getEssentialPropertiesForAdaptationSet(adaptationSet) {\n        try {\n            return dashManifestModel.getEssentialPropertiesForRepresentation(adaptationSet);\n        } catch (e) {\n            return [];\n        }\n    }\n\n    /**\n     * Return all EssentialProperties of a Representation\n     * @param {object} representation\n     * @return {array}\n     */\n    function getEssentialPropertiesForRepresentation(representation) {\n        try {\n            return dashManifestModel.getEssentialPropertiesForRepresentation(representation);\n        } catch (e) {\n            return [];\n        }\n    }\n\n    /**\n     * Return supplementalCodecs of a Representation\n     * @param {object} representation\n     * @returns {array}\n     */\n    function getSupplementalCodecs(representation) {\n        const supplementalCodecs = representation[DashConstants.SUPPLEMENTAL_CODECS];\n        if (!supplementalCodecs) {\n            return [];\n        }\n        return supplementalCodecs.split(' ').map((codec) => representation.mimeType + ';codecs=\"' + codec + '\"');\n    }\n\n    /**\n     * Returns the period as defined in the DashManifestModel for a given index\n     * @param {number} index\n     * @return {object}\n     * @memberOf module:DashAdapter\n     * @instance\n     */\n    function getRealPeriodByIndex(index) {\n        return dashManifestModel.getRealPeriodForIndex(index, voPeriods[0].mpd.manifest);\n    }\n\n    /**\n     * Returns all voRepresentations for a given mediaInfo\n     * @param {object} mediaInfo\n     * @returns {Array} voReps\n     * @memberOf module:DashAdapter\n     * @instance\n     */\n    function getVoRepresentations(mediaInfo) {\n        let voReps;\n\n        const voAdaptation = getAdaptationForMediaInfo(mediaInfo);\n        voReps = dashManifestModel.getRepresentationsForAdaptation(voAdaptation, mediaInfo);\n\n        return voReps;\n    }\n\n    /**\n     * Returns the event for the given parameters.\n     * @param {object} eventBox\n     * @param {object} eventStreams\n     * @param {number} mediaStartTime - Specified in seconds\n     * @param {object} voRepresentation\n     * @returns {null|Event}\n     * @memberOf module:DashAdapter\n     * @instance\n     * @ignore\n     */\n    function getEvent(eventBox, eventStreams, mediaStartTime, voRepresentation) {\n        try {\n            if (!eventBox || !eventStreams || isNaN(mediaStartTime) || !voRepresentation) {\n                return null;\n            }\n\n            const schemeIdUri = eventBox.scheme_id_uri;\n            const value = eventBox.value;\n\n            if (!eventStreams[schemeIdUri + '/' + value]) {\n                return null;\n            }\n\n            const event = new Event();\n            const timescale = eventBox.timescale || 1;\n            const periodStart = voRepresentation.adaptation.period.start;\n            const eventStream = eventStreams[schemeIdUri + '/' + value];\n            // The PTO in voRepresentation is already specified in seconds\n            const presentationTimeOffset = !isNaN(voRepresentation.presentationTimeOffset) ? voRepresentation.presentationTimeOffset : !isNaN(eventStream.presentationTimeOffset) ? eventStream.presentationTimeOffset : 0;\n            // In case of version 1 events the presentation_time is parsed as presentation_time_delta\n            let presentationTimeDelta = eventBox.presentation_time_delta / timescale;\n            let calculatedPresentationTime;\n\n            if (eventBox.version === 0) {\n                calculatedPresentationTime = periodStart + mediaStartTime - presentationTimeOffset + presentationTimeDelta;\n            } else {\n                calculatedPresentationTime = periodStart - presentationTimeOffset + presentationTimeDelta;\n            }\n\n            const duration = eventBox.event_duration / timescale;\n            const id = eventBox.id;\n            const messageData = eventBox.message_data;\n\n            event.eventStream = eventStream;\n            event.eventStream.value = value;\n            event.eventStream.timescale = timescale;\n            event.duration = duration;\n            event.id = id;\n            event.calculatedPresentationTime = calculatedPresentationTime;\n            event.messageData = messageData;\n            event.presentationTimeDelta = presentationTimeDelta;\n            event.parsedMessageData = (schemeIdUri === Constants.ID3_SCHEME_ID_URI) ? getId3Frames(messageData) : null;\n\n            return event;\n        } catch (e) {\n            return null;\n        }\n    }\n\n    /**\n     * Returns the events for the given info object. info can either be an instance of StreamInfo, MediaInfo or Representation\n     * @param {object} info\n     * @param {object} voRepresentation\n     * @returns {Array}\n     * @memberOf module:DashAdapter\n     * @instance\n     * @ignore\n     */\n    function getEventsFor(info, voRepresentation, streamInfo) {\n        let events = [];\n\n        if (voPeriods.length > 0) {\n            const manifest = voPeriods[0].mpd.manifest;\n\n            if (info instanceof StreamInfo) {\n                const period = getPeriodForStreamInfo(info, voPeriods)\n                events = dashManifestModel.getEventsForPeriod(period);\n            } else if (info instanceof MediaInfo) {\n                const period = getPeriodForStreamInfo(streamInfo, voPeriods)\n                events = dashManifestModel.getEventStreamForAdaptationSet(manifest, getAdaptationForMediaInfo(info), period);\n            } else if (info instanceof Representation) {\n                const period = getPeriodForStreamInfo(streamInfo, voPeriods)\n                events = dashManifestModel.getEventStreamForRepresentation(manifest, voRepresentation, period);\n            }\n        }\n\n        return events;\n    }\n\n\n    /**\n     * Check if the given type is a text track\n     * @param {object} adaptation\n     * @returns {boolean}\n     * @memberOf module:DashAdapter\n     * @instance\n     * @ignore\n     */\n    function getIsTextTrack(adaptation) {\n        return dashManifestModel.getIsText(adaptation);\n    }\n\n    /**\n     * Returns the UTC Timing Sources specified in the manifest\n     * @returns {Array} utcTimingSources\n     * @memberOf module:DashAdapter\n     * @instance\n     */\n    function getUTCTimingSources() {\n        const manifest = getManifest();\n        return dashManifestModel.getUTCTimingSources(manifest);\n    }\n\n    /**\n     * Returns the suggestedPresentationDelay as specified in the manifest\n     * @returns {String} suggestedPresentationDelay\n     * @memberOf module:DashAdapter\n     * @instance\n     */\n    function getSuggestedPresentationDelay() {\n        const mpd = voPeriods.length > 0 ? voPeriods[0].mpd : null;\n        return dashManifestModel.getSuggestedPresentationDelay(mpd);\n    }\n\n    /**\n     * Returns the availabilityStartTime as specified in the manifest\n     * @param {object} externalManifest Omit this value if no external manifest should be used\n     * @returns {number} availabilityStartTime\n     * @memberOf module:DashAdapter\n     * @instance\n     */\n    function getAvailabilityStartTime(externalManifest) {\n        const mpd = getMpd(externalManifest);\n        return dashManifestModel.getAvailabilityStartTime(mpd);\n    }\n\n    /**\n     * Returns a boolean indicating if the manifest is dynamic or not\n     * @param {object} externalManifest Omit this value if no external manifest should be used\n     * @returns {boolean}\n     * @memberOf module:DashAdapter\n     * @instance\n     */\n    function getIsDynamic(externalManifest) {\n        const manifest = getManifest(externalManifest);\n        return dashManifestModel.getIsDynamic(manifest);\n    }\n\n    /**\n     * Returns the duration of the MPD\n     * @param {object} externalManifest Omit this value if no external manifest should be used\n     * @returns {number} duration\n     * @memberOf module:DashAdapter\n     * @instance\n     */\n    function getDuration(externalManifest) {\n        const manifest = getManifest(externalManifest);\n        return dashManifestModel.getDuration(manifest);\n    }\n\n    /**\n     * Returns all periods of the MPD\n     * @param {object} externalManifest Omit this value if no external manifest should be used\n     * @returns {Array} periods\n     * @memberOf module:DashAdapter\n     * @instance\n     */\n    function getRegularPeriods(externalManifest) {\n        const mpd = getMpd(externalManifest);\n        return dashManifestModel.getRegularPeriods(mpd);\n    }\n\n    /**\n     * Returns an MPD object\n     * @param {object} externalManifest Omit this value if no external manifest should be used\n     * @returns {object} MPD\n     * @memberOf module:DashAdapter\n     * @instance\n     */\n    function getMpd(externalManifest) {\n        const manifest = getManifest(externalManifest);\n        return dashManifestModel.getMpd(manifest);\n    }\n\n    /**\n     * Returns the ContentSteering element of the MPD\n     * @param {object} manifest\n     * @returns {object} contentSteering\n     * @memberOf module:DashAdapter\n     * @instance\n     */\n    function getContentSteering(manifest) {\n        return dashManifestModel.getContentSteering(manifest);\n    }\n\n    /**\n     * Returns the location element of the MPD\n     * @param {object} manifest\n     * @returns {String} location\n     * @memberOf module:DashAdapter\n     * @instance\n     */\n    function getLocation(manifest) {\n        return dashManifestModel.getLocation(manifest);\n    }\n\n    /**\n     * Returns the manifest update period used for dynamic manifests\n     * @param {object} manifest\n     * @param {number} latencyOfLastUpdate\n     * @returns {NaN|number} manifestUpdatePeriod\n     * @memberOf module:DashAdapter\n     * @instance\n     */\n    function getManifestUpdatePeriod(manifest, latencyOfLastUpdate = 0) {\n        return dashManifestModel.getManifestUpdatePeriod(manifest, latencyOfLastUpdate);\n    }\n\n    /**\n     * Returns the publish time from the manifest\n     * @param {object} manifest\n     * @returns {Date|null} publishTime\n     * @memberOf module:DashAdapter\n     * @instance\n     */\n    function getPublishTime(manifest) {\n        return dashManifestModel.getPublishTime(manifest);\n    }\n\n    /**\n     * Returns the patch locations of the MPD if existing and if they are still valid\n     * @param {object} manifest\n     * @returns {PatchLocation[]} patch location\n     * @memberOf module:DashAdapter\n     * @instance\n     */\n    function getPatchLocation(manifest) {\n        const patchLocations = dashManifestModel.getPatchLocation(manifest);\n        const publishTime = dashManifestModel.getPublishTime(manifest);\n\n        // short-circuit when no patch location or publish time exists\n        if (!patchLocations || patchLocations.length === 0 || !publishTime) {\n            return [];\n        }\n\n        return patchLocations.filter((patchLocation) => {\n            // check if the patch location has expired, if so do not consider it\n            return isNaN(patchLocation.ttl) || (publishTime.getTime() + patchLocation.ttl > new Date().getTime())\n        })\n    }\n\n    /**\n     * Checks if the manifest has a DVB profile\n     * @param {object} manifest\n     * @returns {boolean}\n     * @memberOf module:DashAdapter\n     * @instance\n     * @ignore\n     */\n    function getIsDVB(manifest) {\n        return dashManifestModel.hasProfile(manifest, PROFILE_DVB);\n    }\n\n    /**\n     * Checks if the manifest is actually just a patch manifest\n     * @param  {object} manifest\n     * @return {boolean}\n     * @memberOf module:DashAdapter\n     * @instance\n     */\n    function getIsPatch(manifest) {\n        return patchManifestModel.getIsPatch(manifest);\n    }\n\n    /**\n     * Returns the base urls for a given element\n     * @param {object} node\n     * @returns {BaseURL[]}\n     * @memberOf module:DashAdapter\n     * @instance\n     * @ignore\n     */\n    function getBaseURLsFromElement(node) {\n        return dashManifestModel.getBaseURLsFromElement(node);\n    }\n\n    /**\n     * Returns the function to sort the Representations\n     * @returns {function}\n     * @memberOf module:DashAdapter\n     * @instance\n     * @ignore\n     */\n    function getRepresentationSortFunction() {\n        return dashManifestModel.getRepresentationSortFunction();\n    }\n\n    /**\n     * Returns the codec for a given adaptation set and a given representation id.\n     * @param {object} adaptation\n     * @param {number} representationId\n     * @param {boolean} addResolutionInfo Defines whether to include resolution information in the output\n     * @returns {String} codec\n     * @memberOf module:DashAdapter\n     * @instance\n     */\n    function getCodec(adaptation, representationIndex, addResolutionInfo) {\n        return dashManifestModel.getCodec(adaptation, representationIndex, addResolutionInfo);\n    }\n\n    /**\n     * Returns the bandwidth for a given representation id and the corresponding period index\n     * @param {number} representationId\n     * @param {number} periodIdx\n     * @returns {number} bandwidth\n     * @memberOf module:DashAdapter\n     * @instance\n     */\n    function getBandwidthForRepresentation(representationId, periodIdx) {\n        let representation;\n        let period = getPeriod(periodIdx);\n\n        representation = findRepresentation(period, representationId);\n\n        return representation ? representation.bandwidth : null;\n    }\n\n    /**\n     * Returns the index for a given representation id\n     * @param {string} representationId\n     * @param {number} periodIdx\n     * @returns {number} index\n     * @memberOf module:DashAdapter\n     * @instance\n     */\n    function getIndexForRepresentation(representationId, periodIdx) {\n        let period = getPeriod(periodIdx);\n\n        return findRepresentationIndex(period, representationId);\n    }\n\n    /**\n     * Returns the voPeriod object for a given id\n     * @param {String} id\n     * @returns {object|null}\n     * @memberOf module:DashAdapter\n     * @instance\n     */\n    function getPeriodById(id) {\n        if (!id || voPeriods.length === 0) {\n            return null;\n        }\n        const periods = voPeriods.filter((p) => {\n            return p.id === id;\n        });\n\n        if (periods && periods.length > 0) {\n            return periods[0];\n        }\n\n        return null;\n    }\n\n    /**\n     * Checks if the given AdaptationSet is from the given media type\n     * @param {object} adaptation\n     * @param {string} type\n     * @return {boolean}\n     * @memberOf module:DashAdapter\n     * @instance\n     */\n    function getIsTypeOf(adaptation, type) {\n        return dashManifestModel.getIsTypeOf(adaptation, type);\n    }\n\n    function reset() {\n        voPeriods = [];\n    }\n\n    /**\n     * Checks if the supplied manifest is compatible for application of the supplied patch\n     * @param  {object}  manifest\n     * @param  {object}  patch\n     * @return {boolean}\n     * @memberOf module:DashAdapter\n     * @instance\n     */\n    function isPatchValid(manifest, patch) {\n        let manifestId = dashManifestModel.getId(manifest);\n        let patchManifestId = patchManifestModel.getMpdId(patch);\n        let manifestPublishTime = dashManifestModel.getPublishTime(manifest);\n        let patchPublishTime = patchManifestModel.getPublishTime(patch);\n        let originalManifestPublishTime = patchManifestModel.getOriginalPublishTime(patch);\n\n        // Patches are considered compatible if the following are true\n        // - MPD@id == Patch@mpdId\n        // - MPD@publishTime == Patch@originalPublishTime\n        // - MPD@publishTime < Patch@publishTime\n        // - All values in comparison exist\n        return !!(manifestId && patchManifestId && (manifestId == patchManifestId) &&\n            manifestPublishTime && originalManifestPublishTime && (manifestPublishTime.getTime() == originalManifestPublishTime.getTime()) &&\n            patchPublishTime && (manifestPublishTime.getTime() < patchPublishTime.getTime()));\n    }\n\n    /**\n     * Takes a given patch and applies it to the provided manifest, assumes patch is valid for manifest\n     * @param  {object} manifest\n     * @param  {object} patch\n     * @memberOf module:DashAdapter\n     * @instance\n     */\n    function applyPatchToManifest(manifest, patch) {\n        // get all operations from the patch and apply them in document order\n        patchManifestModel.getPatchOperations(patch)\n            .forEach((operation) => {\n                let result = operation.getMpdTarget(manifest);\n\n                // operation supplies a path that doesn't match mpd, skip\n                if (result === null) {\n                    return;\n                }\n\n                let { name, target, leaf } = result;\n\n                // short circuit for attribute selectors and text replacement\n                if (operation.xpath.findsAttribute() || name === '__text') {\n                    switch (operation.action) {\n                        case 'add':\n                        case 'replace':\n                            // add and replace are just setting the value\n                            target[name] = operation.value;\n                            break;\n                        case 'remove':\n                            // remove is deleting the value\n                            delete target[name];\n                            break;\n                    }\n                    return;\n                }\n\n                // determine the relative insert position prior to possible removal\n                let relativePosition = (target[name] || []).indexOf(leaf);\n                let insertBefore = (operation.position === 'prepend' || operation.position === 'before');\n\n                // perform removal operation first, we have already capture the appropriate relative position\n                if (operation.action === 'remove' || operation.action === 'replace') {\n                    // note that we ignore the 'ws' attribute of patch operations as it does not effect parsed mpd operations\n\n                    // purge the directly named entity\n                    if (!Array.isArray(target[name])) {\n                        delete target[name];\n                    } else if (relativePosition != -1) {\n                        // if we did have a positional reference we need to purge from array set and restore X2JS proper semantics\n                        let targetArray = target[name];\n                        targetArray.splice(relativePosition, 1);\n                        if (targetArray.length > 0) {\n                            target[name] = targetArray;\n                        } else {\n                            // all nodes of this type deleted, remove entry\n                            delete target[name];\n                        }\n                    }\n                }\n\n                // Perform any add/replace operations now, technically RFC5261 only allows a single element to take the\n                // place of a replaced element while the add case allows an arbitrary number of children.\n                // Due to the both operations requiring the same insertion logic they have been combined here and we will\n                // not enforce single child operations for replace, assertions should be made at patch parse time if necessary\n                if (operation.action === 'add' || operation.action === 'replace') {\n                    // value will be an object with element name keys pointing to arrays of objects\n                    Object.keys(operation.value).forEach((insert) => {\n                        let insertNodes = operation.value[insert];\n\n                        let updatedNodes = target[insert] || [];\n                        if (updatedNodes.length === 0 && target[insert]) {\n                            updatedNodes.push(target[insert]);\n                        }\n\n                        if (updatedNodes.length === 0) {\n                            // no original nodes for this element type\n                            updatedNodes = insertNodes;\n                        } else {\n                            // compute the position we need to insert at, default to end of set\n                            let position = updatedNodes.length;\n                            if (insert == name && relativePosition != -1) {\n                                // if the inserted element matches the operation target (not leaf) and there is a relative position we\n                                // want the inserted position to be set such that our insertion is relative to original position\n                                // since replace has modified the array length we reduce the insert point by 1\n                                position = relativePosition + (insertBefore ? 0 : 1) + (operation.action === 'replace' ? -1 : 0);\n                            } else {\n                                // otherwise we are in an add append/prepend case or replace case that removed the target name completely\n                                position = insertBefore ? 0 : updatedNodes.length;\n                            }\n\n                            // we dont have to perform element removal for the replace case as that was done above\n                            updatedNodes.splice.apply(updatedNodes, [position, 0].concat(insertNodes));\n                        }\n\n                        // now we properly reset the element keys on the target to match parsing semantics\n                        target[insert] = updatedNodes;\n                    });\n                }\n            });\n    }\n\n    // #endregion PUBLIC FUNCTIONS\n\n    // #region PRIVATE FUNCTIONS\n    // --------------------------------------------------\n    function getManifest(externalManifest) {\n        return externalManifest ? externalManifest : voPeriods.length > 0 ? voPeriods[0].mpd.manifest : null;\n    }\n\n    function getAdaptationForMediaInfo(mediaInfo) {\n        try {\n            const selectedVoPeriod = getPeriodForStreamInfo(mediaInfo.streamInfo, voPeriods);\n            const voAdaptations = dashManifestModel.getAdaptationsForPeriod(selectedVoPeriod);\n\n            if (!mediaInfo || !mediaInfo.streamInfo || mediaInfo.streamInfo.id === undefined || !voAdaptations) {\n                return null;\n            }\n            return voAdaptations[mediaInfo.index];\n        } catch (e) {\n            return null;\n        }\n    }\n\n    function getPeriodForStreamInfo(streamInfo, voPeriodsArray) {\n        const ln = voPeriodsArray.length;\n\n        for (let i = 0; i < ln; i++) {\n            let voPeriod = voPeriodsArray[i];\n\n            if (streamInfo && streamInfo.id === voPeriod.id) {\n                return voPeriod;\n            }\n        }\n\n        return null;\n    }\n\n    function convertAdaptationToMediaInfo(adaptation) {\n        if (!adaptation) {\n            return null;\n        }\n\n        let mediaInfo = new MediaInfo();\n        const realAdaptation = adaptation.period.mpd.manifest.Period[adaptation.period.index].AdaptationSet[adaptation.index];\n\n        mediaInfo.id = adaptation.id;\n        mediaInfo.index = adaptation.index;\n        mediaInfo.type = adaptation.type;\n        mediaInfo.streamInfo = convertPeriodToStreamInfo(adaptation.period);\n        mediaInfo.representationCount = dashManifestModel.getRepresentationCount(realAdaptation);\n        mediaInfo.labels = dashManifestModel.getLabelsForAdaptation(realAdaptation);\n        mediaInfo.lang = dashManifestModel.getLanguageForAdaptation(realAdaptation);\n        mediaInfo.segmentAlignment = dashManifestModel.getSegmentAlignment(realAdaptation);\n        mediaInfo.subSegmentAlignment = dashManifestModel.getSubSegmentAlignment(realAdaptation);\n        mediaInfo.viewpoint = dashManifestModel.getViewpointForAdaptation(realAdaptation);\n        mediaInfo.accessibility = dashManifestModel.getAccessibilityForAdaptation(realAdaptation);\n        if (mediaInfo.accessibility.filter(function (accessibility) {\n            if (accessibility.schemeIdUri && (accessibility.schemeIdUri.search('cea-608') >= 0) && typeof (cea608parser) !== 'undefined') {\n                return true;\n            }\n        })[0]) {\n            mediaInfo.embeddedCaptions = true;\n        }\n        mediaInfo.audioChannelConfiguration = dashManifestModel.getAudioChannelConfigurationForAdaptation(realAdaptation);\n        if (mediaInfo.audioChannelConfiguration.length === 0 && realAdaptation.Representation && realAdaptation.Representation.length > 0) {\n            mediaInfo.audioChannelConfiguration = dashManifestModel.getAudioChannelConfigurationForRepresentation(realAdaptation.Representation[0]);\n        }\n        mediaInfo.roles = dashManifestModel.getRolesForAdaptation(realAdaptation);\n        mediaInfo.codec = dashManifestModel.getCodec(realAdaptation);\n        mediaInfo.mimeType = dashManifestModel.getMimeType(realAdaptation);\n        mediaInfo.contentProtection = dashManifestModel.getContentProtectionByAdaptation(realAdaptation);\n        mediaInfo.bitrateList = dashManifestModel.getBitrateListForAdaptation(realAdaptation);\n        mediaInfo.selectionPriority = dashManifestModel.getSelectionPriority(realAdaptation);\n\n        if (mediaInfo.contentProtection && mediaInfo.contentProtection.length > 0) {\n            mediaInfo.contentProtection = _applyContentProtectionReferencing(mediaInfo.contentProtection, adaptation.period.mpd.manifest);\n            mediaInfo.contentProtection = _applyDefaultKeyId(mediaInfo.contentProtection);\n            mediaInfo.normalizedKeyIds = _getNormalizedKeyIds(mediaInfo.contentProtection);\n        }\n\n        mediaInfo.isText = dashManifestModel.getIsText(realAdaptation);\n        mediaInfo.essentialProperties = dashManifestModel.getCombinedEssentialPropertiesForAdaptationSet(realAdaptation);\n        mediaInfo.supplementalProperties = dashManifestModel.getCombinedSupplementalPropertiesForAdaptationSet(realAdaptation);\n        mediaInfo.isFragmented = dashManifestModel.getIsFragmented(realAdaptation);\n        mediaInfo.isEmbedded = false;\n        mediaInfo.adaptationSetSwitchingCompatibleIds = _getAdaptationSetSwitchingCompatibleIds(mediaInfo);\n\n        return mediaInfo;\n    }\n\n    function _applyDefaultKeyId(contentProtection) {\n        const keyIds = contentProtection.map(cp => cp.cencDefaultKid).filter(kid => kid !== null);\n        if (keyIds.length) {\n            const keyId = keyIds[0];\n            contentProtection.forEach(cp => {\n                cp.keyId = keyId;\n            });\n        }\n\n        return contentProtection\n    }\n\n    function _applyContentProtectionReferencing(contentProtection, manifest) {\n        if (!contentProtection || !contentProtection.length || !manifest) {\n            return contentProtection\n        }\n\n        const allContentProtectionElements = dashManifestModel.getContentProtectionByManifest(manifest)\n        if (!allContentProtectionElements || !allContentProtectionElements.length) {\n            return contentProtection\n        }\n\n        const contentProtectionElementsByRefId = allContentProtectionElements.reduce((acc, curr) => {\n            if (curr.refId) {\n                acc.set(curr.refId, curr);\n            }\n            return acc\n        }, new Map())\n\n        return contentProtection.map((contentProtectionElement) => {\n            if (contentProtectionElement.ref) {\n                const contentProtectionElementSource = contentProtectionElementsByRefId.get(contentProtectionElement.ref);\n                if (contentProtectionElementSource) {\n                    contentProtectionElement.mergeAttributesFromReference(contentProtectionElementSource)\n                }\n            }\n            return contentProtectionElement\n        })\n    }\n\n    function _getNormalizedKeyIds(contentProtection) {\n        const normalizedKeyIds = new Set();\n        contentProtection.forEach((contentProtectionElement) => {\n            if (contentProtectionElement.cencDefaultKid && typeof contentProtectionElement.cencDefaultKid === 'string') {\n                normalizedKeyIds.add(contentProtectionElement.cencDefaultKid.replace(/-/g, '').toLowerCase());\n            }\n        })\n\n        return normalizedKeyIds\n    }\n\n    function _getAdaptationSetSwitchingCompatibleIds(mediaInfo) {\n        if (!mediaInfo || !mediaInfo.supplementalProperties) {\n            return []\n        }\n\n        let adaptationSetSwitchingCompatibleIds = []\n        const adaptationSetSwitching = mediaInfo.supplementalProperties.filter((sp) => {\n            return sp.schemeIdUri === DashConstants.ADAPTATION_SET_SWITCHING_SCHEME_ID_URI\n        });\n        if (adaptationSetSwitching && adaptationSetSwitching.length > 0) {\n            const ids = adaptationSetSwitching[0].value.toString().split(',')\n            adaptationSetSwitchingCompatibleIds = ids.map((id) => {\n                return id\n            })\n        }\n\n        return adaptationSetSwitchingCompatibleIds\n    }\n\n    function convertVideoInfoToEmbeddedTextInfo(mediaInfo, channel, lang) {\n        mediaInfo.id = channel; // CC1, CC2, CC3, or CC4\n        mediaInfo.index = 100 + parseInt(channel.substring(2, 3));\n        mediaInfo.type = constants.TEXT;\n        mediaInfo.codec = 'cea-608-in-SEI';\n        mediaInfo.isEmbedded = true;\n        mediaInfo.isFragmented = false;\n        mediaInfo.lang = bcp47Normalize(lang);\n        mediaInfo.roles = [{ schemeIdUri: 'urn:mpeg:dash:role:2011', value: 'caption' }];\n    }\n\n    function convertVideoInfoToThumbnailInfo(mediaInfo) {\n        mediaInfo.type = constants.IMAGE;\n    }\n\n    function convertPeriodToStreamInfo(period) {\n        let streamInfo = new StreamInfo();\n        const THRESHOLD = 1;\n\n        streamInfo.id = period.id;\n        streamInfo.index = period.index;\n        streamInfo.start = period.start;\n        streamInfo.duration = period.duration;\n        streamInfo.manifestInfo = convertMpdToManifestInfo(period.mpd);\n        streamInfo.isLast = period.mpd.manifest.Period.length === 1 || Math.abs((streamInfo.start + streamInfo.duration) - streamInfo.manifestInfo.duration) < THRESHOLD;\n        streamInfo.isEncrypted = period.isEncrypted;\n\n        return streamInfo;\n    }\n\n    function convertMpdToManifestInfo(mpd) {\n        let manifestInfo = new ManifestInfo();\n\n        manifestInfo.dvrWindowSize = mpd.timeShiftBufferDepth;\n        manifestInfo.loadedTime = mpd.manifest.loadedTime;\n        manifestInfo.availableFrom = mpd.availabilityStartTime;\n        manifestInfo.minBufferTime = mpd.manifest.minBufferTime;\n        manifestInfo.maxFragmentDuration = mpd.maxSegmentDuration;\n        manifestInfo.duration = dashManifestModel.getDuration(mpd.manifest);\n        manifestInfo.isDynamic = dashManifestModel.getIsDynamic(mpd.manifest);\n        manifestInfo.serviceDescriptions = dashManifestModel.getServiceDescriptions(mpd.manifest);\n        manifestInfo.protocol = mpd.manifest.protocol;\n\n        return manifestInfo;\n    }\n\n    function checkConfig() {\n        if (!constants) {\n            throw new Error('setConfig function has to be called previously');\n        }\n    }\n\n    function getPeriod(periodIdx) {\n        return voPeriods.length > 0 ? voPeriods[0].mpd.manifest.Period[periodIdx] : null;\n    }\n\n    function findRepresentationIndex(period, representationId) {\n        const index = findRepresentation(period, representationId, true);\n\n        return index !== null ? index : -1;\n    }\n\n    function findRepresentation(period, representationId, returnIndex) {\n        let adaptationSet,\n            adaptationSetArray,\n            representation,\n            representationArray,\n            adaptationSetArrayIndex,\n            representationArrayIndex;\n\n        if (period) {\n            adaptationSetArray = period.AdaptationSet;\n            for (adaptationSetArrayIndex = 0; adaptationSetArrayIndex < adaptationSetArray.length; adaptationSetArrayIndex = adaptationSetArrayIndex + 1) {\n                adaptationSet = adaptationSetArray[adaptationSetArrayIndex];\n                representationArray = adaptationSet.Representation;\n                for (representationArrayIndex = 0; representationArrayIndex < representationArray.length; representationArrayIndex = representationArrayIndex + 1) {\n                    representation = representationArray[representationArrayIndex];\n                    if (representationId === representation.id) {\n                        if (returnIndex) {\n                            return representationArrayIndex;\n                        } else {\n                            return representation;\n                        }\n                    }\n                }\n            }\n        }\n\n        return null;\n    }\n\n    // #endregion PRIVATE FUNCTIONS\n\n    instance = {\n        applyPatchToManifest,\n        areMediaInfosEqual,\n        getAllMediaInfoForType,\n        getAvailabilityStartTime,\n        getBandwidthForRepresentation,\n        getBaseURLsFromElement,\n        getCodec,\n        getContentSteering,\n        getDuration,\n        getEssentialPropertiesForAdaptationSet,\n        getEssentialPropertiesForRepresentation,\n        getEvent,\n        getEventsFor,\n        getIndexForRepresentation,\n        getIsDVB,\n        getIsDynamic,\n        getIsPatch,\n        getIsTextTrack,\n        getIsTypeOf,\n        getLocation,\n        getMainAdaptationForType,\n        getManifestUpdatePeriod,\n        getMediaInfoForType,\n        getMpd,\n        getPatchLocation,\n        getPeriodById,\n        getProducerReferenceTimes,\n        getPublishTime,\n        getRealAdaptation,\n        getRealPeriodByIndex,\n        getRegularPeriods,\n        getRepresentationSortFunction,\n        getStreamsInfo,\n        getSuggestedPresentationDelay,\n        getSupplementalCodecs,\n        getUTCTimingSources,\n        getVoRepresentations,\n        isPatchValid,\n        reset,\n        setConfig,\n        updatePeriods,\n    };\n\n    setup();\n    return instance;\n}\n\nDashAdapter.__dashjs_factory_name = 'DashAdapter';\nexport default FactoryMaker.getSingletonFactory(DashAdapter);\n","import type { Id3Frame } from './Id3Frame.js';\nimport type { RawId3Frame } from './util/RawFrame.js';\nimport { decodeId3Frame } from './util/decodeId3Frame.js';\nimport { getId3FrameData } from './util/getId3FrameData.js';\nimport { isId3Footer } from './util/isId3Footer.js';\nimport { isId3Header } from './util/isId3Header.js';\nimport { readId3Size } from './util/readId3Size.js';\n\nconst HEADER_FOOTER_SIZE = 10;\nconst FRAME_SIZE = 10;\n\n/**\n * Returns an array of ID3 frames found in all the ID3 tags in the id3Data\n *\n * @param id3Data - The ID3 data containing one or more ID3 tags\n *\n * @returns Array of ID3 frame objects\n *\n * @group ID3\n *\n * @beta\n */\nexport function getId3Frames(id3Data: Uint8Array): Id3Frame[] {\n\tlet offset = 0;\n\tconst frames: Id3Frame[] = [];\n\n\twhile (isId3Header(id3Data, offset)) {\n\t\tconst size = readId3Size(id3Data, offset + 6);\n\n\t\tif ((id3Data[offset + 5] >> 6) & 1) {\n\t\t\t// skip extended header\n\t\t\toffset += HEADER_FOOTER_SIZE;\n\t\t}\n\t\t// skip past ID3 header\n\t\toffset += HEADER_FOOTER_SIZE;\n\t\tconst end = offset + size;\n\t\t// loop through frames in the ID3 tag\n\t\twhile (offset + FRAME_SIZE < end) {\n\t\t\tconst frameData: RawId3Frame = getId3FrameData(id3Data.subarray(offset));\n\t\t\tconst frame: Id3Frame | undefined = decodeId3Frame(frameData);\n\t\t\tif (frame) {\n\t\t\t\tframes.push(frame);\n\t\t\t}\n\n\t\t\t// skip frame header and frame data\n\t\t\toffset += frameData.size + HEADER_FOOTER_SIZE;\n\t\t}\n\n\t\tif (isId3Footer(id3Data, offset)) {\n\t\t\toffset += HEADER_FOOTER_SIZE;\n\t\t}\n\t}\n\n\treturn frames;\n}\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * Static methods for rounding decimals\n *\n * Modified version of the CC0-licenced example at:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/round\n *\n * @export\n * @class Round10\n * @ignore\n */\nexport default class Round10 {\n    /**\n    * Decimal round.\n    *\n    * @param {Number}  value The number.\n    * @param {Integer} exp   The exponent (the 10 logarithm of the adjustment base).\n    * @returns {Number} The adjusted value.\n    * @ignore\n    */\n    static round10(value, exp) {\n        return _decimalAdjust('round', value, exp);\n    }\n}\n\n/**\n * Decimal adjustment of a number.\n *\n * @param {String}  type  The type of adjustment.\n * @param {Number}  value The number.\n * @param {Integer} exp   The exponent (the 10 logarithm of the adjustment base).\n * @returns {Number} The adjusted value.\n * @ignore\n */\nfunction _decimalAdjust(type, value, exp) {\n    // If the exp is undefined or zero...\n    if (typeof exp === 'undefined' || +exp === 0) {\n        return Math[type](value);\n    }\n\n    value = +value;\n    exp = +exp;\n\n    // If the value is not a number or the exp is not an integer...\n    if (value === null || isNaN(value) || !(typeof exp === 'number' && exp % 1 === 0)) {\n        return NaN;\n    }\n\n    // Shift\n    value = value.toString().split('e');\n    value = Math[type](+(value[0] + 'e' + (value[1] ? (+value[1] - exp) : -exp)));\n\n    // Shift back\n    value = value.toString().split('e');\n    return +(value[0] + 'e' + (value[1] ? (+value[1] + exp) : exp));\n}","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nclass MetricsList {\n    constructor() {\n        this.TcpList = [];\n        this.HttpList = [];\n        this.RepSwitchList = [];\n        this.BufferLevel = [];\n        this.BufferState = [];\n        this.PlayList = [];\n        this.DroppedFrames = [];\n        this.SchedulingInfo = [];\n        this.DVRInfo = [];\n        this.ManifestUpdate = [];\n        this.RequestsQueue = null;\n        this.DVBErrors = [];\n    }\n}\n\nexport default MetricsList;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nclass RepresentationSwitch {\n    /**\n     * @description This Object holds reference to the info at quality switch between two representations.\n     */\n    constructor() {\n\n        /**\n         * Time of the switch event.\n         * @public\n         */\n        this.t = null;\n        /**\n         * The media presentation time of the earliest access unit\n         * (out of all media content components) played out from\n         * the Representation.\n         *\n         * @public\n         */\n        this.mt = null;\n        /**\n         * Value of Representation@id identifying the switch-to Representation.\n         * @public\n         */\n        this.to = null;\n        /**\n         * If not present, this metrics concerns the Representation as a whole.\n         * If present, lto indicates the value of SubRepresentation@level within\n         * Representation identifying the switch-to level of the Representation.\n         *\n         * @public\n         */\n        this.lto = null;\n\n    }\n}\n\nexport default RepresentationSwitch;","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * @class\n * @ignore\n */\nclass BufferLevel {\n    /**\n     * @description This Object holds reference to the current buffer level and the time it was recorded.\n     */\n    constructor() {\n        /**\n         * Real-Time | Time of the measurement of the buffer level.\n         * @public\n         */\n        this.t = null;\n        /**\n         * Level of the buffer in milliseconds. Indicates the playout duration for which\n         * media data of all active media components is available starting from the\n         * current playout time.\n         * @public\n         */\n        this.level = null;\n    }\n}\n\nexport default BufferLevel;","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport MetricsConstants from '../../constants/MetricsConstants.js';\n\n/**\n * @class\n * @ignore\n */\nclass BufferState {\n    /**\n     * @description This Object holds reference to the current buffer state of the video element.\n     */\n    constructor() {\n        /**\n         * The Buffer Level Target determined by the BufferLevelRule.\n         * @public\n         */\n        this.target = null;\n        /**\n         * Current buffer state. Will be MetricsConstants.BUFFER_EMPTY or MetricsConstants.BUFFER_LOADED.\n         * @public\n         */\n        this.state = MetricsConstants.BUFFER_EMPTY;\n    }\n}\n\nexport default BufferState;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * @class\n * @ignore\n */\nclass DVRInfo {\n    /**\n     * @description This Object holds reference to DVR availability window information.\n     */\n    constructor() {\n\n        /**\n         * The current time of the video element when this was created.\n         * @public\n         */\n        this.time = null;\n        /**\n         * The current Segment Availability Range as an object with start and end properties.\n         * It's delta defined by the timeShiftBufferDepth MPD attribute.\n         * @public\n         */\n        this.range = null;\n        /**\n         * Reference to the internal ManifestInfo.js VO.\n         * @public\n         */\n        this.manifestInfo = null;\n    }\n}\n\nexport default DVRInfo;","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nclass DroppedFrames {\n    /**\n     * @description This Object holds reference to DroppedFrames count and the time it was recorded.\n     */\n    constructor()\n    {\n        /**\n         * Real-Time | Time of the measurement of the dropped frames.\n         * @public\n         */\n        this.time = null;\n        /**\n         * Number of dropped frames\n         * @public\n         */\n        this.droppedFrames = null;\n    }\n}\n\nexport default DroppedFrames;","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @classdesc This Object holds reference to the manifest update information.\n * @ignore\n */\nclass ManifestUpdate {\n    /**\n     * @class\n     */\n    constructor() {\n\n        /**\n         * Media Type Video | Audio | FragmentedText\n         * @public\n         */\n        this.mediaType = null;\n        /**\n         * MPD Type static | dynamic\n         * @public\n         */\n        this.type = null;\n        /**\n         * When this manifest update was requested\n         * @public\n         */\n        this.requestTime = null;\n        /**\n         * When this manifest update was received\n         * @public\n         */\n        this.fetchTime = null;\n        /**\n         * Calculated Availability Start time of the stream.\n         * @public\n         */\n        this.availabilityStartTime = null;\n        /**\n         * the seek point (liveEdge for dynamic, Stream[0].startTime for static)\n         * @public\n         */\n        this.presentationStartTime = 0;\n        /**\n         * The calculated difference between the server and client wall clock time\n         * @public\n         */\n        this.clientTimeOffset = 0;\n        /**\n         * Actual element.currentTime\n         * @public\n         */\n        this.currentTime = null;\n        /**\n         * Actual element.ranges\n         * @public\n         */\n        this.buffered = null;\n        /**\n         * Static is fixed value of zero. dynamic should be ((Now-@availabilityStartTime) - elementCurrentTime)\n         * @public\n         */\n        this.latency = 0;\n        /**\n         * Array holding list of StreamInfo VO Objects\n         * @public\n         */\n        this.streamInfo = [];\n        /**\n         * Array holding list of ManifestUpdateRepresentationInfo Objects\n         * @public\n         */\n        this.representationInfo = [];\n\n    }\n}\n\n/**\n * @classdesc This Object holds reference to the current period's stream information when the manifest was updated.\n * @ignore\n */\nclass ManifestUpdateStreamInfo {\n    /**\n     * @class\n     */\n    constructor() {\n        /**\n         * Stream@id\n         * @public\n         */\n        this.id = null;\n        /**\n         * Period Index\n         * @public\n         */\n        this.index = null;\n        /**\n         * Stream@start\n         * @public\n         */\n        this.start = null;\n        /**\n         * Stream@duration\n         * @public\n         */\n        this.duration = null;\n    }\n}\n\n/**\n * @classdesc This Object holds reference to the current representation's info when the manifest was updated.\n * @ignore\n */\nclass ManifestUpdateRepresentationInfo {\n    /**\n     * @class\n     */\n    constructor() {\n        /**\n         * Track@id\n         * @public\n         */\n        this.id = null;\n        /**\n         * Representation Index\n         * @public\n         */\n        this.index = null;\n        /**\n         * Media Type Video | Audio | FragmentedText\n         * @public\n         */\n        this.mediaType = null;\n        /**\n         * Holds reference to @presentationTimeOffset\n         * @public\n         */\n        this.presentationTimeOffset = null;\n        /**\n         * Holds reference to @startNumber\n         * @public\n         */\n        this.startNumber = null;\n    }\n}\n\nexport { ManifestUpdate, ManifestUpdateStreamInfo, ManifestUpdateRepresentationInfo };\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nclass SchedulingInfo {\n    /**\n     * @description This Object holds reference to the index handling of the current fragment being loaded or executed.\n     */\n    constructor() {\n\n        /**\n         * Type of stream Audio | Video | FragmentedText\n         * @public\n         */\n        this.mediaType = null;\n        /**\n         * Time of the scheduling event.\n         * @public\n         */\n        this.t = null;\n\n        /**\n         * Type of fragment (initialization | media)\n         * @public\n         */\n        this.type = null;\n        /**\n         * Presentation start time of fragment\n         * @public\n         */\n        this.startTime = null;\n        /**\n         * Availability start time of fragment\n         * @public\n         */\n        this.availabilityStartTime = null;\n        /**\n         * Duration of fragment\n         * @public\n         */\n        this.duration = null;\n        /**\n         * Bandwidth of fragment\n         * @public\n         */\n        this.bandwidth = null;\n        /**\n         * Range of fragment\n         * @public\n         */\n        this.range = null;\n\n        /**\n         * Current state of fragment\n         * @public\n         */\n        this.state = null;\n    }\n}\n\nexport default SchedulingInfo;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nclass RequestsQueue {\n    /**\n     * @description This Object holds reference to Fragment Model's request queues\n     */\n    constructor() {\n\n        /**\n         * Array of all of the requests that have begun to load\n         * This request may not make it into the executed queue if it is abandon due to ABR rules for example.\n         * @public\n         */\n        this.loadingRequests = [];\n        /**\n         * Array of the The requests that have completed\n         * @public\n         */\n        this.executedRequests = [];\n    }\n}\n\nexport default RequestsQueue;","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport Constants from '../constants/Constants.js';\nimport MetricsConstants from '../constants/MetricsConstants.js';\nimport MetricsList from '../vo/MetricsList.js';\nimport {HTTPRequest, HTTPRequestTrace} from '../vo/metrics/HTTPRequest.js';\nimport TrackSwitch from '../vo/metrics/RepresentationSwitch.js';\nimport BufferLevel from '../vo/metrics/BufferLevel.js';\nimport BufferState from '../vo/metrics/BufferState.js';\nimport DVRInfo from '../vo/metrics/DVRInfo.js';\nimport DroppedFrames from '../vo/metrics/DroppedFrames.js';\nimport {\n    ManifestUpdate,\n    ManifestUpdateStreamInfo,\n    ManifestUpdateRepresentationInfo\n} from '../vo/metrics/ManifestUpdate.js';\nimport SchedulingInfo from '../vo/metrics/SchedulingInfo.js';\nimport EventBus from '../../core/EventBus.js';\nimport RequestsQueue from '../vo/metrics/RequestsQueue.js';\nimport Events from '../../core/events/Events.js';\nimport FactoryMaker from '../../core/FactoryMaker.js';\n\nfunction MetricsModel(config) {\n\n    config = config || {};\n\n    const settings = config.settings;\n\n    let context = this.context;\n    let eventBus = EventBus(context).getInstance();\n\n    let instance,\n        streamMetrics;\n\n    function setup() {\n        streamMetrics = {};\n    }\n\n    function metricsChanged() {\n        eventBus.trigger(Events.METRICS_CHANGED);\n    }\n\n    function metricChanged(mediaType) {\n        eventBus.trigger(Events.METRIC_CHANGED, { mediaType: mediaType });\n        metricsChanged();\n    }\n\n    function metricUpdated(mediaType, metricType, vo) {\n        eventBus.trigger(Events.METRIC_UPDATED, { mediaType: mediaType, metric: metricType, value: vo });\n        metricChanged(mediaType);\n    }\n\n    function metricAdded(mediaType, metricType, vo) {\n        eventBus.trigger(Events.METRIC_ADDED, { mediaType: mediaType, metric: metricType, value: vo });\n        metricChanged(mediaType);\n    }\n\n    function clearCurrentMetricsForType(type) {\n        delete streamMetrics[type];\n        metricChanged(type);\n    }\n\n    function clearAllCurrentMetrics() {\n        streamMetrics = {};\n        metricsChanged();\n    }\n\n    function getMetricsFor(type, readOnly) {\n        let metrics = null;\n\n        if (!type) {\n            return metrics;\n        }\n\n        if (streamMetrics.hasOwnProperty(type)) {\n            metrics = streamMetrics[type];\n        } else if (!readOnly) {\n            metrics = new MetricsList();\n            streamMetrics[type] = metrics;\n        }\n\n        return metrics;\n    }\n\n    function pushMetrics(type, list, value) {\n        let metrics = getMetricsFor(type);\n        if (metrics !== null) {\n            metrics[list].push(value);\n            if (metrics[list].length > settings.get().streaming.metrics.maxListDepth) {\n                metrics[list].shift();\n            }\n        }\n    }\n\n    function appendHttpTrace(httpRequest, s, d, b) {\n        let vo = new HTTPRequestTrace();\n\n        vo.s = s;\n        vo.d = d;\n        vo.b = b;\n\n        httpRequest.trace.push(vo);\n\n        if (!httpRequest.interval) {\n            httpRequest.interval = 0;\n        }\n\n        httpRequest.interval += d;\n\n        return vo;\n    }\n\n    function addHttpRequest(request, response, traces, cmsd) {\n        let vo = new HTTPRequest();\n\n        // ISO 23009-1 D.4.3 NOTE 2:\n        // All entries for a given object will have the same URL and range\n        // and so can easily be correlated. If there were redirects or\n        // failures there will be one entry for each redirect/failure.\n        // The redirect-to URL or alternative url (where multiple have been\n        // provided in the MPD) will appear as the actualurl of the next\n        // entry with the same url value.\n        if (response.url && (response.url !== request.url)) {\n            const adjustedRequest = {\n                mediaType: request.mediaType,\n                type: request.type,\n                url: request.url,\n                quality: request.quality,\n                serviceLocation: null,\n                range: request.range,\n                startDate: request.startDate,\n                firstByteDate: null,\n                endDate: null,\n                duration: request.duration,\n                fileLoaderType: request.fileLoaderType,\n                resourceTimingValues: request.resourceTimingValues\n            }\n            const adjustedResponse = {\n                url: null,\n                status: null,\n                headers: null,\n\n            }\n\n            addHttpRequest(adjustedRequest, adjustedResponse, null, cmsd)\n            vo.actualurl = response.url;\n        }\n\n\n        vo.tcpid = null;\n        vo.type = request.type;\n        vo.url = request.url;\n        vo.range = request.range || null;\n        vo.trequest = request.startDate;\n        vo.tresponse = request.firstByteDate;\n        vo.responsecode = response.status;\n        vo.cmsd = cmsd;\n\n        vo._tfinish = request.endDate;\n        vo._stream = request.mediaType;\n        vo._mediaduration = request.duration;\n        vo._quality = request.quality;\n        // For backward compatibility, convert response headers into string representation\n        vo._responseHeaders = '';\n        for (const key in response.headers) {\n            vo._responseHeaders += key + ': ' + response.headers[key] + '\\r\\n';\n        }\n        vo._serviceLocation = request.serviceLocation || null;\n        vo._fileLoaderType = request.fileLoaderType;\n        vo._resourceTimingValues = request.resourceTimingValues;\n        vo._streamId = request && request.representation && request.representation.mediaInfo && request.representation.mediaInfo.streamInfo ? request.representation.mediaInfo.streamInfo.id : null;\n\n        if (traces) {\n            traces.forEach(trace => {\n                appendHttpTrace(vo, trace.s, trace.d, trace.b, trace.t);\n            });\n        } else {\n            // The interval and trace shall be absent for redirect and failure records.\n            delete vo.interval;\n            delete vo.trace;\n        }\n\n        pushAndNotify(request.mediaType, MetricsConstants.HTTP_REQUEST, vo);\n    }\n\n    function addRepresentationSwitch(mediaType, t, mt, to, lto) {\n        let vo = new TrackSwitch();\n\n        vo.t = t;\n        vo.mt = mt;\n        vo.to = to;\n\n        if (lto) {\n            vo.lto = lto;\n        } else {\n            delete vo.lto;\n        }\n\n        pushAndNotify(mediaType, MetricsConstants.TRACK_SWITCH, vo);\n    }\n\n    function pushAndNotify(mediaType, metricType, metricObject) {\n        pushMetrics(mediaType, metricType, metricObject);\n        metricAdded(mediaType, metricType, metricObject);\n    }\n\n    function addBufferLevel(mediaType, t, level) {\n        let vo = new BufferLevel();\n        vo.t = t;\n        vo.level = level;\n\n        pushAndNotify(mediaType, MetricsConstants.BUFFER_LEVEL, vo);\n    }\n\n    function addBufferState(mediaType, state, target) {\n        let vo = new BufferState();\n        vo.target = target;\n        vo.state = state;\n\n        pushAndNotify(mediaType, MetricsConstants.BUFFER_STATE, vo);\n    }\n\n    function addDVRInfo(mediaType, currentTime, mpd, range) {\n        let vo = new DVRInfo();\n        vo.time = currentTime;\n        vo.range = range;\n        vo.manifestInfo = mpd;\n\n        pushAndNotify(mediaType, MetricsConstants.DVR_INFO, vo);\n    }\n\n    function addDroppedFrames(mediaType, quality) {\n        let vo = new DroppedFrames();\n        let list = getMetricsFor(mediaType).DroppedFrames;\n\n        if (!quality) {\n            return;\n        }\n\n        vo.time = quality.creationTime;\n        vo.droppedFrames = quality.droppedVideoFrames;\n\n        if (list.length > 0 && list[list.length - 1] == vo) {\n            return;\n        }\n\n        pushAndNotify(mediaType, MetricsConstants.DROPPED_FRAMES, vo);\n    }\n\n    function addSchedulingInfo(mediaType, t, type, startTime, availabilityStartTime, duration, bandwidth, range, state) {\n        let vo = new SchedulingInfo();\n\n        vo.mediaType = mediaType;\n        vo.t = t;\n\n        vo.type = type;\n        vo.startTime = startTime;\n        vo.availabilityStartTime = availabilityStartTime;\n        vo.duration = duration;\n        vo.bandwidth = bandwidth;\n        vo.range = range;\n\n        vo.state = state;\n\n        pushAndNotify(mediaType, MetricsConstants.SCHEDULING_INFO, vo);\n    }\n\n    function addRequestsQueue(mediaType, loadingRequests, executedRequests) {\n        let vo = new RequestsQueue();\n\n        vo.loadingRequests = loadingRequests;\n        vo.executedRequests = executedRequests;\n\n        getMetricsFor(mediaType).RequestsQueue = vo;\n        metricAdded(mediaType, MetricsConstants.REQUESTS_QUEUE, vo);\n    }\n\n    function addManifestUpdate(mediaType, type, requestTime, fetchTime) {\n        let vo = new ManifestUpdate();\n\n        vo.mediaType = mediaType;\n        vo.type = type;\n        vo.requestTime = requestTime; // when this manifest update was requested\n        vo.fetchTime = fetchTime; // when this manifest update was received\n\n        pushMetrics(Constants.STREAM, MetricsConstants.MANIFEST_UPDATE, vo);\n        metricAdded(mediaType, MetricsConstants.MANIFEST_UPDATE, vo);\n    }\n\n    function updateManifestUpdateInfo(manifestUpdate, updatedFields) {\n        if (manifestUpdate) {\n            for (let field in updatedFields) {\n                manifestUpdate[field] = updatedFields[field];\n            }\n\n            metricUpdated(manifestUpdate.mediaType, MetricsConstants.MANIFEST_UPDATE, manifestUpdate);\n        }\n    }\n\n    function addManifestUpdateStreamInfo(manifestUpdate, id, index, start, duration) {\n        if (manifestUpdate) {\n            let vo = new ManifestUpdateStreamInfo();\n\n            vo.id = id;\n            vo.index = index;\n            vo.start = start;\n            vo.duration = duration;\n\n            manifestUpdate.streamInfo.push(vo);\n            metricUpdated(manifestUpdate.mediaType, MetricsConstants.MANIFEST_UPDATE_STREAM_INFO, manifestUpdate);\n        }\n    }\n\n    function addManifestUpdateRepresentationInfo(manifestUpdate, representation, mediaType) {\n        if (manifestUpdate && manifestUpdate.representationInfo) {\n\n            const vo = new ManifestUpdateRepresentationInfo();\n            vo.id = representation ? representation.id : null;\n            vo.index = representation ? representation.index : null;\n            vo.mediaType = mediaType;\n            vo.startNumber = representation ? representation.startNumber : null;\n            vo.presentationTimeOffset = representation ? representation.presentationTimeOffset : null;\n\n            manifestUpdate.representationInfo.push(vo);\n            metricUpdated(manifestUpdate.mediaType, MetricsConstants.MANIFEST_UPDATE_TRACK_INFO, manifestUpdate);\n        }\n    }\n\n    function addPlayList(vo) {\n        if (vo.trace && Array.isArray(vo.trace)) {\n            vo.trace.forEach(trace => {\n                if (trace.hasOwnProperty('subreplevel') && !trace.subreplevel) {\n                    delete trace.subreplevel;\n                }\n            });\n        } else {\n            delete vo.trace;\n        }\n\n        pushAndNotify(Constants.STREAM, MetricsConstants.PLAY_LIST, vo);\n    }\n\n    function addDVBErrors(vo) {\n        pushAndNotify(Constants.STREAM, MetricsConstants.DVB_ERRORS, vo);\n    }\n\n    instance = {\n        addBufferLevel,\n        addBufferState,\n        addDVBErrors,\n        addDVRInfo,\n        addDroppedFrames,\n        addHttpRequest,\n        addManifestUpdate,\n        addManifestUpdateRepresentationInfo,\n        addManifestUpdateStreamInfo,\n        addPlayList,\n        addRepresentationSwitch,\n        addRequestsQueue,\n        addSchedulingInfo,\n        clearAllCurrentMetrics,\n        clearCurrentMetricsForType,\n        getMetricsFor,\n        updateManifestUpdateInfo,\n    };\n\n    setup();\n    return instance;\n}\n\nMetricsModel.__dashjs_factory_name = 'MetricsModel';\nexport default FactoryMaker.getSingletonFactory(MetricsModel);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport Constants from '../streaming/constants/Constants.js';\nimport {HTTPRequest} from '../streaming/vo/metrics/HTTPRequest.js';\nimport FactoryMaker from '../core/FactoryMaker.js';\nimport MetricsConstants from '../streaming/constants/MetricsConstants.js';\nimport Round10 from './utils/Round10.js';\nimport MetricsModel from '../streaming/models/MetricsModel.js';\nimport Utils from '../core/Utils.js';\nimport {PlayList, PlayListTrace} from '../streaming/vo/metrics/PlayList.js';\n\n/**\n * @module DashMetrics\n * @description The DashMetrics module can be accessed using the MediaPlayer API getDashMetrics()\n * @param {object} config\n */\n\nfunction DashMetrics(config) {\n\n    config = config || {};\n\n    const context = this.context;\n    let instance,\n        playListTraceMetricsClosed,\n        playListTraceMetrics,\n        playListMetrics;\n\n    let metricsModel = config.metricsModel;\n\n    function setup() {\n        metricsModel = metricsModel || MetricsModel(context).getInstance({ settings: config.settings });\n        resetInitialSettings();\n    }\n\n    function resetInitialSettings() {\n        playListTraceMetricsClosed = true;\n        playListTraceMetrics = null;\n        playListMetrics = null;\n    }\n\n    /**\n     * Returns the latest Representation switch for a given media type\n     * @param {MediaType} mediaType\n     * @returns {*}\n     * @memberof module:DashMetrics\n     * @instance\n     */\n    function getCurrentRepresentationSwitch(mediaType) {\n        const metrics = metricsModel.getMetricsFor(mediaType, true);\n        return getCurrent(metrics, MetricsConstants.TRACK_SWITCH);\n    }\n\n    /**\n     * @param {MediaType} mediaType\n     * @param {Date} t time of the switch event\n     * @param {Date} mt media presentation time\n     * @param {string} to id of representation\n     * @param {string} lto if present, subrepresentation reference\n     * @memberof module:DashMetrics\n     * @instance\n     * @ignore\n     */\n    function addRepresentationSwitch(mediaType, t, mt, to, lto) {\n        metricsModel.addRepresentationSwitch(mediaType, t, mt, to, lto);\n    }\n\n    /**\n     * Returns the current buffer state for a given media type\n     * @param {MediaType} mediaType\n     * @returns {number}\n     * @memberof module:DashMetrics\n     * @instance\n     */\n    function getCurrentBufferState(mediaType) {\n        const metrics = metricsModel.getMetricsFor(mediaType, true);\n        return getCurrent(metrics, MetricsConstants.BUFFER_STATE);\n    }\n\n    /**\n     * Returns the current buffer level for a given media type\n     * @param {MediaType} mediaType\n     * @returns {number}\n     * @memberof module:DashMetrics\n     * @instance\n     */\n    function getCurrentBufferLevel(mediaType) {\n        const metrics = metricsModel.getMetricsFor(mediaType, true);\n        const metric = getCurrent(metrics, MetricsConstants.BUFFER_LEVEL);\n\n        if (metric) {\n            return Round10.round10(metric.level / 1000, -3);\n        }\n\n        return 0;\n    }\n\n    /**\n     * @param {MediaType} mediaType\n     * @param {number} t\n     * @param {number} level\n     * @memberof module:DashMetrics\n     * @instance\n     * @ignore\n     */\n    function addBufferLevel(mediaType, t, level) {\n        metricsModel.addBufferLevel(mediaType, t, level);\n    }\n\n    /**\n     * @param {MediaType} mediaType\n     * @param {string} state\n     * @param {number} target\n     * @memberof module:DashMetrics\n     * @instance\n     * @ignore\n     */\n    function addBufferState(mediaType, state, target) {\n        metricsModel.addBufferState(mediaType, state, target);\n    }\n\n    /**\n     * @memberof module:DashMetrics\n     * @instance\n     * @ignore\n     */\n    function clearAllCurrentMetrics() {\n        metricsModel.clearAllCurrentMetrics();\n    }\n\n    /**\n     * Returns the latest HTTP request for a given media type\n     * @param {MediaType} mediaType\n     * @returns {*}\n     * @memberof module:DashMetrics\n     * @instance\n     */\n    function getCurrentHttpRequest(mediaType) {\n        const metrics = metricsModel.getMetricsFor(mediaType, true);\n\n        if (!metrics) {\n            return null;\n        }\n\n        const httpList = metrics.HttpList;\n        let currentHttpList = null;\n\n        let httpListLastIndex;\n\n        if (!httpList || httpList.length <= 0) {\n            return null;\n        }\n\n        httpListLastIndex = httpList.length - 1;\n\n        while (httpListLastIndex >= 0) {\n            if (httpList[httpListLastIndex].responsecode) {\n                currentHttpList = httpList[httpListLastIndex];\n                break;\n            }\n            httpListLastIndex--;\n        }\n        return currentHttpList;\n    }\n\n    /**\n     * Returns all HTTP requests for a given media type\n     * @param {MediaType} mediaType\n     * @returns {*}\n     * @memberof module:DashMetrics\n     * @instance\n     */\n    function getHttpRequests(mediaType) {\n        const metrics = metricsModel.getMetricsFor(mediaType, true);\n        if (!metrics) {\n            return [];\n        }\n\n        return !!metrics.HttpList ? metrics.HttpList : [];\n    }\n\n    /**\n     * @param {MediaType} mediaType\n     * @param {Array} loadingRequests\n     * @param {Array} executedRequests\n     * @memberof module:DashMetrics\n     * @instance\n     * @ignore\n     */\n    function addRequestsQueue(mediaType, loadingRequests, executedRequests) {\n        metricsModel.addRequestsQueue(mediaType, loadingRequests, executedRequests);\n    }\n\n    /**\n     * Returns the latest metrics for a given metric list and specific metric name\n     * @param {MetricsList} metrics\n     * @param {string} metricName\n     * @returns {*}\n     * @memberof module:DashMetrics\n     * @instance\n     */\n    function getCurrent(metrics, metricName) {\n        if (!metrics) {\n            return null;\n        }\n        const list = metrics[metricName];\n        return (!list || list.length === 0) ? null : list[list.length - 1];\n    }\n\n    /**\n     * Returns the number of dropped frames\n     * @returns {*}\n     * @memberof module:DashMetrics\n     * @instance\n     */\n    function getCurrentDroppedFrames() {\n        const metrics = metricsModel.getMetricsFor(Constants.VIDEO, true);\n        return getCurrent(metrics, MetricsConstants.DROPPED_FRAMES);\n    }\n\n    /**\n     * @param {number} quality\n     * @memberof module:DashMetrics\n     * @instance\n     * @ignore\n     */\n    function addDroppedFrames(quality) {\n        metricsModel.addDroppedFrames(Constants.VIDEO, quality);\n    }\n\n    /**\n     * Returns the current scheduling info for a given media type\n     * @param {MediaType} mediaType\n     * @returns {*}\n     * @memberof module:DashMetrics\n     * @instance\n     */\n    function getCurrentSchedulingInfo(mediaType) {\n        const metrics = metricsModel.getMetricsFor(mediaType, true);\n        return getCurrent(metrics, MetricsConstants.SCHEDULING_INFO);\n    }\n\n    /**\n     * @param {object} request\n     * @param {string} state\n     * @memberof module:DashMetrics\n     * @instance\n     * @ignore\n     */\n    function addSchedulingInfo(request, state) {\n        metricsModel.addSchedulingInfo(\n            request.mediaType,\n            new Date(),\n            request.type,\n            request.startTime,\n            request.availabilityStartTime,\n            request.duration,\n            request.bandwidth,\n            request.range,\n            state);\n    }\n\n    /**\n     * Returns the current manifest update information\n     * @returns {*}\n     * @memberof module:DashMetrics\n     * @instance\n     */\n    function getCurrentManifestUpdate() {\n        const streamMetrics = metricsModel.getMetricsFor(Constants.STREAM);\n        return getCurrent(streamMetrics, MetricsConstants.MANIFEST_UPDATE);\n    }\n\n    /**\n     * @param {object} updatedFields fields to be updated\n     * @memberof module:DashMetrics\n     * @instance\n     * @ignore\n     */\n    function updateManifestUpdateInfo(updatedFields) {\n        const manifestUpdate = this.getCurrentManifestUpdate();\n        metricsModel.updateManifestUpdateInfo(manifestUpdate, updatedFields);\n    }\n\n    /**\n     * @param {object} streamInfo\n     * @memberof module:DashMetrics\n     * @instance\n     * @ignore\n     */\n    function addManifestUpdateStreamInfo(streamInfo) {\n        if (streamInfo) {\n            const manifestUpdate = this.getCurrentManifestUpdate();\n            metricsModel.addManifestUpdateStreamInfo(manifestUpdate, streamInfo.id, streamInfo.index, streamInfo.start, streamInfo.duration);\n        }\n    }\n\n    /**\n     * @param {object} request\n     * @memberof module:DashMetrics\n     * @instance\n     * @ignore\n     */\n    function addManifestUpdate(request) {\n        metricsModel.addManifestUpdate(Constants.STREAM, request.type, request.startDate, request.endDate);\n    }\n\n    /**\n     * @param {object} request\n     * @param {string} responseUrl\n     * @param {number} responseStatus\n     * @param {object} responseHeaders\n     * @param {object} traces\n     * @param {object} cmsd\n     * @memberof module:DashMetrics\n     * @instance\n     * @ignore\n     */\n    function addHttpRequest(request, responseUrl, responseStatus, responseHeaders, traces,cmsd) {\n        const response = { status: responseStatus, headers: responseHeaders, url: responseUrl };\n\n        metricsModel.addHttpRequest(request, response, traces, cmsd);\n    }\n\n    /**\n     * @param {object} representation\n     * @param {MediaType} mediaType\n     * @memberof module:DashMetrics\n     * @instance\n     * @ignore\n     */\n    function addManifestUpdateRepresentationInfo(representation, mediaType) {\n        if (representation) {\n            const manifestUpdateInfo = this.getCurrentManifestUpdate();\n            metricsModel.addManifestUpdateRepresentationInfo(manifestUpdateInfo, representation, mediaType);\n        }\n    }\n\n    /**\n     * Returns the current DVR window\n     * @param {MediaType} mediaType\n     * @returns {*}\n     * @memberof module:DashMetrics\n     * @instance\n     */\n    function getCurrentDVRInfo(mediaType) {\n        const metrics = mediaType ? metricsModel.getMetricsFor(mediaType, true) :\n            metricsModel.getMetricsFor(Constants.VIDEO, true) || metricsModel.getMetricsFor(Constants.AUDIO, true);\n        return getCurrent(metrics, MetricsConstants.DVR_INFO);\n    }\n\n    /**\n     * @param {MediaType} mediaType\n     * @param {Date} currentTime time of the switch event\n     * @param {object} mpd mpd reference\n     * @param {object} range range of the dvr info\n     * @memberof module:DashMetrics\n     * @instance\n     * @ignore\n     */\n    function addDVRInfo(mediaType, currentTime, mpd, range) {\n        metricsModel.addDVRInfo(mediaType, currentTime, mpd, range);\n    }\n\n    /**\n     * Returns the value for a specific request headers used in the latest MPD request\n     * @param {string} id\n     * @returns {*}\n     * @memberof module:DashMetrics\n     * @instance\n     */\n    function getLatestMPDRequestHeaderValueByID(id) {\n        if (!id) {\n            return null;\n        }\n\n        let headers = {};\n        let httpRequestList,\n            httpRequest,\n            i;\n\n        httpRequestList = getHttpRequests(Constants.STREAM);\n\n        for (i = httpRequestList.length - 1; i >= 0; i--) {\n            httpRequest = httpRequestList[i];\n\n            if (httpRequest.type === HTTPRequest.MPD_TYPE) {\n                headers = Utils.parseHttpHeaders(httpRequest._responseHeaders);\n                break;\n            }\n        }\n\n        const value = headers[id.toLowerCase()];\n        return value === undefined ? null : value;\n    }\n\n    /**\n     * Returns the value for a specific request headers used in the latest fragment request\n     * @param {MediaType} mediaType\n     * @param {string} id\n     * @returns {*}\n     * @memberof module:DashMetrics\n     * @instance\n     */\n    function getLatestFragmentRequestHeaderValueByID(mediaType, id) {\n        if (!id) {\n            return null;\n        }\n\n        let headers = {};\n        let httpRequest = getCurrentHttpRequest(mediaType);\n        if (httpRequest) {\n            headers = Utils.parseHttpHeaders(httpRequest._responseHeaders);\n        }\n\n        const value = headers[id.toLowerCase()];\n        return value === undefined ? null : value;\n    }\n\n    /**\n     * @memberof module:DashMetrics\n     * @instance\n     * @ignore\n     */\n    function addPlayList() {\n        if (playListMetrics) {\n            metricsModel.addPlayList(playListMetrics);\n            playListMetrics = null;\n        }\n    }\n\n    /**\n     * Create a new playlist metric\n     * @param {number} mediaStartTime\n     * @param {string} startReason\n     * @ignore\n     */\n    function createPlaylistMetrics(mediaStartTime, startReason) {\n        playListMetrics = new PlayList();\n\n        playListMetrics.start = new Date();\n        playListMetrics.mstart = mediaStartTime;\n        playListMetrics.starttype = startReason;\n    }\n\n    /**\n     * Create a playlist trace metric\n     * @param {number} representationId\n     * @param {number} mediaStartTime\n     * @param {number} speed\n     * @ignore\n     */\n    function createPlaylistTraceMetrics(representationId, mediaStartTime, speed) {\n        if (playListTraceMetricsClosed === true) {\n            playListTraceMetricsClosed = false;\n            playListTraceMetrics = new PlayListTrace();\n\n            playListTraceMetrics.representationid = representationId;\n            playListTraceMetrics.start = new Date();\n            playListTraceMetrics.mstart = mediaStartTime;\n            playListTraceMetrics.playbackspeed = speed !== null ? speed.toString() : null;\n        }\n    }\n\n    /**\n     * Update existing playlist trace metric\n     * @param {object} traceToUpdate\n     * @ignore\n     */\n    function updatePlayListTraceMetrics(traceToUpdate) {\n        if (playListTraceMetrics) {\n            for (let field in playListTraceMetrics) {\n                playListTraceMetrics[field] = traceToUpdate[field];\n            }\n        }\n    }\n\n    /**\n     * Push a new playlist trace metric\n     * @param endTime\n     * @param reason\n     * @ignore\n     */\n    function pushPlayListTraceMetrics(endTime, reason) {\n        if (playListTraceMetricsClosed === false && playListMetrics && playListTraceMetrics && playListTraceMetrics.start) {\n            const startTime = playListTraceMetrics.start;\n            playListTraceMetrics.duration = endTime.getTime() - startTime.getTime();\n            playListTraceMetrics.stopreason = reason;\n            playListMetrics.trace.push(playListTraceMetrics);\n            playListTraceMetricsClosed = true;\n        }\n    }\n\n    /**\n     * @param {object} errors\n     * @memberof module:DashMetrics\n     * @instance\n     * @ignore\n     */\n    function addDVBErrors(errors) {\n        metricsModel.addDVBErrors(errors);\n    }\n\n    instance = {\n        getCurrentRepresentationSwitch,\n        getCurrentBufferState,\n        getCurrentBufferLevel,\n        getCurrentHttpRequest,\n        getHttpRequests,\n        getCurrentDroppedFrames,\n        getCurrentSchedulingInfo,\n        getCurrentDVRInfo,\n        getCurrentManifestUpdate,\n        getLatestFragmentRequestHeaderValueByID,\n        getLatestMPDRequestHeaderValueByID,\n        addRepresentationSwitch,\n        addDVRInfo,\n        updateManifestUpdateInfo,\n        addManifestUpdateStreamInfo,\n        addManifestUpdateRepresentationInfo,\n        addManifestUpdate,\n        addHttpRequest,\n        addSchedulingInfo,\n        addRequestsQueue,\n        addBufferLevel,\n        addBufferState,\n        addDroppedFrames,\n        addPlayList,\n        addDVBErrors,\n        createPlaylistMetrics,\n        createPlaylistTraceMetrics,\n        updatePlayListTraceMetrics,\n        pushPlayListTraceMetrics,\n        clearAllCurrentMetrics\n    };\n\n    setup();\n\n    return instance;\n}\n\nDashMetrics.__dashjs_factory_name = 'DashMetrics';\nexport default FactoryMaker.getSingletonFactory(DashMetrics);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport EventBus from '../../core/EventBus.js';\nimport Events from '../../core/events/Events.js';\nimport FactoryMaker from '../../core/FactoryMaker.js';\nimport DashConstants from '../constants/DashConstants.js';\nimport DashManifestModel from '../models/DashManifestModel.js';\nimport Settings from '../../core/Settings.js';\nimport Constants from '../../streaming/constants/Constants.js';\nimport MediaPlayerEvents from '../../streaming/MediaPlayerEvents.js';\nimport ConformanceViolationConstants from '../../streaming/constants/ConformanceViolationConstants.js';\n\nfunction TimelineConverter() {\n\n    const context = this.context;\n    const eventBus = EventBus(context).getInstance();\n    const settings = Settings(context).getInstance();\n\n    let instance,\n        dashManifestModel,\n        timelineAnchorAvailabilityOffset, // In case we calculate the TSBD using _calcTimeShiftBufferWindowForDynamicTimelineManifest we use the segments as anchor times. We apply this offset when calculating if a segment is available or not.\n        clientServerTimeShift;\n\n    function setup() {\n        dashManifestModel = DashManifestModel(context).getInstance();\n        reset();\n    }\n\n    function initialize() {\n        resetInitialSettings();\n        eventBus.on(Events.UPDATE_TIME_SYNC_OFFSET, _onUpdateTimeSyncOffset, this);\n    }\n\n    function getClientTimeOffset() {\n        return clientServerTimeShift;\n    }\n\n    function setClientTimeOffset(value) {\n        clientServerTimeShift = value;\n    }\n\n    /**\n     * Returns a \"now\" reference time for the client to compare the availability time of a segment against.\n     * Takes the client/server drift into account\n     */\n    function getClientReferenceTime() {\n        return Date.now() - (timelineAnchorAvailabilityOffset * 1000) + (clientServerTimeShift * 1000);\n    }\n\n    function _calcAvailabilityTimeFromPresentationTime(presentationEndTime, representation, isDynamic, calculateAvailabilityEndTime) {\n        let availabilityTime;\n        let mpd = representation.adaptation.period.mpd;\n        const availabilityStartTime = mpd.availabilityStartTime;\n\n        if (calculateAvailabilityEndTime) {\n            //@timeShiftBufferDepth specifies the duration of the time shifting buffer that is guaranteed\n            // to be available for a Media Presentation with type 'dynamic'.\n            // When not present, the value is infinite.\n            if (isDynamic && mpd.timeShiftBufferDepth !== Number.POSITIVE_INFINITY) {\n                // SAET = SAST + TSBD + seg@duration\n                availabilityTime = new Date(availabilityStartTime.getTime() + ((presentationEndTime + mpd.timeShiftBufferDepth) * 1000));\n            } else {\n                availabilityTime = mpd.availabilityEndTime;\n            }\n        } else {\n            if (isDynamic) {\n                // SAST = Period@start + seg@presentationStartTime + seg@duration\n                // ASAST = SAST - ATO\n                const availabilityTimeOffset = representation.availabilityTimeOffset;\n                // presentationEndTime = Period@start + seg@presentationStartTime + Segment@duration\n                availabilityTime = new Date(availabilityStartTime.getTime() + (presentationEndTime - availabilityTimeOffset) * 1000);\n            } else {\n                // in static mpd, all segments are available at the same time\n                availabilityTime = availabilityStartTime;\n            }\n        }\n\n        return availabilityTime;\n    }\n\n    function calcAvailabilityStartTimeFromPresentationTime(presentationEndTime, representation, isDynamic) {\n        return _calcAvailabilityTimeFromPresentationTime(presentationEndTime, representation, isDynamic);\n    }\n\n    function calcAvailabilityEndTimeFromPresentationTime(presentationEndTime, representation, isDynamic) {\n        return _calcAvailabilityTimeFromPresentationTime(presentationEndTime, representation, isDynamic, true);\n    }\n\n    function calcPresentationTimeFromWallTime(wallTime, period) {\n        return ((wallTime.getTime() - period.mpd.availabilityStartTime.getTime() + clientServerTimeShift * 1000) / 1000);\n    }\n\n    function calcPresentationTimeFromMediaTime(mediaTime, representation) {\n        const periodStart = representation.adaptation.period.start;\n        const presentationOffset = representation.presentationTimeOffset;\n\n        return mediaTime + (periodStart - presentationOffset);\n    }\n\n    function calcMediaTimeFromPresentationTime(presentationTime, representation) {\n        const periodStart = representation.adaptation.period.start;\n        const presentationOffset = representation.presentationTimeOffset;\n\n        return presentationTime - periodStart + presentationOffset;\n    }\n\n    function calcWallTimeForSegment(segment, isDynamic) {\n        let suggestedPresentationDelay,\n            displayStartTime,\n            wallTime;\n\n        if (isDynamic) {\n            suggestedPresentationDelay = segment.representation.adaptation.period.mpd.suggestedPresentationDelay;\n            displayStartTime = segment.presentationStartTime + suggestedPresentationDelay;\n            wallTime = new Date(segment.availabilityStartTime.getTime() + (displayStartTime * 1000));\n        }\n\n        return wallTime;\n    }\n\n    /**\n     * Calculates the timeshiftbuffer range. This range might overlap multiple periods and is not limited to period boundaries. However, we make sure that the range is potentially covered by period.\n     * @param {Array} streams\n     * @param {boolean} isDynamic\n     * @return {}\n     */\n    function calcTimeShiftBufferWindow(streams, isDynamic) {\n        // Static manifests. The availability window is equal to the DVR window\n        if (!isDynamic) {\n            return _calcTimeshiftBufferForStaticManifest(streams);\n        }\n\n        // Specific use case of SegmentTimeline\n        if (settings.get().streaming.timeShiftBuffer.calcFromSegmentTimeline) {\n            const data = _calcTimeShiftBufferWindowForDynamicTimelineManifest(streams);\n            _adjustTimelineAnchorAvailabilityOffset(data.now, data.range);\n\n            return data.range;\n        }\n\n        return _calcTimeShiftBufferWindowForDynamicManifest(streams);\n    }\n\n    function _calcTimeshiftBufferForStaticManifest(streams) {\n        // Static Range Finder. We iterate over all periods and return the total duration\n        const range = { start: NaN, end: NaN };\n        let duration = 0;\n        let start = NaN;\n        streams.forEach((stream) => {\n            const streamInfo = stream.getStreamInfo();\n            duration += streamInfo.duration;\n\n            if (isNaN(start) || streamInfo.start < start) {\n                start = streamInfo.start;\n            }\n        });\n\n        range.start = start;\n        range.end = start + duration;\n\n        return range;\n    }\n\n    function _calcTimeShiftBufferWindowForDynamicManifest(streams) {\n        const range = { start: NaN, end: NaN };\n\n        if (!streams || streams.length === 0) {\n            return range;\n        }\n\n        const voPeriod = streams[0].getAdapter().getRegularPeriods()[0];\n        const now = calcPresentationTimeFromWallTime(new Date(), voPeriod);\n        const timeShiftBufferDepth = voPeriod.mpd.timeShiftBufferDepth;\n        const start = !isNaN(timeShiftBufferDepth) ? now - timeShiftBufferDepth : 0;\n        // check if we find a suitable period for that starttime. Otherwise, we use the time closest to that\n        range.start = _adjustTimeBasedOnPeriodRanges(streams, start);\n        range.end = !isNaN(range.start) && now < range.start ? now : _adjustTimeBasedOnPeriodRanges(streams, now, true);\n\n        if (!isNaN(timeShiftBufferDepth) && range.end < now - timeShiftBufferDepth) {\n            range.end = NaN;\n        }\n\n        // If we have SegmentTimeline as a reference we can verify that the calculated DVR window is at least partially included in the DVR window exposed by the timeline.\n        // If that is not the case we stick to the DVR window defined by SegmentTimeline\n        if (settings.get().streaming.timeShiftBuffer.fallbackToSegmentTimeline) {\n            const timelineRefData = _calcTimeShiftBufferWindowForDynamicTimelineManifest(streams);\n            if (timelineRefData.range.end < range.start) {\n                eventBus.trigger(MediaPlayerEvents.CONFORMANCE_VIOLATION, {\n                    level: ConformanceViolationConstants.LEVELS.WARNING,\n                    event: ConformanceViolationConstants.EVENTS.INVALID_DVR_WINDOW\n                });\n                _adjustTimelineAnchorAvailabilityOffset(timelineRefData.now, timelineRefData.range);\n                return timelineRefData.range;\n            }\n        }\n\n        return range;\n    }\n\n    function _calcTimeShiftBufferWindowForDynamicTimelineManifest(streams) {\n        const range = { start: NaN, end: NaN };\n        const voPeriod = streams[0].getAdapter().getRegularPeriods()[0];\n        const now = calcPresentationTimeFromWallTime(new Date(), voPeriod);\n\n        if (!streams || streams.length === 0) {\n            return { range, now };\n        }\n\n        streams.forEach((stream) => {\n            let voRepresentation = stream.getCurrentRepresentationForType(Constants.VIDEO);\n            if (!voRepresentation) {\n                voRepresentation = stream.getCurrentRepresentationForType(Constants.AUDIO)\n            }\n\n            // If we still got not voRepresentation we are in the startup phase and nothing was selected yet. Use the default Representation\n            if (!voRepresentation) {\n                const adapter = stream.getAdapter();\n                const mediaInfo = adapter.getMediaInfoForType(stream.getStreamInfo(), Constants.VIDEO) || adapter.getMediaInfoForType(stream.getStreamInfo(), Constants.AUDIO);\n                const voRepresentations = adapter.getVoRepresentations(mediaInfo);\n                voRepresentation = voRepresentations[0];\n            }\n\n            let periodRange = { start: NaN, end: NaN };\n\n            if (voRepresentation) {\n                if (voRepresentation.segmentInfoType === DashConstants.SEGMENT_TIMELINE) {\n                    periodRange = _calcRangeForTimeline(voRepresentation);\n                } else {\n                    const currentVoPeriod = voRepresentation.adaptation.period;\n                    periodRange.start = currentVoPeriod.start;\n                    periodRange.end = Math.max(now, currentVoPeriod.start + currentVoPeriod.duration);\n                }\n            }\n\n            if (!isNaN(periodRange.start) && (isNaN(range.start) || range.start > periodRange.start)) {\n                range.start = periodRange.start;\n            }\n            if (!isNaN(periodRange.end) && (isNaN(range.end) || range.end < periodRange.end)) {\n                range.end = periodRange.end;\n            }\n        });\n\n\n        range.end = Math.min(now, range.end);\n        const adjustedEndTime = _adjustTimeBasedOnPeriodRanges(streams, range.end, true);\n\n        // if range is NaN all periods are in the future. we should return range.start > range.end in this case\n        range.end = isNaN(adjustedEndTime) ? range.end : adjustedEndTime;\n\n        range.start = voPeriod && voPeriod.mpd && voPeriod.mpd.timeShiftBufferDepth && !isNaN(voPeriod.mpd.timeShiftBufferDepth) && !isNaN(range.end) ? Math.max(range.end - voPeriod.mpd.timeShiftBufferDepth, range.start) : range.start;\n        range.start = _adjustTimeBasedOnPeriodRanges(streams, range.start);\n\n        return { range, now };\n    }\n\n    function _adjustTimelineAnchorAvailabilityOffset(now, range) {\n        timelineAnchorAvailabilityOffset = now - range.end;\n    }\n\n    function _adjustTimeBasedOnPeriodRanges(streams, time, isEndOfDvrWindow = false) {\n        try {\n            let i = 0;\n            let found = false;\n            let adjustedTime = NaN;\n\n            while (!found && i < streams.length) {\n                const streamInfo = streams[i].getStreamInfo();\n\n                // We found a period which contains the target time.\n                if (streamInfo.start <= time && (!isFinite(streamInfo.duration) || (streamInfo.start + streamInfo.duration >= time))) {\n                    adjustedTime = time;\n                    found = true;\n                }\n\n                // Adjust the time for the start of the DVR window. The current period starts after the target time. We use the starttime of this period as adjusted time\n                else if (!isEndOfDvrWindow && (streamInfo.start > time && (isNaN(adjustedTime) || streamInfo.start < adjustedTime))) {\n                    adjustedTime = streamInfo.start;\n                }\n\n                // Adjust the time for the end of the DVR window. The current period ends before the targettime. We use the end time of this period as the adjusted time\n                else if (isEndOfDvrWindow && ((streamInfo.start + streamInfo.duration) < time && (isNaN(adjustedTime) || (streamInfo.start + streamInfo.duration > adjustedTime)))) {\n                    adjustedTime = streamInfo.start + streamInfo.duration;\n                }\n\n                i += 1;\n            }\n\n            return adjustedTime;\n        } catch (e) {\n            return time;\n        }\n    }\n\n    function _calcRangeForTimeline(voRepresentation) {\n        const adaptation = voRepresentation.adaptation.period.mpd.manifest.Period[voRepresentation.adaptation.period.index].AdaptationSet[voRepresentation.adaptation.index];\n        const representation = dashManifestModel.getRepresentationFor(voRepresentation.index, adaptation);\n        const base = representation.SegmentTemplate || representation.SegmentList;\n        const timeline = base.SegmentTimeline;\n        const timescale = base.timescale;\n        const segments = timeline.S;\n        const range = { start: 0, end: 0 };\n        const segmentTime = segments[0].t;\n        const hasValidSegmentTime = !isNaN(segmentTime);\n        const enhancedSegmentTime = hasValidSegmentTime ? segmentTime : 0;\n        let d = 0;\n        let segment,\n            repeat,\n            i,\n            len;\n\n        if (hasValidSegmentTime) {\n            range.start = calcPresentationTimeFromMediaTime(enhancedSegmentTime / timescale, voRepresentation);\n        }\n\n        for (i = 0, len = segments.length; i < len; i++) {\n            segment = segments[i];\n            repeat = 0;\n            if (segment.hasOwnProperty('r')) {\n                repeat = segment.r;\n            }\n            d += segment.d * (1 + repeat);\n        }\n\n        range.end = calcPresentationTimeFromMediaTime((enhancedSegmentTime + d) / timescale, voRepresentation);\n\n        return range;\n    }\n\n    function calcPeriodRelativeTimeFromMpdRelativeTime(representation, mpdRelativeTime) {\n        const periodStartTime = representation.adaptation.period.start;\n        return mpdRelativeTime - periodStartTime;\n    }\n\n    function _onUpdateTimeSyncOffset(e) {\n        if (e.offset !== undefined && !isNaN(e.offset)) {\n            setClientTimeOffset(e.offset / 1000);\n        }\n    }\n\n    function resetInitialSettings() {\n        clientServerTimeShift = 0;\n        timelineAnchorAvailabilityOffset = 0;\n    }\n\n    function reset() {\n        eventBus.off(Events.UPDATE_TIME_SYNC_OFFSET, _onUpdateTimeSyncOffset, this);\n        resetInitialSettings();\n    }\n\n    instance = {\n        initialize,\n        getClientTimeOffset,\n        setClientTimeOffset,\n        getClientReferenceTime,\n        calcAvailabilityStartTimeFromPresentationTime,\n        calcAvailabilityEndTimeFromPresentationTime,\n        calcPresentationTimeFromWallTime,\n        calcPresentationTimeFromMediaTime,\n        calcPeriodRelativeTimeFromMpdRelativeTime,\n        calcMediaTimeFromPresentationTime,\n        calcWallTimeForSegment,\n        calcTimeShiftBufferWindow,\n        reset\n    };\n\n    setup();\n    return instance;\n}\n\nTimelineConverter.__dashjs_factory_name = 'TimelineConverter';\nexport default FactoryMaker.getSingletonFactory(TimelineConverter);\n","/* $Date: 2007-06-12 18:02:31 $ */\n\n// from: http://bannister.us/weblog/2007/06/09/simple-base64-encodedecode-javascript/\n// Handles encode/decode of ASCII and Unicode strings.\n\nvar UTF8 = {};\nUTF8.encode = function(s) {\n    var u = [];\n    for (var i = 0; i < s.length; ++i) {\n        var c = s.charCodeAt(i);\n        if (c < 0x80) {\n            u.push(c);\n        } else if (c < 0x800) {\n            u.push(0xC0 | (c >> 6));\n            u.push(0x80 | (63 & c));\n        } else if (c < 0x10000) {\n            u.push(0xE0 | (c >> 12));\n            u.push(0x80 | (63 & (c >> 6)));\n            u.push(0x80 | (63 & c));\n        } else {\n            u.push(0xF0 | (c >> 18));\n            u.push(0x80 | (63 & (c >> 12)));\n            u.push(0x80 | (63 & (c >> 6)));\n            u.push(0x80 | (63 & c));\n        }\n    }\n    return u;\n};\nUTF8.decode = function(u) {\n    var a = [];\n    var i = 0;\n    while (i < u.length) {\n        var v = u[i++];\n        if (v < 0x80) {\n            // no need to mask byte\n        } else if (v < 0xE0) {\n            v = (31 & v) << 6;\n            v |= (63 & u[i++]);\n        } else if (v < 0xF0) {\n            v = (15 & v) << 12;\n            v |= (63 & u[i++]) << 6;\n            v |= (63 & u[i++]);\n        } else {\n            v = (7 & v) << 18;\n            v |= (63 & u[i++]) << 12;\n            v |= (63 & u[i++]) << 6;\n            v |= (63 & u[i++]);\n        }\n        a.push(String.fromCharCode(v));\n    }\n    return a.join('');\n};\n\nvar BASE64 = {};\n(function(T){\n    var encodeArray = function(u) {\n        var i = 0;\n        var a = [];\n        var n = 0 | (u.length / 3);\n        while (0 < n--) {\n            var v = (u[i] << 16) + (u[i+1] << 8) + u[i+2];\n            i += 3;\n            a.push(T.charAt(63 & (v >> 18)));\n            a.push(T.charAt(63 & (v >> 12)));\n            a.push(T.charAt(63 & (v >> 6)));\n            a.push(T.charAt(63 & v));\n        }\n        if (2 == (u.length - i)) {\n            var v = (u[i] << 16) + (u[i+1] << 8);\n            a.push(T.charAt(63 & (v >> 18)));\n            a.push(T.charAt(63 & (v >> 12)));\n            a.push(T.charAt(63 & (v >> 6)));\n            a.push('=');\n        } else if (1 == (u.length - i)) {\n            var v = (u[i] << 16);\n            a.push(T.charAt(63 & (v >> 18)));\n            a.push(T.charAt(63 & (v >> 12)));\n            a.push('==');\n        }\n        return a.join('');\n    }\n    var R = (function(){\n        var a = [];\n        for (var i=0; i<T.length; ++i) {\n            a[T.charCodeAt(i)] = i;\n        }\n        a['='.charCodeAt(0)] = 0;\n        return a;\n    })();\n    var decodeArray = function(s) {\n        var i = 0;\n        var u = [];\n        var n = 0 | (s.length / 4);\n        while (0 < n--) {\n            var v = (R[s.charCodeAt(i)] << 18) + (R[s.charCodeAt(i+1)] << 12) + (R[s.charCodeAt(i+2)] << 6) + R[s.charCodeAt(i+3)];\n            u.push(255 & (v >> 16));\n            u.push(255 & (v >> 8));\n            u.push(255 & v);\n            i += 4;\n        }\n        if (u) {\n            if ('=' == s.charAt(i-2)) {\n                u.pop();\n                u.pop();\n            } else if ('=' == s.charAt(i-1)) {\n                u.pop();\n            }\n        }\n        return u;\n    }\n    var ASCII = {};\n    ASCII.encode = function(s) {\n        var u = [];\n        for (var i = 0; i<s.length; ++i) {\n            u.push(s.charCodeAt(i));\n        }\n        return u;\n    };\n    ASCII.decode = function(u) {\n        for (var i = 0; i<s.length; ++i) {\n            a[i] = String.fromCharCode(a[i]);\n        }\n        return a.join('');\n    };\n    BASE64.decodeArray = function(s) {\n        var u = decodeArray(s);\n        return new Uint8Array(u);\n    };\n    BASE64.encodeASCII = function(s) {\n        var u = ASCII.encode(s);\n        return encodeArray(u);\n    };\n    BASE64.decodeASCII = function(s) {\n        var a = decodeArray(s);\n        return ASCII.decode(a);\n    };\n    BASE64.encode = function(s) {\n        var u = UTF8.encode(s);\n        return encodeArray(u);\n    };\n    BASE64.decode = function(s) {\n        var u = decodeArray(s);\n        return UTF8.decode(u);\n    };\n})(\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\");\n\n/*The following polyfills are not used in dash.js but have caused multiplayer integration issues.\n Therefore commenting them out.\nif (undefined === btoa) {\n    var btoa = BASE64.encode;\n}\nif (undefined === atob) {\n    var atob = BASE64.decode;\n}\n*/\n\nif (typeof exports !== 'undefined') {\n    exports.decode = BASE64.decode;\n    exports.decodeArray = BASE64.decodeArray;\n    exports.encode = BASE64.encode;\n    exports.encodeASCII = BASE64.encodeASCII;\n}\n\nexport default BASE64\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport MediaInfo from './../../dash/vo/MediaInfo.js';\n\n/**\n * @class\n * @ignore\n */\nclass TextTrackInfo extends MediaInfo {\n    constructor () {\n        super();\n        this.captionData = null;\n        this.label = null;\n        this.defaultTrack = false;\n        this.kind = null;\n        this.isFragmented = false;\n        this.isEmbedded = false;\n        this.isTTML = null;\n    }\n}\n\nexport default TextTrackInfo;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport FactoryMaker from '../../core/FactoryMaker.js';\n\nfunction EmbeddedTextHtmlRender() {\n\n    let captionId = 0;\n    let instance;\n\n    /* HTML Rendering functions */\n    function checkIndent(chars) {\n        let line = '';\n\n        for (let c = 0; c < chars.length; ++c) {\n            const uc = chars[c];\n            line += uc.uchar;\n        }\n\n        const l = line.length;\n        const ll = line.replace(/^\\s+/, '').length;\n        return l - ll;\n    }\n\n    function getRegionProperties(region) {\n        return 'left: ' + (region.x * 3.125) + '%; top: ' + (region.y1 * 6.66) + '%; width: ' + (100 - (region.x * 3.125)) + '%; height: ' + (Math.max((region.y2 - 1) - region.y1, 1) * 6.66) + '%; align-items: flex-start; overflow: visible; -webkit-writing-mode: horizontal-tb;';\n    }\n\n    function createRGB(color) {\n        if (color === 'red') {\n            return 'rgb(255, 0, 0)';\n        } else if (color === 'green') {\n            return 'rgb(0, 255, 0)';\n        } else if (color === 'blue') {\n            return 'rgb(0, 0, 255)';\n        } else if (color === 'cyan') {\n            return 'rgb(0, 255, 255)';\n        } else if (color === 'magenta') {\n            return 'rgb(255, 0, 255)';\n        } else if (color === 'yellow') {\n            return 'rgb(255, 255, 0)';\n        } else if (color === 'white') {\n            return 'rgb(255, 255, 255)';\n        } else if (color === 'black') {\n            return 'rgb(0, 0, 0)';\n        }\n        return color;\n    }\n\n    function getStyle(videoElement, style) {\n        const fontSize = videoElement.videoHeight / 15.0;\n        if (style) {\n            return 'font-size: ' + fontSize + 'px; font-family: Menlo, Consolas, \\'Cutive Mono\\', monospace; color: ' + ((style.foreground) ? createRGB(style.foreground) : 'rgb(255, 255, 255)') + '; font-style: ' + (style.italics ? 'italic' : 'normal') + '; text-decoration: ' + (style.underline ? 'underline' : 'none') + '; white-space: pre; background-color: ' + ((style.background) ? createRGB(style.background) : 'transparent') + ';';\n        } else {\n            return 'font-size: ' + fontSize + 'px; font-family: Menlo, Consolas, \\'Cutive Mono\\', monospace; justify-content: flex-start; text-align: left; color: rgb(255, 255, 255); font-style: normal; white-space: pre; line-height: normal; font-weight: normal; text-decoration: none; width: 100%; display: flex;';\n        }\n    }\n\n    function ltrim(s) {\n        return s.replace(/^\\s+/g, '');\n    }\n\n    function rtrim(s) {\n        return s.replace(/\\s+$/g, '');\n    }\n\n    function createHTMLCaptionsFromScreen(videoElement, startTime, endTime, captionScreen) {\n        let currRegion = null;\n        let existingRegion = null;\n        let lastRowHasText = false;\n        let lastRowIndentL = -1;\n        let currP = { start: startTime, end: endTime, spans: [] };\n        let currentStyle = 'style_cea608_white_black';\n        const seenRegions = {};\n        const styleStates = {};\n        const regions = [];\n        let r, s;\n\n        for (r = 0; r < 15; ++r) {\n            const row = captionScreen.rows[r];\n            let line = '';\n            let prevPenState = null;\n\n            if (false === row.isEmpty()) {\n                /* Row is not empty */\n\n                /* Get indentation of this row */\n                const rowIndent = checkIndent(row.chars);\n\n                /* Create a new region is there is none */\n                if (currRegion === null) {\n                    currRegion = { x: rowIndent, y1: r, y2: (r + 1), p: [] };\n                }\n\n                /* Check if indentation has changed and we had text of last row */\n                if ((rowIndent !== lastRowIndentL) && lastRowHasText) {\n                    currRegion.p.push(currP);\n                    currP = { start: startTime, end: endTime, spans: [] };\n                    currRegion.y2 = r;\n                    currRegion.name = 'region_' + currRegion.x + '_' + currRegion.y1 + '_' + currRegion.y2;\n                    if (false === seenRegions.hasOwnProperty(currRegion.name)) {\n                        regions.push(currRegion);\n                        seenRegions[currRegion.name] = currRegion;\n                    } else {\n                        existingRegion = seenRegions[currRegion.name];\n                        existingRegion.p.contat(currRegion.p);\n                    }\n\n                    currRegion = { x: rowIndent, y1: r, y2: (r + 1), p: [] };\n                }\n\n                for (let c = 0; c < row.chars.length; ++c) {\n                    const uc = row.chars[c];\n                    const currPenState = uc.penState;\n                    if ((prevPenState === null) || (!currPenState.equals(prevPenState))) {\n                        if (line.trim().length > 0) {\n                            currP.spans.push({ name: currentStyle, line: line, row: r });\n                            line = '';\n                        }\n\n                        let currPenStateString = 'style_cea608_' + currPenState.foreground + '_' + currPenState.background;\n                        if (currPenState.underline) {\n                            currPenStateString += '_underline';\n                        }\n                        if (currPenState.italics) {\n                            currPenStateString += '_italics';\n                        }\n\n                        if (!styleStates.hasOwnProperty(currPenStateString)) {\n                            styleStates[currPenStateString] = JSON.parse(JSON.stringify(currPenState));\n                        }\n\n                        prevPenState = currPenState;\n\n                        currentStyle = currPenStateString;\n                    }\n\n                    line += uc.uchar;\n                }\n\n                if (line.trim().length > 0) {\n                    currP.spans.push({ name: currentStyle, line: line, row: r });\n                }\n\n                lastRowHasText = true;\n                lastRowIndentL = rowIndent;\n            } else {\n                /* Row is empty */\n                lastRowHasText = false;\n                lastRowIndentL = -1;\n\n                if (currRegion) {\n                    currRegion.p.push(currP);\n                    currP = { start: startTime, end: endTime, spans: [] };\n                    currRegion.y2 = r;\n                    currRegion.name = 'region_' + currRegion.x + '_' + currRegion.y1 + '_' + currRegion.y2;\n                    if (false === seenRegions.hasOwnProperty(currRegion.name)) {\n                        regions.push(currRegion);\n                        seenRegions[currRegion.name] = currRegion;\n                    } else {\n                        existingRegion = seenRegions[currRegion.name];\n                        existingRegion.p.contat(currRegion.p);\n                    }\n\n                    currRegion = null;\n                }\n\n            }\n        }\n\n        if (currRegion) {\n            currRegion.p.push(currP);\n            currRegion.y2 = r + 1;\n            currRegion.name = 'region_' + currRegion.x + '_' + currRegion.y1 + '_' + currRegion.y2;\n            if (false === seenRegions.hasOwnProperty(currRegion.name)) {\n                regions.push(currRegion);\n                seenRegions[currRegion.name] = currRegion;\n            } else {\n                existingRegion = seenRegions[currRegion.name];\n                existingRegion.p.contat(currRegion.p);\n            }\n\n            currRegion = null;\n        }\n\n        const captionsArray = [];\n\n        /* Loop thru regions */\n        for (r = 0; r < regions.length; ++r) {\n            const region = regions[r];\n\n            const cueID = 'sub_cea608_' + (captionId++);\n            const finalDiv = document.createElement('div');\n            finalDiv.id = cueID;\n            const cueRegionProperties = getRegionProperties(region);\n            finalDiv.style.cssText = 'position: absolute; margin: 0; display: flex; box-sizing: border-box; pointer-events: none;' + cueRegionProperties;\n\n            const bodyDiv = document.createElement('div');\n            bodyDiv.className = 'paragraph bodyStyle';\n            bodyDiv.style.cssText = getStyle(videoElement);\n\n            const cueUniWrapper = document.createElement('div');\n            cueUniWrapper.className = 'cueUniWrapper';\n            cueUniWrapper.style.cssText = 'unicode-bidi: normal; direction: ltr;';\n\n            for (let p = 0; p < region.p.length; ++p) {\n                const ptag = region.p[p];\n                let lastSpanRow = 0;\n                for (s = 0; s < ptag.spans.length; ++s) {\n                    let span = ptag.spans[s];\n                    if (span.line.length > 0) {\n                        if ((s !== 0) && lastSpanRow != span.row) {\n                            const brElement = document.createElement('br');\n                            brElement.className = 'lineBreak';\n                            cueUniWrapper.appendChild(brElement);\n                        }\n                        let sameRow = false;\n                        if (lastSpanRow === span.row) {\n                            sameRow = true;\n                        }\n                        lastSpanRow = span.row;\n                        const spanStyle = styleStates[span.name];\n                        const spanElement = document.createElement('span');\n                        spanElement.className = 'spanPadding ' + span.name + ' customSpanColor';\n                        spanElement.style.cssText = getStyle(videoElement, spanStyle);\n                        /* If this is not the first span, and it's on the same\n                         * row as the last one */\n                        if ((s !== 0) && sameRow) {\n                            /* and it's the last span on this row */\n                            if (s === ptag.spans.length - 1) {\n                                /* trim only the right side */\n                                spanElement.textContent = rtrim(span.line);\n                            } else {\n                                /* don't trim at all */\n                                spanElement.textContent = span.line;\n                            }\n                        } else {\n                            /* if there is more than 1 span and this isn't the last span */\n                            if (ptag.spans.length > 1 && s < (ptag.spans.length - 1)) {\n                                /* Check if next text is on same row */\n                                if (span.row === ptag.spans[s + 1].row) {\n                                    /* Next element on same row, trim start */\n                                    spanElement.textContent = ltrim(span.line);\n                                } else {\n                                    /* Different rows, trim both */\n                                    spanElement.textContent = span.line.trim();\n                                }\n                            } else {\n                                spanElement.textContent = span.line.trim();\n                            }\n                        }\n                        cueUniWrapper.appendChild(spanElement);\n                    }\n                }\n            }\n\n            bodyDiv.appendChild(cueUniWrapper);\n            finalDiv.appendChild(bodyDiv);\n\n            const fontSize = { 'bodyStyle': ['%', 90] };\n            for (const s in styleStates) {\n                if (styleStates.hasOwnProperty(s)) {\n                    fontSize[s] = ['%', 90];\n                }\n            }\n\n            captionsArray.push({\n                type: 'html',\n                start: startTime,\n                end: endTime,\n                cueHTMLElement: finalDiv,\n                cueID: cueID,\n                cellResolution: [32, 15],\n                isFromCEA608: true,\n                fontSize: fontSize,\n                lineHeight: {},\n                linePadding: {}\n            });\n        }\n        return captionsArray;\n    }\n\n    instance = {\n        createHTMLCaptionsFromScreen: createHTMLCaptionsFromScreen\n    };\n    return instance;\n}\n\nEmbeddedTextHtmlRender.__dashjs_factory_name = 'EmbeddedTextHtmlRender';\nexport default FactoryMaker.getSingletonFactory(EmbeddedTextHtmlRender);\n","export function getSeiData(raw: DataView, startPos: number, endPos: number): DataView {\n\tconst data: number[] = [];\n\n\tfor (let cursor = startPos; cursor < endPos; cursor++) {\n\t\tif (cursor + 2 < endPos && raw.getUint8(cursor) === 0x00 && raw.getUint8(cursor + 1) === 0x00 && raw.getUint8(cursor + 2) === 0x03) {\n\t\t\tdata.push(0x00);\n\t\t\tdata.push(0x00);\n\t\t\tcursor += 2;\n\t\t} \n\t\telse {\n\t\t\tdata.push(raw.getUint8(cursor));\n\t\t}\n\t}\n\n\treturn new DataView(new Uint8Array(data).buffer);\n}\n\nexport function isCea608Sei(payloadType: number, payloadSize: number, sei: DataView, pos: number): boolean {\n\tif (payloadType !== 4 || payloadSize < 8) {\n\t\treturn false;\n\t}\n\n\tconst countryCode = sei.getUint8(pos);\n\tif (countryCode !== 0xB5) {\n\t\treturn false;\n\t}\n\n\tconst providerCode = sei.getUint16(pos + 1);\n\tif (providerCode !== 0x0031) {\n\t\treturn false;\n\t}\n\n\tconst userIdentifier = sei.getUint32(pos + 3);\n\tif (userIdentifier !== 0x47413934) {\n\t\treturn false;\n\t}\n\n\tconst userDataTypeCode = sei.getUint8(pos + 7);\n\tif (userDataTypeCode !== 0x03) {\n\t\treturn false;\n\t}\n\n\treturn true;\n}\n\nexport function isCCType(type: number): boolean {\n\treturn type === 0 || type === 1;\n}\n\nexport function isNonEmptyCCData(ccData1: number, ccData2: number): boolean {\n\treturn (ccData1 & 0x7F) > 0 || (ccData2 & 0x7F) > 0;\n}\n\nexport function isSeiNalUnitType(unitType: number): boolean {\n\treturn unitType === 0x06;\n}\n\nexport function parseCta608DataFromSei(sei: DataView, fieldData: number[][]): void {\n\tlet cursor = 0;\n\twhile (cursor < sei.byteLength) {\n\t\tlet payloadType = 0;\n\t\tlet payloadSize = 0;\n\t\tlet now;\n\n\t\tdo {\n\t\t\tpayloadType += now = sei.getUint8(cursor++);\n\t\t} while (now === 0xFF);\n\t\tdo {\n\t\t\tpayloadSize += now = sei.getUint8(cursor++);\n\t\t} while (now === 0xFF);\n\n\t\tif (isCea608Sei(payloadType, payloadSize, sei, cursor)) {\n\t\t\tconst pos = cursor + 10;\n\t\t\tconst ccCount = pos + (sei.getUint8(pos - 2) & 0x1F) * 3;\n\t\t\tfor (let i = pos; i < ccCount; i += 3) {\n\t\t\t\tconst byte = sei.getUint8(i);\n\t\t\t\tif (byte & 0x04) {\n\t\t\t\t\tconst ccType = byte & 0x03;\n\t\t\t\t\tif (isCCType(ccType)) {\n\t\t\t\t\t\tconst ccData1 = sei.getUint8(i + 1);\n\t\t\t\t\t\tconst ccData2 = sei.getUint8(i + 2);\n\t\t\t\t\t\tif (isNonEmptyCCData(ccData1, ccData2)) {\n\t\t\t\t\t\t\tfieldData[ccType].push(ccData1, ccData2);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcursor += payloadSize;\n\t}\n}\n","import {\n\tgetSeiData,\n\tisSeiNalUnitType,\n\tparseCta608DataFromSei,\n} from './utils/seiHelpers.js';\n\n/**\n * Extracts CEA-608 data from a given sample.\n *\n * @param raw - The DataView with media data\n * @param startPos - The start position within the DataView\n * @param sampleSize - The size of the sample in bytes\n * @returns fieldData array containing field 1 and field 2 data arrays\n *\n * @group CTA-608\n * @beta\n */\nexport function extractCta608DataFromSample(raw: DataView, startPos: number, sampleSize: number): number[][] {\n\tlet nalSize: number = 0;\n\tlet nalType: number = 0;\n\tconst fieldData: number[][] = [[], []];\n\n\tfor (let cursor = startPos; cursor < startPos + sampleSize - 5; cursor++) {\n\t\tnalSize = raw.getUint32(cursor);\n\t\tnalType = raw.getUint8(cursor + 4) & 0x1F;\n\n\t\t// Make sure that we don't go out of bounds\n\t\tif (cursor + 5 + nalSize > startPos + sampleSize) {\n\t\t\tbreak;\n\t\t}\n\n\t\t// Only process Supplemental Enhancement Information (SEI) NAL units\n\t\tif (isSeiNalUnitType(nalType)) {\n\t\t\tif (cursor + 5 + nalSize <= raw.byteLength) {\n\t\t\t\tconst seiData = getSeiData(raw, cursor + 5, cursor + 5 + nalSize);\n\t\t\t\tparseCta608DataFromSei(seiData, fieldData);\n\t\t\t}\n\t\t}\n\n\t\t// Jump to the next NAL unit\n\t\tcursor += nalSize + 3;\n\t}\n\treturn fieldData;\n}\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport Constants from '../constants/Constants.js';\nimport {HTTPRequest} from '../vo/metrics/HTTPRequest.js';\nimport TextTrackInfo from '../vo/TextTrackInfo.js';\nimport BoxParser from '../utils/BoxParser.js';\nimport CustomTimeRanges from '../utils/CustomTimeRanges.js';\nimport FactoryMaker from '../../core/FactoryMaker.js';\nimport Debug from '../../core/Debug.js';\nimport EmbeddedTextHtmlRender from './EmbeddedTextHtmlRender.js';\nimport ISOBoxer from 'codem-isoboxer';\nimport EventBus from '../../core/EventBus.js';\nimport Events from '../../core/events/Events.js';\nimport DashJSError from '../vo/DashJSError.js';\nimport Errors from '../../core/errors/Errors.js';\nimport {Cta608Parser} from '@svta/common-media-library/cta/608/Cta608Parser';\nimport {extractCta608DataFromSample} from '@svta/common-media-library/cta/608/extractCta608DataFromSample';\nimport DashConstants from '../../dash/constants/DashConstants.js';\n\nfunction TextSourceBuffer(config) {\n    const errHandler = config.errHandler;\n    const manifestModel = config.manifestModel;\n    const mediaController = config.mediaController;\n    const videoModel = config.videoModel;\n    const textTracks = config.textTracks;\n    const vttParser = config.vttParser;\n    const vttCustomRenderingParser = config.vttCustomRenderingParser;\n    const ttmlParser = config.ttmlParser;\n    const streamInfo = config.streamInfo;\n    const settings = config.settings;\n\n    const context = this.context;\n    const eventBus = EventBus(context).getInstance();\n    let embeddedInitialized = false;\n\n    let instance,\n        logger,\n        boxParser,\n        parser,\n        mediaInfos,\n        fragmentModel,\n        initializationSegmentReceived,\n        timescale,\n        fragmentedTracks,\n        firstFragmentedSubtitleStart,\n        currFragmentedTrackIdx,\n        embeddedTracks,\n        embeddedTimescale,\n        embeddedLastSequenceNumber,\n        lastChunkEnd,\n        embeddedCea608FieldParsers,\n        embeddedTextHtmlRender;\n\n    function setup() {\n        logger = Debug(context).getInstance().getLogger(instance);\n        boxParser = BoxParser(context).getInstance();\n\n        resetInitialSettings();\n    }\n\n    function getStreamId() {\n        return streamInfo.id;\n    }\n\n    function _resetFragmented() {\n        fragmentModel = null;\n        timescale = NaN;\n        fragmentedTracks = [];\n        firstFragmentedSubtitleStart = null;\n        initializationSegmentReceived = false;\n    }\n\n    function resetInitialSettings() {\n        _resetFragmented();\n\n        mediaInfos = [];\n        parser = null;\n    }\n\n    function initialize() {\n\n        if (!embeddedInitialized) {\n            _initEmbedded();\n        }\n\n    }\n\n    /**\n     * There might be media infos of different types. For instance text and fragmentedText.\n     * @param {string} type\n     * @param {array} mInfos\n     * @param {object} fModel\n     */\n    function addMediaInfos(type, mInfos, fModel) {\n\n        mediaInfos = mediaInfos.concat(mInfos);\n\n        if (type === Constants.TEXT && mInfos[0].isFragmented && !mInfos[0].isEmbedded) {\n            fragmentModel = fModel;\n            instance.buffered = CustomTimeRanges(context).create();\n            fragmentedTracks = mediaController.getTracksFor(Constants.TEXT, streamInfo.id).filter(track => track.isFragmented);\n            const currFragTrack = mediaController.getCurrentTrackFor(Constants.TEXT, streamInfo.id);\n            for (let i = 0; i < fragmentedTracks.length; i++) {\n                if (fragmentedTracks[i] === currFragTrack) {\n                    setCurrentFragmentedTrackIdx(i);\n                    break;\n                }\n            }\n        }\n\n        for (let i = 0; i < mInfos.length; i++) {\n            _createTextTrackInfoFromMediaInfo(mInfos[i]);\n        }\n\n    }\n\n    /**\n     * Create a new track based on the mediaInfo information\n     * @param {object} mediaInfo\n     * @private\n     */\n    function _createTextTrackInfoFromMediaInfo(mediaInfo) {\n\n        // We are mapping DASH specification strings to the ones of the HTML specification.\n        // See also https://html.spec.whatwg.org/multipage/media.html#text-track-kind\n        const trackKindMap = {};\n        trackKindMap[DashConstants.SUBTITLE] = 'subtitles'\n        trackKindMap[DashConstants.CAPTION] = 'captions'\n        trackKindMap[DashConstants.FORCED_SUBTITLE] = 'subtitles'\n\n        const textTrackInfo = new TextTrackInfo();\n\n        for (let key in mediaInfo) {\n            textTrackInfo[key] = mediaInfo[key];\n        }\n\n        textTrackInfo.defaultTrack = getIsDefault(mediaInfo);\n        textTrackInfo.isTTML = _checkTtml(mediaInfo);\n        textTrackInfo.kind = _getKind(mediaInfo, trackKindMap);\n\n        textTracks.addTextTrackInfo(textTrackInfo);\n    }\n\n    function abort() {\n    }\n\n    function reset() {\n        resetInitialSettings();\n\n        mediaInfos = [];\n        boxParser = null;\n    }\n\n    function _onVideoChunkReceived(e) {\n        const chunk = e.chunk;\n\n        if (chunk.representation.mediaInfo.embeddedCaptions) {\n            append(chunk.bytes, chunk);\n        }\n    }\n\n    function _initEmbedded() {\n        embeddedTracks = [];\n        currFragmentedTrackIdx = null;\n        embeddedTimescale = 0;\n        embeddedCea608FieldParsers = [];\n        embeddedLastSequenceNumber = null;\n        lastChunkEnd = null;\n        embeddedInitialized = true;\n        embeddedTextHtmlRender = EmbeddedTextHtmlRender(context).getInstance();\n\n        eventBus.on(Events.VIDEO_CHUNK_RECEIVED, _onVideoChunkReceived, instance);\n        eventBus.on(Events.BUFFER_CLEARED, onVideoBufferCleared, instance);\n    }\n\n    function resetEmbedded() {\n        eventBus.off(Events.VIDEO_CHUNK_RECEIVED, _onVideoChunkReceived, instance);\n        eventBus.off(Events.BUFFER_CLEARED, onVideoBufferCleared, instance);\n        if (textTracks) {\n            textTracks.deleteAllTextTracks();\n        }\n        embeddedInitialized = false;\n        embeddedTracks = [];\n        embeddedCea608FieldParsers = [null, null];\n        embeddedLastSequenceNumber = null;\n        lastChunkEnd = null;\n    }\n\n    function addEmbeddedTrack(mediaInfo) {\n\n        if (!embeddedInitialized) {\n            return;\n        }\n\n        if (mediaInfo) {\n            if (mediaInfo.id === Constants.CC1 || mediaInfo.id === Constants.CC3) {\n                for (let i = 0; i < embeddedTracks.length; i++) {\n                    if (embeddedTracks[i].id === mediaInfo.id) {\n                        return;\n                    }\n                }\n                embeddedTracks.push(mediaInfo);\n            } else {\n                logger.warn('Embedded track ' + mediaInfo.id + ' not supported!');\n            }\n        }\n    }\n\n    function getConfig() {\n        const config = {\n            fragmentModel: fragmentModel,\n            fragmentedTracks: fragmentedTracks,\n            videoModel: videoModel\n        };\n\n        return config;\n    }\n\n    function setCurrentFragmentedTrackIdx(idx) {\n        currFragmentedTrackIdx = idx;\n    }\n\n    function _checkTtml(mediaInfo) {\n        return (mediaInfo.codec && mediaInfo.codec.search(Constants.STPP) >= 0) || (mediaInfo.mimeType && mediaInfo.mimeType.search(Constants.TTML) >= 0);\n    }\n\n    function _getKind(mediaInfo, trackKindMap) {\n        let kind = (mediaInfo.roles && mediaInfo.roles.length > 0) ? trackKindMap[mediaInfo.roles[0].value] : trackKindMap.caption;\n\n        kind = Object.values(trackKindMap).includes(kind) ? kind : trackKindMap.caption;\n\n        return kind;\n    }\n\n    function append(bytes, chunk) {\n        const mediaInfo = chunk.representation.mediaInfo;\n        const mediaType = mediaInfo.type;\n        const mimeType = mediaInfo.mimeType;\n        const codecType = mediaInfo.codec || mimeType;\n\n        if (!codecType) {\n            logger.error('No text type defined');\n            return;\n        }\n\n        if (mediaInfo.codec.indexOf('application/mp4') !== -1) {\n            _appendFragmentedText(bytes, chunk, codecType);\n        } else if (mediaType === Constants.VIDEO) {\n            _appendEmbeddedText(bytes, chunk);\n        } else {\n            _appendText(bytes, chunk, codecType);\n        }\n    }\n\n    function _appendFragmentedText(bytes, chunk, codecType) {\n        let sampleList,\n            samplesInfo;\n\n        if (chunk.segmentType === 'InitializationSegment') {\n            initializationSegmentReceived = true;\n            timescale = boxParser.getMediaTimescaleFromMoov(bytes);\n        } else {\n            if (!initializationSegmentReceived) {\n                return;\n            }\n            samplesInfo = boxParser.getSamplesInfo(bytes);\n            sampleList = samplesInfo.sampleList;\n            if (sampleList.length > 0) {\n                firstFragmentedSubtitleStart = sampleList[0].cts - chunk.start * timescale;\n            }\n\n            if (codecType.search(Constants.STPP) >= 0) {\n                _appendFragmentedSttp(bytes, sampleList, codecType);\n            } else {\n                _appendFragmentedWebVtt(bytes, sampleList);\n            }\n        }\n    }\n\n    function _appendFragmentedSttp(bytes, sampleList, codecType) {\n        let i, j;\n\n        parser = parser !== null ? parser : _getParser(codecType);\n\n        for (i = 0; i < sampleList.length; i++) {\n            const sample = sampleList[i];\n            const sampleStart = sample.cts;\n            const timestampOffset = _getTimestampOffset();\n            const start = timestampOffset + sampleStart / timescale;\n            const end = start + sample.duration / timescale;\n            instance.buffered.add(start, end);\n            const dataView = new DataView(bytes, sample.offset, sample.subSizes[0]);\n            let ccContent = ISOBoxer.Utils.dataViewToString(dataView, Constants.UTF8);\n            const images = [];\n            let subOffset = sample.offset + sample.subSizes[0];\n\n            for (j = 1; j < sample.subSizes.length; j++) {\n                const inData = new Uint8Array(bytes, subOffset, sample.subSizes[j]);\n                const raw = String.fromCharCode.apply(null, inData);\n                images.push(raw);\n                subOffset += sample.subSizes[j];\n            }\n\n            try {\n                const manifest = manifestModel.getValue();\n\n                // Only used for Microsoft Smooth Streaming support - caption time is relative to sample time. In this case, we apply an offset.\n                const offsetTime = manifest.ttmlTimeIsRelative ? sampleStart / timescale : 0;\n                const result = parser.parse(ccContent, offsetTime, (sampleStart / timescale), ((sampleStart + sample.duration) / timescale), images);\n                textTracks.addCaptions(currFragmentedTrackIdx, timestampOffset, result);\n\n            } catch (e) {\n                fragmentModel.removeExecutedRequestsBeforeTime();\n                this.remove();\n                logger.error('TTML parser error: ' + e.message);\n            }\n        }\n    }\n\n    function _appendFragmentedWebVtt(bytes, sampleList) {\n        let i, j, k;\n\n        const captionArray = [];\n        for (i = 0; i < sampleList.length; i++) {\n            const sample = sampleList[i];\n            sample.cts -= firstFragmentedSubtitleStart;\n            const timestampOffset = _getTimestampOffset();\n            const start = timestampOffset + sample.cts / timescale;\n            const end = start + sample.duration / timescale;\n            instance.buffered.add(start, end);\n            const sampleData = bytes.slice(sample.offset, sample.offset + sample.size);\n            // There are boxes inside the sampleData, so we need a ISOBoxer to get at it.\n            const sampleBoxes = ISOBoxer.parseBuffer(sampleData);\n\n            for (j = 0; j < sampleBoxes.boxes.length; j++) {\n                const box1 = sampleBoxes.boxes[j];\n                logger.debug('VTT box1: ' + box1.type);\n                if (box1.type === 'vtte') {\n                    continue; //Empty box\n                }\n                if (box1.type === 'vttc') {\n                    logger.debug('VTT vttc boxes.length = ' + box1.boxes.length);\n                    let entry = {\n                        styles: {}\n                    };\n                    for (k = 0; k < box1.boxes.length; k++) {\n                        const box2 = box1.boxes[k];\n                        logger.debug('VTT box2: ' + box2.type);\n\n                        // Mandatory cue payload lines\n                        if (box2.type === 'payl') {\n                            entry.start = sample.cts / timescale;\n                            entry.end = (sample.cts + sample.duration) / timescale;\n                            entry.data = box2.cue_text;\n                        }\n\n                        // The styling information\n                        else if (box2.type === 'sttg' && box2.settings && box2.settings !== '') {\n                            try {\n                                const stylings = box2.settings.split(' ');\n                                entry.styles = vttParser.getCaptionStyles(stylings);\n                            } catch (e) {\n\n                            }\n                        }\n                    }\n                    if (entry && entry.data) {\n                        captionArray.push(entry);\n                        logger.debug(`VTT  ${entry.start} - ${entry.end} :  ${entry.data}`);\n                    }\n                }\n            }\n        }\n        if (captionArray.length > 0) {\n            textTracks.addCaptions(currFragmentedTrackIdx, 0, captionArray);\n        }\n    }\n\n    function _appendText(bytes, chunk, codecType) {\n        let result,\n            ccContent;\n\n        const dataView = new DataView(bytes, 0, bytes.byteLength);\n        ccContent = ISOBoxer.Utils.dataViewToString(dataView, Constants.UTF8);\n\n        try {\n            result = _getParser(codecType).parse(ccContent, 0);\n            textTracks.addCaptions(textTracks.getCurrentTrackIdx(), 0, result);\n            if (instance.buffered) {\n                instance.buffered.add(chunk.start, chunk.end);\n            }\n        } catch (e) {\n            errHandler.error(new DashJSError(Errors.TIMED_TEXT_ERROR_ID_PARSE_CODE, Errors.TIMED_TEXT_ERROR_MESSAGE_PARSE + e.message, ccContent));\n        }\n    }\n\n    function _isDiscontinuityOfChunks(embeddedLastSequenceNumber, sequenceNumber, numSequences, lastChunkEnd, chunkStart) {\n        if (embeddedLastSequenceNumber === null || sequenceNumber === null || lastChunkEnd === null || chunkStart === null) {\n            return false\n        }\n        // Sequence number is always 1 for low latency streams\n        if (sequenceNumber === embeddedLastSequenceNumber) {\n            // time-based continuity check\n            return lastChunkEnd !== chunkStart\n        }\n        return sequenceNumber !== embeddedLastSequenceNumber + numSequences;\n    }\n\n    function _appendEmbeddedText(bytes, chunk) {\n        let i, samplesInfo;\n\n        // Init segment\n        if (chunk.segmentType === HTTPRequest.INIT_SEGMENT_TYPE) {\n            if (embeddedTimescale === 0) {\n                embeddedTimescale = boxParser.getMediaTimescaleFromMoov(bytes);\n            }\n        }\n\n        // MediaSegment\n        else if (chunk.segmentType === HTTPRequest.MEDIA_SEGMENT_TYPE) {\n\n            if (embeddedTimescale === 0) {\n                logger.warn('CEA-608: No timescale for embeddedTextTrack yet');\n                return;\n            }\n\n            samplesInfo = boxParser.getSamplesInfo(bytes);\n\n            const sequenceNumber = samplesInfo.lastSequenceNumber;\n            const chunkStart = Math.trunc(chunk.start);\n            const chunkEnd = Math.trunc(chunk.end);\n\n            if (!embeddedCea608FieldParsers[0] && !embeddedCea608FieldParsers[1]) {\n                _setupCeaParser();\n            }\n\n            if (embeddedTimescale) {\n                if (_isDiscontinuityOfChunks(embeddedLastSequenceNumber, sequenceNumber, samplesInfo.numSequences, lastChunkEnd, chunkStart)) {\n                    for (i = 0; i < embeddedCea608FieldParsers.length; i++) {\n                        if (embeddedCea608FieldParsers[i]) {\n                            embeddedCea608FieldParsers[i].reset();\n                        }\n                    }\n                }\n\n                const allCcData = _extractCea608Data(bytes, samplesInfo.sampleList);\n\n                for (let fieldNr = 0; fieldNr < embeddedCea608FieldParsers.length; fieldNr++) {\n                    const ccData = allCcData.fields[fieldNr];\n                    const fieldParser = embeddedCea608FieldParsers[fieldNr];\n                    if (fieldParser) {\n                        for (i = 0; i < ccData.length; i++) {\n                            fieldParser.addData(ccData[i][0] / embeddedTimescale, ccData[i][1]);\n                        }\n                    }\n                }\n                embeddedLastSequenceNumber = sequenceNumber;\n                lastChunkEnd = chunkEnd;\n            }\n        }\n    }\n\n    function _setupCeaParser() {\n        // Time to setup the CEA-608 parsing\n        let trackIdx;\n        for (let i = 0; i < embeddedTracks.length; i++) {\n            trackIdx = textTracks.getTrackIdxForId(embeddedTracks[i].id);\n\n            if (trackIdx === -1) {\n                logger.warn('CEA-608: data before track is ready.');\n                return;\n            }\n\n            const handler = _makeCueAdderForIndex(trackIdx);\n            embeddedCea608FieldParsers[i] = new Cta608Parser(i + 1, {\n                newCue: handler\n            }, null);\n        }\n    }\n\n    function _makeCueAdderForIndex(trackIndex) {\n        function newCue(startTime, endTime, captionScreen) {\n            let captionsArray;\n            if (videoModel.getTTMLRenderingDiv()) {\n                captionsArray = embeddedTextHtmlRender.createHTMLCaptionsFromScreen(videoModel.getElement(), startTime, endTime, captionScreen);\n            } else {\n                const text = captionScreen.getDisplayText();\n                captionsArray = [{\n                    start: startTime,\n                    end: endTime,\n                    data: text,\n                    styles: {}\n                }];\n            }\n            if (captionsArray) {\n                textTracks.addCaptions(trackIndex, 0, captionsArray);\n            }\n        }\n\n        return newCue;\n    }\n\n    /**\n     * Extract CEA-608 data from a buffer of data.\n     * @param {ArrayBuffer} data\n     * @param {Array} samples cue information\n     * @returns {Object|null} ccData corresponding to one segment.\n     */\n    function _extractCea608Data(data, samples) {\n        if (samples.length === 0) {\n            return null;\n        }\n\n        const allCcData = {\n            splits: [],\n            fields: [[], []]\n        };\n        const raw = new DataView(data);\n        for (let i = 0; i < samples.length; i++) {\n            const sample = samples[i];\n            const ccData = extractCta608DataFromSample(raw, sample.offset, sample.size);\n\n            let lastSampleTime = null;\n            let idx = 0;\n            for (let k = 0; k < 2; k++) {\n                if (ccData[k].length > 0) {\n                    if (sample.cts !== lastSampleTime) {\n                        idx = 0;\n                    } else {\n                        idx += 1;\n                    }\n                    const timestampOffset = _getTimestampOffset();\n                    allCcData.fields[k].push([sample.cts + (timestampOffset * embeddedTimescale), ccData[k], idx]);\n                    lastSampleTime = sample.cts;\n                }\n            }\n        }\n\n        // Sort by sampleTime ascending order\n        // If two packets have the same sampleTime, use them in the order\n        // they were received\n        allCcData.fields.forEach(function sortField(field) {\n            field.sort(function (a, b) {\n                if (a[0] === b[0]) {\n                    return a[2] - b[2];\n                }\n                return a[0] - b[0];\n            });\n        });\n\n        return allCcData;\n    }\n\n    function _getTimestampOffset() {\n        return !isNaN(instance.timestampOffset) ? instance.timestampOffset : 0;\n    }\n\n    function getIsDefault(mediaInfo) {\n        //TODO How to tag default. currently same order as listed in manifest.\n        // Is there a way to mark a text adaptation set as the default one? DASHIF meeting talk about using role which is being used for track KIND\n        // Eg subtitles etc. You can have multiple role tags per adaptation Not defined in the spec yet.\n        let isDefault = false;\n        if (embeddedTracks.length > 1 && mediaInfo.isEmbedded) {\n            isDefault = (mediaInfo.id && mediaInfo.id === Constants.CC1); // CC1 if both CC1 and CC3 exist\n        } else if (embeddedTracks.length === 1) {\n            if (mediaInfo.id && typeof mediaInfo.id === 'string' && mediaInfo.id.substring(0, 2) === 'CC') { // Either CC1 or CC3\n                isDefault = true;\n            }\n        } else if (embeddedTracks.length === 0) {\n            isDefault = (mediaInfo.index === mediaInfos[0].index);\n        }\n        return isDefault;\n    }\n\n    function _getParser(codecType) {\n        let parser;\n        if (codecType.search(Constants.VTT) >= 0) {\n            parser = settings.get().streaming.text.webvtt.customRenderingEnabled && vttCustomRenderingParser ? vttCustomRenderingParser : vttParser;\n        } else if (codecType.search(Constants.TTML) >= 0 || codecType.search(Constants.STPP) >= 0) {\n            parser = ttmlParser;\n        }\n        return parser;\n    }\n\n    function remove(start, end) {\n        //if start and end are not defined, remove all\n        if ((start === undefined) && (start === end)) {\n            start = instance.buffered.start(0);\n            end = instance.buffered.end(instance.buffered.length - 1);\n        }\n        instance.buffered.remove(start, end);\n        textTracks.deleteCuesFromTrackIdx(currFragmentedTrackIdx, start, end);\n    }\n\n    function onVideoBufferCleared(e) {\n        embeddedTracks.forEach(function (track) {\n            const trackIdx = textTracks.getTrackIdxForId(track.id);\n            if (trackIdx >= 0) {\n                textTracks.deleteCuesFromTrackIdx(trackIdx, e.from, e.to);\n            }\n        });\n    }\n\n    function resetMediaInfos() {\n        mediaInfos = [];\n    }\n\n    instance = {\n        initialize,\n        addMediaInfos,\n        resetMediaInfos,\n        getStreamId,\n        append,\n        abort,\n        addEmbeddedTrack,\n        resetEmbedded,\n        getConfig,\n        setCurrentFragmentedTrackIdx,\n        remove,\n        reset\n    };\n\n    setup();\n\n    return instance;\n}\n\nTextSourceBuffer.__dashjs_factory_name = 'TextSourceBuffer';\nexport default FactoryMaker.getClassFactory(TextSourceBuffer);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport Constants from '../constants/Constants.js';\nimport EventBus from '../../core/EventBus.js';\nimport Events from '../../core/events/Events.js';\nimport MediaPlayerEvents from '../../streaming/MediaPlayerEvents.js';\nimport FactoryMaker from '../../core/FactoryMaker.js';\nimport Debug from '../../core/Debug.js';\nimport {renderHTML} from 'imsc';\n\nconst CUE_PROPS_TO_COMPARE = [\n    'text',\n    'align',\n    'fontSize',\n    'id',\n    'isd',\n    'line',\n    'lineAlign',\n    'lineHeight',\n    'linePadding',\n    'position',\n    'positionAlign',\n    'region',\n    'size',\n    'snapToLines',\n    'vertical',\n];\n\nfunction TextTracks(config) {\n\n    const context = this.context;\n    const eventBus = EventBus(context).getInstance();\n    const videoModel = config.videoModel;\n    const streamInfo = config.streamInfo;\n    const settings = config.settings;\n\n    let instance,\n        logger,\n        Cue,\n        textTrackInfos,\n        nativeTexttracks,\n        currentTrackIdx,\n        actualVideoLeft,\n        actualVideoTop,\n        actualVideoWidth,\n        actualVideoHeight,\n        captionContainer,\n        vttCaptionContainer,\n        videoSizeCheckInterval,\n        fullscreenAttribute,\n        displayCCOnTop,\n        previousISDState,\n        topZIndex,\n        resizeObserver,\n        hasRequestAnimationFrame,\n        currentCaptionEventCue;\n\n    function setup() {\n        logger = Debug(context).getInstance().getLogger(instance);\n    }\n\n    function initialize() {\n        if (typeof window === 'undefined' || typeof navigator === 'undefined') {\n            return;\n        }\n\n        Cue = window.VTTCue || window.TextTrackCue;\n        textTrackInfos = [];\n        nativeTexttracks = [];\n        currentTrackIdx = -1;\n        actualVideoLeft = 0;\n        actualVideoTop = 0;\n        actualVideoWidth = 0;\n        actualVideoHeight = 0;\n        captionContainer = null;\n        vttCaptionContainer = null;\n        videoSizeCheckInterval = null;\n        displayCCOnTop = false;\n        topZIndex = 2147483647;\n        previousISDState = null;\n        hasRequestAnimationFrame = ('requestAnimationFrame' in window);\n\n        if (document.fullscreenElement !== undefined) {\n            fullscreenAttribute = 'fullscreenElement'; // Standard and Edge\n        } else if (document.webkitIsFullScreen !== undefined) {\n            fullscreenAttribute = 'webkitIsFullScreen'; // Chrome and Safari (and Edge)\n        } else if (document.msFullscreenElement) { // IE11\n            fullscreenAttribute = 'msFullscreenElement';\n        } else if (document.mozFullScreen) { // Firefox\n            fullscreenAttribute = 'mozFullScreen';\n        }\n    }\n\n    function getStreamId() {\n        return streamInfo.id;\n    }\n\n    function createTracks() {\n        //Sort in same order as in manifest\n        textTrackInfos.sort(function (a, b) {\n            return a.index - b.index;\n        });\n\n        captionContainer = videoModel.getTTMLRenderingDiv();\n        vttCaptionContainer = videoModel.getVttRenderingDiv();\n        let defaultIndex = -1;\n        for (let i = 0; i < textTrackInfos.length; i++) {\n            const nativeTexttrack = _createNativeTextrackElement(textTrackInfos[i]);\n\n            //used to remove tracks from video element when added manually\n            nativeTexttracks.push(nativeTexttrack);\n\n            if (textTrackInfos[i].defaultTrack) {\n                // track.default is an object property identifier that is a reserved word\n                nativeTexttrack.default = true;\n                defaultIndex = i;\n            }\n\n            const textTrack = getTrackByIdx(i);\n            if (textTrack) {\n                //each time a track is created, its mode should be showing by default\n                //sometime, it's not on Chrome\n                textTrack.mode = Constants.TEXT_SHOWING;\n                if (captionContainer && (textTrackInfos[i].isTTML || textTrackInfos[i].isEmbedded)) {\n                    textTrack.renderingType = 'html';\n                } else {\n                    textTrack.renderingType = 'default';\n                }\n            }\n\n            addCaptions(i, 0, textTrackInfos[i].captionData);\n            eventBus.trigger(MediaPlayerEvents.TEXT_TRACK_ADDED);\n        }\n\n        //set current track index in textTrackQueue array\n        setCurrentTrackIdx.call(this, defaultIndex);\n\n        if (defaultIndex >= 0) {\n\n            let onMetadataLoaded = function () {\n                const track = getTrackByIdx(defaultIndex);\n                if (track && track.renderingType === 'html') {\n                    checkVideoSize.call(this, track, true);\n                }\n                eventBus.off(MediaPlayerEvents.PLAYBACK_METADATA_LOADED, onMetadataLoaded, this);\n            };\n\n            eventBus.on(MediaPlayerEvents.PLAYBACK_METADATA_LOADED, onMetadataLoaded, this);\n\n            for (let idx = 0; idx < textTrackInfos.length; idx++) {\n                const videoTextTrack = getTrackByIdx(idx);\n                if (videoTextTrack) {\n                    const dispatchForManualRendering = settings.get().streaming.text.dispatchForManualRendering;\n                    videoTextTrack.mode = (idx === defaultIndex && !dispatchForManualRendering) ? Constants.TEXT_SHOWING : Constants.TEXT_HIDDEN;\n                    videoTextTrack.manualMode = (idx === defaultIndex) ? Constants.TEXT_SHOWING : Constants.TEXT_HIDDEN;\n                }\n            }\n        }\n\n        eventBus.trigger(Events.TEXT_TRACKS_QUEUE_INITIALIZED, {\n            index: currentTrackIdx,\n            tracks: textTrackInfos,\n            streamId: streamInfo.id\n        });\n    }\n\n    function _createNativeTextrackElement(element) {\n        const kind = element.kind;\n        const label = element.id !== undefined ? element.id : element.lang;\n        const lang = element.lang;\n        const isTTML = element.isTTML;\n        const isEmbedded = element.isEmbedded;\n        const track = videoModel.addTextTrack(kind, label, lang, isTTML, isEmbedded);\n\n        return track;\n    }\n\n    function addTextTrackInfo(textTrackInfoVO) {\n        textTrackInfos.push(textTrackInfoVO);\n    }\n\n    function getVideoVisibleVideoSize(viewWidth, viewHeight, videoWidth, videoHeight, aspectRatio, use80Percent) {\n        const viewAspectRatio = viewWidth / viewHeight;\n        const videoAspectRatio = videoWidth / videoHeight;\n\n        let videoPictureWidth = 0;\n        let videoPictureHeight = 0;\n\n        if (viewAspectRatio > videoAspectRatio) {\n            videoPictureHeight = viewHeight;\n            videoPictureWidth = (videoPictureHeight / videoHeight) * videoWidth;\n        } else {\n            videoPictureWidth = viewWidth;\n            videoPictureHeight = (videoPictureWidth / videoWidth) * videoHeight;\n        }\n\n        let videoPictureXAspect = 0;\n        let videoPictureYAspect = 0;\n        let videoPictureWidthAspect = 0;\n        let videoPictureHeightAspect = 0;\n        const videoPictureAspect = videoPictureWidth / videoPictureHeight;\n\n        if (videoPictureAspect > aspectRatio) {\n            videoPictureHeightAspect = videoPictureHeight;\n            videoPictureWidthAspect = videoPictureHeight * aspectRatio;\n        } else {\n            videoPictureWidthAspect = videoPictureWidth;\n            videoPictureHeightAspect = videoPictureWidth / aspectRatio;\n        }\n        videoPictureXAspect = (viewWidth - videoPictureWidthAspect) / 2;\n        videoPictureYAspect = (viewHeight - videoPictureHeightAspect) / 2;\n\n        if (use80Percent) {\n            return {\n                x: videoPictureXAspect + (videoPictureWidthAspect * 0.1),\n                y: videoPictureYAspect + (videoPictureHeightAspect * 0.1),\n                w: videoPictureWidthAspect * 0.8,\n                h: videoPictureHeightAspect * 0.8\n            }; /* Maximal picture size in videos aspect ratio */\n        } else {\n            return {\n                x: videoPictureXAspect,\n                y: videoPictureYAspect,\n                w: videoPictureWidthAspect,\n                h: videoPictureHeightAspect\n            }; /* Maximal picture size in videos aspect ratio */\n        }\n    }\n\n    function checkVideoSize(track, forceDrawing) {\n        const clientWidth = videoModel.getClientWidth();\n        const clientHeight = videoModel.getClientHeight();\n        const videoWidth = videoModel.getVideoWidth();\n        const videoHeight = videoModel.getVideoHeight();\n        const videoOffsetTop = videoModel.getVideoRelativeOffsetTop();\n        const videoOffsetLeft = videoModel.getVideoRelativeOffsetLeft();\n\n        if (videoWidth !== 0 && videoHeight !== 0) {\n\n            let aspectRatio = videoWidth / videoHeight;\n            let use80Percent = false;\n            if (track.isFromCEA608) {\n                // If this is CEA608 then use predefined aspect ratio\n                aspectRatio = 3.5 / 3.0;\n                use80Percent = true;\n            }\n\n            const realVideoSize = getVideoVisibleVideoSize.call(this, clientWidth, clientHeight, videoWidth, videoHeight, aspectRatio, use80Percent);\n\n            const newVideoWidth = realVideoSize.w;\n            const newVideoHeight = realVideoSize.h;\n            const newVideoLeft = realVideoSize.x;\n            const newVideoTop = realVideoSize.y;\n\n            if (newVideoWidth != actualVideoWidth || newVideoHeight != actualVideoHeight || newVideoLeft != actualVideoLeft || newVideoTop != actualVideoTop || forceDrawing) {\n                actualVideoLeft = newVideoLeft + videoOffsetLeft;\n                actualVideoTop = newVideoTop + videoOffsetTop;\n                actualVideoWidth = newVideoWidth;\n                actualVideoHeight = newVideoHeight;\n\n                if (captionContainer) {\n                    const containerStyle = captionContainer.style;\n                    if (containerStyle) {\n                        containerStyle.left = actualVideoLeft + 'px';\n                        containerStyle.top = actualVideoTop + 'px';\n                        containerStyle.width = actualVideoWidth + 'px';\n                        containerStyle.height = actualVideoHeight + 'px';\n                        containerStyle.zIndex = (fullscreenAttribute && document[fullscreenAttribute]) || displayCCOnTop ? topZIndex : null;\n                        eventBus.trigger(MediaPlayerEvents.CAPTION_CONTAINER_RESIZE);\n                    }\n                }\n\n                // Video view has changed size, so resize any active cues\n                const activeCues = track.activeCues;\n                if (activeCues) {\n                    const len = activeCues.length;\n                    for (let i = 0; i < len; ++i) {\n                        const cue = activeCues[i];\n                        cue.scaleCue(cue);\n                    }\n                }\n            }\n        }\n    }\n\n    function _scaleCue(activeCue) {\n        const videoWidth = actualVideoWidth;\n        const videoHeight = actualVideoHeight;\n        let key,\n            replaceValue,\n            valueFontSize,\n            valueLineHeight,\n            elements;\n\n        if (activeCue.cellResolution) {\n            const cellUnit = [videoWidth / activeCue.cellResolution[0], videoHeight / activeCue.cellResolution[1]];\n            if (activeCue.linePadding) {\n                for (key in activeCue.linePadding) {\n                    if (activeCue.linePadding.hasOwnProperty(key)) {\n                        const valueLinePadding = activeCue.linePadding[key];\n                        replaceValue = (valueLinePadding * cellUnit[0]).toString();\n                        // Compute the CellResolution unit in order to process properties using sizing (fontSize, linePadding, etc).\n                        const elementsSpan = document.getElementsByClassName('spanPadding');\n                        for (let i = 0; i < elementsSpan.length; i++) {\n                            elementsSpan[i].style.cssText = elementsSpan[i].style.cssText.replace(/(padding-left\\s*:\\s*)[\\d.,]+(?=\\s*px)/gi, '$1' + replaceValue);\n                            elementsSpan[i].style.cssText = elementsSpan[i].style.cssText.replace(/(padding-right\\s*:\\s*)[\\d.,]+(?=\\s*px)/gi, '$1' + replaceValue);\n                        }\n                    }\n                }\n            }\n\n            if (activeCue.fontSize) {\n                for (key in activeCue.fontSize) {\n                    if (activeCue.fontSize.hasOwnProperty(key)) {\n                        if (activeCue.fontSize[key][0] === '%') {\n                            valueFontSize = activeCue.fontSize[key][1] / 100;\n                        } else if (activeCue.fontSize[key][0] === 'c') {\n                            valueFontSize = activeCue.fontSize[key][1];\n                        }\n\n                        replaceValue = (valueFontSize * cellUnit[1]).toString();\n\n                        if (key !== 'defaultFontSize') {\n                            elements = document.getElementsByClassName(key);\n                        } else {\n                            elements = document.getElementsByClassName('paragraph');\n                        }\n\n                        for (let j = 0; j < elements.length; j++) {\n                            elements[j].style.cssText = elements[j].style.cssText.replace(/(font-size\\s*:\\s*)[\\d.,]+(?=\\s*px)/gi, '$1' + replaceValue);\n                        }\n                    }\n                }\n\n                if (activeCue.lineHeight) {\n                    for (key in activeCue.lineHeight) {\n                        if (activeCue.lineHeight.hasOwnProperty(key)) {\n                            if (activeCue.lineHeight[key][0] === '%') {\n                                valueLineHeight = activeCue.lineHeight[key][1] / 100;\n                            } else if (activeCue.fontSize[key][0] === 'c') {\n                                valueLineHeight = activeCue.lineHeight[key][1];\n                            }\n\n                            replaceValue = (valueLineHeight * cellUnit[1]).toString();\n                            elements = document.getElementsByClassName(key);\n                            for (let k = 0; k < elements.length; k++) {\n                                elements[k].style.cssText = elements[k].style.cssText.replace(/(line-height\\s*:\\s*)[\\d.,]+(?=\\s*px)/gi, '$1' + replaceValue);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        if (activeCue.isd) {\n            let htmlCaptionDiv = document.getElementById(activeCue.cueID);\n            if (htmlCaptionDiv) {\n                captionContainer.removeChild(htmlCaptionDiv);\n            }\n            _renderCaption(activeCue);\n        }\n    }\n\n    function _resolveImageSrc(cue, src) {\n        const imsc1ImgUrnTester = /^(urn:)(mpeg:[a-z0-9][a-z0-9-]{0,31}:)(subs:)([0-9]+)$/;\n        const smpteImgUrnTester = /^#(.*)$/;\n        if (imsc1ImgUrnTester.test(src)) {\n            const match = imsc1ImgUrnTester.exec(src);\n            const imageId = parseInt(match[4], 10) - 1;\n            const imageData = btoa(cue.images[imageId]);\n            const imageSrc = 'data:image/png;base64,' + imageData;\n            return imageSrc;\n        } else if (smpteImgUrnTester.test(src)) {\n            const match = smpteImgUrnTester.exec(src);\n            const imageId = match[1];\n            const imageSrc = 'data:image/png;base64,' + cue.embeddedImages[imageId];\n            return imageSrc;\n        } else {\n            return src;\n        }\n    }\n\n    function _renderCaption(cue) {\n        if (captionContainer) {\n            clearCaptionContainer.call(this);\n\n            const finalCue = document.createElement('div');\n            captionContainer.appendChild(finalCue);\n\n            previousISDState = renderHTML(\n                cue.isd,\n                finalCue,\n                function (src) {\n                    return _resolveImageSrc(cue, src)\n                },\n                captionContainer.clientHeight,\n                captionContainer.clientWidth,\n                settings.get().streaming.text.imsc.displayForcedOnlyMode,\n                function (err) {\n                    logger.info('renderCaption :', err) /*TODO: add ErrorHandler management*/\n                },\n                previousISDState,\n                settings.get().streaming.text.imsc.enableRollUp\n            );\n            finalCue.id = cue.cueID;\n            eventBus.trigger(MediaPlayerEvents.CAPTION_RENDERED, { captionDiv: finalCue, currentTrackIdx });\n        }\n    }\n\n    // Check that a new cue immediately follows the previous cue\n    function _areCuesAdjacent(cue, prevCue) {\n        if (!prevCue) {\n            return false;\n        }\n        // Check previous cue endTime with current cue startTime\n        // (should we consider an epsilon margin? for example to get around rounding issues)\n        return prevCue.endTime >= cue.startTime;\n    }\n\n    // Check if cue content is identical. If it is, extend the previous cue.\n    function _extendLastCue(cue, prevCue) {\n        if (!settings.get().streaming.text.extendSegmentedCues) {\n            return false;\n        }\n\n        if (!_cuesContentAreEqual(prevCue, cue, CUE_PROPS_TO_COMPARE)) {\n            return false;\n        }\n\n        prevCue.endTime = Math.max(prevCue.endTime, cue.endTime);\n        return true;\n    }\n\n    function _cuesContentAreEqual(cue1, cue2, props) {\n        for (let i = 0; i < props.length; i++) {\n            const key = props[i];\n            if (JSON.stringify(cue1[key]) !== JSON.stringify(cue2[key])) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    function _resolveImagesInContents(cue, contents) {\n        if (!contents) {\n            return;\n        }\n        contents.forEach(c => {\n            if (c.kind && c.kind === 'image') {\n                c.src = _resolveImageSrc(cue, c.src);\n            }\n            _resolveImagesInContents(cue, c.contents);\n        });\n    }\n\n    /*\n     * Add captions to track, store for later adding, or add captions added before\n     */\n    function addCaptions(trackIdx, timeOffset, captionData) {\n        const track = getTrackByIdx(trackIdx);\n        const dispatchForManualRendering = settings.get().streaming.text.dispatchForManualRendering;\n\n        if (!track) {\n            return;\n        }\n\n        if (!Array.isArray(captionData) || captionData.length === 0) {\n            return;\n        }\n\n        for (let item = 0; item < captionData.length; item++) {\n            let cue = null;\n            const currentItem = captionData[item];\n\n            track.cellResolution = currentItem.cellResolution;\n            track.isFromCEA608 = currentItem.isFromCEA608;\n\n            if (!isNaN(currentItem.start) && !isNaN(currentItem.end)) {\n                if (dispatchForManualRendering) {\n                    cue = _handleCaptionEvents(currentItem, timeOffset);\n                } else if (_isHTMLCue(currentItem) && captionContainer) {\n                    cue = _handleHtmlCaption(currentItem, timeOffset, track)\n                } else if (currentItem.data) {\n                    cue = _handleNonHtmlCaption(currentItem, timeOffset, track)\n                }\n            }\n\n            try {\n                if (cue) {\n                    if (!cueInTrack(track, cue)) {\n                        if (settings.get().streaming.text.webvtt.customRenderingEnabled) {\n                            if (!track.manualCueList) {\n                                track.manualCueList = [];\n                            }\n                            track.manualCueList.push(cue);\n                        } else {\n                            // Handle adjacent cues\n                            let prevCue;\n                            if (track.cues && track.cues.length !== 0) {\n                                prevCue = track.cues[track.cues.length - 1];\n                            }\n\n                            if (_areCuesAdjacent(cue, prevCue)) {\n                                if (!_extendLastCue(cue, prevCue)) {\n                                    /* If cues are adjacent but not identical (extended), let the render function of the next cue\n                                     * clear up the captionsContainer so removal and appending are instantaneous.\n                                     * Only do this for imsc subs (where isd is present).\n                                     */\n                                    if (prevCue.isd) {\n                                        prevCue.onexit = function () {\n                                        };\n                                    }\n                                    // If cues are added when the track is disabled they can still persist in memory\n                                    if (track.mode !== Constants.TEXT_DISABLED) {\n                                        track.addCue(cue);\n                                    }\n                                }\n                            } else {\n                                if (track.mode !== Constants.TEXT_DISABLED) {\n                                    track.addCue(cue);\n                                }\n                            }\n                        }\n                    }\n\n                    // Remove old cues\n                    const bufferToKeep = settings.get().streaming.buffer.bufferToKeep;\n                    const currentTime = videoModel.getTime();\n                    _deleteOutdatedTrackCues(track, 0, currentTime - bufferToKeep);\n                } else {\n                    logger.error('Impossible to display subtitles. You might have missed setting a TTML rendering div via player.attachTTMLRenderingDiv(TTMLRenderingDiv)');\n                }\n            } catch (e) {\n                // Edge crash, delete everything and start adding again\n                // @see https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/11979877/\n                _deleteTrackCues(track);\n                track.addCue(cue);\n                throw e;\n            }\n        }\n    }\n\n    function _handleCaptionEvents(currentItem, timeOffset) {\n        let cue = _getCueInformation(currentItem, timeOffset)\n\n        cue.onenter = function () {\n            // HTML Tracks don't trigger the onexit event when a new cue is entered,\n            // we need to manually trigger it\n            if (_isHTMLCue(currentItem) && currentCaptionEventCue && currentCaptionEventCue.cueID !== cue.cueID) {\n                _triggerCueExit(currentCaptionEventCue);\n            }\n            // We need to delete the type attribute to be able to dispatch via th event bus\n            delete cue.type;\n\n            currentCaptionEventCue = cue;\n            _triggerCueEnter(cue);\n        }\n\n        cue.onexit = function () {\n            _triggerCueExit(cue);\n            currentCaptionEventCue = null;\n        }\n\n        return cue;\n    }\n\n    function _triggerCueEnter(cue) {\n        eventBus.trigger(MediaPlayerEvents.CUE_ENTER, cue);\n    }\n\n    function _triggerCueExit(cue) {\n        eventBus.trigger(MediaPlayerEvents.CUE_EXIT, {\n            cueID: cue.cueID\n        });\n    }\n\n    function _handleHtmlCaption(currentItem, timeOffset, track) {\n        const self = this;\n        let cue = _getCueInformation(currentItem, timeOffset)\n\n        captionContainer.style.left = actualVideoLeft + 'px';\n        captionContainer.style.top = actualVideoTop + 'px';\n        captionContainer.style.width = actualVideoWidth + 'px';\n        captionContainer.style.height = actualVideoHeight + 'px';\n\n        cue.onenter = function () {\n            if (track.mode === Constants.TEXT_SHOWING) {\n                if (this.isd) {\n                    if (hasRequestAnimationFrame) {\n                        // Ensure everything in _renderCaption happens in the same frame\n                        requestAnimationFrame(() => _renderCaption(this));\n                    } else {\n                        _renderCaption(this)\n                    }\n                    logger.debug('Cue enter id:' + this.cueID);\n                } else {\n                    captionContainer.appendChild(this.cueHTMLElement);\n                    _scaleCue.call(self, this);\n                    eventBus.trigger(MediaPlayerEvents.CAPTION_RENDERED, {\n                        captionDiv: this.cueHTMLElement,\n                        currentTrackIdx\n                    });\n                }\n            }\n        };\n\n        // For imsc subs, this could be reassigned to not do anything if there is a cue that immediately follows this one\n        cue.onexit = function () {\n            if (captionContainer) {\n                const divs = captionContainer.childNodes;\n                for (let i = 0; i < divs.length; ++i) {\n                    if (divs[i].id === this.cueID) {\n                        logger.debug('Cue exit id:' + divs[i].id);\n                        captionContainer.removeChild(divs[i]);\n                        --i;\n                    }\n                }\n            }\n        };\n\n        return cue;\n    }\n\n    function _handleNonHtmlCaption(currentItem, timeOffset, track) {\n        let cue = _getCueInformation(currentItem, timeOffset)\n        cue.isActive = false;\n\n        if (currentItem.styles) {\n            try {\n                if (currentItem.styles.align !== undefined && 'align' in cue) {\n                    cue.align = currentItem.styles.align;\n                }\n                if (currentItem.styles.line !== undefined && 'line' in cue) {\n                    cue.line = currentItem.styles.line;\n                }\n                if (currentItem.styles.snapToLines !== undefined && 'snapToLines' in cue) {\n                    cue.snapToLines = currentItem.styles.snapToLines;\n                }\n                if (currentItem.styles.position !== undefined && 'position' in cue) {\n                    cue.position = currentItem.styles.position;\n                }\n                if (currentItem.styles.size !== undefined && 'size' in cue) {\n                    cue.size = currentItem.styles.size;\n                }\n            } catch (e) {\n                logger.error(e);\n            }\n        }\n\n        cue.onenter = function () {\n            if (track.mode === Constants.TEXT_SHOWING) {\n                eventBus.trigger(MediaPlayerEvents.CAPTION_RENDERED, { currentTrackIdx });\n            }\n        };\n\n        return cue;\n    }\n\n    function _isHTMLCue(cue) {\n        return (cue.type === 'html')\n    }\n\n    function _getCueInformation(currentItem, timeOffset) {\n        if (_isHTMLCue(currentItem)) {\n            return _getCueInformationForHtml(currentItem, timeOffset);\n        }\n\n        return _getCueInformationForNonHtml(currentItem, timeOffset);\n    }\n\n    function _getCueInformationForHtml(currentItem, timeOffset) {\n        let cue = new Cue(currentItem.start + timeOffset, currentItem.end + timeOffset, '');\n        cue.cueHTMLElement = currentItem.cueHTMLElement;\n        cue.isd = currentItem.isd;\n        cue.images = currentItem.images;\n        cue.embeddedImages = currentItem.embeddedImages;\n        cue.cueID = currentItem.cueID;\n        cue.scaleCue = _scaleCue.bind(self);\n        //useful parameters for cea608 subtitles, not for TTML one.\n        cue.cellResolution = currentItem.cellResolution;\n        cue.lineHeight = currentItem.lineHeight;\n        cue.linePadding = currentItem.linePadding;\n        cue.fontSize = currentItem.fontSize;\n\n        // Resolve images sources\n        if (cue.isd) {\n            _resolveImagesInContents(cue, cue.isd.contents);\n        }\n\n        return cue;\n    }\n\n    function _getCueInformationForNonHtml(currentItem, timeOffset) {\n        let cue = new Cue(currentItem.start - timeOffset, currentItem.end - timeOffset, currentItem.data);\n        cue.cueID = `${cue.startTime}_${cue.endTime}`;\n        return cue;\n    }\n\n    function manualCueProcessing(time) {\n        const activeTracks = _getManualActiveTracks();\n\n        if (activeTracks && activeTracks.length > 0) {\n            const targetTrack = activeTracks[0];\n            const cues = targetTrack.manualCueList;\n\n            if (cues && cues.length > 0) {\n                cues.forEach((cue) => {\n                    // Render cue if target time is reached and not in active state\n                    if (cue.startTime <= time && cue.endTime >= time && !cue.isActive) {\n                        cue.isActive = true;\n                        if (settings.get().streaming.text.dispatchForManualRendering) {\n                            _triggerCueEnter(cue);\n                        } else {\n                            // eslint-disable-next-line no-undef\n                            WebVTT.processCues(window, [cue], vttCaptionContainer, cue.cueID);\n                        }\n                    } else if (cue.isActive && (cue.startTime > time || cue.endTime < time)) {\n                        cue.isActive = false;\n                        if (settings.get().streaming.text.dispatchForManualRendering) {\n                            _triggerCueExit(cue);\n                        } else {\n                            _removeManualCue(cue);\n                        }\n                    }\n                })\n            }\n        }\n    }\n\n    function _removeManualCue(cue) {\n        if (vttCaptionContainer) {\n            const divs = vttCaptionContainer.childNodes;\n            for (let i = 0; i < divs.length; ++i) {\n                if (divs[i].id === cue.cueID) {\n                    vttCaptionContainer.removeChild(divs[i]);\n                    --i;\n                }\n            }\n        }\n    }\n\n    function disableManualTracks() {\n        const activeTracks = _getManualActiveTracks();\n\n        if (activeTracks && activeTracks.length > 0) {\n            const targetTrack = activeTracks[0];\n            const cues = targetTrack.manualCueList;\n\n\n            if (cues && cues.length > 0) {\n                cues.forEach((cue) => {\n                    if (cue.isActive) {\n                        cue.isActive = false;\n                        if (settings.get().streaming.text.dispatchForManualRendering) {\n                            _triggerCueExit(cue);\n                        } else if (vttCaptionContainer) {\n                            const divs = vttCaptionContainer.childNodes;\n                            for (let i = 0; i < divs.length; ++i) {\n                                if (divs[i].id === cue.cueID) {\n                                    vttCaptionContainer.removeChild(divs[i]);\n                                    --i;\n                                }\n                            }\n                        }\n                    }\n                })\n            }\n        }\n    }\n\n    function _getManualActiveTracks() {\n        const tracks = videoModel.getTextTracks();\n        const activeTracks = []\n\n        for (const track of tracks) {\n            if (track.manualMode === Constants.TEXT_SHOWING) {\n                activeTracks.push(track);\n            }\n        }\n        return activeTracks;\n    }\n\n    function getTrackByIdx(idx) {\n        return idx >= 0 && textTrackInfos[idx] ?\n            videoModel.getTextTrack(textTrackInfos[idx].kind, textTrackInfos[idx].id, textTrackInfos[idx].lang, textTrackInfos[idx].isTTML, textTrackInfos[idx].isEmbedded) : null;\n    }\n\n    function getCurrentTrackIdx() {\n        return currentTrackIdx;\n    }\n\n    function getTrackIdxForId(trackId) {\n        let idx = -1;\n        for (let i = 0; i < textTrackInfos.length; i++) {\n            if (textTrackInfos[i].id === trackId) {\n                idx = i;\n                break;\n            }\n        }\n\n        return idx;\n    }\n\n    function setCurrentTrackIdx(idx) {\n        if (idx === currentTrackIdx) {\n            return;\n        }\n        currentTrackIdx = idx;\n        const track = getTrackByIdx(currentTrackIdx);\n        setCueStyleOnTrack.call(this, track);\n\n        if (videoSizeCheckInterval) {\n            clearInterval(videoSizeCheckInterval);\n            videoSizeCheckInterval = null;\n        }\n\n        if (track && track.renderingType === 'html') {\n            checkVideoSize.call(this, track, true);\n            if (window.ResizeObserver) {\n                resizeObserver = new window.ResizeObserver(() => {\n                    checkVideoSize.call(this, track, true);\n                });\n                resizeObserver.observe(videoModel.getElement());\n            } else {\n                videoSizeCheckInterval = setInterval(checkVideoSize.bind(this, track), 500);\n            }\n        }\n    }\n\n    function setCueStyleOnTrack(track) {\n        clearCaptionContainer.call(this);\n        if (track) {\n            if (track.renderingType === 'html') {\n                setNativeCueStyle.call(this);\n            } else {\n                removeNativeCueStyle.call(this);\n            }\n        } else {\n            removeNativeCueStyle.call(this);\n        }\n    }\n\n    function cueInTrack(track, cue) {\n        if (!track.cues) {\n            return false;\n        }\n        for (let i = 0; i < track.cues.length; i++) {\n            if ((track.cues[i].startTime === cue.startTime) &&\n                (track.cues[i].endTime === cue.endTime)) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    function cueInRange(cue, start, end, strict = true) {\n        if (!cue) {\n            return false\n        }\n        return (isNaN(start) || (strict ? cue.startTime : cue.endTime) >= start) && (isNaN(end) || (strict ? cue.endTime : cue.startTime) <= end);\n    }\n\n    function _deleteOutdatedTrackCues(track, start, end) {\n\n        if (end < start) {\n            return;\n        }\n\n        if (track && (track.cues || track.manualCueList)) {\n            const mode = track.cues && track.cues.length > 0 ? 'native' : 'custom';\n            const cues = mode === 'native' ? track.cues : track.manualCueList;\n\n            if (!cues || cues.length === 0) {\n                return;\n            }\n            const lastIdx = cues.length - 1;\n\n            for (let r = lastIdx; r >= 0; r--) {\n                if (cueInRange(cues[r], start, end, true) && !_isCueActive(cues[r])) {\n                    if (mode === 'native') {\n                        track.removeCue(cues[r]);\n                    } else {\n                        _removeManualCue(cues[r]);\n                        delete track.manualCueList[r]\n                    }\n                }\n            }\n        }\n    }\n\n    function _deleteTrackCues(track, start, end, strict = true) {\n        if (track && (track.cues || track.manualCueList)) {\n            const mode = track.cues && track.cues.length > 0 ? 'native' : 'custom';\n            const cues = mode === 'native' ? track.cues : track.manualCueList;\n\n            if (!cues || cues.length === 0) {\n                return;\n            }\n            const lastIdx = cues.length - 1;\n\n            for (let r = lastIdx; r >= 0; r--) {\n                if (cueInRange(cues[r], start, end, strict)) {\n                    if (mode === 'native') {\n                        if (cues[r].onexit) {\n                            cues[r].onexit();\n                        }\n                        track.removeCue(cues[r]);\n                    } else {\n                        _removeManualCue(cues[r]);\n                        delete track.manualCueList[r]\n                    }\n                }\n            }\n        }\n    }\n\n    function _isCueActive(cue) {\n        const currentTime = videoModel.getTime();\n\n        return currentTime >= cue.startTime && currentTime <= cue.endTime\n    }\n\n    function deleteCuesFromTrackIdx(trackIdx, start, end) {\n        const track = getTrackByIdx(trackIdx);\n        if (track) {\n            _deleteTrackCues(track, start, end);\n        }\n    }\n\n    function deleteAllTextTracks() {\n        const ln = nativeTexttracks ? nativeTexttracks.length : 0;\n        for (let i = 0; i < ln; i++) {\n            const track = getTrackByIdx(i);\n            if (track) {\n                _deleteTrackCues.call(this, track, streamInfo.start, streamInfo.start + streamInfo.duration, false);\n            }\n        }\n        nativeTexttracks = [];\n        textTrackInfos = [];\n        if (videoSizeCheckInterval) {\n            clearInterval(videoSizeCheckInterval);\n            videoSizeCheckInterval = null;\n        }\n        if (resizeObserver && videoModel) {\n            resizeObserver.unobserve(videoModel.getElement());\n            resizeObserver = null;\n        }\n        currentTrackIdx = -1;\n        clearCaptionContainer.call(this);\n    }\n\n    /* Set native cue style to transparent background to avoid it being displayed. */\n    function setNativeCueStyle() {\n        let styleElement = document.getElementById('native-cue-style');\n        if (styleElement) {\n            return; //Already set\n        }\n\n        styleElement = document.createElement('style');\n        styleElement.id = 'native-cue-style';\n        document.head.appendChild(styleElement);\n        const stylesheet = styleElement.sheet;\n        const video = videoModel.getElement();\n        try {\n            if (video) {\n                if (video.id) {\n                    stylesheet.insertRule('#' + video.id + '::cue {background: transparent}', 0);\n                } else if (video.classList.length !== 0) {\n                    stylesheet.insertRule('.' + video.className + '::cue {background: transparent}', 0);\n                } else {\n                    stylesheet.insertRule('video::cue {background: transparent}', 0);\n                }\n            }\n        } catch (e) {\n            logger.info('' + e.message);\n        }\n    }\n\n    /* Remove the extra cue style with transparent background for native cues. */\n    function removeNativeCueStyle() {\n        const styleElement = document.getElementById('native-cue-style');\n        if (styleElement) {\n            document.head.removeChild(styleElement);\n        }\n    }\n\n    function clearCaptionContainer() {\n        if (captionContainer) {\n            while (captionContainer.firstChild) {\n                captionContainer.removeChild(captionContainer.firstChild);\n            }\n        }\n    }\n\n    function setModeForTrackIdx(idx, mode) {\n        const track = getTrackByIdx(idx);\n        if (track && track.mode !== mode) {\n            track.mode = mode;\n        }\n        if (track && track.manualMode !== mode) {\n            track.manualMode = mode;\n        }\n    }\n\n    function getCurrentTextTrackInfo() {\n        return textTrackInfos[currentTrackIdx];\n    }\n\n    function getTextTrackInfos() {\n        return textTrackInfos\n    }\n\n    instance = {\n        addCaptions,\n        addTextTrackInfo,\n        createTracks,\n        deleteAllTextTracks,\n        deleteCuesFromTrackIdx,\n        disableManualTracks,\n        getCurrentTrackIdx,\n        getCurrentTextTrackInfo,\n        getStreamId,\n        getTextTrackInfos,\n        getTrackIdxForId,\n        initialize,\n        manualCueProcessing,\n        setCurrentTrackIdx,\n        setModeForTrackIdx,\n    };\n\n    setup();\n\n    return instance;\n}\n\nTextTracks.__dashjs_factory_name = 'TextTracks';\nexport default FactoryMaker.getClassFactory(TextTracks);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport FactoryMaker from '../../core/FactoryMaker.js';\nimport Debug from '../../core/Debug.js';\n\nconst WEBVTT = 'WEBVTT';\n\nfunction VTTParser() {\n    const context = this.context;\n\n    let instance,\n        logger,\n        regExNewLine,\n        regExToken,\n        regExWhiteSpace,\n        regExWhiteSpaceWordBoundary;\n\n    function setup() {\n        logger = Debug(context).getInstance().getLogger(instance);\n        regExNewLine = /(?:\\r\\n|\\r|\\n)/gm;\n        regExToken = /-->/;\n        regExWhiteSpace = /(^[\\s]+|[\\s]+$)/g;\n        regExWhiteSpaceWordBoundary = /\\s\\b/g;\n    }\n\n    function parse(data) {\n        const captionArray = [];\n        let len,\n            lastStartTime;\n\n        if (!data) {\n            return captionArray;\n        }\n\n        data = data.split(regExNewLine);\n        len = data.length;\n        lastStartTime = -1;\n\n        for (let i = 0; i < len; i++) {\n            let item = data[i];\n\n            if (item.length > 0 && item !== WEBVTT) {\n                if (item.match(regExToken)) {\n                    const attributes = parseItemAttributes(item);\n                    const cuePoints = attributes.cuePoints;\n                    const styles = attributes.styles;\n                    const text = getSublines(data, i + 1);\n                    const startTime = convertCuePointTimes(cuePoints[0].replace(regExWhiteSpace, ''));\n                    const endTime = convertCuePointTimes(cuePoints[1].replace(regExWhiteSpace, ''));\n\n                    if ((!isNaN(startTime) && !isNaN(endTime)) && startTime >= lastStartTime && endTime > startTime) {\n                        if (text !== '') {\n                            lastStartTime = startTime;\n                            //TODO Make VO external so other parsers can use.\n                            captionArray.push({\n                                start: startTime,\n                                end: endTime,\n                                data: text,\n                                styles: styles\n                            });\n                        } else {\n                            logger.error('Skipping cue due to empty/malformed cue text');\n                        }\n                    } else {\n                        logger.error('Skipping cue due to incorrect cue timing');\n                    }\n                }\n            }\n        }\n\n        return captionArray;\n    }\n\n    function convertCuePointTimes(time) {\n        const timeArray = time.split(':');\n        const len = timeArray.length - 1;\n\n        time = parseInt(timeArray[len - 1], 10) * 60 + parseFloat(timeArray[len]);\n\n        if (len === 2) {\n            time += parseInt(timeArray[0], 10) * 3600;\n        }\n\n        return time;\n    }\n\n    function parseItemAttributes(data) {\n        const vttCuePoints = data.split(regExToken);\n        const arr = vttCuePoints[1].split(regExWhiteSpaceWordBoundary);\n        arr.shift(); //remove first array index it is empty...\n        vttCuePoints[1] = arr[0];\n        arr.shift();\n        return { cuePoints: vttCuePoints, styles: getCaptionStyles(arr) };\n    }\n\n    function getCaptionStyles(arr) {\n        const styleObject = {};\n        arr.forEach(function (element) {\n            if (element.split(/:/).length > 1) {\n                let val = element.split(/:/)[1];\n                let isPercentage = false;\n                if (val && val.search(/%/) != -1) {\n                    isPercentage = true;\n                    val = parseInt(val.replace(/%/, ''), 10);\n                }\n                if (element.match(/align/) || element.match(/A/)) {\n                    styleObject.align = val;\n                }\n                if (element.match(/line/) || element.match(/L/)) {\n                    styleObject.line = val === 'auto' ? val : parseInt(val, 10);\n                    if (isPercentage) {\n                        styleObject.snapToLines = false;\n                    }\n                }\n                if (element.match(/position/) || element.match(/P/)) {\n                    styleObject.position = val;\n                }\n                if (element.match(/size/) || element.match(/S/)) {\n                    styleObject.size = val;\n                }\n            }\n        });\n\n        return styleObject;\n    }\n\n    /*\n    * VTT can have multiple lines to display per cuepoint.\n    */\n    function getSublines(data, idx) {\n        let i = idx;\n\n        let subline = '';\n        let lineData = '';\n        let lineCount;\n\n        while (data[i] !== '' && i < data.length) {\n            i++;\n        }\n\n        lineCount = i - idx;\n        if (lineCount > 1) {\n            for (let j = 0; j < lineCount; j++) {\n                lineData = data[(idx + j)];\n                if (!lineData.match(regExToken)) {\n                    subline += lineData;\n                    if (j !== lineCount - 1) {\n                        subline += '\\n';\n                    }\n                } else {\n                    // caption text should not have '-->' in it\n                    subline = '';\n                    break;\n                }\n            }\n        } else {\n            lineData = data[idx];\n            if (!lineData.match(regExToken)) {\n                subline = lineData;\n            }\n        }\n        return subline;\n    }\n\n    instance = {\n        parse: parse,\n        getCaptionStyles\n    };\n\n    setup();\n    return instance;\n}\n\nVTTParser.__dashjs_factory_name = 'VTTParser';\nexport default FactoryMaker.getSingletonFactory(VTTParser);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport FactoryMaker from '../../core/FactoryMaker.js';\n\nfunction VttCustomRenderingParser() {\n\n    let instance,\n        vttjs;\n\n    function setup() {\n        try {\n            if (window && window.WebVTT && window.WebVTT.Parser) {\n                vttjs = new window.WebVTT.Parser(\n                    window,\n                    window.vttjs,\n                    window.WebVTT.StringDecoder()\n                );\n            }\n        } catch (e) {\n\n        }\n    }\n\n    function parse(data) {\n        let cues = [];\n        vttjs.oncue = function (cue) {\n            cue.start = cue.startTime;\n            cue.end = cue.endTime;\n            cue.data = cue.text;\n            cue.styles = {\n                align: cue.align,\n                line: cue.line,\n                position: cue.position,\n                size: cue.size\n            }\n            cues.push(cue);\n        };\n        vttjs.parse(data);\n\n        return cues;\n    }\n\n    instance = {\n        parse\n    };\n\n    setup();\n    return instance;\n}\n\nVttCustomRenderingParser.__dashjs_factory_name = 'VttCustomRenderingParser';\nexport default FactoryMaker.getSingletonFactory(VttCustomRenderingParser);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport FactoryMaker from '../../core/FactoryMaker.js';\nimport Debug from '../../core/Debug.js';\nimport EventBus from '../../core/EventBus.js';\nimport Events from '../../core/events/Events.js';\nimport {fromXML, generateISD} from 'imsc';\nimport MediaPlayerEvents from '../MediaPlayerEvents.js';\nimport ConformanceViolationConstants from '../constants/ConformanceViolationConstants.js';\n\nfunction TTMLParser() {\n\n    const context = this.context;\n    const eventBus = EventBus(context).getInstance();\n\n    /*\n     * This TTML parser follows \"EBU-TT-D SUBTITLING DISTRIBUTION FORMAT - tech3380\" spec - https://tech.ebu.ch/docs/tech/tech3380.pdf.\n     * */\n    let instance,\n        logger;\n\n    let cueCounter = 0; // Used to give every cue a unique ID.\n\n    function setup() {\n        logger = Debug(context).getInstance().getLogger(instance);\n    }\n\n    function getCueID() {\n        const id = 'cue_TTML_' + cueCounter;\n        cueCounter++;\n        return id;\n    }\n\n    /**\n     * Parse the raw data and process it to return the HTML element representing the cue.\n     * Return the region to be processed and controlled (hide/show) by the caption controller.\n     * @param {string} data - raw data received from the TextSourceBuffer\n     * @param {number} offsetTime - offset time to apply to cue time\n     * @param {integer} startTimeSegment - startTime for the current segment\n     * @param {integer} endTimeSegment - endTime for the current segment\n     * @param {array} images - images array referenced by subs MP4 box\n     * @returns {array} captionArray\n     */\n    function parse(data, offsetTime, startTimeSegment, endTimeSegment, images) {\n        let errorMsg = '';\n        const captionArray = [];\n        let startTime,\n            endTime,\n            i;\n\n        const content = {};\n\n        const embeddedImages = {};\n        let currentImageId = '';\n        let accumulated_image_data = '';\n        let metadataHandler = {\n\n            onOpenTag: function (ns, name, attrs) {\n                // cope with existing non-compliant content\n                if (attrs[' imagetype'] && !attrs[' imageType']) {\n                    eventBus.trigger(MediaPlayerEvents.CONFORMANCE_VIOLATION, {\n                        level: ConformanceViolationConstants.LEVELS.ERROR,\n                        event: ConformanceViolationConstants.EVENTS.NON_COMPLIANT_SMPTE_IMAGE_ATTRIBUTE\n                    });\n                    attrs[' imageType'] = attrs[' imagetype'];\n                }\n\n                if (name === 'image' &&\n                    (ns === 'http://www.smpte-ra.org/schemas/2052-1/2010/smpte-tt' ||\n                        ns === 'http://www.smpte-ra.org/schemas/2052-1/2013/smpte-tt')) {\n                    if (!attrs[' imageType'] || attrs[' imageType'].value !== 'PNG') {\n                        logger.warn('smpte-tt imageType != PNG. Discarded');\n                        return;\n                    }\n                    currentImageId = attrs['http://www.w3.org/XML/1998/namespace id'].value;\n                }\n            },\n\n            onCloseTag: function () {\n                if (currentImageId) {\n                    embeddedImages[currentImageId] = accumulated_image_data.trim();\n                }\n                accumulated_image_data = '';\n                currentImageId = '';\n            },\n\n            onText: function (contents) {\n                if (currentImageId) {\n                    accumulated_image_data = accumulated_image_data + contents;\n                }\n            }\n        };\n\n        if (!data) {\n            errorMsg = 'no ttml data to parse';\n            throw new Error(errorMsg);\n        }\n\n        content.data = data;\n\n        eventBus.trigger(Events.TTML_TO_PARSE, content);\n\n        let imsc1doc = fromXML(content.data, function (msg) {\n            errorMsg = msg;\n        }, metadataHandler);\n\n        eventBus.trigger(Events.TTML_PARSED, { ttmlString: content.data, ttmlDoc: imsc1doc });\n\n        const mediaTimeEvents = imsc1doc.getMediaTimeEvents();\n\n        for (i = 0; i < mediaTimeEvents.length; i++) {\n            let isd = generateISD(imsc1doc, mediaTimeEvents[i], function (error) {\n                errorMsg = error;\n            });\n\n            if (isd.contents.some(topLevelContents => topLevelContents.contents.length)) {\n                //be sure that mediaTimeEvents values are in the mp4 segment time ranges.\n                startTime = mediaTimeEvents[i] + offsetTime;\n                endTime = mediaTimeEvents[i + 1] + offsetTime;\n\n                if (startTime < endTime) {\n                    captionArray.push({\n                        start: startTime,\n                        end: endTime,\n                        type: 'html',\n                        cueID: getCueID(),\n                        isd: isd,\n                        images: images,\n                        embeddedImages: embeddedImages\n                    });\n                }\n            }\n        }\n\n        if (errorMsg !== '') {\n            logger.error(errorMsg);\n            throw new Error(errorMsg);\n        }\n\n        return captionArray;\n    }\n\n    instance = {\n        parse: parse\n    };\n\n    setup();\n    return instance;\n}\n\nTTMLParser.__dashjs_factory_name = 'TTMLParser';\nexport default FactoryMaker.getSingletonFactory(TTMLParser);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2024, BBC.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of BBC nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport Constants from '../constants/Constants.js';\nimport FactoryMaker from '../../core/FactoryMaker.js';\nimport URLUtils from '../utils/URLUtils.js';\nimport EventBus from '../../core/EventBus.js';\nimport MediaPlayerEvents from '../MediaPlayerEvents.js';\nimport Debug from '../../core/Debug.js';\n\nfunction DVBFonts(config) {\n\n    let context = this.context;\n    const eventBus = EventBus(context).getInstance();\n    const urlUtils = URLUtils(context).getInstance();\n    const adapter = config.adapter;\n    const baseURLController = config.baseURLController;\n\n    const FONT_DOWNLOAD_STATUS = {\n        ERROR: 'error',\n        LOADED: 'loaded',\n        UNLOADED: 'unloaded'\n    };\n\n    let instance,\n        logger,\n        dvbFontList;\n\n    function setup() {\n        logger = Debug(context).getInstance().getLogger(instance);\n        resetInitialSettings();\n    }\n\n    /**\n     * Add any dvb fonts from a single track to the dvbFontList\n     * @param {object} track - A text track\n     * @param {string} streamId - Id of current stream\n     * @private\n     */\n    function _addFontFromTrack(track, streamId) {\n        let asBaseUrl;\n        let isEssential = false;\n        let dvbFontProps;\n\n        // If there is a baseurl in the manifest resolve against a representation inside the current adaptation set\n        if (baseURLController.resolve()) {\n            const reps = adapter.getVoRepresentations(track);\n            if (reps && reps.length > 0) {\n                asBaseUrl = baseURLController.resolve(reps[0].path).url\n            }\n        }\n\n        const essentialTags = track.essentialProperties.filter(tag =>\n            (tag.schemeIdUri && tag.schemeIdUri === Constants.FONT_DOWNLOAD_DVB_SCHEME)\n        );\n        const supplementalTags = track.supplementalProperties.filter(tag =>\n            (tag.schemeIdUri && tag.schemeIdUri === Constants.FONT_DOWNLOAD_DVB_SCHEME)\n        );\n\n        // When it comes to the property descriptors it's Essential OR Supplementary, with Essential taking preference\n        if (essentialTags.length > 0) {\n            isEssential = true;\n            dvbFontProps = essentialTags;\n        } else {\n            dvbFontProps = supplementalTags;\n        }\n\n        dvbFontProps.forEach(attrs => {\n            if (_hasMandatoryDvbFontAttributes(attrs)) {\n                let resolvedUrl = _resolveFontUrl(attrs.dvbUrl, asBaseUrl);\n                dvbFontList.push({\n                    fontFamily: attrs.dvbFontFamily,\n                    url: resolvedUrl,\n                    mimeType: attrs.dvbMimeType,\n                    trackId: track.id,\n                    streamId,\n                    isEssential,\n                    status: FONT_DOWNLOAD_STATUS.UNLOADED,\n                    fontFace: new FontFace(\n                        attrs.dvbFontFamily,\n                        `url(${resolvedUrl})`,\n                        { display: 'swap' }\n                    )\n                });\n            }\n        });\n    }\n\n    /**\n     * Clean up dvb font downloads\n     * @private\n     */\n    function _cleanUpDvbCustomFonts() {\n        for (const font of dvbFontList) {\n            let deleted = document.fonts.delete(font.fontFace);\n            logger.debug(`Removal of fontFamily: ${font.fontFamily} was ${deleted ? 'successful' : 'unsuccessful'}`);\n        }\n    }\n\n    /**\n     * Check the attributes of a supplemental or essential property descriptor to establish if\n     * it has the mandatory values for a dvb font download\n     * @param {object} attrs - property descriptor attributes\n     * @returns {boolean} true if mandatory attributes present\n     * @private\n     */\n    function _hasMandatoryDvbFontAttributes(attrs) {\n        return !!((attrs.value && parseInt(attrs.value) === 1) &&\n            (attrs.dvbUrl && attrs.dvbUrl.length > 0) &&\n            (attrs.dvbFontFamily && attrs.dvbFontFamily.length > 0) &&\n            (attrs.dvbMimeType && (attrs.dvbMimeType === Constants.OFF_MIMETYPE || attrs.dvbMimeType === Constants.WOFF_MIMETYPE)));\n    }\n\n    /**\n     * Resolves a given font download URL.\n     * @param {string} fontUrl - URL as in the 'dvb:url' property\n     * @param {string} baseUrl - BaseURL for Adaptation Set\n     * @returns {string} resolved URL\n     * @private\n     */\n    function _resolveFontUrl(fontUrl, baseUrl) {\n        if (urlUtils.isPathAbsolute(fontUrl)) {\n            return fontUrl;\n        } else if (urlUtils.isRelative(fontUrl)) {\n            if (baseUrl) {\n                return urlUtils.resolve(fontUrl, baseUrl);\n            } else {\n                return urlUtils.resolve(fontUrl);\n            }\n        } else {\n            return fontUrl;\n        }\n    }\n\n    /**\n     * Updates the status of a given dvb font relative to whether it is loaded in the browser\n     * or if the download has failed\n     * @param {number} index - Index of font in dvbFontList\n     * @param {string} newStatus - Status value to update. Property of FONT_DOWNLOAD_STATUS\n     * @private\n     */\n    function _updateFontStatus(index, newStatus) {\n        const font = dvbFontList[index];\n        dvbFontList[index] = { ...font, status: newStatus };\n    }\n\n    /**\n     * Adds all fonts to the dvb font list from all tracks\n     * @param {array} tracks - All text tracks\n     * @param {string} streamId - Id of the stream\n     */\n    function addFontsFromTracks(tracks, streamId) {\n        if (tracks && Array.isArray(tracks) && streamId) {\n            for (let i = 0; i < tracks.length; i++) {\n                let track = tracks[i];\n                _addFontFromTrack(track, streamId);\n            }\n        }\n    }\n\n    /**\n     * Initiate the download of a dvb custom font.\n     * The browser will neatly handle duplicate fonts\n     */\n    function downloadFonts() {\n        for (let i = 0; i < dvbFontList.length; i++) {\n            let font = dvbFontList[i];\n\n            document.fonts.add(font.fontFace);\n            eventBus.trigger(MediaPlayerEvents.DVB_FONT_DOWNLOAD_ADDED, font);\n\n            font.fontFace.load().then(\n                () => {\n                    _updateFontStatus(i, FONT_DOWNLOAD_STATUS.LOADED);\n                    eventBus.trigger(MediaPlayerEvents.DVB_FONT_DOWNLOAD_COMPLETE, font);\n                },\n                (err) => {\n                    _updateFontStatus(i, FONT_DOWNLOAD_STATUS.ERROR);\n                    logger.debug('Font download error: ', err);\n                    eventBus.trigger(MediaPlayerEvents.DVB_FONT_DOWNLOAD_FAILED, font);\n                }\n            );\n        }\n    }\n\n    /**\n     * Returns current list of all known DVB Fonts\n     * @returns {array} dvbFontList\n     */\n    function getFonts() {\n        return dvbFontList;\n    }\n\n    /**\n     * Returns dvbFonts relative to a track given a trackId\n     * @param {number} - TrackId\n     * @returns {array} filtered DVBFontList\n     */\n    function getFontsForTrackId(trackId) {\n        return dvbFontList.filter(font =>\n            (font.trackId && font.trackId === trackId)\n        );\n    }\n\n    function resetInitialSettings() {\n        dvbFontList = [];\n    }\n\n    /** Reset DVBFonts instance */\n    function reset() {\n        _cleanUpDvbCustomFonts();\n        resetInitialSettings();\n    }\n\n    instance = {\n        addFontsFromTracks,\n        downloadFonts,\n        getFonts,\n        getFontsForTrackId,\n        reset\n    };\n    setup();\n    return instance;\n}\n\nDVBFonts.__dashjs_factory_name = 'DVBFonts';\nexport default FactoryMaker.getClassFactory(DVBFonts);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport Constants from '../constants/Constants.js';\nimport FactoryMaker from '../../core/FactoryMaker.js';\nimport TextSourceBuffer from './TextSourceBuffer.js';\nimport TextTracks from './TextTracks.js';\nimport VTTParser from '../utils/VTTParser.js';\nimport VttCustomRenderingParser from '../utils/VttCustomRenderingParser.js';\nimport TTMLParser from '../utils/TTMLParser.js';\nimport EventBus from '../../core/EventBus.js';\nimport Debug from '../../core/Debug.js';\nimport Events from '../../core/events/Events.js';\nimport MediaPlayerEvents from '../../streaming/MediaPlayerEvents.js';\nimport {checkParameterType} from '../utils/SupervisorTools.js';\nimport DVBFonts from './DVBFonts.js';\nimport DashConstants from '../../dash/constants/DashConstants.js';\n\nfunction TextController(config) {\n\n    let context = this.context;\n\n    const adapter = config.adapter;\n    const errHandler = config.errHandler;\n    const manifestModel = config.manifestModel;\n    const mediaController = config.mediaController;\n    const baseURLController = config.baseURLController;\n    const videoModel = config.videoModel;\n    const settings = config.settings;\n\n    let instance,\n        streamData,\n        textSourceBuffers,\n        textTracks,\n        vttParser,\n        vttCustomRenderingParser,\n        ttmlParser,\n        eventBus,\n        allTracksAreDisabled,\n        forceTextStreaming,\n        textTracksAdded,\n        disableTextBeforeTextTracksAdded,\n        dvbFonts,\n        logger;\n\n    function setup() {\n        forceTextStreaming = false;\n        textTracksAdded = false;\n        disableTextBeforeTextTracksAdded = false;\n\n        vttParser = VTTParser(context).getInstance();\n        vttCustomRenderingParser = VttCustomRenderingParser(context).getInstance();\n        ttmlParser = TTMLParser(context).getInstance();\n        eventBus = EventBus(context).getInstance();\n        logger = Debug(context).getInstance().getLogger(instance);\n\n        resetInitialSettings();\n    }\n\n    function initialize() {\n        dvbFonts = DVBFonts(context).create({\n            adapter,\n            baseURLController,\n        });\n        eventBus.on(Events.TEXT_TRACKS_QUEUE_INITIALIZED, _onTextTracksAdded, instance);\n        eventBus.on(Events.DVB_FONT_DOWNLOAD_FAILED, _onFontDownloadFailure, instance);\n        eventBus.on(Events.DVB_FONT_DOWNLOAD_COMPLETE, _onFontDownloadSuccess, instance);\n        eventBus.on(Events.MEDIAINFO_UPDATED, _onMediaInfoUpdated, instance);\n        if (settings.get().streaming.text.webvtt.customRenderingEnabled) {\n            eventBus.on(Events.PLAYBACK_TIME_UPDATED, _onPlaybackTimeUpdated, instance);\n            eventBus.on(Events.PLAYBACK_SEEKING, _onPlaybackSeeking, instance);\n        }\n    }\n\n    function initializeForStream(streamInfo) {\n        const streamId = streamInfo.id;\n        const tracks = TextTracks(context).create({\n            videoModel,\n            settings,\n            streamInfo\n        });\n        tracks.initialize();\n        textTracks[streamId] = tracks;\n\n        const textSourceBuffer = TextSourceBuffer(context).create({\n            errHandler,\n            adapter,\n            dvbFonts,\n            manifestModel,\n            mediaController,\n            videoModel,\n            textTracks: tracks,\n            vttParser,\n            vttCustomRenderingParser,\n            ttmlParser,\n            streamInfo,\n            settings\n        });\n        textSourceBuffer.initialize();\n        textSourceBuffers[streamId] = textSourceBuffer;\n\n        streamData[streamId] = {};\n        streamData[streamId].lastEnabledIndex = -1;\n    }\n\n    /**\n     * All media infos have been added. Start creating the track objects\n     * @param {object} streamInfo\n     */\n    function createTracks(streamInfo) {\n        const streamId = streamInfo.id;\n\n        if (!textTracks[streamId]) {\n            return;\n        }\n        textTracks[streamId].createTracks();\n    }\n\n    /**\n     * Adds the new mediaInfo objects to the textSourceBuffer.\n     * @param {object} streamInfo\n     * @param {array} mInfos\n     * @param {string|null} mimeType\n     * @param {object} fragmentModel\n     */\n    function addMediaInfosToBuffer(streamInfo, type, mInfos, fragmentModel = null) {\n        const streamId = streamInfo.id;\n\n        if (!textSourceBuffers[streamId]) {\n            return;\n        }\n        textSourceBuffers[streamId].addMediaInfos(type, mInfos, fragmentModel);\n    }\n\n    function getTextSourceBuffer(streamInfo) {\n        const streamId = streamInfo.id;\n\n        if (textSourceBuffers && textSourceBuffers[streamId]) {\n            return textSourceBuffers[streamId];\n        }\n    }\n\n    function getAllTracksAreDisabled() {\n        return allTracksAreDisabled;\n    }\n\n    function addEmbeddedTrack(streamInfo, mediaInfo) {\n        const streamId = streamInfo.id;\n\n        if (!textSourceBuffers[streamId]) {\n            return;\n        }\n\n        textSourceBuffers[streamId].addEmbeddedTrack(mediaInfo);\n    }\n\n    /**\n     * Event that is triggered if a font download of a font described in an essential property descriptor\n     * tag fails.\n     * @param {FontInfo} font - font information\n     * @private\n     */\n    function _onFontDownloadFailure(font) {\n        logger.error(`Could not download ${font.isEssential ? 'an essential' : 'a'} font - fontFamily: ${font.fontFamily}, url: ${font.url}`);\n        if (font.isEssential) {\n            let idx = textTracks[font.streamId].getTrackIdxForId(font.trackId);\n            textTracks[font.streamId].setModeForTrackIdx(idx, Constants.TEXT_DISABLED);\n        }\n    };\n\n    /**\n     * Set a font with an essential property\n     * @private\n     */\n    function _onFontDownloadSuccess(font) {\n        logger.debug(`Successfully downloaded ${font.isEssential ? 'an essential' : 'a'} font - fontFamily: ${font.fontFamily}, url: ${font.url}`);\n        if (font.isEssential) {\n            let idx = textTracks[font.streamId].getTrackIdxForId(font.trackId);\n            if (idx === textTracks[font.streamId].getCurrentTrackIdx()) {\n                textTracks[font.streamId].setModeForTrackIdx(idx, Constants.TEXT_SHOWING);\n            } else {\n                textTracks[font.streamId].setModeForTrackIdx(idx, Constants.TEXT_HIDDEN);\n            }\n        }\n    }\n\n    function _onTextTracksAdded(e) {\n        let tracks = e.tracks;\n        let index = e.index;\n        const streamId = e.streamId;\n\n        const textDefaultEnabled = settings.get().streaming.text.defaultEnabled;\n\n        if ((textDefaultEnabled === false && !isTextEnabled()) || disableTextBeforeTextTracksAdded) {\n            // disable text at startup if explicitly configured with setTextDefaultEnabled(false) or if there is no defaultSettings (configuration or from domStorage)\n            setTextTrack(streamId, -1);\n        } else {\n            const currentTrack = mediaController.getCurrentTrackFor(Constants.TEXT, streamId);\n            if (currentTrack) {\n                const defaultSettings = {\n                    lang: currentTrack.lang,\n                    role: currentTrack.roles[0],\n                    index: currentTrack.index,\n                    codec: currentTrack.codec,\n                    accessibility: currentTrack.accessibility[0]\n                };\n                tracks.some((item, idx) => {\n                    // matchSettings is compatible with setTextDefaultLanguage and setInitialSettings\n                    if (mediaController.matchSettings(defaultSettings, item)) {\n                        setTextTrack(streamId, idx);\n                        index = idx;\n                        return true;\n                    }\n                });\n            }\n            allTracksAreDisabled = false;\n        }\n\n        streamData[streamId].lastEnabledIndex = index;\n\n        eventBus.trigger(MediaPlayerEvents.TEXT_TRACKS_ADDED, {\n            enabled: isTextEnabled(),\n            index: index,\n            tracks: tracks,\n            streamId\n        });\n\n        textTracksAdded = true;\n\n        dvbFonts.addFontsFromTracks(tracks, streamId);\n\n        // Initially disable any tracks with essential property font downloads\n        dvbFonts.getFonts().forEach(font => {\n            if (font.isEssential) {\n                let idx = textTracks[font.streamId].getTrackIdxForId(font.trackId);\n                textTracks[font.streamId].setModeForTrackIdx(idx, Constants.TEXT_DISABLED);\n            }\n        });\n\n        dvbFonts.downloadFonts();\n    }\n\n    function _onPlaybackTimeUpdated(e) {\n        try {\n            const streamId = e.streamId;\n\n            if (!textTracks[streamId] || isNaN(e.time)) {\n                return;\n            }\n            textTracks[streamId].manualCueProcessing(e.time);\n        } catch (err) {\n        }\n    }\n\n    function _onPlaybackSeeking(e) {\n        try {\n            const streamId = e.streamId;\n\n            if (!textTracks[streamId]) {\n                return;\n            }\n            textTracks[streamId].disableManualTracks();\n        } catch (e) {\n\n        }\n    }\n\n    function _onMediaInfoUpdated(e) {\n        try {\n            if (!e || !e.mediaType || e.mediaType !== Constants.AUDIO || !e.currentMediaInfo) {\n                return\n            }\n\n            const currentTextTrackInfo = textTracks[e.streamId].getCurrentTextTrackInfo();\n            let suitableForcedSubtitleIndex = NaN;\n            if (allTracksAreDisabled) {\n                suitableForcedSubtitleIndex = _getSuitableForceSubtitleTrackIndex(e.streamId);\n            } else if (_isForcedSubtitleTrack(currentTextTrackInfo) && e.currentMediaInfo.lang && e.currentMediaInfo.lang !== currentTextTrackInfo.lang) {\n                suitableForcedSubtitleIndex = _getSuitableForceSubtitleTrackIndex(e.streamId);\n                if (isNaN(suitableForcedSubtitleIndex)) {\n                    suitableForcedSubtitleIndex = -1;\n                }\n            }\n\n            if (!isNaN(suitableForcedSubtitleIndex)) {\n                setTextTrack(e.streamId, suitableForcedSubtitleIndex);\n            }\n\n        } catch (e) {\n            logger.error(e);\n        }\n    }\n\n    function enableText(streamId, enable) {\n        checkParameterType(enable, 'boolean');\n        if (isTextEnabled() !== enable) {\n            // change track selection\n            if (enable) {\n                // apply last enabled track\n                setTextTrack(streamId, streamData[streamId].lastEnabledIndex);\n            }\n\n            if (!enable) {\n                // keep last index and disable text track\n                streamData[streamId].lastEnabledIndex = getCurrentTrackIdx(streamId);\n                if (!textTracksAdded) {\n                    disableTextBeforeTextTracksAdded = true;\n                } else {\n                    setTextTrack(streamId, -1);\n                }\n            }\n        }\n\n        return true\n    }\n\n    function isTextEnabled() {\n        let enabled = true;\n        if (allTracksAreDisabled && !forceTextStreaming) {\n            enabled = false;\n        }\n        return enabled;\n    }\n\n    // when set to true ScheduleController will allow schedule of chunks even if tracks are all disabled. Allowing streaming to hidden track for external players to work with.\n    function enableForcedTextStreaming(enable) {\n        checkParameterType(enable, 'boolean');\n        forceTextStreaming = enable;\n        return true\n    }\n\n    function setTextTrack(streamId, idx) {\n        // For external time text file, the only action needed to change a track is marking the track mode to showing.\n        // Fragmented text tracks need the additional step of calling TextController.setTextTrack();\n        allTracksAreDisabled = idx === -1;\n\n        if (allTracksAreDisabled && mediaController) {\n            mediaController.saveTextSettingsDisabled();\n        }\n\n        let oldTrackIdx = getCurrentTrackIdx(streamId);\n\n        // No change, no action required\n        if (oldTrackIdx === idx || !textTracks[streamId]) {\n            return;\n        }\n\n        textTracks[streamId].disableManualTracks();\n\n        let currentTrackInfo = textTracks[streamId].getCurrentTextTrackInfo();\n        let currentNativeTrackInfo = (currentTrackInfo) ? videoModel.getTextTrack(currentTrackInfo.kind, currentTrackInfo.id, currentTrackInfo.lang, currentTrackInfo.isTTML, currentTrackInfo.isEmbedded) : null;\n\n        // Don't change disabled tracks - dvb font download for essential property failed or not complete\n        if (currentNativeTrackInfo && (currentNativeTrackInfo.mode !== Constants.TEXT_DISABLED)) {\n            textTracks[streamId].setModeForTrackIdx(oldTrackIdx, Constants.TEXT_HIDDEN);\n        }\n\n        textTracks[streamId].setCurrentTrackIdx(idx);\n\n        currentTrackInfo = textTracks[streamId].getCurrentTextTrackInfo();\n\n        const dispatchForManualRendering = settings.get().streaming.text.dispatchForManualRendering;\n\n        if (currentTrackInfo && !dispatchForManualRendering && (currentTrackInfo.mode !== Constants.TEXT_DISABLED)) {\n            textTracks[streamId].setModeForTrackIdx(idx, Constants.TEXT_SHOWING);\n        }\n\n        if (currentTrackInfo && currentTrackInfo.isFragmented && !currentTrackInfo.isEmbedded) {\n            _setFragmentedTextTrack(streamId, currentTrackInfo, oldTrackIdx);\n        } else if (currentTrackInfo && !currentTrackInfo.isFragmented) {\n            _setNonFragmentedTextTrack(streamId, currentTrackInfo);\n        } else if (!currentTrackInfo && allTracksAreDisabled) {\n            const forcedSubtitleTrackIndex = _getSuitableForceSubtitleTrackIndex(streamId)\n            if (!isNaN(forcedSubtitleTrackIndex)) {\n                setTextTrack(streamId, forcedSubtitleTrackIndex);\n            }\n            return\n        }\n\n        mediaController.setTrack(currentTrackInfo);\n    }\n\n    function _setFragmentedTextTrack(streamId, currentTrackInfo, oldTrackIdx) {\n\n        if (!textSourceBuffers[streamId]) {\n            return;\n        }\n\n        let config = textSourceBuffers[streamId].getConfig();\n        let fragmentedTracks = config.fragmentedTracks;\n\n        for (let i = 0; i < fragmentedTracks.length; i++) {\n            let mediaInfo = fragmentedTracks[i];\n            if (currentTrackInfo.lang === mediaInfo.lang &&\n                (mediaInfo.id ? currentTrackInfo.id === mediaInfo.id : currentTrackInfo.index === mediaInfo.index)) {\n                let currentFragTrack = mediaController.getCurrentTrackFor(Constants.TEXT, streamId);\n                if (mediaInfo.id ? currentFragTrack.id !== mediaInfo.id : currentFragTrack.index !== mediaInfo.index) {\n                    textTracks[streamId].deleteCuesFromTrackIdx(oldTrackIdx);\n                    textSourceBuffers[streamId].setCurrentFragmentedTrackIdx(i);\n                } else if (oldTrackIdx === -1) {\n                    // in fragmented use case, if the user selects the older track (the one selected before disabled text track)\n                    // no CURRENT_TRACK_CHANGED event will be triggered because the mediaInfo in the StreamProcessor is equal to the one we are selecting\n                    // For that reason we reactivate the StreamProcessor and the ScheduleController\n                    eventBus.trigger(Events.SET_FRAGMENTED_TEXT_AFTER_DISABLED, {}, {\n                        streamId,\n                        mediaType: Constants.TEXT\n                    });\n                }\n            }\n        }\n    }\n\n    function _setNonFragmentedTextTrack(streamId, currentTrackInfo) {\n        eventBus.trigger(Events.SET_NON_FRAGMENTED_TEXT, {\n            currentTrackInfo\n        }, {\n            streamId,\n            mediaType: Constants.TEXT\n        });\n    }\n\n    function _getSuitableForceSubtitleTrackIndex(streamId) {\n        const forcedSubtitleTracks = _getForcedSubtitleTracks(streamId);\n\n        if (!forcedSubtitleTracks || forcedSubtitleTracks.length <= 0) {\n            return NaN\n        }\n\n        const currentAudioTrack = mediaController.getCurrentTrackFor(Constants.AUDIO, streamId);\n        if (!currentAudioTrack) {\n            return NaN\n        }\n\n        const suitableTrack = forcedSubtitleTracks.find((track) => {\n            return currentAudioTrack.lang === track.lang\n        })\n\n        if (suitableTrack) {\n            return suitableTrack._indexToSelect\n        }\n\n        return NaN\n    }\n\n    function _getForcedSubtitleTracks(streamId) {\n        const textTrackInfos = textTracks[streamId].getTextTrackInfos();\n        return textTrackInfos.filter((textTrackInfo, index) => {\n            textTrackInfo._indexToSelect = index;\n            if (textTrackInfo && textTrackInfo.roles && textTrackInfo.roles.length > 0) {\n                return _isForcedSubtitleTrack(textTrackInfo);\n            }\n            return false\n        });\n    }\n\n    function _isForcedSubtitleTrack(textTrackInfo) {\n        if (!textTrackInfo || !textTrackInfo.roles || textTrackInfo.roles.length === 0) {\n            return false\n        }\n        return textTrackInfo.roles.some((role) => {\n            return role.schemeIdUri === Constants.DASH_ROLE_SCHEME_ID && role.value === DashConstants.FORCED_SUBTITLE\n        })\n    }\n\n    function getCurrentTrackIdx(streamId) {\n        return textTracks[streamId].getCurrentTrackIdx();\n    }\n\n    function deactivateStream(streamInfo) {\n        if (!streamInfo) {\n            return;\n        }\n        const streamId = streamInfo.id;\n\n        if (textSourceBuffers[streamId]) {\n            textSourceBuffers[streamId].resetMediaInfos();\n        }\n\n        if (textTracks[streamId]) {\n            textTracks[streamId].deleteAllTextTracks();\n        }\n    }\n\n    function clearDataForStream(streamId) {\n        if (textSourceBuffers[streamId]) {\n            textSourceBuffers[streamId].resetEmbedded();\n            textSourceBuffers[streamId].reset();\n            delete textSourceBuffers[streamId];\n        }\n\n        if (textTracks[streamId]) {\n            textTracks[streamId].deleteAllTextTracks();\n            delete textTracks[streamId];\n        }\n\n        if (streamData[streamId]) {\n            delete streamData[streamId];\n        }\n    }\n\n    function resetInitialSettings() {\n        textSourceBuffers = {};\n        textTracks = {};\n        streamData = {};\n        allTracksAreDisabled = true;\n        textTracksAdded = false;\n        disableTextBeforeTextTracksAdded = false;\n    }\n\n    function reset() {\n        Object.keys(textSourceBuffers).forEach((key) => {\n            textSourceBuffers[key].resetEmbedded();\n            textSourceBuffers[key].reset();\n        });\n\n        dvbFonts.reset();\n        resetInitialSettings();\n        eventBus.off(Events.TEXT_TRACKS_QUEUE_INITIALIZED, _onTextTracksAdded, instance);\n        eventBus.off(Events.DVB_FONT_DOWNLOAD_FAILED, _onFontDownloadFailure, instance);\n        eventBus.off(Events.DVB_FONT_DOWNLOAD_COMPLETE, _onFontDownloadSuccess, instance);\n        eventBus.off(Events.MEDIAINFO_UPDATED, _onMediaInfoUpdated, instance);\n        if (settings.get().streaming.text.webvtt.customRenderingEnabled) {\n            eventBus.off(Events.PLAYBACK_TIME_UPDATED, _onPlaybackTimeUpdated, instance);\n            eventBus.off(Events.PLAYBACK_SEEKING, _onPlaybackSeeking, instance)\n        }\n    }\n\n    instance = {\n        addEmbeddedTrack,\n        addMediaInfosToBuffer,\n        createTracks,\n        deactivateStream,\n        enableForcedTextStreaming,\n        enableText,\n        getAllTracksAreDisabled,\n        getCurrentTrackIdx,\n        getTextSourceBuffer,\n        initialize,\n        initializeForStream,\n        isTextEnabled,\n        reset,\n        setTextTrack,\n        clearDataForStream,\n    };\n    setup();\n    return instance;\n}\n\nTextController.__dashjs_factory_name = 'TextController';\nexport default FactoryMaker.getClassFactory(TextController);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2017, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport Constants from '../constants/Constants.js';\nimport FactoryMaker from '../../core/FactoryMaker.js';\nimport Debug from '../../core/Debug.js';\nimport {HTTPRequest} from '../vo/metrics/HTTPRequest.js';\nimport MediaPlayerEvents from '../MediaPlayerEvents.js';\nimport EventBus from '../../core/EventBus.js';\n\n/**\n * Throughput generally stored in kbit/s\n * Latency generally stored in ms\n * @param {object} config\n * @ignore\n * @constructor\n */\nfunction ThroughputModel(config) {\n\n    config = config || {};\n    const context = this.context;\n    const debug = Debug(context).getInstance();\n    const settings = config.settings;\n    const eventBus = EventBus(context).getInstance();\n\n    let throughputDict,\n        latencyDict,\n        ewmaThroughputDict,\n        ewmaLatencyDict,\n        ewmaHalfLife,\n        logger;\n\n    function setup() {\n        logger = debug.getLogger(instance);\n        ewmaHalfLife = {\n            bandwidthHalfLife: {\n                fast: settings.get().streaming.abr.throughput.ewma.throughputFastHalfLifeSeconds,\n                slow: settings.get().streaming.abr.throughput.ewma.throughputSlowHalfLifeSeconds\n            },\n            latencyHalfLife: {\n                fast: settings.get().streaming.abr.throughput.ewma.latencyFastHalfLifeCount,\n                slow: settings.get().streaming.abr.throughput.ewma.latencySlowHalfLifeCount\n            }\n        };\n        reset();\n    }\n\n    /**\n     * Use the provided request to add new entries for throughput and latency. Update the EWMA state as well.\n     * @param {MediaType} mediaType\n     * @param {object} httpRequest\n     */\n    function addEntry(mediaType, httpRequest) {\n        try {\n\n            if (!mediaType || !httpRequest || !httpRequest.trace || !httpRequest.trace.length) {\n                return;\n            }\n\n            _createSettingsForMediaType(mediaType);\n\n            const latencyInMs = (httpRequest.tresponse.getTime() - httpRequest.trequest.getTime()) || 1;\n            let throughputValues = _calculateThroughputValues(httpRequest, latencyInMs);\n            throughputValues.latencyInMs = latencyInMs;\n\n            if (isNaN(throughputValues.value) || !isFinite(throughputValues.value)) {\n                return;\n            }\n\n            // Get estimated throughput (etp, in kbits/s) from CMSD response headers\n            if (httpRequest.cmsd) {\n                const etp = httpRequest.cmsd.dynamic && httpRequest.cmsd.dynamic.etp ? httpRequest.cmsd.dynamic.etp : null;\n                if (etp) {\n                    // Apply weight ratio on etp\n                    const etpWeightRatio = settings.get().streaming.cmsd.abr.etpWeightRatio;\n                    if (etpWeightRatio > 0 && etpWeightRatio <= 1) {\n                        throughputValues.value = (throughputValues.value * (1 - etpWeightRatio)) + (etp * etpWeightRatio);\n                    }\n                }\n            }\n\n            const cacheReferenceTime = (httpRequest._tfinish.getTime() - httpRequest.trequest.getTime());\n\n            if (_isCachedResponse(mediaType, cacheReferenceTime, httpRequest)) {\n                logger.debug(`${mediaType} Assuming segment ${httpRequest.url} came from cache, ignoring it for throughput calculation`);\n                return;\n            }\n\n            logger.debug(`Added throughput entry for ${mediaType}: ${throughputValues.value} kbit/s`)\n            throughputValues.serviceLocation = httpRequest._serviceLocation;\n            throughputDict[mediaType].push(throughputValues);\n            latencyDict[mediaType].push({ value: latencyInMs });\n            _cleanupDict(mediaType);\n\n            eventBus.trigger(MediaPlayerEvents.THROUGHPUT_MEASUREMENT_STORED, { throughputValues })\n\n            if (httpRequest.type !== HTTPRequest.MPD_TYPE) {\n                _updateEwmaValues(ewmaThroughputDict[mediaType], throughputValues.value, settings.get().streaming.abr.throughput.ewma.weightDownloadTimeMultiplicationFactor * throughputValues.downloadTimeInMs, ewmaHalfLife.bandwidthHalfLife);\n                _updateEwmaValues(ewmaLatencyDict[mediaType], latencyInMs, 1, ewmaHalfLife.latencyHalfLife);\n            }\n        } catch (e) {\n            logger.error(e);\n        }\n    }\n\n    /**\n     * Returns the throughput in kbit/s , the download time in ms and the downloaded bytes for an HTTP request\n     * @param {object} httpRequest\n     * @param {number} latencyInMs\n     * @return {object}\n     * @private\n     */\n    function _calculateThroughputValues(httpRequest, latencyInMs) {\n\n        // Low latency is enabled, we used the fetch API and received chunks\n        if (httpRequest._fileLoaderType && httpRequest._fileLoaderType === Constants.FILE_LOADER_TYPES.FETCH) {\n            return _calculateThroughputValuesForFetch(httpRequest);\n        }\n\n        // Standard case, we used standard XHR requests\n        else {\n            return _calculateThroughputValuesForXhr(httpRequest, latencyInMs);\n        }\n    }\n\n    /**\n     * Calculates the throughput for requests using the Fetch API\n     * @param {object} httpRequest\n     * @param {number} latencyInMs\n     * @return {number}\n     * @private\n     */\n    function _calculateThroughputValuesForFetch(httpRequest) {\n        const downloadedBytes = httpRequest.trace.reduce((prev, curr) => prev + curr.b[0], 0);\n        const downloadTimeInMs = httpRequest.trace.reduce((prev, curr) => prev + curr.d, 0);\n        let throughputInKbit = NaN;\n\n        if (settings.get().streaming.abr.throughput.useNetworkInformationApi.fetch) {\n            throughputInKbit = _deriveThroughputFromNetworkApi()\n        }\n\n        if (isNaN(throughputInKbit)) {\n            throughputInKbit = Math.round((8 * downloadedBytes) / downloadTimeInMs); // bits/ms = kbits/s\n        }\n\n        return {\n            downloadedBytes,\n            value: throughputInKbit,\n            downloadTimeInMs\n        };\n    }\n\n    /**\n     * Returns the throughput in kbit/s and the download time in ms for requests using XHR\n     * @param {object} httpRequest\n     * @param {number} latencyInMs\n     * @return {object}\n     * @private\n     */\n    function _calculateThroughputValuesForXhr(httpRequest, latencyInMs) {\n        let downloadedBytes = NaN;\n        let downloadTimeInMs = NaN;\n        let deriveThroughputViaResourceTimingApi = false;\n\n        // Calculate the throughput using the ResourceTimingAPI if available\n        if (settings.get().streaming.abr.throughput.useResourceTimingApi && httpRequest._resourceTimingValues) {\n            downloadedBytes = httpRequest._resourceTimingValues.transferSize;\n            downloadTimeInMs = httpRequest._resourceTimingValues.responseEnd - httpRequest._resourceTimingValues.responseStart;\n            deriveThroughputViaResourceTimingApi = true;\n        }\n\n        // Use the standard throughput calculation if we can not use the Resource Timing API\n        else {\n            // We need at least two entries in the traces. The first entry includes the latency and the XHR progress event was thrown once bytes have already been received.\n            // The second progress event can be set in relation to the first progress event and therefor gives us more accurate values\n            if (httpRequest.trace.length <= 1) {\n                return { throughput: NaN, downloadTimeInMs: NaN }\n            }\n            downloadedBytes = httpRequest.trace.reduce((prev, curr) => prev + curr.b[0], 0) - httpRequest.trace[0].b[0];\n            downloadTimeInMs = Math.max(httpRequest.trace.reduce((prev, curr) => prev + curr.d, 0) - httpRequest.trace[0].d, 1);\n        }\n\n        // If available and enabled use the Network Information API\n        let throughputInKbit = NaN;\n        if (!deriveThroughputViaResourceTimingApi && settings.get().streaming.abr.throughput.useNetworkInformationApi.xhr) {\n            throughputInKbit = _deriveThroughputFromNetworkApi()\n        }\n\n        if (isNaN(throughputInKbit)) {\n            const referenceTimeInMs = settings.get().streaming.abr.throughput.useDeadTimeLatency ? downloadTimeInMs : downloadTimeInMs + latencyInMs;\n            throughputInKbit = Math.round((8 * downloadedBytes) / referenceTimeInMs) // bits/ms = kbits/s\n        }\n\n        return {\n            downloadedBytes,\n            value: throughputInKbit,\n            downloadTimeInMs\n        };\n    }\n\n    /**\n     * Return the current estimated bandwidth based on NetworkInformation.downlink if the API is available\n     * @returns {*|number}\n     * @private\n     */\n    function _deriveThroughputFromNetworkApi() {\n        // NetworkInformation.downlink: Returns the effective bandwidth estimate in megabits per second, rounded to the nearest multiple of 25 kilobits per seconds.\n        if (navigator && navigator.connection && !isNaN(navigator.connection.downlink) && navigator.connection.downlink > 0) {\n            return navigator.connection.downlink * 1000\n        }\n\n        return NaN\n    }\n\n    /**\n     * Check if the response was cached.\n     * @param {MediaType} mediaType\n     * @param {number} cacheReferenceTime\n     * @param {object} httpRequest\n     * @return {boolean}\n     * @private\n     */\n    function _isCachedResponse(mediaType, cacheReferenceTime, httpRequest) {\n\n        if (settings.get().streaming.abr.throughput.useResourceTimingApi && httpRequest._resourceTimingValues) {\n            return httpRequest._resourceTimingValues.transferSize === 0 && httpRequest._resourceTimingValues.decodedBodySize > 0\n        }\n\n        if (isNaN(cacheReferenceTime)) {\n            return false;\n        }\n        if (mediaType === Constants.VIDEO) {\n            return cacheReferenceTime < settings.get().streaming.cacheLoadThresholds[Constants.VIDEO];\n        } else if (mediaType === Constants.AUDIO) {\n            return cacheReferenceTime < settings.get().streaming.cacheLoadThresholds[Constants.AUDIO];\n        }\n    }\n\n    /**\n     *\n     * @param {object} ewmaObj\n     * @param {number} value\n     * @param {number} weight\n     * @param {object} halfLife\n     * @private\n     */\n    function _updateEwmaValues(ewmaObj, value, weight, halfLife) {\n        // Note about startup:\n        // Estimates start at 0, so early values are underestimated.\n        // This effect is countered in getAverageEwma() by dividing the estimates by:\n        //     1 - Math.pow(0.5, ewmaObj.totalWeight / halfLife)\n\n        const fastAlpha = Math.pow(0.5, weight / halfLife.fast);\n        ewmaObj.fastEstimate = (1 - fastAlpha) * value + fastAlpha * ewmaObj.fastEstimate;\n\n        const slowAlpha = Math.pow(0.5, weight / halfLife.slow);\n        ewmaObj.slowEstimate = (1 - slowAlpha) * value + slowAlpha * ewmaObj.slowEstimate;\n\n        ewmaObj.totalWeight += weight;\n    }\n\n    /**\n     * Shift old entries once we reached the threshold\n     * @param {MediaType} mediaType\n     * @private\n     */\n    function _cleanupDict(mediaType) {\n        if (throughputDict[mediaType].length > settings.get().streaming.abr.throughput.sampleSettings.maxMeasurementsToKeep) {\n            throughputDict[mediaType].shift();\n        }\n\n        if (latencyDict[mediaType].length > settings.get().streaming.abr.throughput.sampleSettings.maxMeasurementsToKeep) {\n            latencyDict[mediaType].shift();\n        }\n    }\n\n    /**\n     * Setup the dict objects for a specific media type\n     * @param mediaType\n     * @private\n     */\n    function _createSettingsForMediaType(mediaType) {\n        throughputDict[mediaType] = throughputDict[mediaType] || [];\n        latencyDict[mediaType] = latencyDict[mediaType] || [];\n        ewmaThroughputDict[mediaType] = ewmaThroughputDict[mediaType] || {\n            fastEstimate: 0,\n            slowEstimate: 0,\n            totalWeight: 0\n        };\n        ewmaLatencyDict[mediaType] = ewmaLatencyDict[mediaType] || { fastEstimate: 0, slowEstimate: 0, totalWeight: 0 };\n    }\n\n    function getThroughputDict(mediaType) {\n        if (!mediaType) {\n            return throughputDict\n        }\n        return throughputDict[mediaType];\n    }\n\n    function getEwmaThroughputDict(mediaType) {\n        if (!mediaType) {\n            return ewmaThroughputDict\n        }\n        return ewmaThroughputDict[mediaType]\n    }\n\n    function getLatencyDict(mediaType) {\n        if (!mediaType) {\n            return latencyDict\n        }\n        return latencyDict[mediaType];\n    }\n\n    function getEwmaLatencyDict(mediaType) {\n        if (!mediaType) {\n            return ewmaLatencyDict\n        }\n        return ewmaLatencyDict[mediaType];\n    }\n\n    function getEwmaHalfLife() {\n        return ewmaHalfLife;\n    }\n\n    /**\n     * Reset all values\n     */\n    function reset() {\n        throughputDict = {};\n        latencyDict = {};\n        ewmaThroughputDict = {};\n        ewmaLatencyDict = {};\n    }\n\n    const instance = {\n        addEntry,\n        getThroughputDict,\n        getEwmaThroughputDict,\n        getEwmaLatencyDict,\n        getEwmaHalfLife,\n        getLatencyDict,\n        reset\n    };\n\n    setup();\n\n    return instance;\n}\n\nThroughputModel.__dashjs_factory_name = 'ThroughputModel';\nexport default FactoryMaker.getClassFactory(ThroughputModel);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2017, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport Constants from '../constants/Constants.js';\nimport FactoryMaker from '../../core/FactoryMaker.js';\nimport ThroughputModel from '../models/ThroughputModel.js';\nimport MetricsConstants from '../constants/MetricsConstants.js';\nimport {HTTPRequest} from '../vo/metrics/HTTPRequest.js';\nimport MediaPlayerEvents from '../MediaPlayerEvents.js';\nimport EventBus from '../../core/EventBus.js';\n\n/**\n * @constructor\n * @ignore\n */\nfunction ThroughputController() {\n\n    const context = this.context;\n    const eventBus = EventBus(context).getInstance();\n\n    let throughputModel,\n        playbackController,\n        settings;\n\n    function initialize() {\n        throughputModel = ThroughputModel(context).create({\n            settings\n        });\n        _registerEvents();\n    }\n\n    function setConfig(config) {\n        if (config.settings) {\n            settings = config.settings;\n        }\n\n        if (config.playbackController) {\n            playbackController = config.playbackController;\n        }\n    }\n\n    function _registerEvents() {\n        eventBus.on(MediaPlayerEvents.METRIC_ADDED, _onMetricAdded, instance);\n\n        if (performance) {\n            performance.addEventListener(\n                'resourcetimingbufferfull',\n                _onResourceTimingBufferFull,\n            );\n        }\n    }\n\n    function _resetEvents() {\n        eventBus.off(MediaPlayerEvents.METRIC_ADDED, _onMetricAdded, instance);\n\n        if (performance) {\n            performance.removeEventListener(\n                'resourcetimingbufferfull',\n                _onResourceTimingBufferFull,\n            );\n        }\n    }\n\n    function _onResourceTimingBufferFull() {\n        performance.clearResourceTimings();\n    }\n\n    /**\n     * Push new values to the throughput model once an HTTP request completed\n     * @param {object} e\n     * @private\n     */\n    function _onMetricAdded(e) {\n        if (e.metric === MetricsConstants.HTTP_REQUEST && e.value && (e.value.type === HTTPRequest.MPD_TYPE || (e.value.type === HTTPRequest.MEDIA_SEGMENT_TYPE && (e.mediaType === Constants.AUDIO || e.mediaType === Constants.VIDEO)))) {\n            throughputModel.addEntry(e.mediaType, e.value);\n        }\n    }\n\n    /**\n     * Get average value\n     * @param {string} throughputType\n     * @param {string} mediaType\n     * @param {string|null} calculationMode\n     * @param {number} sampleSize\n     * @return {number}\n     * @private\n     */\n    function _getAverage(throughputType, mediaType, calculationMode = null, sampleSize = NaN) {\n        let dict = null;\n        let ewmaHalfLife = throughputModel.getEwmaHalfLife();\n        let halfLife = null;\n        let useMin = true;\n\n        if (!calculationMode) {\n            calculationMode = settings.get().streaming.abr.throughput.averageCalculationMode;\n        }\n\n        switch (throughputType) {\n\n            // Set the parameters for the standard bandwidth calculation based on throughput values for a media type\n            case Constants.THROUGHPUT_TYPES.BANDWIDTH:\n                dict = calculationMode === Constants.THROUGHPUT_CALCULATION_MODES.EWMA ? throughputModel.getEwmaThroughputDict(mediaType) : throughputModel.getThroughputDict(mediaType);\n                halfLife = ewmaHalfLife.bandwidthHalfLife;\n                useMin = true;\n                sampleSize = !isNaN(sampleSize) ? sampleSize : playbackController.getIsDynamic() ? settings.get().streaming.abr.throughput.sampleSettings.live : settings.get().streaming.abr.throughput.sampleSettings.vod;\n                break;\n\n            // Set the parameters for the standard latency calculation based on throughput values for a media type\n            case Constants.THROUGHPUT_TYPES.LATENCY:\n                dict = calculationMode === Constants.THROUGHPUT_CALCULATION_MODES.EWMA ? throughputModel.getEwmaLatencyDict(mediaType) : throughputModel.getLatencyDict(mediaType);\n                halfLife = ewmaHalfLife.latencyHalfLife;\n                useMin = false;\n                sampleSize = !isNaN(sampleSize) ? sampleSize : settings.get().streaming.abr.throughput.sampleSettings.averageLatencySampleAmount;\n                break;\n\n        }\n\n        if (!dict || dict.length === 0) {\n            return NaN;\n        }\n\n        let adjustedSampleSize;\n        switch (calculationMode) {\n            case Constants.THROUGHPUT_CALCULATION_MODES.ARITHMETIC_MEAN:\n                adjustedSampleSize = _getAdjustedSampleSize(dict, sampleSize, throughputType);\n                return getArithmeticMean(dict, adjustedSampleSize);\n            case Constants.THROUGHPUT_CALCULATION_MODES.BYTE_SIZE_WEIGHTED_ARITHMETIC_MEAN:\n                adjustedSampleSize = _getAdjustedSampleSize(dict, sampleSize, throughputType);\n                return getByteSizeWeightedArithmeticMean(dict, adjustedSampleSize);\n            case Constants.THROUGHPUT_CALCULATION_MODES.DATE_WEIGHTED_ARITHMETIC_MEAN:\n                adjustedSampleSize = _getAdjustedSampleSize(dict, sampleSize, throughputType);\n                return getDateWeightedArithmeticMean(dict, adjustedSampleSize);\n            case Constants.THROUGHPUT_CALCULATION_MODES.HARMONIC_MEAN:\n                adjustedSampleSize = _getAdjustedSampleSize(dict, sampleSize, throughputType);\n                return getHarmonicMean(dict, adjustedSampleSize);\n            case Constants.THROUGHPUT_CALCULATION_MODES.BYTE_SIZE_WEIGHTED_HARMONIC_MEAN:\n                adjustedSampleSize = _getAdjustedSampleSize(dict, sampleSize, throughputType);\n                return getByteSizeWeightedHarmonicMean(dict, adjustedSampleSize);\n            case Constants.THROUGHPUT_CALCULATION_MODES.DATE_WEIGHTED_HARMONIC_MEAN:\n                adjustedSampleSize = _getAdjustedSampleSize(dict, sampleSize, throughputType);\n                return getDateWeightedHarmonicMean(dict, adjustedSampleSize);\n            case Constants.THROUGHPUT_CALCULATION_MODES.EWMA:\n                return getEwma(dict, halfLife, useMin);\n            case Constants.THROUGHPUT_CALCULATION_MODES.ZLEMA:\n                adjustedSampleSize = _getAdjustedSampleSize(dict, sampleSize, throughputType);\n                return getZlema(dict, adjustedSampleSize);\n        }\n    }\n\n    /**\n     * @param {array} dict\n     * @param {number} sampleSize\n     * @param {string} type\n     * @return {number}\n     * @private\n     */\n    function _getAdjustedSampleSize(dict, sampleSize, type) {\n        if (!dict) {\n            sampleSize = 0;\n        } else if (sampleSize >= dict.length) {\n            sampleSize = dict.length;\n        } else if (type === Constants.THROUGHPUT_TYPES.BANDWIDTH && settings.get().streaming.abr.throughput.sampleSettings.enableSampleSizeAdjustment) {\n            // if throughput samples vary a lot, average over a wider sample\n            for (let i = 1; i < sampleSize; ++i) {\n                const ratio = dict[dict.length - i].value / dict[dict.length - i - 1].value;\n                if (ratio >= settings.get().streaming.abr.throughput.sampleSettings.increaseScale || ratio <= settings.get().streaming.abr.throughput.sampleSettings.decreaseScale) {\n                    sampleSize += 1;\n                    if (sampleSize === dict.length) { // cannot increase sampleSize beyond arr.length\n                        break;\n                    }\n                }\n            }\n        }\n\n        return sampleSize;\n    }\n\n    /**\n     * Calculate the arithmetic mean of the values provided via the dict\n     * @param {array} dict\n     * @param {number} sampleSize\n     * @return {number|*}\n     * @private\n     */\n    function getArithmeticMean(dict, sampleSize) {\n        let arr = dict;\n\n        if (sampleSize === 0 || !arr || arr.length === 0) {\n            return NaN;\n        }\n\n        // Extract the last n elements\n        arr = arr.slice(-sampleSize);\n\n        return arr.reduce((total, entry) => {\n            return total + entry.value\n        }, 0) / arr.length;\n    }\n\n    /**\n     * Calculates the byte size weighted arithmetic mean of the values provided via the dict\n     * @param {array} dict\n     * @param {number} sampleSize\n     * @return {number|*}\n     * @private\n     */\n    function getByteSizeWeightedArithmeticMean(dict, sampleSize) {\n        let arr = dict;\n\n        if (sampleSize === 0 || !arr || arr.length === 0) {\n            return NaN;\n        }\n\n        // Extract the last n elements\n        arr = arr.slice(-sampleSize);\n        let divideBy = 0;\n\n        return arr.reduce((total, entry) => {\n            let weight = Math.sqrt(entry.downloadedBytes);\n            divideBy += weight;\n\n            return total + entry.value * weight\n        }, 0) / divideBy;\n    }\n\n    /**\n     * Calculates the time weighted arithmetic mean of the values provided via the dict\n     * @param {array} dict\n     * @param {number} sampleSize\n     * @return {number|*}\n     * @private\n     */\n    function getDateWeightedArithmeticMean(dict, sampleSize) {\n        let arr = dict;\n\n        if (sampleSize === 0 || !arr || arr.length === 0) {\n            return NaN;\n        }\n\n        // Extract the last n elements\n        arr = arr.slice(-sampleSize);\n        let divideBy = 0;\n\n        return arr.reduce((total, entry, index) => {\n            let weight = index + 1;\n            divideBy += weight;\n\n            return total + entry.value * weight\n        }, 0) / divideBy;\n    }\n\n    /**\n     * Calculate the harmonic mean of the values provided via the dict\n     * @param {array} dict\n     * @param {number} sampleSize\n     * @return {number|*}\n     * @private\n     */\n    function getHarmonicMean(dict, sampleSize) {\n        let arr = dict;\n\n        if (sampleSize === 0 || !arr || arr.length === 0) {\n            return NaN;\n        }\n\n        // Extract the last n elements\n        arr = arr.slice(-sampleSize);\n\n        const value = arr.reduce((total, entry) => {\n            return total + 1 / entry.value\n        }, 0);\n\n        return arr.length / value\n    }\n\n    /**\n     * Calculate the harmonic mean of the values provided via the dict\n     * @param {array} dict\n     * @param {number} sampleSize\n     * @return {number|*}\n     * @private\n     */\n    function getByteSizeWeightedHarmonicMean(dict, sampleSize) {\n        let arr = dict;\n\n        if (sampleSize === 0 || !arr || arr.length === 0) {\n            return NaN;\n        }\n\n        // Extract the last n elements\n        arr = arr.slice(-sampleSize);\n        let dividend = 0;\n\n        const value = arr.reduce((total, entry) => {\n            let weight = Math.sqrt(entry.downloadedBytes);\n            dividend += weight;\n\n            return total + (1 / entry.value) * weight\n        }, 0);\n\n        return dividend / value\n    }\n\n\n    /**\n     * Calculates the time weighted harmonic mean of the values provided via the dict\n     * @param {array} dict\n     * @param {number} sampleSize\n     * @return {number|*}\n     * @private\n     */\n    function getDateWeightedHarmonicMean(dict, sampleSize) {\n        let arr = dict;\n\n        if (sampleSize === 0 || !arr || arr.length === 0) {\n            return NaN;\n        }\n\n        // Extract the last n elements\n        arr = arr.slice(-sampleSize);\n        let dividend = 0;\n\n        const value = arr.reduce((total, entry, index) => {\n            let weight = index + 1;\n            dividend += weight;\n\n            return total + (1 / entry.value) * weight\n        }, 0);\n\n        return dividend / value\n    }\n\n    /**\n     * Calculated the exponential weighted moving average for the values provided via the dict\n     * @param {object} dict\n     * @param {object} halfLife\n     * @param {boolean} useMin - Whether to apply Math.min of the fastEstimate and the slowEstimate\n     * @return {number}\n     * @private\n     */\n    function getEwma(dict, halfLife, useMin = true) {\n\n        if (!dict || dict.totalWeight <= 0) {\n            return NaN;\n        }\n\n        // to correct for startup, divide by zero factor = 1 - Math.pow(0.5, ewmaObj.totalWeight / halfLife)\n        const fastEstimate = dict.fastEstimate / (1 - Math.pow(0.5, dict.totalWeight / halfLife.fast));\n        const slowEstimate = dict.slowEstimate / (1 - Math.pow(0.5, dict.totalWeight / halfLife.slow));\n\n        return useMin ? Math.min(fastEstimate, slowEstimate) : Math.max(fastEstimate, slowEstimate);\n    }\n\n    /**\n     * Calculates the Zero-Lag Exponential Moving Average\n     * @param {array} dict\n     * @param {number} sampleSize\n     * @returns {number}\n     */\n    function getZlema(dict, sampleSize) {\n        if (sampleSize === 0 || !dict || dict.length === 0) {\n            return NaN;\n        }\n\n        // Extract the last n elements\n        let values = dict.slice(-sampleSize).map((entry) => {\n            return entry.value;\n        })\n        let alpha = 2 / (values.length + 1);\n        let ema = values[values.length - 1];\n        let zlema = values[values.length - 1];\n\n        for (let i = 0; i < values.length; i++) {\n            ema = alpha * values[i] + (1 - alpha) * ema;\n            zlema = alpha * ema + (1 - alpha) * zlema;\n        }\n\n        return zlema;\n    }\n\n    /**\n     * Returns the average throughput based on the provided calculation mode. The returned value is depicted in kbit/s\n     * @param {string} mediaType\n     * @param {string | null} calculationMode\n     * @param {number | NaN} sampleSize\n     * @return {number}\n     */\n    function getAverageThroughput(mediaType, calculationMode = null, sampleSize = NaN) {\n        const value = _getAverage(Constants.THROUGHPUT_TYPES.BANDWIDTH, mediaType, calculationMode, sampleSize);\n\n        return Math.round(value);\n    }\n\n    /**\n     * Returns the average throughout applying the bandwidth safety factor provided in the settings. The returned value is depicted in kbit/s\n     * @param {string} mediaType\n     * @param {string | null} calculationMode\n     * @param {number | NaN} sampleSize\n     * @return {number}\n     */\n    function getSafeAverageThroughput(mediaType, calculationMode = null, sampleSize = NaN) {\n        let average = getAverageThroughput(mediaType, calculationMode, sampleSize);\n\n        if (!isNaN(average)) {\n            average *= settings.get().streaming.abr.throughput.bandwidthSafetyFactor;\n        }\n\n        return average;\n    }\n\n    /**\n     * Returns the average latency based on the provided calculation mode\n     * @param {string} mediaType\n     * @param {string | null} calculationMode\n     * @param {number | NaN} sampleSize\n     * @return {number}\n     */\n    function getAverageLatency(mediaType, calculationMode = null, sampleSize = NaN) {\n        const value = _getAverage(Constants.THROUGHPUT_TYPES.LATENCY, mediaType, calculationMode, sampleSize);\n\n        return Math.round(value);\n    }\n\n    /**\n     * Returns the raw throughput measurements without calculating the average\n     * @param mediaType\n     * @returns {*}\n     */\n    function getRawThroughputData(mediaType) {\n        if (!mediaType) {\n            return []\n        }\n        return throughputModel.getThroughputDict(mediaType);\n    }\n\n    function reset() {\n        throughputModel.reset();\n        _resetEvents();\n    }\n\n    const instance = {\n        getArithmeticMean,\n        getAverageLatency,\n        getAverageThroughput,\n        getByteSizeWeightedArithmeticMean,\n        getByteSizeWeightedHarmonicMean,\n        getDateWeightedArithmeticMean,\n        getDateWeightedHarmonicMean,\n        getEwma,\n        getHarmonicMean,\n        getRawThroughputData,\n        getSafeAverageThroughput,\n        getZlema,\n        initialize,\n        reset,\n        setConfig\n    };\n\n    return instance;\n}\n\nThroughputController.__dashjs_factory_name = 'ThroughputController';\nexport default FactoryMaker.getSingletonFactory(ThroughputController);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport {Cta608Parser} from '@svta/common-media-library/cta/608/Cta608Parser';\nimport Constants from './constants/Constants.js';\nimport DashConstants from '../dash/constants/DashConstants.js';\nimport MetricsConstants from './constants/MetricsConstants.js';\nimport PlaybackController from './controllers/PlaybackController.js';\nimport StreamController from './controllers/StreamController.js';\nimport GapController from './controllers/GapController.js';\nimport CatchupController from './controllers/CatchupController.js';\nimport ServiceDescriptionController from '../dash/controllers/ServiceDescriptionController.js';\nimport ContentSteeringController from '../dash/controllers/ContentSteeringController.js';\nimport MediaController from './controllers/MediaController.js';\nimport BaseURLController from './controllers/BaseURLController.js';\nimport ManifestLoader from './ManifestLoader.js';\nimport ErrorHandler from './utils/ErrorHandler.js';\nimport Capabilities from './utils/Capabilities.js';\nimport CapabilitiesFilter from './utils/CapabilitiesFilter.js';\nimport URIFragmentModel from './models/URIFragmentModel.js';\nimport ManifestModel from './models/ManifestModel.js';\nimport MediaPlayerModel from './models/MediaPlayerModel.js';\nimport AbrController from './controllers/AbrController.js';\nimport SchemeLoaderFactory from './net/SchemeLoaderFactory.js';\nimport VideoModel from './models/VideoModel.js';\nimport CmcdModel from './models/CmcdModel.js';\nimport CmsdModel from './models/CmsdModel.js';\nimport DOMStorage from './utils/DOMStorage.js';\nimport Debug from './../core/Debug.js';\nimport Errors from './../core/errors/Errors.js';\nimport EventBus from './../core/EventBus.js';\nimport Events from './../core/events/Events.js';\nimport MediaPlayerEvents from './MediaPlayerEvents.js';\nimport FactoryMaker from '../core/FactoryMaker.js';\nimport Settings from '../core/Settings.js';\nimport {getVersionString} from '../core/Version.js';\n\n//Dash\nimport SegmentBaseController from '../dash/controllers/SegmentBaseController.js';\nimport DashAdapter from '../dash/DashAdapter.js';\nimport DashMetrics from '../dash/DashMetrics.js';\nimport TimelineConverter from '../dash/utils/TimelineConverter.js';\nimport {\n    HTTPRequest\n} from './vo/metrics/HTTPRequest.js';\nimport BASE64 from '../../externals/base64.js';\nimport ISOBoxer from 'codem-isoboxer';\nimport DashJSError from './vo/DashJSError.js';\nimport {checkParameterType} from './utils/SupervisorTools.js';\nimport ManifestUpdater from './ManifestUpdater.js';\nimport URLUtils from '../streaming/utils/URLUtils.js';\nimport BoxParser from './utils/BoxParser.js';\nimport TextController from './text/TextController.js';\nimport CustomParametersModel from './models/CustomParametersModel.js';\nimport ThroughputController from './controllers/ThroughputController.js';\nimport ClientDataReportingController from './controllers/ClientDataReportingController.js';\n\n/**\n * The media types\n * @typedef {('video' | 'audio' | 'text' | 'image')} MediaType\n */\n\n/**\n * @module MediaPlayer\n * @description The MediaPlayer is the primary dash.js Module and a Facade to build your player around.\n * It will allow you access to all the important dash.js properties/methods via the public API and all the\n * events to build a robust DASH media player.\n */\nfunction MediaPlayer() {\n    /**\n     * @constant {string} STREAMING_NOT_INITIALIZED_ERROR error string thrown when a function is called before the dash.js has been fully initialized\n     * @inner\n     */\n    const STREAMING_NOT_INITIALIZED_ERROR = 'You must first call initialize() and set a source before calling this method';\n    /**\n     * @constant {string} PLAYBACK_NOT_INITIALIZED_ERROR error string thrown when a function is called before the dash.js has been fully initialized\n     * @inner\n     */\n    const PLAYBACK_NOT_INITIALIZED_ERROR = 'You must first call initialize() and set a valid source and view before calling this method';\n    /**\n     * @constant {string} ELEMENT_NOT_ATTACHED_ERROR error string thrown when a function is called before the dash.js has received a reference of an HTML5 video element\n     * @inner\n     */\n    const ELEMENT_NOT_ATTACHED_ERROR = 'You must first call attachView() to set the video element before calling this method';\n    /**\n     * @constant {string} SOURCE_NOT_ATTACHED_ERROR error string thrown when a function is called before the dash.js has received a valid source stream.\n     * @inner\n     */\n    const SOURCE_NOT_ATTACHED_ERROR = 'You must first call attachSource() with a valid source before calling this method';\n    /**\n     * @constant {string} MEDIA_PLAYER_NOT_INITIALIZED_ERROR error string thrown when a function is called before the dash.js has been fully initialized.\n     * @inner\n     */\n    const MEDIA_PLAYER_NOT_INITIALIZED_ERROR = 'MediaPlayer not initialized!';\n    /**\n     * @constant {string} ARRAY_NOT_SUPPORTED_ERROR error string thrown when settings object was called using an array.\n     * @inner\n     */\n    const ARRAY_NOT_SUPPORTED_ERROR = 'Array type not supported for settings!';\n\n    const context = this.context;\n    const eventBus = EventBus(context).getInstance();\n    let settings = Settings(context).getInstance();\n    const debug = Debug(context).getInstance({ settings: settings });\n\n    let instance,\n        logger,\n        source,\n        protectionData,\n        mediaPlayerInitialized,\n        streamingInitialized,\n        playbackInitialized,\n        autoPlay,\n        providedStartTime,\n        abrController,\n        throughputController,\n        schemeLoaderFactory,\n        timelineConverter,\n        mediaController,\n        protectionController,\n        metricsReportingController,\n        mssHandler,\n        offlineController,\n        adapter,\n        mediaPlayerModel,\n        customParametersModel,\n        errHandler,\n        baseURLController,\n        capabilities,\n        capabilitiesFilter,\n        streamController,\n        textController,\n        gapController,\n        playbackController,\n        serviceDescriptionController,\n        contentSteeringController,\n        catchupController,\n        dashMetrics,\n        manifestModel,\n        cmcdModel,\n        cmsdModel,\n        videoModel,\n        uriFragmentModel,\n        domStorage,\n        segmentBaseController,\n        clientDataReportingController;\n\n    /*\n    ---------------------------------------------------------------------------\n\n        INIT FUNCTIONS\n\n    ---------------------------------------------------------------------------\n    */\n    function setup() {\n        logger = debug.getLogger(instance);\n        mediaPlayerInitialized = false;\n        playbackInitialized = false;\n        streamingInitialized = false;\n        autoPlay = true;\n        providedStartTime = NaN;\n        protectionController = null;\n        offlineController = null;\n        protectionData = null;\n        adapter = null;\n        segmentBaseController = null;\n        Events.extend(MediaPlayerEvents);\n        mediaPlayerModel = MediaPlayerModel(context).getInstance();\n        customParametersModel = CustomParametersModel(context).getInstance();\n        videoModel = VideoModel(context).getInstance();\n        uriFragmentModel = URIFragmentModel(context).getInstance();\n    }\n\n    /**\n     * Configure media player with customs controllers. Helpful for tests\n     *\n     * @param {object=} config controllers configuration\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function setConfig(config) {\n        if (!config) {\n            return;\n        }\n        if (config.capabilities) {\n            capabilities = config.capabilities;\n        }\n        if (config.capabilitiesFilter) {\n            capabilitiesFilter = config.capabilitiesFilter;\n        }\n        if (config.streamController) {\n            streamController = config.streamController;\n        }\n        if (config.textController) {\n            textController = config.textController;\n        }\n        if (config.gapController) {\n            gapController = config.gapController;\n        }\n        if (config.throughputController) {\n            throughputController = config.throughputController\n        }\n        if (config.playbackController) {\n            playbackController = config.playbackController;\n        }\n        if (config.serviceDescriptionController) {\n            serviceDescriptionController = config.serviceDescriptionController\n        }\n        if (config.contentSteeringController) {\n            contentSteeringController = config.contentSteeringController;\n        }\n        if (config.clientDataReportingController) {\n            clientDataReportingController = config.clientDataReportingController;\n        }\n        if (config.catchupController) {\n            catchupController = config.catchupController;\n        }\n        if (config.mediaPlayerModel) {\n            mediaPlayerModel = config.mediaPlayerModel;\n        }\n        if (config.customParametersModel) {\n            customParametersModel = config.customParametersModel;\n        }\n        if (config.abrController) {\n            abrController = config.abrController;\n        }\n        if (config.schemeLoaderFactory) {\n            schemeLoaderFactory = config.schemeLoaderFactory;\n        }\n        if (config.mediaController) {\n            mediaController = config.mediaController;\n        }\n        if (config.settings) {\n            settings = config.settings;\n        }\n\n        if (config.dashMetrics) {\n            dashMetrics = config.dashMetrics;\n        }\n    }\n\n    /**\n     * Upon creating the MediaPlayer you must call initialize before you call anything else.\n     * There is one exception to this rule. It is crucial to call {@link module:MediaPlayer#extend extend()}\n     * with all your extensions prior to calling initialize.\n     *\n     * ALL arguments are optional and there are individual methods to set each argument later on.\n     * The args in this method are just for convenience and should only be used for a simple player setup.\n     *\n     * @param {HTML5MediaElement=} view - Optional arg to set the video element. {@link module:MediaPlayer#attachView attachView()}\n     * @param {string=} source - Optional arg to set the media source. {@link module:MediaPlayer#attachSource attachSource()}\n     * @param {boolean=} autoPlay - Optional arg to set auto play. {@link module:MediaPlayer#setAutoPlay setAutoPlay()}\n     * @param {number|string} startTime - For VoD content the start time is relative to the start time of the first period.\n     * For live content\n     * If the parameter starts from prefix posix: it signifies the absolute time range defined in seconds of Coordinated Universal Time (ITU-R TF.460-6). This is the number of seconds since 01-01-1970 00:00:00 UTC. Fractions of seconds may be optionally specified down to the millisecond level.\n     * If no posix prefix is used the starttime is relative to MPD@availabilityStartTime\n     * @see {@link module:MediaPlayer#attachSource attachSource()}\n     * @see {@link module:MediaPlayer#setAutoPlay setAutoPlay()}\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function initialize(view, source, autoPlay, startTime = NaN) {\n        if (!capabilities) {\n            capabilities = Capabilities(context).getInstance();\n            capabilities.setConfig({\n                settings,\n                protectionController\n            })\n        }\n\n        if (!errHandler) {\n            errHandler = ErrorHandler(context).getInstance();\n        }\n\n        if (!capabilities.supportsMediaSource()) {\n            errHandler.error(new DashJSError(Errors.CAPABILITY_MEDIASOURCE_ERROR_CODE, Errors.CAPABILITY_MEDIASOURCE_ERROR_MESSAGE));\n            return;\n        }\n\n        if (!mediaPlayerInitialized) {\n            mediaPlayerInitialized = true;\n\n            // init some controllers and models\n            timelineConverter = TimelineConverter(context).getInstance();\n            if (!throughputController) {\n                throughputController = ThroughputController(context).getInstance();\n            }\n            if (!abrController) {\n                abrController = AbrController(context).getInstance();\n            }\n\n            if (!schemeLoaderFactory) {\n                schemeLoaderFactory = SchemeLoaderFactory(context).getInstance();\n            }\n\n            if (!playbackController) {\n                playbackController = PlaybackController(context).getInstance();\n            }\n\n            if (!mediaController) {\n                mediaController = MediaController(context).getInstance();\n            }\n\n            if (!streamController) {\n                streamController = StreamController(context).getInstance();\n            }\n\n            if (!gapController) {\n                gapController = GapController(context).getInstance();\n            }\n\n            if (!catchupController) {\n                catchupController = CatchupController(context).getInstance();\n            }\n\n            if (!serviceDescriptionController) {\n                serviceDescriptionController = ServiceDescriptionController(context).getInstance();\n            }\n\n            if (!contentSteeringController) {\n                contentSteeringController = ContentSteeringController(context).getInstance();\n            }\n\n            if (!capabilitiesFilter) {\n                capabilitiesFilter = CapabilitiesFilter(context).getInstance();\n            }\n\n            adapter = DashAdapter(context).getInstance();\n\n            manifestModel = ManifestModel(context).getInstance();\n\n            cmcdModel = CmcdModel(context).getInstance();\n\n            cmsdModel = CmsdModel(context).getInstance();\n\n            clientDataReportingController = ClientDataReportingController(context).getInstance();\n\n            dashMetrics = DashMetrics(context).getInstance({\n                settings: settings\n            });\n\n            domStorage = DOMStorage(context).getInstance({\n                settings: settings\n            });\n\n            adapter.setConfig({\n                constants: Constants,\n                cea608parser: new Cta608Parser(),\n                errHandler: errHandler,\n                BASE64: BASE64\n            });\n\n            if (!baseURLController) {\n                baseURLController = BaseURLController(context).create();\n            }\n\n            baseURLController.setConfig({\n                adapter,\n                contentSteeringController\n            });\n\n            serviceDescriptionController.setConfig({\n                adapter\n            });\n\n            if (!segmentBaseController) {\n                segmentBaseController = SegmentBaseController(context).getInstance({\n                    dashMetrics: dashMetrics,\n                    mediaPlayerModel: mediaPlayerModel,\n                    errHandler: errHandler,\n                    baseURLController: baseURLController,\n                    events: Events,\n                    eventBus: eventBus,\n                    debug: debug,\n                    boxParser: BoxParser(context).getInstance(),\n                    errors: Errors\n                });\n            }\n\n            // configure controllers\n            mediaController.setConfig({\n                domStorage,\n                settings,\n                mediaPlayerModel,\n                customParametersModel,\n                videoModel\n            });\n\n            mediaPlayerModel.setConfig({\n                playbackController,\n                serviceDescriptionController\n            });\n\n            contentSteeringController.setConfig({\n                adapter,\n                errHandler,\n                dashMetrics,\n                mediaPlayerModel,\n                manifestModel,\n                serviceDescriptionController,\n                throughputController,\n                eventBus\n            })\n\n            restoreDefaultUTCTimingSources();\n            setAutoPlay(autoPlay !== undefined ? autoPlay : true);\n\n            // Detect and initialize offline module to support offline contents playback\n            _detectOffline();\n        }\n\n        if (view) {\n            attachView(view);\n        }\n\n        if (source) {\n            attachSource(source, startTime);\n        }\n\n        logger.info('[dash.js ' + getVersion() + '] ' + 'MediaPlayer has been initialized');\n    }\n\n    /**\n     * Sets the MPD source and the video element to null. You can also reset the MediaPlayer by\n     * calling attachSource with a new source file.\n     *\n     * This call does not destroy the MediaPlayer. To destroy the MediaPlayer and free all of its\n     * memory, call destroy().\n     *\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function reset() {\n        attachSource(null);\n        attachView(null);\n        protectionData = null;\n        if (protectionController) {\n            protectionController.reset();\n            protectionController = null;\n        }\n        if (metricsReportingController) {\n            metricsReportingController.reset();\n            metricsReportingController = null;\n        }\n        if (customParametersModel) {\n            customParametersModel.reset();\n        }\n\n        settings.reset();\n\n        if (offlineController) {\n            offlineController.reset();\n            offlineController = null;\n        }\n    }\n\n    /**\n     * Completely destroys the media player and frees all memory.\n     *\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function destroy() {\n        reset();\n        FactoryMaker.deleteSingletonInstances(context);\n    }\n\n    /**\n     * The ready state of the MediaPlayer based on both the video element and MPD source being defined.\n     *\n     * @returns {boolean} The current ready state of the MediaPlayer\n     * @see {@link module:MediaPlayer#attachView attachView()}\n     * @see {@link module:MediaPlayer#attachSource attachSource()}\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function isReady() {\n        return (!!source && !!videoModel.getElement());\n    }\n\n    /**\n     * Use the on method to listen for public events found in MediaPlayer.events. {@link MediaPlayerEvents}\n     *\n     * @param {string} type - {@link MediaPlayerEvents}\n     * @param {Function} listener - callback method when the event fires.\n     * @param {Object} scope - context of the listener so it can be removed properly.\n     * @param {Object} options - object to define various options such as priority and mode\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function on(type, listener, scope, options) {\n        eventBus.on(type, listener, scope, options);\n    }\n\n    /**\n     * Use the off method to remove listeners for public events found in MediaPlayer.events. {@link MediaPlayerEvents}\n     *\n     * @param {string} type - {@link MediaPlayerEvents}\n     * @param {Function} listener - callback method when the event fires.\n     * @param {Object} scope - context of the listener so it can be removed properly.\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function off(type, listener, scope) {\n        eventBus.off(type, listener, scope);\n    }\n\n    /**\n     * Use this method to trigger an event via the eventBus {@link MediaPlayerEvents}\n     *\n     * @param {string} type - {@link MediaPlayerEvents}\n     * @param {object} payload - Payload of the event\n     * @param {Object} filters - Define a \"streamId\" and/or a \"mediaType\" for which this event is valid, e.g. {streamId, mediaType}\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function trigger(type, payload, filters) {\n        eventBus.trigger(type, payload, filters);\n    }\n\n    /**\n     * Current version of Dash.js\n     * @returns {string} the current dash.js version string.\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function getVersion() {\n        return getVersionString();\n    }\n\n    /**\n     * Use this method to access the dash.js logging class.\n     *\n     * @returns {Debug}\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function getDebug() {\n        return debug;\n    }\n\n    /*\n    ---------------------------------------------------------------------------\n\n        PLAYBACK FUNCTIONS\n\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Causes the player to begin streaming the media as set by the {@link module:MediaPlayer#attachSource attachSource()}\n     * method in preparation for playing. It specifically does not require a view to be attached with {@link module:MediaPlayer#attachSource attachView()} to begin preloading.\n     * When a view is attached after preloading, the buffered data is transferred to the attached mediaSource buffers.\n     *\n     * @see {@link module:MediaPlayer#attachSource attachSource()}\n     * @see {@link module:MediaPlayer#attachView attachView()}\n     * @memberof module:MediaPlayer\n     * @throws {@link module:MediaPlayer~SOURCE_NOT_ATTACHED_ERROR SOURCE_NOT_ATTACHED_ERROR} if called before attachSource function\n     * @instance\n     */\n    function preload() {\n        if (videoModel.getElement() || streamingInitialized) {\n            return;\n        }\n        if (source) {\n            _initializePlayback(providedStartTime);\n        } else {\n            throw SOURCE_NOT_ATTACHED_ERROR;\n        }\n    }\n\n    /**\n     * The play method initiates playback of the media defined by the {@link module:MediaPlayer#attachSource attachSource()} method.\n     * This method will call play on the native Video Element.\n     *\n     * @see {@link module:MediaPlayer#attachSource attachSource()}\n     * @throws {@link module:MediaPlayer~PLAYBACK_NOT_INITIALIZED_ERROR PLAYBACK_NOT_INITIALIZED_ERROR} if called before initializePlayback function\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function play() {\n        if (!playbackInitialized) {\n            throw PLAYBACK_NOT_INITIALIZED_ERROR;\n        }\n        if (!autoPlay || (isPaused() && playbackInitialized)) {\n            playbackController.play(true);\n        }\n    }\n\n    /**\n     * This method will call pause on the native Video Element.\n     *\n     * @throws {@link module:MediaPlayer~PLAYBACK_NOT_INITIALIZED_ERROR PLAYBACK_NOT_INITIALIZED_ERROR} if called before initializePlayback function\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function pause() {\n        if (!playbackInitialized) {\n            throw PLAYBACK_NOT_INITIALIZED_ERROR;\n        }\n        playbackController.pause();\n    }\n\n    /**\n     * Returns a Boolean that indicates whether the Video Element is paused.\n     * @return {boolean}\n     * @throws {@link module:MediaPlayer~PLAYBACK_NOT_INITIALIZED_ERROR PLAYBACK_NOT_INITIALIZED_ERROR} if called before initializePlayback function\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function isPaused() {\n        if (!playbackInitialized) {\n            throw PLAYBACK_NOT_INITIALIZED_ERROR;\n        }\n        return playbackController.isPaused();\n    }\n\n    /**\n     * Sets the currentTime property of the attached video element.  If it is a live stream with a\n     * timeShiftBufferLength, then the DVR window offset will be automatically calculated.\n     *\n     * @param {number} value - A relative time, in seconds, based on the return value of the {@link module:MediaPlayer#duration duration()} method is expected.\n     * For dynamic streams duration() returns DVRWindow.end - DVRWindow.start. Consequently, the value provided to this function should be relative to DVRWindow.start.\n     * @see {@link module:MediaPlayer#getDvrSeekOffset getDvrSeekOffset()}\n     * @throws {@link module:MediaPlayer~PLAYBACK_NOT_INITIALIZED_ERROR PLAYBACK_NOT_INITIALIZED_ERROR} if called before initializePlayback function\n     * @throws {@link Constants#BAD_ARGUMENT_ERROR BAD_ARGUMENT_ERROR} if called with an invalid argument, not number type or is NaN.\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function seek(value) {\n        if (!playbackInitialized) {\n            throw PLAYBACK_NOT_INITIALIZED_ERROR;\n        }\n\n        checkParameterType(value, 'number');\n\n        if (isNaN(value)) {\n            throw Constants.BAD_ARGUMENT_ERROR;\n        }\n\n        if (value < 0) {\n            value = 0;\n        }\n\n        let s = playbackController.getIsDynamic() ? getDvrSeekOffset(value) : value;\n\n        // For VoD limit the seek to the duration of the content\n        const videoElement = getVideoElement();\n        if (!playbackController.getIsDynamic() && videoElement.duration) {\n            s = Math.min(videoElement.duration, s);\n        }\n\n        playbackController.seek(s, false, false, true);\n    }\n\n    /**\n     * Sets the currentTime property of the attached video element. Compared to the seek() function this function does not add the DVR window offset. Instead, it takes a presentation time relative to the availability start time.\n     * For VoD this function behaves similar to the seek() function.\n\n     * @param {number} value - A presentation time in seconds\n     * @throws {@link module:MediaPlayer~PLAYBACK_NOT_INITIALIZED_ERROR PLAYBACK_NOT_INITIALIZED_ERROR} if called before initializePlayback function\n     * @throws {@link Constants#BAD_ARGUMENT_ERROR BAD_ARGUMENT_ERROR} if called with an invalid argument, not number type or is NaN.\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function seekToPresentationTime(seektime) {\n        if (!playbackInitialized) {\n            throw PLAYBACK_NOT_INITIALIZED_ERROR;\n        }\n\n        checkParameterType(seektime, 'number');\n\n        if (isNaN(seektime)) {\n            throw Constants.BAD_ARGUMENT_ERROR;\n        }\n\n        if (seektime < 0) {\n            seektime = 0;\n        }\n\n\n        // For VoD limit the seek to the duration of the content\n        const videoElement = getVideoElement();\n        if (!playbackController.getIsDynamic() && videoElement.duration) {\n            seektime = Math.min(videoElement.duration, seektime);\n        }\n\n        // For live, take live delay into account\n        if (playbackController.getIsDynamic()) {\n            const type = streamController && streamController.hasVideoTrack() ? Constants.VIDEO : Constants.AUDIO;\n            let metric = dashMetrics.getCurrentDVRInfo(type);\n            if (!metric) {\n                return;\n            }\n            seektime = _adjustSeekTimeBasedOnLiveDelay(seektime, metric)\n            if (seektime < metric.range.start) {\n                seektime = metric.range.start\n            }\n        }\n\n        playbackController.seek(seektime, false, false, true);\n    }\n\n    /**\n     * Seeks back to the original live edge (live edge as calculated at playback start). Only applies to live streams, for VoD streams this call will be ignored.\n     */\n    function seekToOriginalLive() {\n        if (!playbackInitialized || !isDynamic()) {\n            return;\n        }\n\n        playbackController.seekToOriginalLive();\n    }\n\n    /**\n     * Returns a Boolean that indicates whether the media is in the process of seeking to a new position.\n     * @return {boolean}\n     * @throws {@link module:MediaPlayer~PLAYBACK_NOT_INITIALIZED_ERROR PLAYBACK_NOT_INITIALIZED_ERROR} if called before initializePlayback function\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function isSeeking() {\n        if (!playbackInitialized) {\n            throw PLAYBACK_NOT_INITIALIZED_ERROR;\n        }\n        return playbackController.isSeeking();\n    }\n\n    /**\n     * Returns a Boolean that indicates whether the media is in the process of dynamic.\n     * @return {boolean}\n     * @throws {@link module:MediaPlayer~PLAYBACK_NOT_INITIALIZED_ERROR PLAYBACK_NOT_INITIALIZED_ERROR} if called before initializePlayback function\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function isDynamic() {\n        if (!playbackInitialized) {\n            throw PLAYBACK_NOT_INITIALIZED_ERROR;\n        }\n        return playbackController.getIsDynamic();\n    }\n\n    /**\n     * Returns a boolean that indicates whether the player is operating in low latency mode.\n     * @return {boolean}\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function getLowLatencyModeEnabled() {\n        if (!playbackInitialized) {\n            throw PLAYBACK_NOT_INITIALIZED_ERROR;\n        }\n        return playbackController.getLowLatencyModeEnabled();\n    }\n\n    /**\n     * Use this method to set the native Video Element's playback rate.\n     * @param {number} value\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function setPlaybackRate(value) {\n        getVideoElement().playbackRate = value;\n    }\n\n    /**\n     * Returns the current playback rate.\n     * @returns {number}\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function getPlaybackRate() {\n        return getVideoElement().playbackRate;\n    }\n\n    /**\n     * Use this method to set the native Video Element's muted state. Takes a Boolean that determines whether audio is muted. true if the audio is muted and false otherwise.\n     * @param {boolean} value\n     * @memberof module:MediaPlayer\n     * @throws {@link Constants#BAD_ARGUMENT_ERROR BAD_ARGUMENT_ERROR} if called with an invalid argument, not boolean type.\n     * @instance\n     */\n    function setMute(value) {\n        checkParameterType(value, 'boolean');\n        getVideoElement().muted = value;\n    }\n\n    /**\n     * A Boolean that determines whether audio is muted.\n     * @returns {boolean}\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function isMuted() {\n        return getVideoElement().muted;\n    }\n\n    /**\n     * A double indicating the audio volume, from 0.0 (silent) to 1.0 (loudest).\n     * @param {number} value\n     * @memberof module:MediaPlayer\n     * @throws {@link Constants#BAD_ARGUMENT_ERROR BAD_ARGUMENT_ERROR} if called with an invalid argument, not number type, or is NaN or not between 0 and 1.\n     * @instance\n     */\n    function setVolume(value) {\n        if (typeof value !== 'number' || isNaN(value) || value < 0.0 || value > 1.0) {\n            throw Constants.BAD_ARGUMENT_ERROR;\n        }\n        getVideoElement().volume = value;\n    }\n\n    /**\n     * Returns the current audio volume, from 0.0 (silent) to 1.0 (loudest).\n     * @returns {number}\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function getVolume() {\n        return getVideoElement().volume;\n    }\n\n    /**\n     * The length of the buffer for a given media type, in seconds. Valid media\n     * types are \"video\", \"audio\" and \"text\". If no type is passed\n     * in, then the minimum of video, audio and text buffer length is\n     * returned. NaN is returned if an invalid type is requested, the\n     * presentation does not contain that type, or if no arguments are passed\n     * and the presentation does not include any adaption sets of valid media\n     * type.\n     *\n     * @param {MediaType} type - 'video', 'audio' or 'text'\n     * @returns {number} The length of the buffer for the given media type, in\n     *  seconds, or NaN\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function getBufferLength(type) {\n        const types = [Constants.VIDEO, Constants.AUDIO, Constants.TEXT];\n        if (!type) {\n            const buffer = types.map(\n                t => getTracksFor(t).length > 0 ? getDashMetrics().getCurrentBufferLevel(t) : Number.MAX_VALUE\n            ).reduce(\n                (p, c) => Math.min(p, c)\n            );\n            return buffer === Number.MAX_VALUE ? NaN : buffer;\n        } else {\n            if (types.indexOf(type) !== -1) {\n                const buffer = getDashMetrics().getCurrentBufferLevel(type);\n                return buffer ? buffer : NaN;\n            } else {\n                logger.warn('getBufferLength requested for invalid type');\n                return NaN;\n            }\n        }\n    }\n\n    /**\n     * This method should only be used with a live stream that has a valid timeShiftBufferLength (DVR Window).\n     * NOTE - If you do not need the raw offset value (i.e. media analytics, tracking, etc) consider using the {@link module:MediaPlayer#seek seek()} method\n     * which will calculate this value for you and set the video element's currentTime property all in one simple call.\n     *\n     * @param {number} value - A relative time, in seconds, based on the return value of the {@link module:MediaPlayer#duration duration()} method is expected.\n     * @returns {number} A value that is relative the available range within the timeShiftBufferLength (DVR Window).\n     * @see {@link module:MediaPlayer#seek seek()}\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function getDvrSeekOffset(value) {\n        const type = streamController && streamController.hasVideoTrack() ? Constants.VIDEO : Constants.AUDIO;\n        let metric = dashMetrics.getCurrentDVRInfo(type);\n        if (!metric) {\n            return 0;\n        }\n\n        let val = metric.range.start + value;\n\n        return _adjustSeekTimeBasedOnLiveDelay(val, metric);\n    }\n\n    function _adjustSeekTimeBasedOnLiveDelay(seektime, metric) {\n        let liveDelay = playbackController.getOriginalLiveDelay();\n        if (seektime > (metric.range.end - liveDelay)) {\n            seektime = metric.range.end - liveDelay;\n        }\n\n        return seektime;\n    }\n\n    /**\n     * Returns the target live delay\n     * @returns {number} The target live delay\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function getTargetLiveDelay() {\n        if (!playbackInitialized) {\n            throw PLAYBACK_NOT_INITIALIZED_ERROR;\n        }\n\n        return playbackController.getOriginalLiveDelay();\n    }\n\n    /**\n     * Current playhead time in seconds.\n     *\n     * If called with no arguments then the returned value is the current time of the video element.\n     * However, if a period ID is supplied then time is relative to the start of that period, or is null if there is no such period id in the manifest.\n     *\n     * @param {string} periodId - The ID of a period that the returned playhead time must be relative to the start of. If undefined, then playhead time is relative to the first period or the AST.\n     * @returns {number} The current playhead time of the media, or null.\n     * @throws {@link module:MediaPlayer~PLAYBACK_NOT_INITIALIZED_ERROR PLAYBACK_NOT_INITIALIZED_ERROR} if called before initializePlayback function\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function time(periodId = '') {\n        if (!playbackInitialized) {\n            throw PLAYBACK_NOT_INITIALIZED_ERROR;\n        }\n        let t = getVideoElement().currentTime;\n\n        if (periodId !== '') {\n            t = streamController.getTimeRelativeToStreamId(t, periodId);\n        }\n\n        return t;\n    }\n\n    /**\n     * Returns the current playhead time relative to the start of the DVR window.\n     * For VoD this method returns the same value as time()\n     * @returns {number} The current playhead time of the media relative to the start of the DVR window\n     * @throws {@link module:MediaPlayer~PLAYBACK_NOT_INITIALIZED_ERROR PLAYBACK_NOT_INITIALIZED_ERROR} if called before initializePlayback function\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function timeInDvrWindow() {\n        if (!playbackInitialized) {\n            throw PLAYBACK_NOT_INITIALIZED_ERROR;\n        }\n\n        if (!playbackController.getIsDynamic()) {\n            return time()\n        }\n\n        let t = getVideoElement().currentTime;\n        const type = streamController && streamController.hasVideoTrack() ? Constants.VIDEO : Constants.AUDIO;\n        let metric = dashMetrics.getCurrentDVRInfo(type);\n        t = (metric === null || t === 0) ? 0 : Math.max(0, (t - metric.range.start));\n\n        return t\n    }\n\n    /**\n     * Returns information about the current DVR window including the start time, the end time, the window size.\n     * @returns {{startAsUtc: (*|number), size: number, endAsUtc: (*|number), start, end}|{}}\n     */\n    function getDvrWindow() {\n        if (!playbackInitialized) {\n            throw PLAYBACK_NOT_INITIALIZED_ERROR;\n        }\n\n        const type = streamController && streamController.hasVideoTrack() ? Constants.VIDEO : Constants.AUDIO;\n        let metric = dashMetrics.getCurrentDVRInfo(type);\n\n        if (!metric) {\n            return {}\n        }\n\n        let offset = 0;\n        const isDynamic = playbackController.getIsDynamic();\n        if (isDynamic) {\n            offset = metric.manifestInfo.availableFrom.getTime() / 1000;\n        }\n        return {\n            start: metric.range.start,\n            end: metric.range.end,\n            startAsUtc: isDynamic ? offset + metric.range.start : NaN,\n            endAsUtc: isDynamic ? offset + metric.range.end : NaN,\n            size: metric.range.end - metric.range.start\n        }\n    }\n\n    /**\n     * Total duration of the media in seconds.\n     *\n     * @returns {number} The total duration of the media. For a dynamic stream this will return DVRWindow.end - DVRWindow.start\n     * @memberof module:MediaPlayer\n     * @throws {@link module:MediaPlayer~PLAYBACK_NOT_INITIALIZED_ERROR PLAYBACK_NOT_INITIALIZED_ERROR} if called before initializePlayback function\n     * @instance\n     */\n    function duration() {\n        if (!playbackInitialized) {\n            throw PLAYBACK_NOT_INITIALIZED_ERROR;\n        }\n        let d = getVideoElement().duration;\n\n        if (playbackController.getIsDynamic()) {\n            const type = streamController && streamController.hasVideoTrack() ? Constants.VIDEO : Constants.AUDIO;\n            let metric = dashMetrics.getCurrentDVRInfo(type);\n            d = metric ? (metric.range.end - metric.range.start) : 0;\n        }\n        return d;\n    }\n\n    /**\n     * Use this method to get the current playhead time as an absolute value in seconds since midnight UTC, Jan 1 1970.\n     * Note - this property only has meaning for live streams and is NaN for VoD content. If called before play() has begun, it will return a value of NaN.\n     *\n     * @returns {number} The current playhead time as UTC timestamp.\n     * @throws {@link module:MediaPlayer~PLAYBACK_NOT_INITIALIZED_ERROR PLAYBACK_NOT_INITIALIZED_ERROR} if called before initializePlayback function\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function timeAsUTC() {\n        if (!playbackInitialized) {\n            throw PLAYBACK_NOT_INITIALIZED_ERROR;\n        }\n\n        if (!playbackController.getIsDynamic() || time() < 0) {\n            return NaN\n        }\n\n        const type = streamController && streamController.hasVideoTrack() ? Constants.VIDEO : Constants.AUDIO;\n        let metric = dashMetrics.getCurrentDVRInfo(type);\n        let availabilityStartTime,\n            utcValue;\n\n        if (!metric) {\n            return 0;\n        }\n        availabilityStartTime = metric.manifestInfo.availableFrom.getTime() / 1000;\n        utcValue = availabilityStartTime + time()\n        return utcValue;\n    }\n\n    /*\n    ---------------------------------------------------------------------------\n\n        MEDIA PLAYER CONFIGURATION\n\n    ---------------------------------------------------------------------------\n    */\n    /**\n     * <p>Set to false to prevent stream from auto-playing when the view is attached.</p>\n     *\n     * @param {boolean} value\n     * @default true\n     * @memberof module:MediaPlayer\n     * @see {@link module:MediaPlayer#attachView attachView()}\n     * @throws {@link Constants#BAD_ARGUMENT_ERROR BAD_ARGUMENT_ERROR} if called with an invalid argument, not boolean type.\n     * @instance\n     *\n     */\n    function setAutoPlay(value) {\n        checkParameterType(value, 'boolean');\n        autoPlay = value;\n    }\n\n    /**\n     * @returns {boolean} The current autoPlay state.\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function getAutoPlay() {\n        return autoPlay;\n    }\n\n    /**\n     * @memberof module:MediaPlayer\n     * @instance\n     * @returns {number|NaN} Current live stream latency in seconds. It is the difference between now time and time position at the playback head.\n     * @throws {@link module:MediaPlayer~MEDIA_PLAYER_NOT_INITIALIZED_ERROR MEDIA_PLAYER_NOT_INITIALIZED_ERROR} if called before initialize function\n     */\n    function getCurrentLiveLatency() {\n        if (!mediaPlayerInitialized) {\n            throw MEDIA_PLAYER_NOT_INITIALIZED_ERROR;\n        }\n\n        if (!playbackInitialized) {\n            return NaN;\n        }\n\n        return playbackController.getCurrentLiveLatency();\n    }\n\n    /**\n     * Add a custom ABR Rule\n     * Rule will be apply on next stream if a stream is being played\n     *\n     * @param {string} type - rule type (one of ['qualitySwitchRules','abandonFragmentRules'])\n     * @param {string} rulename - name of rule (used to identify custom rule). If one rule of same name has been added, then existing rule will be updated\n     * @param {object} rule - the rule object instance\n     * @memberof module:MediaPlayer\n     * @throws {@link Constants#BAD_ARGUMENT_ERROR BAD_ARGUMENT_ERROR} if called with invalid arguments.\n     * @instance\n     */\n    function addABRCustomRule(type, rulename, rule) {\n        customParametersModel.addAbrCustomRule(type, rulename, rule);\n    }\n\n    /**\n     * Remove a custom ABR Rule\n     *\n     * @param {string} rulename - name of the rule to be removed\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function removeABRCustomRule(rulename) {\n        customParametersModel.removeAbrCustomRule(rulename);\n    }\n\n    /**\n     * Remove all ABR custom rules\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function removeAllABRCustomRule() {\n        customParametersModel.removeAllAbrCustomRule();\n    }\n\n    /**\n     * Returns all ABR custom rules\n     * @return {Array}\n     */\n    function getABRCustomRules() {\n        return customParametersModel.getAbrCustomRules();\n    }\n\n    /**\n     * <p>Allows you to set a scheme and server source for UTC live edge detection for dynamic streams.\n     * If UTCTiming is defined in the manifest, it will take precedence over any time source manually added.</p>\n     * <p>If you have exposed the Date header, use the method {@link module:MediaPlayer#clearDefaultUTCTimingSources clearDefaultUTCTimingSources()}.\n     * This will allow the date header on the manifest to be used instead of a time server</p>\n     * @param {string} schemeIdUri - <ul>\n     * <li>urn:mpeg:dash:utc:http-head:2014</li>\n     * <li>urn:mpeg:dash:utc:http-xsdate:2014</li>\n     * <li>urn:mpeg:dash:utc:http-iso:2014</li>\n     * <li>urn:mpeg:dash:utc:direct:2014</li>\n     * </ul>\n     * <p>Some specs referencing early ISO23009-1 drafts incorrectly use\n     * 2012 in the URI, rather than 2014. support these for now.</p>\n     * <ul>\n     * <li>urn:mpeg:dash:utc:http-head:2012</li>\n     * <li>urn:mpeg:dash:utc:http-xsdate:2012</li>\n     * <li>urn:mpeg:dash:utc:http-iso:2012</li>\n     * <li>urn:mpeg:dash:utc:direct:2012</li>\n     * </ul>\n     * @param {string} value - Path to a time source.\n     * @default\n     * <ul>\n     *     <li>schemeIdUri:urn:mpeg:dash:utc:http-xsdate:2014</li>\n     *     <li>value:http://time.akamai.com/?iso&ms/li>\n     * </ul>\n     * @memberof module:MediaPlayer\n     * @see {@link module:MediaPlayer#removeUTCTimingSource removeUTCTimingSource()}\n     * @instance\n     */\n    function addUTCTimingSource(schemeIdUri, value) {\n        customParametersModel.addUTCTimingSource(schemeIdUri, value);\n    }\n\n    /**\n     * <p>Allows you to remove a UTC time source. Both schemeIdUri and value need to match the Dash.vo.UTCTiming properties in order for the\n     * entry to be removed from the array</p>\n     * @param {string} schemeIdUri - see {@link module:MediaPlayer#addUTCTimingSource addUTCTimingSource()}\n     * @param {string} value - see {@link module:MediaPlayer#addUTCTimingSource addUTCTimingSource()}\n     * @memberof module:MediaPlayer\n     * @see {@link module:MediaPlayer#clearDefaultUTCTimingSources clearDefaultUTCTimingSources()}\n     * @throws {@link Constants#BAD_ARGUMENT_ERROR BAD_ARGUMENT_ERROR} if called with invalid arguments, schemeIdUri and value are not string type.\n     * @instance\n     */\n    function removeUTCTimingSource(schemeIdUri, value) {\n        customParametersModel.removeUTCTimingSource(schemeIdUri, value);\n    }\n\n    /**\n     * <p>Allows you to clear the stored array of time sources.</p>\n     * <p>Example use: If you have exposed the Date header, calling this method\n     * will allow the date header on the manifest to be used instead of the time server.</p>\n     * <p>Example use: Calling this method, assuming there is not an exposed date header on the manifest,  will default back\n     * to using a binary search to discover the live edge</p>\n     *\n     * @memberof module:MediaPlayer\n     * @see {@link module:MediaPlayer#restoreDefaultUTCTimingSources restoreDefaultUTCTimingSources()}\n     * @instance\n     */\n    function clearDefaultUTCTimingSources() {\n        customParametersModel.clearDefaultUTCTimingSources();\n    }\n\n    /**\n     * <p>Allows you to restore the default time sources after calling {@link module:MediaPlayer#clearDefaultUTCTimingSources clearDefaultUTCTimingSources()}</p>\n     *\n     * @default\n     * <ul>\n     *     <li>schemeIdUri:urn:mpeg:dash:utc:http-xsdate:2014</li>\n     *     <li>value:http://time.akamai.com/?iso&ms</li>\n     * </ul>\n     *\n     * @memberof module:MediaPlayer\n     * @see {@link module:MediaPlayer#addUTCTimingSource addUTCTimingSource()}\n     * @instance\n     */\n    function restoreDefaultUTCTimingSources() {\n        customParametersModel.restoreDefaultUTCTimingSources();\n    }\n\n    /**\n     * Returns the average latency computed in the ThroughputController in milliseconds\n     *\n     * @param {MediaType} type\n     * @param {string} calculationMode\n     * @param {number} sampleSize\n     * @return {number} value\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function getAverageLatency(type = Constants.VIDEO, calculationMode = null, sampleSize = NaN) {\n        return throughputController ? throughputController.getAverageLatency(type, calculationMode, sampleSize) : 0;\n    }\n\n    /**\n     * Returns the average throughput computed in the ThroughputController in kbit/s\n     *\n     * @param {MediaType} type\n     * @param {string} calculationMode\n     * @param {number} sampleSize\n     * @return {number} value\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function getAverageThroughput(type = Constants.VIDEO, calculationMode = null, sampleSize = NaN) {\n        return throughputController ? throughputController.getAverageThroughput(type, calculationMode, sampleSize) : 0;\n    }\n\n    /**\n     * Returns the safe average throughput computed in the ThroughputController in kbit/s. The safe average throughput is the average throughput multiplied by bandwidthSafetyFactor\n     *\n     * @param {MediaType} type\n     * @param {string} calculationMode\n     * @param {number} sampleSize\n     * @return {number} value\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function getSafeAverageThroughput(type = Constants.VIDEO, calculationMode = null, sampleSize = NaN) {\n        return throughputController ? throughputController.getSafeAverageThroughput(type, calculationMode, sampleSize) : 0;\n    }\n\n    /**\n     *  Returns the raw throughput data without calculating the average. This can be used to calculate the current throughput yourself.\n     *\n     * @param {MediaType} type\n     * @return {Array} value\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function getRawThroughputData(type = Constants.VIDEO) {\n        return throughputController ? throughputController.getRawThroughputData(type) : [];\n    }\n\n    /**\n     * Sets whether withCredentials on XHR requests for a particular request\n     * type is true or false\n     *\n     * @default false\n     * @param {string} type - one of HTTPRequest.*_TYPE\n     * @param {boolean} value\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function setXHRWithCredentialsForType(type, value) {\n        customParametersModel.setXHRWithCredentialsForType(type, value);\n    }\n\n    /**\n     * Gets whether withCredentials on XHR requests for a particular request\n     * type is true or false\n     *\n     * @param {string} type - one of HTTPRequest.*_TYPE\n     * @return {boolean}\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function getXHRWithCredentialsForType(type) {\n        return customParametersModel.getXHRWithCredentialsForType(type);\n    }\n\n    /*\n    ---------------------------------------------------------------------------\n\n        OFFLINE\n\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Detects if Offline is included and returns an instance of OfflineController.js\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function getOfflineController() {\n        return _detectOffline();\n    }\n\n    /*\n    ---------------------------------------------------------------------------\n\n        METRICS\n\n    ---------------------------------------------------------------------------\n    */\n    /**\n     * Returns the DashMetrics.js Module. You use this Module to get access to all the public metrics\n     * stored in dash.js\n     *\n     * @see {@link module:DashMetrics}\n     * @returns {Object}\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function getDashMetrics() {\n        return dashMetrics;\n    }\n\n    /*\n    ---------------------------------------------------------------------------\n\n        TEXT MANAGEMENT\n\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Enable/disable text\n     * When enabling text, dash will choose the previous selected text track\n     *\n     * @param {boolean} enable - true to enable text, false otherwise (same as setTextTrack(-1))\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function enableText(enable) {\n        const activeStreamInfo = streamController.getActiveStreamInfo();\n\n        if (!activeStreamInfo || !textController) {\n            return false;\n        }\n\n        return textController.enableText(activeStreamInfo.id, enable);\n    }\n\n    /**\n     * Enable/disable text\n     * When enabling dash will keep downloading and process fragmented text tracks even if all tracks are in mode \"hidden\"\n     *\n     * @param {boolean} enable - true to enable text streaming even if all text tracks are hidden.\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function enableForcedTextStreaming(enable) {\n        const activeStreamInfo = streamController.getActiveStreamInfo();\n\n        if (!activeStreamInfo || !textController) {\n            return false;\n        }\n\n        return textController.enableForcedTextStreaming(enable);\n    }\n\n    /**\n     * Return if text is enabled\n     *\n     * @return {boolean} return true if text is enabled, false otherwise\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function isTextEnabled() {\n        const activeStreamInfo = streamController.getActiveStreamInfo();\n\n        if (!activeStreamInfo || !textController) {\n            return false;\n        }\n\n        return textController.isTextEnabled(activeStreamInfo);\n    }\n\n    /**\n     * Use this method to change the current text track for both external time text files and fragmented text tracks. There is no need to\n     * set the track mode on the video object to switch a track when using this method.\n     * @param {number} idx - Index of track based on the order of the order the tracks are added Use -1 to disable all tracks. (turn captions off).  Use module:MediaPlayer#dashjs.MediaPlayer.events.TEXT_TRACK_ADDED.\n     * @see {@link MediaPlayerEvents#event:TEXT_TRACK_ADDED dashjs.MediaPlayer.events.TEXT_TRACK_ADDED}\n     * @throws {@link module:MediaPlayer~PLAYBACK_NOT_INITIALIZED_ERROR PLAYBACK_NOT_INITIALIZED_ERROR} if called before initializePlayback function\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function setTextTrack(idx) {\n        if (!playbackInitialized) {\n            throw PLAYBACK_NOT_INITIALIZED_ERROR;\n        }\n\n        const activeStreamInfo = streamController.getActiveStreamInfo();\n\n        if (!activeStreamInfo || !textController) {\n            return;\n        }\n\n        textController.setTextTrack(activeStreamInfo.id, idx);\n    }\n\n    function getCurrentTextTrackIndex() {\n        let idx = NaN;\n\n        const activeStreamInfo = streamController.getActiveStreamInfo();\n\n        if (!activeStreamInfo || !textController) {\n            return;\n        }\n\n        idx = textController.getCurrentTrackIdx(activeStreamInfo.id);\n\n        return idx;\n    }\n\n    /*\n    ---------------------------------------------------------------------------\n\n        VIDEO ELEMENT MANAGEMENT\n\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Returns instance of Video Element that was attached by calling attachView()\n     * @returns {Object}\n     * @memberof module:MediaPlayer\n     * @throws {@link module:MediaPlayer~ELEMENT_NOT_ATTACHED_ERROR ELEMENT_NOT_ATTACHED_ERROR} if called before attachView function\n     * @instance\n     */\n    function getVideoElement() {\n        if (!videoModel.getElement()) {\n            throw ELEMENT_NOT_ATTACHED_ERROR;\n        }\n        return videoModel.getElement();\n    }\n\n    /**\n     * Use this method to attach an HTML5 VideoElement for dash.js to operate upon.\n     *\n     * @param {Object} element - An HTMLMediaElement that has already been defined in the DOM (or equivalent stub).\n     * @memberof module:MediaPlayer\n     * @throws {@link module:MediaPlayer~MEDIA_PLAYER_NOT_INITIALIZED_ERROR MEDIA_PLAYER_NOT_INITIALIZED_ERROR} if called before initialize function\n     * @instance\n     */\n    function attachView(element) {\n        if (!mediaPlayerInitialized) {\n            throw MEDIA_PLAYER_NOT_INITIALIZED_ERROR;\n        }\n\n        videoModel.setElement(element);\n\n        if (element) {\n            _detectProtection();\n            _detectMetricsReporting();\n            _detectMss();\n\n            if (streamController) {\n                streamController.switchToVideoElement(providedStartTime);\n            }\n        }\n\n        if (playbackInitialized) { //Reset if we have been playing before, so this is a new element.\n            _resetPlaybackControllers();\n        }\n\n        _initializePlayback(providedStartTime);\n    }\n\n    /**\n     * Returns instance of Div that was attached by calling attachTTMLRenderingDiv()\n     * @returns {Object}\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function getTTMLRenderingDiv() {\n        return videoModel ? videoModel.getTTMLRenderingDiv() : null;\n    }\n\n    /**\n     * Use this method to attach an HTML5 div for dash.js to render rich TTML subtitles.\n     *\n     * @param {HTMLDivElement} div - An unstyled div placed after the video element. It will be styled to match the video size and overlay z-order.\n     * @memberof module:MediaPlayer\n     * @throws {@link module:MediaPlayer~ELEMENT_NOT_ATTACHED_ERROR ELEMENT_NOT_ATTACHED_ERROR} if called before attachView function\n     * @instance\n     */\n    function attachTTMLRenderingDiv(div) {\n        if (!videoModel.getElement()) {\n            throw ELEMENT_NOT_ATTACHED_ERROR;\n        }\n        videoModel.setTTMLRenderingDiv(div);\n    }\n\n    function attachVttRenderingDiv(div) {\n        if (!videoModel.getElement()) {\n            throw ELEMENT_NOT_ATTACHED_ERROR;\n        }\n        videoModel.setVttRenderingDiv(div);\n    }\n\n    /*\n    ---------------------------------------------------------------------------\n\n        QUALITY AND TRACK MANAGEMENT\n\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Gets the current download quality for media type video, audio or images. For video and audio types the ABR\n     * rules update this value before every new download unless autoSwitchBitrate is set to false. For 'image'\n     * type, thumbnails, there is no ABR algorithm and quality is set manually.\n     *\n     * @param {MediaType} type - 'video', 'audio' or 'image' (thumbnails)\n     * @returns {Representation | null} the quality index, 0 corresponding to the lowest bitrate\n     * @memberof module:MediaPlayer\n     * @see {@link module:MediaPlayer#getCurrentRepresentationForType getCurrentRepresentationForType()}\n     * @throws {@link module:MediaPlayer~STREAMING_NOT_INITIALIZED_ERROR STREAMING_NOT_INITIALIZED_ERROR} if called before initializePlayback function\n     * @instance\n     */\n    function getCurrentRepresentationForType(type) {\n        if (!streamingInitialized) {\n            throw STREAMING_NOT_INITIALIZED_ERROR;\n        }\n\n        if (type !== Constants.IMAGE && type !== Constants.VIDEO && type !== Constants.AUDIO) {\n            return null;\n        }\n\n        const activeStream = getActiveStream();\n        if (!activeStream) {\n            return null;\n        }\n\n        if (type === Constants.IMAGE) {\n            const thumbnailController = activeStream.getThumbnailController();\n            return !thumbnailController ? -1 : thumbnailController.getCurrentTrack();\n        }\n\n        return activeStream.getCurrentRepresentationForType(type);\n    }\n\n    /**\n     * Sets the current quality for media type instead of letting the ABR Heuristics automatically select it.\n     * This value will be overwritten by the ABR rules unless autoSwitchBitrate is set to false.\n     *\n     * @param {MediaType} type - 'video', 'audio' or 'image'\n     * @param {number} id , The ID of the Representation\n     * @param {boolean} forceReplace - true if segments have to be replaced by segments of the new quality\n     * @memberof module:MediaPlayer\n     * @throws {@link module:MediaPlayer~STREAMING_NOT_INITIALIZED_ERROR STREAMING_NOT_INITIALIZED_ERROR} if called before initializePlayback function\n     * @instance\n     */\n    function setRepresentationForTypeById(type, id, forceReplace = false) {\n        if (type !== Constants.IMAGE && type !== Constants.VIDEO && type !== Constants.AUDIO) {\n            return;\n        }\n        if (!streamingInitialized) {\n            throw STREAMING_NOT_INITIALIZED_ERROR;\n        }\n        const activeStream = getActiveStream();\n        if (!activeStream) {\n            return;\n        }\n        if (type === Constants.IMAGE) {\n            const thumbnailController = activeStream.getThumbnailController();\n            if (thumbnailController) {\n                thumbnailController.setTrackById(id);\n            }\n        } else {\n            const representation = activeStream.getRepresentationForTypeById(type, id);\n            if (representation) {\n                abrController.setPlaybackQuality(type, streamController.getActiveStreamInfo(), representation, { forceReplace });\n            }\n        }\n    }\n\n    /**\n     * Sets the current quality for media type instead of letting the ABR Heuristics automatically select it.\n     * This value will be overwritten by the ABR rules unless autoSwitchBitrate is set to false.\n     * Note that you need to specify a relative index based on the position of the target entry in the return value of getRepresentationsByType().\n     * Do NOT use representation.absoluteIndex here as this index was assigned prior to applying any filter function. If you want to select a specific representation then use setRepresentationForTypeById() instead.\n     *\n     * @param {MediaType} type - 'video', 'audio' or 'image'\n     * @param {number} index - the quality index, 0 corresponding to the lowest possible index\n     * @param {boolean} forceReplace - true if segments have to be replaced by segments of the new quality\n     * @memberof module:MediaPlayer\n     * @throws {@link module:MediaPlayer~STREAMING_NOT_INITIALIZED_ERROR STREAMING_NOT_INITIALIZED_ERROR} if called before initializePlayback function\n     * @instance\n     */\n    function setRepresentationForTypeByIndex(type, index, forceReplace = false) {\n        if (type !== Constants.IMAGE && type !== Constants.VIDEO && type !== Constants.AUDIO) {\n            return;\n        }\n        if (!streamingInitialized) {\n            throw STREAMING_NOT_INITIALIZED_ERROR;\n        }\n        const activeStream = getActiveStream();\n        if (!activeStream) {\n            return;\n        }\n        if (type === Constants.IMAGE) {\n            const thumbnailController = activeStream.getThumbnailController();\n            if (thumbnailController) {\n                thumbnailController.setTrackByIndex(index);\n            }\n        } else {\n            const representation = activeStream.getRepresentationForTypeByIndex(type, index);\n            if (representation) {\n                abrController.setPlaybackQuality(type, streamController.getActiveStreamInfo(), representation, { forceReplace });\n            }\n        }\n    }\n\n    /**\n     * @param {MediaType} type\n     * @param {string} streamId\n     * @returns {Array}\n     * @memberof module:MediaPlayer\n     * @throws {@link module:MediaPlayer~STREAMING_NOT_INITIALIZED_ERROR STREAMING_NOT_INITIALIZED_ERROR} if called before initializePlayback function\n     * @instance\n     */\n    function getRepresentationsByType(type, streamId = null) {\n        if (!streamingInitialized) {\n            throw STREAMING_NOT_INITIALIZED_ERROR;\n        }\n        let stream = streamId ? streamController.getStreamById(streamId) : getActiveStream();\n        return stream ? stream.getRepresentationsByType(type) : [];\n    }\n\n    /**\n     * This method returns the list of all available streams from a given manifest\n     * @param {Object} manifest\n     * @returns {Array} list of {@link StreamInfo}\n     * @memberof module:MediaPlayer\n     * @throws {@link module:MediaPlayer~STREAMING_NOT_INITIALIZED_ERROR STREAMING_NOT_INITIALIZED_ERROR} if called before initializePlayback function\n     * @instance\n     */\n    function getStreamsFromManifest(manifest) {\n        if (!streamingInitialized) {\n            throw STREAMING_NOT_INITIALIZED_ERROR;\n        }\n        return adapter.getStreamsInfo(manifest);\n    }\n\n    /**\n     * This method returns the list of all available tracks for a given media type\n     * @param {MediaType} type\n     * @returns {Array} list of {@link MediaInfo}\n     * @memberof module:MediaPlayer\n     * @throws {@link module:MediaPlayer~STREAMING_NOT_INITIALIZED_ERROR STREAMING_NOT_INITIALIZED_ERROR} if called before initializePlayback function\n     * @instance\n     */\n    function getTracksFor(type) {\n        if (!streamingInitialized) {\n            throw STREAMING_NOT_INITIALIZED_ERROR;\n        }\n        let streamInfo = streamController.getActiveStreamInfo();\n\n        if (!streamInfo) {\n            return [];\n        }\n\n        const tracks = mediaController.getTracksFor(type, streamInfo.id);\n        return tracks.filter((track) => {\n            return protectionController ? protectionController.areKeyIdsUsable(track.normalizedKeyIds) : true\n        })\n    }\n\n    /**\n     * This method returns the list of all available tracks for a given media type and streamInfo from a given manifest\n     * @param {MediaType} type\n     * @param {Object} manifest\n     * @param {Object} streamInfo\n     * @returns {Array}  list of {@link MediaInfo}\n     * @memberof module:MediaPlayer\n     * @throws {@link module:MediaPlayer~STREAMING_NOT_INITIALIZED_ERROR STREAMING_NOT_INITIALIZED_ERROR} if called before initializePlayback function\n     * @instance\n     */\n    function getTracksForTypeFromManifest(type, manifest, streamInfo) {\n        if (!streamingInitialized) {\n            throw STREAMING_NOT_INITIALIZED_ERROR;\n        }\n\n        streamInfo = streamInfo || adapter.getStreamsInfo(manifest, 1)[0];\n\n        return streamInfo ? adapter.getAllMediaInfoForType(streamInfo, type, manifest) : [];\n    }\n\n    /**\n     * @param {MediaType} type\n     * @returns {Object|null} {@link MediaInfo}\n     *\n     * @memberof module:MediaPlayer\n     * @throws {@link module:MediaPlayer~STREAMING_NOT_INITIALIZED_ERROR STREAMING_NOT_INITIALIZED_ERROR} if called before initializePlayback function\n     * @instance\n     */\n    function getCurrentTrackFor(type) {\n        if (!streamingInitialized) {\n            throw STREAMING_NOT_INITIALIZED_ERROR;\n        }\n        let streamInfo = streamController.getActiveStreamInfo();\n        if (streamInfo) {\n            return mediaController.getCurrentTrackFor(type, streamInfo.id);\n        }\n\n        return null\n    }\n\n    /**\n     * This method allows to set media settings that will be used to pick the initial track. Format of the settings\n     * is following: <br />\n     * {lang: langValue (can be either a string primitive, a string object, or a RegExp object to match),\n     *  index: indexValue,\n     *  viewpoint: viewpointValue (object:{schemeIdUri,value} or value-primitive),\n     *  audioChannelConfiguration: audioChannelConfigurationValue (object:{schemeIdUri,value} or value-primitive (assumes schemeIdUri='urn:mpeg:mpegB:cicp:ChannelConfiguration')),\n     *  accessibility: accessibilityValue (object:{schemeIdUri,value} or value-primitive (assumes schemeIdUri='urn:mpeg:dash:role:2011')),\n     *  role: roleValue (object:{schemeIdUri,value} or value-primitive (assumes schemeIdUri='urn:mpeg:dash:role:2011'))\n     * }\n     *\n     * @param {MediaType} type\n     * @param {Object} value\n     * @memberof module:MediaPlayer\n     * @throws {@link module:MediaPlayer~MEDIA_PLAYER_NOT_INITIALIZED_ERROR MEDIA_PLAYER_NOT_INITIALIZED_ERROR} if called before initialize function\n     * @instance\n     */\n    function setInitialMediaSettingsFor(type, value) {\n        if (!mediaPlayerInitialized) {\n            throw MEDIA_PLAYER_NOT_INITIALIZED_ERROR;\n        }\n        let sanitizedValue = _sanitizeSettings(value);\n        mediaController.setInitialSettings(type, sanitizedValue);\n    }\n\n    /**\n     * This method returns media settings that is used to pick the initial track. Format of the settings\n     * is following:\n     * {lang: langValue,\n     *  index: indexValue,\n     *  viewpoint: viewpointValue,\n     *  audioChannelConfiguration: audioChannelConfigurationValue,\n     *  accessibility: accessibilityValue,\n     *  role: roleValue}\n     * @param {MediaType} type\n     * @returns {Object}\n     * @memberof module:MediaPlayer\n     * @throws {@link module:MediaPlayer~MEDIA_PLAYER_NOT_INITIALIZED_ERROR MEDIA_PLAYER_NOT_INITIALIZED_ERROR} if called before initialize function\n     * @instance\n     */\n    function getInitialMediaSettingsFor(type) {\n        if (!mediaPlayerInitialized) {\n            throw MEDIA_PLAYER_NOT_INITIALIZED_ERROR;\n        }\n        return mediaController.getInitialSettings(type);\n    }\n\n    /**\n     * @param {MediaInfo} track - instance of {@link MediaInfo}\n     * @param {boolean} [noSettingsSave] - specify if settings from the track must not be saved for incoming track selection\n     * @memberof module:MediaPlayer\n     * @throws {@link module:MediaPlayer~STREAMING_NOT_INITIALIZED_ERROR STREAMING_NOT_INITIALIZED_ERROR} if called before initializePlayback function\n     * @instance\n     */\n    function setCurrentTrack(track, noSettingsSave = false) {\n        if (!streamingInitialized) {\n            throw STREAMING_NOT_INITIALIZED_ERROR;\n        }\n\n        const canUseTrack = protectionController ? protectionController.areKeyIdsUsable(track.normalizedKeyIds) : true\n\n        if (!canUseTrack) {\n            logger.error(`Can not switch to track with index ${track.index} because key is not usable`);\n            return\n        }\n\n        mediaController.setTrack(track, { noSettingsSave });\n    }\n\n    /*\n    ---------------------------------------------------------------------------\n\n        Custom filter and callback functions\n\n    ---------------------------------------------------------------------------\n    */\n    /**\n     * Registers a custom capabilities filter. This enables application to filter representations to use.\n     * The provided callback function shall return either a boolean or a promise resolving to a boolean based on whether or not to use the representation.\n     * The filters are applied in the order they are registered.\n     * @param {function} filter - the custom capabilities filter callback\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function registerCustomCapabilitiesFilter(filter) {\n        customParametersModel.registerCustomCapabilitiesFilter(filter);\n    }\n\n    /**\n     * Unregisters a custom capabilities filter.\n     * @param {function} filter - the custom capabilities filter callback\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function unregisterCustomCapabilitiesFilter(filter) {\n        customParametersModel.unregisterCustomCapabilitiesFilter(filter);\n    }\n\n    /**\n     * Registers a custom initial track selection function. Only one function is allowed. Calling this method will overwrite a potentially existing function.\n     * @param {function} customFunc - the custom function that returns the initial track\n     */\n    function setCustomInitialTrackSelectionFunction(customFunc) {\n        customParametersModel.setCustomInitialTrackSelectionFunction(customFunc);\n    }\n\n    /**\n     * Resets the custom initial track selection\n     */\n    function resetCustomInitialTrackSelectionFunction() {\n        customParametersModel.resetCustomInitialTrackSelectionFunction(null);\n\n    }\n\n    /**\n     * Adds a request interceptor. This enables application to monitor, manipulate, overwrite any request parameter and/or request data.\n     * The provided callback function shall return a promise with updated request that shall be resolved once the process of the request is completed.\n     * The interceptors are applied in the order they are added.\n     * @param {function} interceptor - the request interceptor callback\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function addRequestInterceptor(interceptor) {\n        customParametersModel.addRequestInterceptor(interceptor);\n    }\n\n    /**\n     * Removes a request interceptor.\n     * @param {function} interceptor - the request interceptor callback\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function removeRequestInterceptor(interceptor) {\n        customParametersModel.removeRequestInterceptor(interceptor);\n    }\n\n    /**\n     * Adds a response interceptor. This enables application to monitor, manipulate, overwrite the response data\n     * The provided callback function shall return a promise with updated response that shall be resolved once the process of the response is completed.\n     * The interceptors are applied in the order they are added.\n     * @param {function} interceptor - the response interceptor\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function addResponseInterceptor(interceptor) {\n        customParametersModel.addResponseInterceptor(interceptor);\n    }\n\n    /**\n     * Removes a response interceptor.\n     * @param {function} interceptor - the request interceptor\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function removeResponseInterceptor(interceptor) {\n        customParametersModel.removeResponseInterceptor(interceptor);\n    }\n\n    /**\n     * Registers a license request filter. This enables application to manipulate/overwrite any request parameter and/or request data.\n     * The provided callback function shall return a promise that shall be resolved once the filter process is completed.\n     * The filters are applied in the order they are registered.\n     * @param {function} filter - the license request filter callback\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function registerLicenseRequestFilter(filter) {\n        customParametersModel.registerLicenseRequestFilter(filter);\n    }\n\n    /**\n     * Registers a license response filter. This enables application to manipulate/overwrite the response data\n     * The provided callback function shall return a promise that shall be resolved once the filter process is completed.\n     * The filters are applied in the order they are registered.\n     * @param {function} filter - the license response filter callback\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function registerLicenseResponseFilter(filter) {\n        customParametersModel.registerLicenseResponseFilter(filter);\n    }\n\n    /**\n     * Unregisters a license request filter.\n     * @param {function} filter - the license request filter callback\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function unregisterLicenseRequestFilter(filter) {\n        customParametersModel.unregisterLicenseRequestFilter(filter);\n    }\n\n    /**\n     * Unregisters a license response filter.\n     * @param {function} filter - the license response filter callback\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function unregisterLicenseResponseFilter(filter) {\n        customParametersModel.unregisterLicenseResponseFilter(filter);\n    }\n\n    /*\n    ---------------------------------------------------------------------------\n\n        PROTECTION MANAGEMENT\n\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Detects if Protection is included and returns an instance of ProtectionController.js\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function getProtectionController() {\n        return _detectProtection();\n    }\n\n    /**\n     * Will override dash.js protection controller.\n     * @param {ProtectionController} value - valid protection controller instance.\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function attachProtectionController(value) {\n        protectionController = value;\n    }\n\n    /**\n     * Sets Protection Data required to setup the Protection Module (DRM). Protection Data must\n     * be set before initializing MediaPlayer or, once initialized, before PROTECTION_CREATED event is fired.\n     * @see {@link module:MediaPlayer#initialize initialize()}\n     * @see {@link ProtectionEvents#event:PROTECTION_CREATED dashjs.Protection.events.PROTECTION_CREATED}\n     * @param {ProtectionDataSet} value - object containing\n     * property names corresponding to key system name strings and associated\n     * values being instances of.\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function setProtectionData(value) {\n        protectionData = value;\n\n        // Propagate changes in case StreamController is already created\n        if (streamController) {\n            streamController.setProtectionData(protectionData);\n        }\n    }\n\n    /*\n    ---------------------------------------------------------------------------\n\n        THUMBNAILS MANAGEMENT\n\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Provide the thumbnail at time position. This can be asynchronous, so you must provide a callback ro retrieve thumbnails informations\n     * @param {number} time - A relative time, in seconds, based on the return value of the {@link module:MediaPlayer#duration duration()} method is expected\n     * @param {function} callback - A Callback function provided when retrieving thumbnail the given time position. Thumbnail object is null in case there are is not a thumbnails representation or\n     * if it doesn't contain a thumbnail for the given time position.\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function provideThumbnail(time, callback) {\n        if (typeof callback !== 'function') {\n            return;\n        }\n        if (time < 0) {\n            callback(null);\n            return;\n        }\n        const s = playbackController.getIsDynamic() ? getDvrSeekOffset(time) : time;\n        const stream = streamController.getStreamForTime(s);\n        if (stream === null) {\n            callback(null);\n            return;\n        }\n\n        const thumbnailController = stream.getThumbnailController();\n        if (!thumbnailController) {\n            callback(null);\n            return;\n        }\n\n        return thumbnailController.provide(s, callback);\n    }\n\n    /*\n    ---------------------------------------------------------------------------\n\n        TOOLS AND OTHERS FUNCTIONS\n\n    ---------------------------------------------------------------------------\n    */\n    /**\n     * Allows application to retrieve a manifest.  Manifest loading is asynchronous and requires the app-provided callback function\n     *\n     * @param {string} url - url the manifest url\n     * @param {function} callback - A Callback function provided when retrieving manifests\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function retrieveManifest(url, callback) {\n        let manifestLoader = _createManifestLoader();\n        let self = this;\n\n        const handler = function (e) {\n            if (!e.error) {\n                callback(e.manifest);\n            } else {\n                callback(null, e.error);\n            }\n            eventBus.off(Events.INTERNAL_MANIFEST_LOADED, handler, self);\n            manifestLoader.reset();\n        };\n\n        eventBus.on(Events.INTERNAL_MANIFEST_LOADED, handler, self);\n\n        uriFragmentModel.initialize(url);\n        manifestLoader.load(url);\n    }\n\n    /**\n     * Returns the source string or manifest that was attached by calling attachSource()\n     * @returns {string | manifest}\n     * @memberof module:MediaPlayer\n     * @throws {@link module:MediaPlayer~SOURCE_NOT_ATTACHED_ERROR SOURCE_NOT_ATTACHED_ERROR} if called before attachSource function\n     * @instance\n     */\n    function getSource() {\n        if (!source) {\n            throw SOURCE_NOT_ATTACHED_ERROR;\n        }\n        return source;\n    }\n\n    /**\n     * Sets the source to a new manifest URL or object without reloading\n     * Useful for updating CDN tokens\n     * @param {string | object} urlOrManifest\n     */\n    function updateSource(urlOrManifest) {\n        source = urlOrManifest\n        streamController.load(source);\n    }\n\n    /**\n     * Use this method to set a source URL to a valid MPD manifest file OR\n     * a previously downloaded and parsed manifest object.  Optionally, can\n     * also provide protection information\n     *\n     * @param {string|Object} urlOrManifest - A URL to a valid MPD manifest file, or a\n     * parsed manifest object.\n     * @param {number|string} startTime - For VoD content the start time is relative to the start time of the first period.\n     * For live content\n     * If the parameter starts from prefix posix: it signifies the absolute time range defined in seconds of Coordinated Universal Time (ITU-R TF.460-6). This is the number of seconds since 01-01-1970 00:00:00 UTC. Fractions of seconds may be optionally specified down to the millisecond level.\n     * If no posix prefix is used the starttime is relative to MPD@availabilityStartTime\n     *\n     * @throws {@link module:MediaPlayer~MEDIA_PLAYER_NOT_INITIALIZED_ERROR MEDIA_PLAYER_NOT_INITIALIZED_ERROR} if called before initialize function\n     *\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function attachSource(urlOrManifest, startTime = NaN) {\n        if (!mediaPlayerInitialized) {\n            throw MEDIA_PLAYER_NOT_INITIALIZED_ERROR;\n        }\n\n        if (typeof urlOrManifest === 'string') {\n            uriFragmentModel.initialize(urlOrManifest);\n        }\n\n        if (startTime == null) {\n            startTime = NaN;\n        }\n\n        if (!isNaN(startTime)) {\n            startTime = Math.max(0, startTime);\n        }\n\n        providedStartTime = startTime;\n        source = urlOrManifest;\n\n        if (streamingInitialized || playbackInitialized) {\n            _resetPlaybackControllers();\n        }\n\n        if (isReady()) {\n            _initializePlayback(providedStartTime);\n        }\n    }\n\n    /**\n     *  Reload the manifest that the player is currently using.\n     *\n     *  @memberof module:MediaPlayer\n     *  @param {function} callback - A Callback function provided when retrieving manifests\n     *  @instance\n     */\n    function refreshManifest(callback) {\n        if (!mediaPlayerInitialized) {\n            throw MEDIA_PLAYER_NOT_INITIALIZED_ERROR;\n        }\n\n        if (!isReady()) {\n            return callback(null, SOURCE_NOT_ATTACHED_ERROR);\n        }\n\n        let self = this;\n\n        if (typeof callback === 'function') {\n            const handler = function (e) {\n                eventBus.off(Events.INTERNAL_MANIFEST_LOADED, handler, self);\n\n                if (e.error) {\n                    callback(null, e.error);\n                    return;\n                }\n\n                callback(e.manifest);\n            };\n\n            eventBus.on(Events.INTERNAL_MANIFEST_LOADED, handler, self);\n        }\n\n        streamController.refreshManifest();\n    }\n\n    /**\n     * Get the current settings object being used on the player.\n     * @returns {PlayerSettings} The settings object being used.\n     *\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function getSettings() {\n        return settings.get();\n    }\n\n    /**\n     * @summary Update the current settings object being used on the player. Anything left unspecified is not modified.\n     * @param {PlayerSettings} settingsObj - An object corresponding to the settings definition.\n     * @description This function does not update the entire object, only properties in the passed in object are updated.\n     *\n     * This means that updateSettings({a: x}) and updateSettings({b: y}) are functionally equivalent to\n     * updateSettings({a: x, b: y}). If the default values are required again, @see{@link resetSettings}.\n     * @example\n     * player.updateSettings({\n     *      streaming: {\n     *          lowLatencyEnabled: false,\n     *          abr: {\n     *              maxBitrate: { audio: 100, video: 1000 }\n     *          }\n     *      }\n     *  });\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function updateSettings(settingsObj) {\n        settings.update(settingsObj);\n    }\n\n    /**\n     * Resets the settings object back to the default.\n     *\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function resetSettings() {\n        settings.reset();\n    }\n\n    /**\n     * A utility methods which converts UTC timestamp value into a valid time and date string.\n     *\n     * @param {number} time - UTC timestamp to be converted into date and time.\n     * @param {string} locales - a region identifier (i.e. en_US).\n     * @param {boolean} hour12 - 12 vs 24 hour. Set to true for 12 hour time formatting.\n     * @param {boolean} withDate - default is false. Set to true to append current date to UTC time format.\n     * @returns {string} A formatted time and date string.\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function formatUTC(time, locales, hour12, withDate = false) {\n        const dt = new Date(time * 1000);\n        const d = dt.toLocaleDateString(locales);\n        const t = dt.toLocaleTimeString(locales, {\n            hour12: hour12\n        });\n        return withDate ? t + ' ' + d : t;\n    }\n\n    /**\n     * A utility method which converts seconds into TimeCode (i.e. 300 --> 05:00).\n     *\n     * @param {number} value - A number in seconds to be converted into a formatted time code.\n     * @returns {string} A formatted time code string.\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function convertToTimeCode(value) {\n        value = Math.max(value, 0);\n\n        let h = Math.floor(value / 3600);\n        let m = Math.floor((value % 3600) / 60);\n        let s = Math.floor((value % 3600) % 60);\n        return (h === 0 ? '' : (h < 10 ? '0' + h.toString() + ':' : h.toString() + ':')) + (m < 10 ? '0' + m.toString() : m.toString()) + ':' + (s < 10 ? '0' + s.toString() : s.toString());\n    }\n\n    /**\n     * This method should be used to extend or replace internal dash.js objects.\n     * There are two ways to extend dash.js (determined by the override argument):\n     * <ol>\n     * <li>If you set override to true any public method or property in your custom object will\n     * override the dash.js parent object's property(ies) and will be used instead but the\n     * dash.js parent module will still be created.</li>\n     *\n     * <li>If you set override to false your object will completely replace the dash.js object.\n     * (Note: This is how it was in 1.x of Dash.js with Dijon).</li>\n     * </ol>\n     * <b>When you extend you get access to this.context, this.factory and this.parent to operate with in your custom object.</b>\n     * <ul>\n     * <li><b>this.context</b> - can be used to pass context for singleton access.</li>\n     * <li><b>this.factory</b> - can be used to call factory.getSingletonInstance().</li>\n     * <li><b>this.parent</b> - is the reference of the parent object to call other public methods. (this.parent is excluded if you extend with override set to false or option 2)</li>\n     * </ul>\n     * <b>You must call extend before you call initialize</b>\n     * @see {@link module:MediaPlayer#initialize initialize()}\n     * @param {string} parentNameString - name of parent module\n     * @param {Object} childInstance - overriding object\n     * @param {boolean} override - replace only some methods (true) or the whole object (false)\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function extend(parentNameString, childInstance, override) {\n        FactoryMaker.extend(parentNameString, childInstance, override, context);\n    }\n\n    /**\n     * This method returns the active stream\n     *\n     * @throws {@link module:MediaPlayer~STREAMING_NOT_INITIALIZED_ERROR STREAMING_NOT_INITIALIZED_ERROR} if called before initializePlayback function\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function getActiveStream() {\n        if (!streamingInitialized) {\n            throw STREAMING_NOT_INITIALIZED_ERROR;\n        }\n        let streamInfo = streamController.getActiveStreamInfo();\n        return streamInfo ? streamController.getStreamById(streamInfo.id) : null;\n    }\n\n    /**\n     * Returns the DashAdapter.js Module.\n     *\n     * @see {@link module:DashAdapter}\n     * @returns {Object}\n     * @memberof module:MediaPlayer\n     * @instance\n     */\n    function getDashAdapter() {\n        return adapter;\n    }\n\n    /**\n     * Triggers a request to the content steering server to update the steering information.\n     * @return {Promise<any>}\n     */\n    function triggerSteeringRequest() {\n        if (contentSteeringController) {\n            return contentSteeringController.loadSteeringData();\n        }\n    }\n\n    /**\n     * Returns the current response data of the content steering server\n     * @return {object}\n     */\n    function getCurrentSteeringResponseData() {\n        if (contentSteeringController) {\n            return contentSteeringController.getCurrentSteeringResponseData();\n        }\n    }\n\n    /**\n     * Returns the current manifest\n     * @returns {object}\n     */\n    function getManifest() {\n        return manifestModel.getValue();\n    }\n\n    /**\n     * Returns all BaseURLs that are available including synthesized elements (e.g by content steering)\n     * @returns {BaseURL[]}\n     */\n    function getAvailableBaseUrls() {\n        const manifest = manifestModel.getValue();\n\n        if (!manifest) {\n            return [];\n        }\n\n        return baseURLController.getBaseUrls(manifest);\n    }\n\n\n    /**\n     * Returns the available location elements including synthesized elements (e.g by content steering)\n     * @returns {MpdLocation[]}\n     */\n    function getAvailableLocations() {\n        const manifest = manifestModel.getValue();\n\n        if (!manifest) {\n            return [];\n        }\n\n        const manifestLocations = adapter.getLocation(manifest);\n        const synthesizedElements = contentSteeringController.getSynthesizedLocationElements(manifestLocations);\n\n        return manifestLocations.concat(synthesizedElements);\n    }\n\n    //***********************************\n    // PRIVATE METHODS\n    //***********************************\n\n    function _resetPlaybackControllers() {\n        playbackInitialized = false;\n        streamingInitialized = false;\n        adapter.reset();\n        streamController.reset();\n        gapController.reset();\n        catchupController.reset();\n        playbackController.reset();\n        serviceDescriptionController.reset();\n        contentSteeringController.reset();\n        abrController.reset();\n        throughputController.reset();\n        mediaController.reset();\n        segmentBaseController.reset();\n        if (protectionController) {\n            if (settings.get().streaming.protection.keepProtectionMediaKeys) {\n                protectionController.stop();\n            } else {\n                protectionController.reset();\n                protectionController = null;\n                _detectProtection();\n            }\n        }\n        textController.reset();\n        cmcdModel.reset();\n        cmsdModel.reset();\n    }\n\n    function _createPlaybackControllers() {\n        // creates or get objects instances\n        const manifestLoader = _createManifestLoader();\n\n        if (!streamController) {\n            streamController = StreamController(context).getInstance();\n        }\n\n        if (!textController) {\n            textController = TextController(context).create({\n                errHandler,\n                manifestModel,\n                adapter,\n                mediaController,\n                baseURLController,\n                videoModel,\n                settings\n            });\n        }\n\n        capabilitiesFilter.setConfig({\n            capabilities,\n            customParametersModel,\n            adapter,\n            settings,\n            protectionController,\n            manifestModel,\n            errHandler\n        });\n\n        streamController.setConfig({\n            capabilities,\n            capabilitiesFilter,\n            manifestLoader,\n            manifestModel,\n            mediaPlayerModel,\n            customParametersModel,\n            protectionController,\n            textController,\n            adapter,\n            dashMetrics,\n            errHandler,\n            timelineConverter,\n            videoModel,\n            playbackController,\n            serviceDescriptionController,\n            contentSteeringController,\n            abrController,\n            throughputController,\n            mediaController,\n            settings,\n            baseURLController,\n            uriFragmentModel,\n            segmentBaseController\n        });\n\n        gapController.setConfig({\n            settings,\n            playbackController,\n            streamController,\n            videoModel,\n            timelineConverter,\n            adapter\n        });\n\n        playbackController.setConfig({\n            streamController,\n            serviceDescriptionController,\n            dashMetrics,\n            adapter,\n            videoModel,\n            timelineConverter,\n            settings\n        });\n\n        catchupController.setConfig({\n            streamController,\n            playbackController,\n            mediaPlayerModel,\n            videoModel,\n            settings\n        })\n\n        throughputController.setConfig({\n            settings,\n            playbackController\n        })\n\n        abrController.setConfig({\n            streamController,\n            capabilities,\n            domStorage,\n            mediaPlayerModel,\n            customParametersModel,\n            throughputController,\n            cmsdModel,\n            dashMetrics,\n            adapter,\n            videoModel,\n            settings\n        });\n\n        cmcdModel.setConfig({\n            abrController,\n            dashMetrics,\n            playbackController,\n            serviceDescriptionController,\n            throughputController,\n        });\n\n        clientDataReportingController.setConfig({\n            serviceDescriptionController\n        })\n\n        cmsdModel.setConfig({});\n\n        // initializes controller\n        mediaController.initialize();\n        throughputController.initialize();\n        abrController.initialize();\n        streamController.initialize(autoPlay, protectionData);\n        textController.initialize();\n        gapController.initialize();\n        catchupController.initialize();\n        cmcdModel.initialize(autoPlay);\n        cmsdModel.initialize();\n        contentSteeringController.initialize();\n        segmentBaseController.initialize();\n    }\n\n    function _createManifestLoader() {\n        return ManifestLoader(context).create({\n            debug: debug,\n            errHandler: errHandler,\n            dashMetrics: dashMetrics,\n            mediaPlayerModel: mediaPlayerModel,\n            mssHandler: mssHandler,\n            settings: settings\n        });\n    }\n\n    function _detectProtection() {\n        if (protectionController) {\n            return protectionController;\n        }\n\n        if (typeof dashjs === 'undefined') {\n            return null\n        }\n        // do not require Protection as dependencies as this is optional and intended to be loaded separately\n        let detectedProtection = dashjs.Protection;\n        if (typeof detectedProtection === 'function') { //TODO need a better way to register/detect plugin components\n            let protection = detectedProtection(context).create();\n            Events.extend(detectedProtection.events);\n            MediaPlayerEvents.extend(detectedProtection.events, {\n                publicOnly: true\n            });\n            Errors.extend(detectedProtection.errors);\n\n            protectionController = protection.createProtectionSystem({\n                debug,\n                errHandler,\n                videoModel,\n                customParametersModel,\n                capabilities,\n                eventBus,\n                events: Events,\n                BASE64,\n                constants: Constants,\n                cmcdModel,\n                settings\n            });\n\n            if (!capabilities) {\n                capabilities = Capabilities(context).getInstance();\n            }\n\n            capabilities.setProtectionController(protectionController);\n\n            return protectionController;\n        }\n\n        return null;\n    }\n\n    function _detectMetricsReporting() {\n        if (metricsReportingController || typeof dashjs === 'undefined') {\n            return;\n        }\n        // do not require MetricsReporting as dependencies as this is optional and intended to be loaded separately\n        let detectedMetricsReporting = dashjs.MetricsReporting;\n        if (typeof detectedMetricsReporting === 'function') { //TODO need a better way to register/detect plugin components\n            let metricsReporting = detectedMetricsReporting(context).create();\n\n            metricsReportingController = metricsReporting.createMetricsReporting({\n                debug: debug,\n                eventBus: eventBus,\n                mediaElement: getVideoElement(),\n                adapter: adapter,\n                dashMetrics: dashMetrics,\n                mediaPlayerModel: mediaPlayerModel,\n                events: Events,\n                constants: Constants,\n                metricsConstants: MetricsConstants\n            });\n        }\n    }\n\n    function _detectMss() {\n        if (mssHandler || typeof dashjs === 'undefined') {\n            return;\n        }\n\n        // do not require MssHandler as dependencies as this is optional and intended to be loaded separately\n        let detectedMssHandler = dashjs.MssHandler;\n        if (typeof detectedMssHandler === 'function') { //TODO need a better way to register/detect plugin components\n            Errors.extend(detectedMssHandler.errors);\n            mssHandler = detectedMssHandler(context).create({\n                eventBus: eventBus,\n                mediaPlayerModel: mediaPlayerModel,\n                dashMetrics: dashMetrics,\n                manifestModel: manifestModel,\n                playbackController: playbackController,\n                streamController: streamController,\n                protectionController: protectionController,\n                baseURLController: baseURLController,\n                errHandler: errHandler,\n                events: Events,\n                constants: Constants,\n                debug: debug,\n                initSegmentType: HTTPRequest.INIT_SEGMENT_TYPE,\n                BASE64: BASE64,\n                ISOBoxer: ISOBoxer,\n                settings: settings\n            });\n        }\n    }\n\n    function _detectOffline() {\n        if (!mediaPlayerInitialized) {\n            throw MEDIA_PLAYER_NOT_INITIALIZED_ERROR;\n        }\n\n        if (offlineController) {\n            return offlineController;\n        }\n\n        if (typeof dashjs === 'undefined') {\n            return null\n        }\n\n        // do not require Offline as dependencies as this is optional and intended to be loaded separately\n        let detectedOfflineController = dashjs.OfflineController;\n\n        if (typeof detectedOfflineController === 'function') { //TODO need a better way to register/detect plugin components\n            Events.extend(detectedOfflineController.events);\n            MediaPlayerEvents.extend(detectedOfflineController.events, {\n                publicOnly: true\n            });\n            Errors.extend(detectedOfflineController.errors);\n\n            const manifestLoader = _createManifestLoader();\n            const manifestUpdater = ManifestUpdater(context).create();\n\n            manifestUpdater.setConfig({\n                manifestModel,\n                adapter,\n                manifestLoader,\n                errHandler,\n                contentSteeringController\n            });\n\n            offlineController = detectedOfflineController(context).create({\n                debug: debug,\n                manifestUpdater: manifestUpdater,\n                baseURLController: baseURLController,\n                manifestLoader: manifestLoader,\n                manifestModel: manifestModel,\n                mediaPlayerModel: mediaPlayerModel,\n                abrController: abrController,\n                playbackController: playbackController,\n                adapter: adapter,\n                errHandler: errHandler,\n                dashMetrics: dashMetrics,\n                timelineConverter: timelineConverter,\n                segmentBaseController: segmentBaseController,\n                schemeLoaderFactory: schemeLoaderFactory,\n                eventBus: eventBus,\n                events: Events,\n                errors: Errors,\n                constants: Constants,\n                settings: settings,\n                dashConstants: DashConstants,\n                urlUtils: URLUtils(context).getInstance()\n            });\n            return offlineController;\n        }\n\n        return null;\n    }\n\n    function _sanitizeSettings(value) {\n        const defaults = settings.get().streaming.defaultSchemeIdUri;\n        let output = {};\n\n        function __sanitizeDescriptorType(name, val, defaultSchemeIdUri) {\n            let out = {};\n            if (val) {\n                if (val instanceof Array) {\n                    throw ARRAY_NOT_SUPPORTED_ERROR;\n                } else if (val instanceof Object) {\n                    out.schemeIdUri = val.schemeIdUri ? val.schemeIdUri : '';\n                    out.value = val.value ? val.value : '';\n                } else {\n                    out.schemeIdUri = defaultSchemeIdUri;\n                    out.value = val;\n                    logger.warn('No schemeIdUri provided for ' + name + ', using default \\\"' + defaultSchemeIdUri + '\\\"');\n                }\n                return out;\n            }\n            return null;\n        }\n\n        if (value.lang) {\n            output.lang = value.lang;\n        }\n        if (!isNaN(value.index)) {\n            output.index = value.index;\n        }\n        if (value.viewpoint) {\n            output.viewpoint = __sanitizeDescriptorType('viewpoint', value.viewpoint, defaults.viewpoint);\n        }\n        if (value.audioChannelConfiguration) {\n            output.audioChannelConfiguration = __sanitizeDescriptorType('audioChannelConfiguration', value.audioChannelConfiguration, defaults.audioChannelConfiguration);\n        }\n        if (value.role) {\n            output.role = __sanitizeDescriptorType('role', value.role, defaults.role);\n        }\n        if (value.accessibility) {\n            output.accessibility = __sanitizeDescriptorType('accessibility', value.accessibility, defaults.accessibility);\n        }\n\n        return output;\n    }\n\n    /**\n     *\n     * @private\n     */\n    function _initializePlayback(startTime = NaN) {\n\n        if (offlineController) {\n            offlineController.resetRecords();\n        }\n\n        if (!streamingInitialized && source) {\n            streamingInitialized = true;\n            logger.info('Streaming Initialized');\n            _createPlaybackControllers();\n\n            if (typeof source === 'string') {\n                streamController.load(source, startTime);\n            } else {\n                streamController.loadWithManifest(source, startTime);\n            }\n        }\n\n        if (!playbackInitialized && isReady()) {\n            playbackInitialized = true;\n            eventBus.trigger(MediaPlayerEvents.PLAYBACK_INITIALIZED)\n            logger.info('Playback Initialized');\n        }\n    }\n\n    instance = {\n        addABRCustomRule,\n        addRequestInterceptor,\n        addResponseInterceptor,\n        addUTCTimingSource,\n        attachProtectionController,\n        attachSource,\n        attachTTMLRenderingDiv,\n        attachView,\n        attachVttRenderingDiv,\n        clearDefaultUTCTimingSources,\n        convertToTimeCode,\n        destroy,\n        duration,\n        enableForcedTextStreaming,\n        enableText,\n        extend,\n        formatUTC,\n        getABRCustomRules,\n        getActiveStream,\n        getAutoPlay,\n        getAvailableBaseUrls,\n        getAvailableLocations,\n        getAverageLatency,\n        getAverageThroughput,\n        getBufferLength,\n        getCurrentLiveLatency,\n        getCurrentRepresentationForType,\n        getCurrentSteeringResponseData,\n        getCurrentTextTrackIndex,\n        getCurrentTrackFor,\n        getDashAdapter,\n        getDashMetrics,\n        getDebug,\n        getDvrSeekOffset,\n        getDvrWindow,\n        getInitialMediaSettingsFor,\n        getLowLatencyModeEnabled,\n        getManifest,\n        getOfflineController,\n        getPlaybackRate,\n        getProtectionController,\n        getRawThroughputData,\n        getRepresentationsByType,\n        getSafeAverageThroughput,\n        getSettings,\n        getSource,\n        getStreamsFromManifest,\n        getTTMLRenderingDiv,\n        getTargetLiveDelay,\n        getTracksFor,\n        getTracksForTypeFromManifest,\n        getVersion,\n        getVideoElement,\n        getVolume,\n        getXHRWithCredentialsForType,\n        initialize,\n        isDynamic,\n        isMuted,\n        isPaused,\n        isReady,\n        isSeeking,\n        isTextEnabled,\n        off,\n        on,\n        pause,\n        play,\n        preload,\n        provideThumbnail,\n        refreshManifest,\n        registerCustomCapabilitiesFilter,\n        registerLicenseRequestFilter,\n        registerLicenseResponseFilter,\n        removeABRCustomRule,\n        removeAllABRCustomRule,\n        removeRequestInterceptor,\n        removeResponseInterceptor,\n        removeUTCTimingSource,\n        reset,\n        resetCustomInitialTrackSelectionFunction,\n        resetSettings,\n        restoreDefaultUTCTimingSources,\n        retrieveManifest,\n        seek,\n        seekToOriginalLive,\n        seekToPresentationTime,\n        setAutoPlay,\n        setConfig,\n        setCurrentTrack,\n        setCustomInitialTrackSelectionFunction,\n        setInitialMediaSettingsFor,\n        setMute,\n        setPlaybackRate,\n        setProtectionData,\n        setRepresentationForTypeById,\n        setRepresentationForTypeByIndex,\n        setTextTrack,\n        setVolume,\n        setXHRWithCredentialsForType,\n        time,\n        timeAsUTC,\n        timeInDvrWindow,\n        trigger,\n        triggerSteeringRequest,\n        unregisterCustomCapabilitiesFilter,\n        unregisterLicenseRequestFilter,\n        unregisterLicenseResponseFilter,\n        updateSettings,\n        updateSource,\n    };\n\n    setup();\n\n    return instance;\n}\n\nMediaPlayer.__dashjs_factory_name = 'MediaPlayer';\nconst factory = FactoryMaker.getClassFactory(MediaPlayer);\nfactory.events = MediaPlayerEvents;\nfactory.errors = Errors;\nFactoryMaker.updateClassFactory(MediaPlayer.__dashjs_factory_name, factory);\n\nexport default factory;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport EventsBase from '../core/events/EventsBase.js';\n\n/**\n * @class\n * @implements EventsBase\n */\nclass MediaPlayerEvents extends EventsBase {\n\n    /**\n     * @description Public facing external events to be used when developing a player that implements dash.js.\n     */\n    constructor() {\n        super();\n        /**\n         * Triggered when playback will not start yet\n         * as the MPD's availabilityStartTime is in the future.\n         * Check delay property in payload to determine time before playback will start.\n         * @event MediaPlayerEvents#AST_IN_FUTURE\n         */\n        this.AST_IN_FUTURE = 'astInFuture';\n\n        /**\n         * Triggered when the BaseURLs have been updated.\n         * @event MediaPlayerEvents#BASE_URLS_UPDATED\n         */\n        this.BASE_URLS_UPDATED = 'baseUrlsUpdated';\n\n        /**\n         * Triggered when the video element's buffer state changes to stalled.\n         * Check mediaType in payload to determine type (Video, Audio, FragmentedText).\n         * @event MediaPlayerEvents#BUFFER_EMPTY\n         */\n        this.BUFFER_EMPTY = 'bufferStalled';\n\n        /**\n         * Triggered when the video element's buffer state changes to loaded.\n         * Check mediaType in payload to determine type (Video, Audio, FragmentedText).\n         * @event MediaPlayerEvents#BUFFER_LOADED\n         */\n        this.BUFFER_LOADED = 'bufferLoaded';\n\n        /**\n         * Triggered when the video element's buffer state changes, either stalled or loaded. Check payload for state.\n         * @event MediaPlayerEvents#BUFFER_LEVEL_STATE_CHANGED\n         */\n        this.BUFFER_LEVEL_STATE_CHANGED = 'bufferStateChanged';\n\n        /**\n         * Triggered when the buffer level of a media type has been updated\n         * @event MediaPlayerEvents#BUFFER_LEVEL_UPDATED\n         */\n        this.BUFFER_LEVEL_UPDATED = 'bufferLevelUpdated';\n\n        /**\n         * Triggered when a font signalled by a DVB Font Download has been added to the document FontFaceSet interface.\n         * @event MediaPlayerEvents#DVB_FONT_DOWNLOAD_ADDED\n         */\n        this.DVB_FONT_DOWNLOAD_ADDED = 'dvbFontDownloadAdded';\n\n        /**\n         * Triggered when a font signalled by a DVB Font Download has successfully downloaded and the FontFace can be used.\n         * @event MediaPlayerEvents#DVB_FONT_DOWNLOAD_COMPLETE\n         */\n        this.DVB_FONT_DOWNLOAD_COMPLETE = 'dvbFontDownloadComplete';\n\n        /**\n         * Triggered when a font signalled by a DVB Font Download could not be successfully downloaded, so the FontFace will not be used.\n         * @event MediaPlayerEvents#DVB_FONT_DOWNLOAD_FAILED\n         */\n        this.DVB_FONT_DOWNLOAD_FAILED = 'dvbFontDownloadFailed';\n\n        /**\n         * Triggered when a dynamic stream changed to static (transition phase between Live and On-Demand).\n         * @event MediaPlayerEvents#DYNAMIC_TO_STATIC\n         */\n        this.DYNAMIC_TO_STATIC = 'dynamicToStatic';\n\n        /**\n         * Triggered when there is an error from the element or MSE source buffer.\n         * @event MediaPlayerEvents#ERROR\n         */\n        this.ERROR = 'error';\n        /**\n         * Triggered when a fragment download has completed.\n         * @event MediaPlayerEvents#FRAGMENT_LOADING_COMPLETED\n         */\n        this.FRAGMENT_LOADING_COMPLETED = 'fragmentLoadingCompleted';\n\n        /**\n         * Triggered when a partial fragment download has completed.\n         * @event MediaPlayerEvents#FRAGMENT_LOADING_PROGRESS\n         */\n        this.FRAGMENT_LOADING_PROGRESS = 'fragmentLoadingProgress';\n        /**\n         * Triggered when a fragment download has started.\n         * @event MediaPlayerEvents#FRAGMENT_LOADING_STARTED\n         */\n        this.FRAGMENT_LOADING_STARTED = 'fragmentLoadingStarted';\n\n        /**\n         * Triggered when a fragment download is abandoned due to detection of slow download base on the ABR abandon rule..\n         * @event MediaPlayerEvents#FRAGMENT_LOADING_ABANDONED\n         */\n        this.FRAGMENT_LOADING_ABANDONED = 'fragmentLoadingAbandoned';\n\n        /**\n         * Triggered when {@link module:Debug} logger methods are called.\n         * @event MediaPlayerEvents#LOG\n         */\n        this.LOG = 'log';\n\n        /**\n         * Triggered when the manifest load is started\n         * @event MediaPlayerEvents#MANIFEST_LOADING_STARTED\n         */\n        this.MANIFEST_LOADING_STARTED = 'manifestLoadingStarted';\n\n        /**\n         * Triggered when the manifest loading is finished, providing the request object information\n         * @event MediaPlayerEvents#MANIFEST_LOADING_FINISHED\n         */\n        this.MANIFEST_LOADING_FINISHED = 'manifestLoadingFinished';\n\n        /**\n         * Triggered when the manifest load is complete, providing the payload\n         * @event MediaPlayerEvents#MANIFEST_LOADED\n         */\n        this.MANIFEST_LOADED = 'manifestLoaded';\n\n        /**\n         * Triggered anytime there is a change to the overall metrics.\n         * @event MediaPlayerEvents#METRICS_CHANGED\n         */\n        this.METRICS_CHANGED = 'metricsChanged';\n\n        /**\n         * Triggered when an individual metric is added, updated or cleared.\n         * @event MediaPlayerEvents#METRIC_CHANGED\n         */\n        this.METRIC_CHANGED = 'metricChanged';\n\n        /**\n         * Triggered every time a new metric is added.\n         * @event MediaPlayerEvents#METRIC_ADDED\n         */\n        this.METRIC_ADDED = 'metricAdded';\n\n        /**\n         * Triggered every time a metric is updated.\n         * @event MediaPlayerEvents#METRIC_UPDATED\n         */\n        this.METRIC_UPDATED = 'metricUpdated';\n\n        /**\n         * Triggered when a new stream (period) starts.\n         * @event MediaPlayerEvents#PERIOD_SWITCH_STARTED\n         */\n        this.PERIOD_SWITCH_STARTED = 'periodSwitchStarted';\n\n        /**\n         * Triggered at the stream end of a period.\n         * @event MediaPlayerEvents#PERIOD_SWITCH_COMPLETED\n         */\n        this.PERIOD_SWITCH_COMPLETED = 'periodSwitchCompleted';\n\n        /**\n         * Triggered when an ABR up /down switch is initiated; either by user in manual mode or auto mode via ABR rules.\n         * @event MediaPlayerEvents#QUALITY_CHANGE_REQUESTED\n         */\n        this.QUALITY_CHANGE_REQUESTED = 'qualityChangeRequested';\n\n        /**\n         * Triggered when the new ABR quality is being rendered on-screen.\n         * @event MediaPlayerEvents#QUALITY_CHANGE_RENDERED\n         */\n        this.QUALITY_CHANGE_RENDERED = 'qualityChangeRendered';\n\n        /**\n         * Triggered when the new track is being selected\n         * @event MediaPlayerEvents#NEW_TRACK_SELECTED\n         */\n        this.NEW_TRACK_SELECTED = 'newTrackSelected';\n\n        /**\n         * Triggered when the new track is being rendered.\n         * @event MediaPlayerEvents#TRACK_CHANGE_RENDERED\n         */\n        this.TRACK_CHANGE_RENDERED = 'trackChangeRendered';\n\n        /**\n         * Triggered when a stream (period) is being loaded\n         * @event MediaPlayerEvents#STREAM_INITIALIZING\n         */\n        this.STREAM_INITIALIZING = 'streamInitializing';\n\n        /**\n         * Triggered when a stream (period) is loaded\n         * @event MediaPlayerEvents#STREAM_UPDATED\n         */\n        this.STREAM_UPDATED = 'streamUpdated';\n\n        /**\n         * Triggered when a stream (period) is activated\n         * @event MediaPlayerEvents#STREAM_ACTIVATED\n         */\n        this.STREAM_ACTIVATED = 'streamActivated';\n\n        /**\n         * Triggered when a stream (period) is deactivated\n         * @event MediaPlayerEvents#STREAM_DEACTIVATED\n         */\n        this.STREAM_DEACTIVATED = 'streamDeactivated';\n\n        /**\n         * Triggered when a stream (period) is activated\n         * @event MediaPlayerEvents#STREAM_INITIALIZED\n         */\n        this.STREAM_INITIALIZED = 'streamInitialized';\n\n        /**\n         * Triggered when the player has been reset.\n         * @event MediaPlayerEvents#STREAM_TEARDOWN_COMPLETE\n         */\n        this.STREAM_TEARDOWN_COMPLETE = 'streamTeardownComplete';\n\n        /**\n         * Triggered once all text tracks detected in the MPD are added to the video element.\n         * @event MediaPlayerEvents#TEXT_TRACKS_ADDED\n         */\n        this.TEXT_TRACKS_ADDED = 'allTextTracksAdded';\n\n        /**\n         * Triggered when a text track is added to the video element's TextTrackList\n         * @event MediaPlayerEvents#TEXT_TRACK_ADDED\n         */\n        this.TEXT_TRACK_ADDED = 'textTrackAdded';\n\n        /**\n         * Triggered when a text track should be shown\n         * @event MediaPlayerEvents#CUE_ENTER\n         */\n        this.CUE_ENTER = 'cueEnter'\n\n        /**\n         * Triggered when a text track should be hidden\n         * @event MediaPlayerEvents#CUE_ENTER\n         */\n        this.CUE_EXIT = 'cueExit'\n\n        /**\n         * Triggered when a throughput measurement based on the last segment request has been stored\n         * @event MediaPlayerEvents#THROUGHPUT_MEASUREMENT_STORED\n         */\n        this.THROUGHPUT_MEASUREMENT_STORED = 'throughputMeasurementStored';\n\n        /**\n         * Triggered when a ttml chunk is parsed.\n         * @event MediaPlayerEvents#TTML_PARSED\n         */\n        this.TTML_PARSED = 'ttmlParsed';\n\n        /**\n         * Triggered when a ttml chunk has to be parsed.\n         * @event MediaPlayerEvents#TTML_TO_PARSE\n         */\n        this.TTML_TO_PARSE = 'ttmlToParse';\n\n        /**\n         * Triggered when a caption is rendered.\n         * @event MediaPlayerEvents#CAPTION_RENDERED\n         */\n        this.CAPTION_RENDERED = 'captionRendered';\n\n        /**\n         * Triggered when the caption container is resized.\n         * @event MediaPlayerEvents#CAPTION_CONTAINER_RESIZE\n         */\n        this.CAPTION_CONTAINER_RESIZE = 'captionContainerResize';\n\n        /**\n         * Sent when enough data is available that the media can be played,\n         * at least for a couple of frames.  This corresponds to the\n         * HAVE_ENOUGH_DATA readyState.\n         * @event MediaPlayerEvents#CAN_PLAY\n         */\n        this.CAN_PLAY = 'canPlay';\n\n        /**\n         * This corresponds to the CAN_PLAY_THROUGH readyState.\n         * @event MediaPlayerEvents#CAN_PLAY_THROUGH\n         */\n        this.CAN_PLAY_THROUGH = 'canPlayThrough';\n\n        /**\n         * Sent when playback completes.\n         * @event MediaPlayerEvents#PLAYBACK_ENDED\n         */\n        this.PLAYBACK_ENDED = 'playbackEnded';\n\n        /**\n         * Sent when an error occurs.  The element's error\n         * attribute contains more information.\n         * @event MediaPlayerEvents#PLAYBACK_ERROR\n         */\n        this.PLAYBACK_ERROR = 'playbackError';\n\n        /**\n         * This event is fired once the playback has been initialized by MediaPlayer.js.\n         * After that event methods such as setTextTrack() can be used.\n         * @event MediaPlayerEvents#PLAYBACK_INITIALIZED\n         */\n        this.PLAYBACK_INITIALIZED = 'playbackInitialized';\n\n        /**\n         * Sent when playback is not allowed (for example if user gesture is needed).\n         * @event MediaPlayerEvents#PLAYBACK_NOT_ALLOWED\n         */\n        this.PLAYBACK_NOT_ALLOWED = 'playbackNotAllowed';\n\n        /**\n         * The media's metadata has finished loading; all attributes now\n         * contain as much useful information as they're going to.\n         * @event MediaPlayerEvents#PLAYBACK_METADATA_LOADED\n         */\n        this.PLAYBACK_METADATA_LOADED = 'playbackMetaDataLoaded';\n\n        /**\n         * The event is fired when the frame at the current playback position of the media has finished loading;\n         * often the first frame\n         * @event MediaPlayerEvents#PLAYBACK_LOADED_DATA\n         */\n        this.PLAYBACK_LOADED_DATA = 'playbackLoadedData';\n\n        /**\n         * Sent when playback is paused.\n         * @event MediaPlayerEvents#PLAYBACK_PAUSED\n         */\n        this.PLAYBACK_PAUSED = 'playbackPaused';\n\n        /**\n         * Sent when the media begins to play (either for the first time, after having been paused,\n         * or after ending and then restarting).\n         *\n         * @event MediaPlayerEvents#PLAYBACK_PLAYING\n         */\n        this.PLAYBACK_PLAYING = 'playbackPlaying';\n\n        /**\n         * Sent periodically to inform interested parties of progress downloading\n         * the media. Information about the current amount of the media that has\n         * been downloaded is available in the media element's buffered attribute.\n         * @event MediaPlayerEvents#PLAYBACK_PROGRESS\n         */\n        this.PLAYBACK_PROGRESS = 'playbackProgress';\n\n        /**\n         * Sent when the playback speed changes.\n         * @event MediaPlayerEvents#PLAYBACK_RATE_CHANGED\n         */\n        this.PLAYBACK_RATE_CHANGED = 'playbackRateChanged';\n\n        /**\n         * Sent when a seek operation completes.\n         * @event MediaPlayerEvents#PLAYBACK_SEEKED\n         */\n        this.PLAYBACK_SEEKED = 'playbackSeeked';\n\n        /**\n         * Sent when a seek operation begins.\n         * @event MediaPlayerEvents#PLAYBACK_SEEKING\n         */\n        this.PLAYBACK_SEEKING = 'playbackSeeking';\n\n        /**\n         * Sent when the video element reports stalled\n         * @event MediaPlayerEvents#PLAYBACK_STALLED\n         */\n        this.PLAYBACK_STALLED = 'playbackStalled';\n\n        /**\n         * Sent when playback of the media starts after having been paused;\n         * that is, when playback is resumed after a prior pause event.\n         *\n         * @event MediaPlayerEvents#PLAYBACK_STARTED\n         */\n        this.PLAYBACK_STARTED = 'playbackStarted';\n\n        /**\n         * The time indicated by the element's currentTime attribute has changed.\n         * @event MediaPlayerEvents#PLAYBACK_TIME_UPDATED\n         */\n        this.PLAYBACK_TIME_UPDATED = 'playbackTimeUpdated';\n\n        /**\n         * Sent when the video element reports that the volume has changed\n         * @event MediaPlayerEvents#PLAYBACK_VOLUME_CHANGED\n         */\n        this.PLAYBACK_VOLUME_CHANGED = 'playbackVolumeChanged';\n\n        /**\n         * Sent when the media playback has stopped because of a temporary lack of data.\n         *\n         * @event MediaPlayerEvents#PLAYBACK_WAITING\n         */\n        this.PLAYBACK_WAITING = 'playbackWaiting';\n\n        /**\n         * Manifest validity changed - As a result of an MPD validity expiration event.\n         * @event MediaPlayerEvents#MANIFEST_VALIDITY_CHANGED\n         */\n        this.MANIFEST_VALIDITY_CHANGED = 'manifestValidityChanged';\n\n        /**\n         * Dash events are triggered at their respective start points on the timeline.\n         * @event MediaPlayerEvents#EVENT_MODE_ON_START\n         */\n        this.EVENT_MODE_ON_START = 'eventModeOnStart';\n\n        /**\n         * Dash events are triggered as soon as they were parsed.\n         * @event MediaPlayerEvents#EVENT_MODE_ON_RECEIVE\n         */\n        this.EVENT_MODE_ON_RECEIVE = 'eventModeOnReceive';\n\n        /**\n         * Event that is dispatched whenever the player encounters a potential conformance validation that might lead to unexpected/not optimal behavior\n         * @event MediaPlayerEvents#CONFORMANCE_VIOLATION\n         */\n        this.CONFORMANCE_VIOLATION = 'conformanceViolation';\n\n        /**\n         * Event that is dispatched whenever the player switches to a different representation\n         * @event MediaPlayerEvents#REPRESENTATION_SWITCH\n         */\n        this.REPRESENTATION_SWITCH = 'representationSwitch';\n\n        /**\n         * Event that is dispatched whenever an adaptation set is removed due to all representations not being supported.\n         * @event MediaPlayerEvents#ADAPTATION_SET_REMOVED_NO_CAPABILITIES\n         */\n        this.ADAPTATION_SET_REMOVED_NO_CAPABILITIES = 'adaptationSetRemovedNoCapabilities';\n\n        /**\n         * Triggered when a content steering request has completed.\n         * @event MediaPlayerEvents#CONTENT_STEERING_REQUEST_COMPLETED\n         */\n        this.CONTENT_STEERING_REQUEST_COMPLETED = 'contentSteeringRequestCompleted';\n\n        /**\n         * Triggered when an inband prft (ProducerReferenceTime) boxes has been received.\n         * @event MediaPlayerEvents#INBAND_PRFT\n         */\n        this.INBAND_PRFT = 'inbandPrft';\n\n        /**\n         * The streaming attribute of the Managed Media Source is true\n         * @type {string}\n         */\n        this.MANAGED_MEDIA_SOURCE_START_STREAMING = 'managedMediaSourceStartStreaming';\n\n        /**\n         * The streaming attribute of the Managed Media Source is false\n         * @type {string}\n         */\n        this.MANAGED_MEDIA_SOURCE_END_STREAMING = 'managedMediaSourceEndStreaming';\n    }\n}\n\nlet mediaPlayerEvents = new MediaPlayerEvents();\nexport default mediaPlayerEvents;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * Constants declaration\n */\nexport default {\n    /**\n     *  @constant {string} STREAM Stream media type. Mainly used to report metrics relative to the full stream\n     *  @memberof Constants#\n     *  @static\n     */\n    STREAM: 'stream',\n\n    /**\n     *  @constant {string} VIDEO Video media type\n     *  @memberof Constants#\n     *  @static\n     */\n    VIDEO: 'video',\n\n    /**\n     *  @constant {string} AUDIO Audio media type\n     *  @memberof Constants#\n     *  @static\n     */\n    AUDIO: 'audio',\n\n    /**\n     *  @constant {string} TEXT Text media type\n     *  @memberof Constants#\n     *  @static\n     */\n    TEXT: 'text',\n\n    /**\n     *  @constant {string} MUXED Muxed (video/audio in the same chunk) media type\n     *  @memberof Constants#\n     *  @static\n     */\n    MUXED: 'muxed',\n\n    /**\n     *  @constant {string} IMAGE Image media type\n     *  @memberof Constants#\n     *  @static\n     */\n    IMAGE: 'image',\n\n    /**\n     *  @constant {string} STPP STTP Subtitles format\n     *  @memberof Constants#\n     *  @static\n     */\n    STPP: 'stpp',\n\n    /**\n     *  @constant {string} TTML STTP Subtitles format\n     *  @memberof Constants#\n     *  @static\n     */\n    TTML: 'ttml',\n\n    /**\n     *  @constant {string} VTT STTP Subtitles format\n     *  @memberof Constants#\n     *  @static\n     */\n    VTT: 'vtt',\n\n    /**\n     *  @constant {string} WVTT STTP Subtitles format\n     *  @memberof Constants#\n     *  @static\n     */\n    WVTT: 'wvtt',\n\n    /**\n     *  @constant {string} Content Steering\n     *  @memberof Constants#\n     *  @static\n     */\n    CONTENT_STEERING: 'contentSteering',\n\n    /**\n     *  @constant {string} LIVE_CATCHUP_MODE_DEFAULT Throughput calculation based on moof parsing\n     *  @memberof Constants#\n     *  @static\n     */\n    LIVE_CATCHUP_MODE_DEFAULT: 'liveCatchupModeDefault',\n\n    /**\n     *  @constant {string} LIVE_CATCHUP_MODE_LOLP Throughput calculation based on moof parsing\n     *  @memberof Constants#\n     *  @static\n     */\n    LIVE_CATCHUP_MODE_LOLP: 'liveCatchupModeLoLP',\n\n    /**\n     *  @constant {string} MOVING_AVERAGE_SLIDING_WINDOW Moving average sliding window\n     *  @memberof Constants#\n     *  @static\n     */\n    MOVING_AVERAGE_SLIDING_WINDOW: 'slidingWindow',\n\n    /**\n     *  @constant {string} EWMA Exponential moving average\n     *  @memberof Constants#\n     *  @static\n     */\n    MOVING_AVERAGE_EWMA: 'ewma',\n\n    /**\n     *  @constant {string} BAD_ARGUMENT_ERROR Invalid Arguments type of error\n     *  @memberof Constants#\n     *  @static\n     */\n    BAD_ARGUMENT_ERROR: 'Invalid Arguments',\n\n    /**\n     *  @constant {string} MISSING_CONFIG_ERROR Missing configuration parameters type of error\n     *  @memberof Constants#\n     *  @static\n     */\n    MISSING_CONFIG_ERROR: 'Missing config parameter(s)',\n\n    /**\n     *  @constant {string} TRACK_SWITCH_MODE_ALWAYS_REPLACE used to clear the buffered data (prior to current playback position) after track switch. Default for audio\n     *  @memberof Constants#\n     *  @static\n     */\n    TRACK_SWITCH_MODE_ALWAYS_REPLACE: 'alwaysReplace',\n\n    /**\n     *  @constant {string} TRACK_SWITCH_MODE_NEVER_REPLACE used to forbid clearing the buffered data (prior to current playback position) after track switch. Defers to fastSwitchEnabled for placement of new data. Default for video\n     *  @memberof Constants#\n     *  @static\n     */\n    TRACK_SWITCH_MODE_NEVER_REPLACE: 'neverReplace',\n\n    /**\n     *  @constant {string} TRACK_SELECTION_MODE_FIRST_TRACK makes the player select the first track found in the manifest.\n     *  @memberof Constants#\n     *  @static\n     */\n    TRACK_SELECTION_MODE_FIRST_TRACK: 'firstTrack',\n\n    /**\n     *  @constant {string} TRACK_SELECTION_MODE_HIGHEST_BITRATE makes the player select the track with a highest bitrate. This mode is a default mode.\n     *  @memberof Constants#\n     *  @static\n     */\n    TRACK_SELECTION_MODE_HIGHEST_BITRATE: 'highestBitrate',\n\n    /**\n     *  @constant {string} TRACK_SELECTION_MODE_HIGHEST_EFFICIENCY makes the player select the track with the lowest bitrate per pixel average.\n     *  @memberof Constants#\n     *  @static\n     */\n    TRACK_SELECTION_MODE_HIGHEST_EFFICIENCY: 'highestEfficiency',\n\n    /**\n     *  @constant {string} TRACK_SELECTION_MODE_WIDEST_RANGE makes the player select the track with a widest range of bitrates.\n     *  @memberof Constants#\n     *  @static\n     */\n    TRACK_SELECTION_MODE_WIDEST_RANGE: 'widestRange',\n\n    /**\n     *  @constant {string} TRACK_SELECTION_MODE_WIDEST_RANGE makes the player select the track with the highest selectionPriority as defined in the manifest\n     *  @memberof Constants#\n     *  @static\n     */\n    TRACK_SELECTION_MODE_HIGHEST_SELECTION_PRIORITY: 'highestSelectionPriority',\n\n\n    /**\n     *  @constant {string} CMCD_QUERY_KEY specifies the key that is used for the CMCD query parameter.\n     *  @memberof Constants#\n     *  @static\n     */\n    CMCD_QUERY_KEY: 'CMCD',\n\n    /**\n     *  @constant {string} CMCD_MODE_QUERY specifies to attach CMCD metrics as query parameters.\n     *  @memberof Constants#\n     *  @static\n     */\n    CMCD_MODE_QUERY: 'query',\n\n    /**\n     *  @constant {string} CMCD_MODE_HEADER specifies to attach CMCD metrics as HTTP headers.\n     *  @memberof Constants#\n     *  @static\n     */\n    CMCD_MODE_HEADER: 'header',\n\n    /**\n     *  @constant {string} CMCD_AVAILABLE_KEYS specifies all the available keys for CMCD metrics.\n     *  @memberof Constants#\n     *  @static\n     */\n    CMCD_AVAILABLE_KEYS: ['br', 'd', 'ot', 'tb', 'bl', 'dl', 'mtp', 'nor', 'nrr', 'su', 'bs', 'rtp', 'cid', 'pr', 'sf', 'sid', 'st', 'v'],\n    /**\n     *  @constant {string} CMCD_AVAILABLE_KEYS_V2 specifies all the available keys for CMCD version 2 metrics.\n     *  @memberof Constants#\n     *  @static\n     */\n    CMCD_V2_AVAILABLE_KEYS: ['msd', 'ltc'],\n\n    /**\n     *  @constant {string} CMCD_AVAILABLE_REQUESTS specifies all the available requests type for CMCD metrics.\n     *  @memberof Constants#\n     *  @static\n     */\n    CMCD_AVAILABLE_REQUESTS: ['segment', 'mpd', 'xlink', 'steering', 'other'],\n\n\n    INITIALIZE: 'initialize',\n    TEXT_SHOWING: 'showing',\n    TEXT_HIDDEN: 'hidden',\n    TEXT_DISABLED: 'disabled',\n    ACCESSIBILITY_CEA608_SCHEME: 'urn:scte:dash:cc:cea-608:2015',\n    CC1: 'CC1',\n    CC3: 'CC3',\n    UTF8: 'utf-8',\n    SCHEME_ID_URI: 'schemeIdUri',\n    START_TIME: 'starttime',\n    SERVICE_DESCRIPTION_DVB_LL_SCHEME: 'urn:dvb:dash:lowlatency:scope:2019',\n    SUPPLEMENTAL_PROPERTY_DVB_LL_SCHEME: 'urn:dvb:dash:lowlatency:critical:2019',\n    CTA_5004_2023_SCHEME: 'urn:mpeg:dash:cta-5004:2023',\n    THUMBNAILS_SCHEME_ID_URIS: ['http://dashif.org/thumbnail_tile', 'http://dashif.org/guidelines/thumbnail_tile'],\n    FONT_DOWNLOAD_DVB_SCHEME: 'urn:dvb:dash:fontdownload:2014',\n    COLOUR_PRIMARIES_SCHEME_ID_URI: 'urn:mpeg:mpegB:cicp:ColourPrimaries',\n    URL_QUERY_INFO_SCHEME: 'urn:mpeg:dash:urlparam:2014',\n    EXT_URL_QUERY_INFO_SCHEME: 'urn:mpeg:dash:urlparam:2016',\n    MATRIX_COEFFICIENTS_SCHEME_ID_URI: 'urn:mpeg:mpegB:cicp:MatrixCoefficients',\n    TRANSFER_CHARACTERISTICS_SCHEME_ID_URI: 'urn:mpeg:mpegB:cicp:TransferCharacteristics',\n    HDR_METADATA_FORMAT_SCHEME_ID_URI: 'urn:dvb:dash:hdr-dmi',\n    HDR_METADATA_FORMAT_VALUES: {\n        ST2094_10: 'ST2094-10',\n        SL_HDR2: 'SL-HDR2',\n        ST2094_40: 'ST2094-40'\n    },\n    MEDIA_CAPABILITIES_API: {\n        COLORGAMUT: {\n            SRGB: 'srgb',\n            P3: 'p3',\n            REC2020: 'rec2020'\n        },\n        TRANSFERFUNCTION: {\n            SRGB: 'srgb',\n            PQ: 'pq',\n            HLG: 'hlg'\n        },\n        HDR_METADATATYPE: {\n            SMPTE_ST_2094_10: 'smpteSt2094-10',\n            SLHDR2: 'slhdr2',\n            SMPTE_ST_2094_40: 'smpteSt2094-40'\n        }\n    },\n    XML: 'XML',\n    ARRAY_BUFFER: 'ArrayBuffer',\n    DVB_REPORTING_URL: 'dvb:reportingUrl',\n    DVB_PROBABILITY: 'dvb:probability',\n    OFF_MIMETYPE: 'application/font-sfnt',\n    WOFF_MIMETYPE: 'application/font-woff',\n    VIDEO_ELEMENT_READY_STATES: {\n        HAVE_NOTHING: 0,\n        HAVE_METADATA: 1,\n        HAVE_CURRENT_DATA: 2,\n        HAVE_FUTURE_DATA: 3,\n        HAVE_ENOUGH_DATA: 4\n    },\n    FILE_LOADER_TYPES: {\n        FETCH: 'fetch_loader',\n        XHR: 'xhr_loader'\n    },\n    THROUGHPUT_TYPES: {\n        LATENCY: 'throughput_type_latency',\n        BANDWIDTH: 'throughput_type_bandwidth'\n    },\n    THROUGHPUT_CALCULATION_MODES: {\n        EWMA: 'throughputCalculationModeEwma',\n        ZLEMA: 'throughputCalculationModeZlema',\n        ARITHMETIC_MEAN: 'throughputCalculationModeArithmeticMean',\n        BYTE_SIZE_WEIGHTED_ARITHMETIC_MEAN: 'throughputCalculationModeByteSizeWeightedArithmeticMean',\n        DATE_WEIGHTED_ARITHMETIC_MEAN: 'throughputCalculationModeDateWeightedArithmeticMean',\n        HARMONIC_MEAN: 'throughputCalculationModeHarmonicMean',\n        BYTE_SIZE_WEIGHTED_HARMONIC_MEAN: 'throughputCalculationModeByteSizeWeightedHarmonicMean',\n        DATE_WEIGHTED_HARMONIC_MEAN: 'throughputCalculationModeDateWeightedHarmonicMean',\n    },\n    LOW_LATENCY_DOWNLOAD_TIME_CALCULATION_MODE: {\n        MOOF_PARSING: 'lowLatencyDownloadTimeCalculationModeMoofParsing',\n        DOWNLOADED_DATA: 'lowLatencyDownloadTimeCalculationModeDownloadedData',\n        AAST: 'lowLatencyDownloadTimeCalculationModeAast',\n    },\n    RULES_TYPES: {\n        QUALITY_SWITCH_RULES: 'qualitySwitchRules',\n        ABANDON_FRAGMENT_RULES: 'abandonFragmentRules'\n    },\n    QUALITY_SWITCH_RULES: {\n        BOLA_RULE: 'BolaRule',\n        THROUGHPUT_RULE: 'ThroughputRule',\n        INSUFFICIENT_BUFFER_RULE: 'InsufficientBufferRule',\n        SWITCH_HISTORY_RULE: 'SwitchHistoryRule',\n        DROPPED_FRAMES_RULE: 'DroppedFramesRule',\n        LEARN_TO_ADAPT_RULE: 'L2ARule',\n        LOL_PLUS_RULE: 'LoLPRule'\n    },\n    ABANDON_FRAGMENT_RULES: {\n        ABANDON_REQUEST_RULE: 'AbandonRequestsRule'\n    },\n\n    /**\n     *  @constant {string} ID3_SCHEME_ID_URI specifies scheme ID URI for ID3 timed metadata\n     *  @memberof Constants#\n     *  @static\n     */\n    ID3_SCHEME_ID_URI: 'https://aomedia.org/emsg/ID3',\n    COMMON_ACCESS_TOKEN_HEADER: 'common-access-token',\n    DASH_ROLE_SCHEME_ID : 'urn:mpeg:dash:role:2011',\n    CODEC_FAMILIES: {\n        MP3: 'mp3',\n        AAC: 'aac',\n        AC3: 'ac3',\n        EC3: 'ec3',\n        DTSX: 'dtsx',\n        DTSC: 'dtsc',\n        AVC: 'avc',\n        HEVC: 'hevc'\n    }\n}\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES, LOSS OF USE, DATA, OR\n *  PROFITS, OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\n/**\n * Protection Constants declaration\n * @ignore\n */\nexport default {\n    CLEARKEY_KEYSTEM_STRING: 'org.w3.clearkey',\n    WIDEVINE_KEYSTEM_STRING: 'com.widevine.alpha',\n    PLAYREADY_KEYSTEM_STRING: 'com.microsoft.playready',\n    PLAYREADY_RECOMMENDATION_KEYSTEM_STRING: 'com.microsoft.playready.recommendation',\n    WIDEVINE_UUID: 'edef8ba9-79d6-4ace-a3c8-27dcd51d21ed',\n    PLAYREADY_UUID: '9a04f079-9840-4286-ab92-e65be0885f95',\n    CLEARKEY_UUID: 'e2719d58-a985-b3c9-781a-b030af78d30e',\n    W3C_CLEARKEY_UUID: '1077efec-c0b2-4d02-ace3-3c1e52e2fb4b',\n    INITIALIZATION_DATA_TYPE_CENC: 'cenc',\n    INITIALIZATION_DATA_TYPE_KEYIDS: 'keyids',\n    INITIALIZATION_DATA_TYPE_WEBM: 'webm',\n    ENCRYPTION_SCHEME_CENC: 'cenc',\n    ENCRYPTION_SCHEME_CBCS: 'cbcs',\n    MEDIA_KEY_MESSAGE_TYPES: {\n        LICENSE_REQUEST: 'license-request',\n        LICENSE_RENEWAL: 'license-renewal',\n        LICENSE_RELEASE: 'license-release',\n        INDIVIDUALIZATION_REQUEST: 'individualization-request',\n    },\n    ROBUSTNESS_STRINGS: {\n        WIDEVINE: {\n            SW_SECURE_CRYPTO: 'SW_SECURE_CRYPTO',\n            SW_SECURE_DECODE: 'SW_SECURE_DECODE',\n            HW_SECURE_CRYPTO: 'HW_SECURE_CRYPTO',\n            HW_SECURE_DECODE: 'HW_SECURE_DECODE',\n            HW_SECURE_ALL: 'HW_SECURE_ALL'\n        }\n    },\n    MEDIA_KEY_STATUSES: {\n        USABLE: 'usable',\n        EXPIRED: 'expired',\n        RELEASED: 'released',\n        OUTPUT_RESTRICTED: 'output-restricted',\n        OUTPUT_DOWNSCALED: 'output-downscaled',\n        STATUS_PENDING: 'status-pending',\n        INTERNAL_ERROR: 'internal-error',\n    }\n}\n\n\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport EventsBase from '../../core/events/EventsBase.js';\n\n/**\n * @class\n * @implements EventsBase\n */\nclass MetricsReportingEvents extends EventsBase {\n    constructor () {\n        super();\n\n        this.METRICS_INITIALISATION_COMPLETE = 'internal_metricsReportingInitialized';\n        this.BECAME_REPORTING_PLAYER = 'internal_becameReportingPlayer';\n\n        /**\n         * Triggered when CMCD data was generated for a HTTP request\n         * @event MetricsReportingEvents#CMCD_DATA_GENERATED\n         */\n        this.CMCD_DATA_GENERATED = 'cmcdDataGenerated';\n    }\n}\n\nlet metricsReportingEvents = new MetricsReportingEvents();\nexport default metricsReportingEvents;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport UTCTiming from '../../dash/vo/UTCTiming.js';\nimport FactoryMaker from '../../core/FactoryMaker.js';\nimport Settings from '../../core/Settings.js';\nimport {checkParameterType} from '../utils/SupervisorTools.js';\nimport Constants from '../constants/Constants.js';\n\nconst DEFAULT_XHR_WITH_CREDENTIALS = false;\n\nfunction CustomParametersModel() {\n\n    let instance,\n        utcTimingSources,\n        xhrWithCredentials,\n        requestInterceptors,\n        responseInterceptors,\n        licenseRequestFilters,\n        licenseResponseFilters,\n        customCapabilitiesFilters,\n        customInitialTrackSelectionFunction,\n        customAbrRules;\n\n    const context = this.context;\n    const settings = Settings(context).getInstance();\n\n    function setup() {\n        xhrWithCredentials = {\n            default: DEFAULT_XHR_WITH_CREDENTIALS\n        };\n        _resetInitialSettings();\n    }\n\n    function _resetInitialSettings() {\n        requestInterceptors = [];\n        responseInterceptors = [];\n        licenseRequestFilters = [];\n        licenseResponseFilters = [];\n        customCapabilitiesFilters = [];\n        customAbrRules = [];\n        customInitialTrackSelectionFunction = null;\n        utcTimingSources = [];\n    }\n\n\n    function reset() {\n        _resetInitialSettings();\n    }\n\n    function setConfig() {\n\n    }\n\n    /**\n     * Registers a custom initial track selection function. Only one function is allowed. Calling this method will overwrite a potentially existing function.\n     * @param {function} customFunc - the custom function that returns the initial track\n     */\n    function setCustomInitialTrackSelectionFunction(customFunc) {\n        customInitialTrackSelectionFunction = customFunc;\n    }\n\n    /**\n     * Resets the custom initial track selection\n     */\n    function resetCustomInitialTrackSelectionFunction() {\n        customInitialTrackSelectionFunction = null;\n    }\n\n    /**\n     * Returns the initial track selection function\n     * @return {function}\n     */\n    function getCustomInitialTrackSelectionFunction() {\n        return customInitialTrackSelectionFunction;\n    }\n\n    /**\n     * Returns all license request filters\n     * @return {array}\n     */\n    function getLicenseRequestFilters() {\n        return licenseRequestFilters;\n    }\n\n    /**\n     * Returns all license response filters\n     * @return {array}\n     */\n    function getLicenseResponseFilters() {\n        return licenseResponseFilters;\n    }\n\n    /**\n     * Registers a license request filter. This enables application to manipulate/overwrite any request parameter and/or request data.\n     * The provided callback function shall return a promise that shall be resolved once the filter process is completed.\n     * The filters are applied in the order they are registered.\n     * @param {function} filter - the license request filter callback\n     */\n    function registerLicenseRequestFilter(filter) {\n        licenseRequestFilters.push(filter);\n    }\n\n    /**\n     * Registers a license response filter. This enables application to manipulate/overwrite the response data\n     * The provided callback function shall return a promise that shall be resolved once the filter process is completed.\n     * The filters are applied in the order they are registered.\n     * @param {function} filter - the license response filter callback\n     */\n    function registerLicenseResponseFilter(filter) {\n        licenseResponseFilters.push(filter);\n    }\n\n    /**\n     * Unregisters a license request filter.\n     * @param {function} filter - the license request filter callback\n     */\n    function unregisterLicenseRequestFilter(filter) {\n        _unregisterFilter(licenseRequestFilters, filter);\n    }\n\n    /**\n     * Unregisters a license response filter.\n     * @param {function} filter - the license response filter callback\n     */\n    function unregisterLicenseResponseFilter(filter) {\n        _unregisterFilter(licenseResponseFilters, filter);\n    }\n\n    /**\n     * Returns all custom capabilities filter\n     * @return {array}\n     */\n    function getCustomCapabilitiesFilters() {\n        return customCapabilitiesFilters;\n    }\n\n    /**\n     * Registers a custom capabilities filter. This enables application to filter representations to use.\n     * The provided callback function shall return a boolean or promise resolving to a boolean based on whether or not to use the representation.\n     * The filters are applied in the order they are registered.\n     * @param {function} filter - the custom capabilities filter callback\n     */\n    function registerCustomCapabilitiesFilter(filter) {\n        customCapabilitiesFilters.push(filter);\n    }\n\n    /**\n     * Unregisters a custom capabilities filter.\n     * @param {function} filter - the custom capabilities filter callback\n     */\n    function unregisterCustomCapabilitiesFilter(filter) {\n        _unregisterFilter(customCapabilitiesFilters, filter);\n    }\n\n    /**\n     * Unregister a filter from the list of existing filers.\n     * @param {array} filters\n     * @param {function} filter\n     * @private\n     */\n    function _unregisterFilter(filters, filter) {\n        let index = -1;\n        filters.some((item, i) => {\n            if (item === filter) {\n                index = i;\n                return true;\n            }\n        });\n        if (index < 0) {\n            return;\n        }\n        filters.splice(index, 1);\n    }\n\n    /**\n     * Iterate through the list of custom ABR rules and find the right rule by name\n     * @param {string} rulename\n     * @return {number} rule number\n     */\n    function _findAbrCustomRuleIndex(rulename) {\n        let i;\n        for (i = 0; i < customAbrRules.length; i++) {\n            if (customAbrRules[i].rulename === rulename) {\n                return i;\n            }\n        }\n        return -1;\n    }\n\n    /**\n     * Add a custom ABR Rule\n     * Rule will be apply on next stream if a stream is being played\n     *\n     * @param {string} type - rule type (one of ['qualitySwitchRules','abandonFragmentRules'])\n     * @param {string} rulename - name of rule (used to identify custom rule). If one rule of same name has been added, then existing rule will be updated\n     * @param {object} rule - the rule object instance\n     * @throws {@link Constants#BAD_ARGUMENT_ERROR BAD_ARGUMENT_ERROR} if called with invalid arguments.\n     */\n    function addAbrCustomRule(type, rulename, rule) {\n        if (typeof type !== 'string' || (type !== Constants.RULES_TYPES.ABANDON_FRAGMENT_RULES && type !== Constants.RULES_TYPES.QUALITY_SWITCH_RULES) ||\n            typeof rulename !== 'string') {\n            throw Constants.BAD_ARGUMENT_ERROR;\n        }\n        let index = _findAbrCustomRuleIndex(rulename);\n        if (index === -1) {\n            // add rule\n            customAbrRules.push({\n                type: type,\n                rulename: rulename,\n                rule: rule\n            });\n        } else {\n            // update rule\n            customAbrRules[index].type = type;\n            customAbrRules[index].rule = rule;\n        }\n    }\n\n    /**\n     * Remove a custom ABR Rule\n     *\n     * @param {string} rulename - name of the rule to be removed\n     */\n    function removeAbrCustomRule(rulename) {\n        if (rulename) {\n            let index = _findAbrCustomRuleIndex(rulename);\n            //if no rulename custom rule has been found, do nothing\n            if (index !== -1) {\n                // remove rule\n                customAbrRules.splice(index, 1);\n            }\n        } else {\n            //if no rulename is defined, remove all ABR custome rules\n            customAbrRules = [];\n        }\n    }\n\n    /**\n     * Remove all custom rules\n     */\n    function removeAllAbrCustomRule() {\n        customAbrRules = [];\n    }\n\n    /**\n     * Return all ABR custom rules\n     * @return {array}\n     */\n    function getAbrCustomRules() {\n        return customAbrRules;\n    }\n\n    /**\n     * Adds a request interceptor. This enables application to monitor, manipulate, overwrite any request parameter and/or request data.\n     * The provided callback function shall return a promise with updated request that shall be resolved once the process of the request is completed.\n     * The interceptors are applied in the order they are added.\n     * @param {function} interceptor - the request interceptor callback\n     */\n    function addRequestInterceptor(interceptor) {\n        requestInterceptors.push(interceptor);\n    }\n\n    /**\n     * Adds a response interceptor. This enables application to monitor, manipulate, overwrite the response data\n     * The provided callback function shall return a promise with updated response that shall be resolved once the process of the response is completed.\n     * The interceptors are applied in the order they are added.\n     * @param {function} interceptor - the response interceptor callback\n     */\n    function addResponseInterceptor(interceptor) {\n        responseInterceptors.push(interceptor);\n    }\n\n    /**\n     * Unregisters a request interceptor.\n     * @param {function} interceptor - the request interceptor callback\n     */\n    function removeRequestInterceptor(interceptor) {\n        _unregisterFilter(requestInterceptors, interceptor);\n    }\n\n    /**\n     * Unregisters a response interceptor.\n     * @param {function} interceptor - the request interceptor callback\n     */\n    function removeResponseInterceptor(interceptor) {\n        _unregisterFilter(responseInterceptors, interceptor);\n    }\n\n    /**\n     * Returns all request interceptors\n     * @return {array}\n     */\n    function getRequestInterceptors() {\n        return requestInterceptors;\n    }\n\n    /**\n     * Returns all response interceptors\n     * @return {array}\n     */\n    function getResponseInterceptors() {\n        return responseInterceptors;\n    }\n\n    /**\n     * Add a UTC timing source at the top of the list\n     * @param {string} schemeIdUri\n     * @param {string} value\n     */\n    function addUTCTimingSource(schemeIdUri, value) {\n        removeUTCTimingSource(schemeIdUri, value); //check if it already exists and remove if so.\n        let vo = new UTCTiming();\n        vo.schemeIdUri = schemeIdUri;\n        vo.value = value;\n        utcTimingSources.push(vo);\n    }\n\n    /**\n     * Return all UTC timing sources\n     * @return {array}\n     */\n    function getUTCTimingSources() {\n        return utcTimingSources;\n    }\n\n    /**\n     * Remove a specific timing source from the array\n     * @param {string} schemeIdUri\n     * @param {string} value\n     */\n    function removeUTCTimingSource(schemeIdUri, value) {\n        checkParameterType(schemeIdUri, 'string');\n        checkParameterType(value, 'string');\n        utcTimingSources.forEach(function (obj, idx) {\n            if (obj.schemeIdUri === schemeIdUri && obj.value === value) {\n                utcTimingSources.splice(idx, 1);\n            }\n        });\n    }\n\n    /**\n     * Remove all timing sources\n     */\n    function clearDefaultUTCTimingSources() {\n        utcTimingSources = [];\n    }\n\n    /**\n     * Add the default timing source to the list\n     */\n    function restoreDefaultUTCTimingSources() {\n        let defaultUtcTimingSource = settings.get().streaming.utcSynchronization.defaultTimingSource;\n        addUTCTimingSource(defaultUtcTimingSource.scheme, defaultUtcTimingSource.value);\n    }\n\n    function setXHRWithCredentialsForType(type, value) {\n        if (!type) {\n            Object.keys(xhrWithCredentials).forEach(key => {\n                setXHRWithCredentialsForType(key, value);\n            });\n        } else {\n            xhrWithCredentials[type] = !!value;\n        }\n    }\n\n    function getXHRWithCredentialsForType(type) {\n        const useCreds = xhrWithCredentials[type];\n\n        return useCreds === undefined ? xhrWithCredentials.default : useCreds;\n    }\n\n    instance = {\n        addAbrCustomRule,\n        addRequestInterceptor,\n        addResponseInterceptor,\n        addUTCTimingSource,\n        clearDefaultUTCTimingSources,\n        getAbrCustomRules,\n        getCustomCapabilitiesFilters,\n        getCustomInitialTrackSelectionFunction,\n        getLicenseRequestFilters,\n        getLicenseResponseFilters,\n        getRequestInterceptors,\n        getResponseInterceptors,\n        getUTCTimingSources,\n        getXHRWithCredentialsForType,\n        registerCustomCapabilitiesFilter,\n        registerLicenseRequestFilter,\n        registerLicenseResponseFilter,\n        removeAbrCustomRule,\n        removeAllAbrCustomRule,\n        removeRequestInterceptor,\n        removeResponseInterceptor,\n        removeUTCTimingSource,\n        reset,\n        resetCustomInitialTrackSelectionFunction,\n        restoreDefaultUTCTimingSources,\n        setConfig,\n        setCustomInitialTrackSelectionFunction,\n        setXHRWithCredentialsForType,\n        unregisterCustomCapabilitiesFilter,\n        unregisterLicenseRequestFilter,\n        unregisterLicenseResponseFilter,\n    };\n\n    setup();\n\n    return instance;\n}\n\nCustomParametersModel.__dashjs_factory_name = 'CustomParametersModel';\nexport default FactoryMaker.getSingletonFactory(CustomParametersModel);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport EventsBase from '../../core/events/EventsBase.js';\n\n/**\n * @class\n */\nclass ProtectionEvents extends EventsBase {\n    /**\n     * @description Public facing external events to be used when including protection package.\n     * All public events will be aggregated into the MediaPlayerEvents Class and can be accessed\n     * via MediaPlayer.events.  public_ is the prefix that we use to move event names to MediaPlayerEvents.\n     */\n    constructor() {\n        super();\n\n        /**\n         * Event ID for events delivered when the protection set receives\n         * a key message from the CDM\n         *\n         * @ignore\n         */\n        this.INTERNAL_KEY_MESSAGE = 'internalKeyMessage';\n\n        /**\n         * Event ID for events delivered when the status of one decryption keys has changed\n         * @ignore\n         */\n        this.INTERNAL_KEY_STATUSES_CHANGED = 'internalkeyStatusesChanged';\n\n        /**\n         * Event ID for events delivered when a new key has been added\n         *\n         * @constant\n         * @deprecated The latest versions of the EME specification no longer\n         * use this event.  {@MediaPlayer.models.protectionModel.eventList.KEY_STATUSES_CHANGED}\n         * is preferred.\n         * @event ProtectionEvents#KEY_ADDED\n         */\n        this.KEY_ADDED = 'public_keyAdded';\n        /**\n         * Event ID for events delivered when an error is encountered by the CDM\n         * while processing a license server response message\n         * @event ProtectionEvents#KEY_ERROR\n         */\n        this.KEY_ERROR = 'public_keyError';\n\n        /**\n         * Event ID for events delivered when the protection set receives\n         * a key message from the CDM\n         * @event ProtectionEvents#KEY_MESSAGE\n         */\n        this.KEY_MESSAGE = 'public_keyMessage';\n\n        /**\n         * Event ID for events delivered when a key session close\n         * process has completed\n         * @event ProtectionEvents#KEY_SESSION_CLOSED\n         */\n        this.KEY_SESSION_CLOSED = 'public_keySessionClosed';\n\n        /**\n         * Event ID for events delivered when a new key sessions creation\n         * process has completed\n         * @event ProtectionEvents#KEY_SESSION_CREATED\n         */\n        this.KEY_SESSION_CREATED = 'public_keySessionCreated';\n\n        /**\n         * Event ID for events delivered when a key session removal\n         * process has completed\n         * @event ProtectionEvents#KEY_SESSION_REMOVED\n         */\n        this.KEY_SESSION_REMOVED = 'public_keySessionRemoved';\n\n        /**\n         * Event ID for events delivered when the status of one or more\n         * decryption keys has changed\n         * @event ProtectionEvents#KEY_STATUSES_CHANGED\n         */\n        this.KEY_STATUSES_CHANGED = 'public_keyStatusesChanged';\n\n        /**\n         * Triggered when the key statuses Map() of the ProtectionController was updated. This happens after there is a keystatuseschange.\n         * The event can be used as an indicator when to refresh the list of possible Representations\n         * @event ProtectionEvents#KEY_STATUSES_MAP_UPDATED\n         */\n        this.KEY_STATUSES_MAP_UPDATED = 'keyStatusesMapUpdated';\n\n        /**\n         * Event ID for events delivered when a key system access procedure\n         * has completed\n         * @event ProtectionEvents#KEY_SYSTEM_ACCESS_COMPLETE\n         */\n        this.KEY_SYSTEM_ACCESS_COMPLETE = 'public_keySystemAccessComplete';\n\n        /**\n         * Event ID for events delivered when a key system selection procedure\n         * completes\n         * @event ProtectionEvents#KEY_SYSTEM_SELECTED\n         */\n        this.KEY_SYSTEM_SELECTED = 'public_keySystemSelected';\n\n        /**\n         * Event ID for events delivered when a license request procedure\n         * has completed\n         * @event ProtectionEvents#LICENSE_REQUEST_COMPLETE\n         */\n        this.LICENSE_REQUEST_COMPLETE = 'public_licenseRequestComplete';\n\n        /**\n         * Sending a license rquest\n         * @event ProtectionEvents#LICENSE_REQUEST_SENDING\n         */\n        this.LICENSE_REQUEST_SENDING = 'public_licenseRequestSending';\n\n        /**\n         * Event ID for needkey/encrypted events\n         * @ignore\n         */\n        this.NEED_KEY = 'needkey';\n\n        /**\n         * Event ID for events delivered when the Protection system is detected and created.\n         * @event ProtectionEvents#PROTECTION_CREATED\n         */\n        this.PROTECTION_CREATED = 'public_protectioncreated';\n\n        /**\n         * Event ID for events delivered when the Protection system is destroyed.\n         * @event ProtectionEvents#PROTECTION_DESTROYED\n         */\n        this.PROTECTION_DESTROYED = 'public_protectiondestroyed';\n\n        /**\n         * Event ID for events delivered when a new server certificate has\n         * been delivered to the CDM\n         * @ignore\n         */\n        this.SERVER_CERTIFICATE_UPDATED = 'serverCertificateUpdated';\n\n        /**\n         * Event ID for events delivered when the process of shutting down\n         * a protection set has completed\n         * @ignore\n         */\n        this.TEARDOWN_COMPLETE = 'protectionTeardownComplete';\n\n        /**\n         * Event ID for events delivered when a HTMLMediaElement has been\n         * associated with the protection set\n         * @ignore\n         */\n        this.VIDEO_ELEMENT_SELECTED = 'videoElementSelected';\n\n        /**\n         * Triggered when the key session has been updated successfully\n         * @ignore\n         */\n        this.KEY_SESSION_UPDATED = 'public_keySessionUpdated';\n    }\n}\n\nlet protectionEvents = new ProtectionEvents();\nexport default protectionEvents;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport ErrorsBase from '../../../core/errors/ErrorsBase.js';\n\n/**\n * @class\n */\nclass ProtectionErrors extends ErrorsBase {\n    constructor() {\n        super();\n\n        /**\n         *  Generid key Error code\n         */\n        this.MEDIA_KEYERR_CODE = 100;\n        /**\n         *  Error code returned by keyerror api for ProtectionModel_01b\n         */\n        this.MEDIA_KEYERR_UNKNOWN_CODE = 101;\n        /**\n         *  Error code returned by keyerror api for ProtectionModel_01b\n         */\n        this.MEDIA_KEYERR_CLIENT_CODE = 102;\n        /**\n         *  Error code returned by keyerror api for ProtectionModel_01b\n         */\n        this.MEDIA_KEYERR_SERVICE_CODE = 103;\n        /**\n         *  Error code returned by keyerror api for ProtectionModel_01b\n         */\n        this.MEDIA_KEYERR_OUTPUT_CODE = 104;\n        /**\n         *  Error code returned by keyerror api for ProtectionModel_01b\n         */\n        this.MEDIA_KEYERR_HARDWARECHANGE_CODE = 105;\n        /**\n         *  Error code returned by keyerror api for ProtectionModel_01b\n         */\n        this.MEDIA_KEYERR_DOMAIN_CODE = 106;\n\n        /**\n         *  Error code returned when an error occured in keymessage event for ProtectionModel_01b\n         */\n        this.MEDIA_KEY_MESSAGE_ERROR_CODE = 107;\n        /**\n         *  Error code returned when challenge is invalid in keymessage event (event triggered by CDM)\n         */\n        this.MEDIA_KEY_MESSAGE_NO_CHALLENGE_ERROR_CODE = 108;\n        /**\n         *  Error code returned when License server certificate has not been successfully updated\n         */\n        this.SERVER_CERTIFICATE_UPDATED_ERROR_CODE = 109;\n        /**\n         *  Error code returned when license validity has expired\n         */\n        this.KEY_STATUS_CHANGED_EXPIRED_ERROR_CODE = 110;\n        /**\n         *  Error code returned when no licenser url is defined\n         */\n        this.MEDIA_KEY_MESSAGE_NO_LICENSE_SERVER_URL_ERROR_CODE = 111;\n        /**\n         *  Error code returned when key system access is denied\n         */\n        this.KEY_SYSTEM_ACCESS_DENIED_ERROR_CODE = 112;\n        /**\n         *  Error code returned when key session has not been successfully created\n         */\n        this.KEY_SESSION_CREATED_ERROR_CODE = 113;\n        /**\n         *  Error code returned when license request failed after a keymessage event has been triggered\n         */\n        this.MEDIA_KEY_MESSAGE_LICENSER_ERROR_CODE = 114;\n\n        this.MEDIA_KEYERR_UNKNOWN_MESSAGE = 'An unspecified error occurred. This value is used for errors that don\\'t match any of the other codes.';\n        this.MEDIA_KEYERR_CLIENT_MESSAGE = 'The Key System could not be installed or updated.';\n        this.MEDIA_KEYERR_SERVICE_MESSAGE = 'The message passed into update indicated an error from the license service.';\n        this.MEDIA_KEYERR_OUTPUT_MESSAGE = 'There is no available output device with the required characteristics for the content protection system.';\n        this.MEDIA_KEYERR_HARDWARECHANGE_MESSAGE = 'A hardware configuration change caused a content protection error.';\n        this.MEDIA_KEYERR_DOMAIN_MESSAGE = 'An error occurred in a multi-device domain licensing configuration. The most common error is a failure to join the domain.';\n        this.MEDIA_KEY_MESSAGE_ERROR_MESSAGE = 'Multiple key sessions were creates with a user-agent that does not support sessionIDs!! Unpredictable behavior ahead!';\n        this.MEDIA_KEY_MESSAGE_NO_CHALLENGE_ERROR_MESSAGE = 'DRM: Empty key message from CDM';\n        this.SERVER_CERTIFICATE_UPDATED_ERROR_MESSAGE = 'Error updating server certificate -- ';\n        this.KEY_STATUS_CHANGED_EXPIRED_ERROR_MESSAGE = 'DRM: KeyStatusChange error! -- License has expired';\n        this.MEDIA_KEY_MESSAGE_NO_LICENSE_SERVER_URL_ERROR_MESSAGE = 'DRM: No license server URL specified!';\n        this.KEY_SYSTEM_ACCESS_DENIED_ERROR_MESSAGE = 'DRM: KeySystem Access Denied! -- ';\n        this.KEY_SESSION_CREATED_ERROR_MESSAGE = 'DRM: unable to create session! --';\n        this.MEDIA_KEY_MESSAGE_LICENSER_ERROR_MESSAGE = 'DRM: licenser error! --';\n    }\n}\n\nlet protectionErrors = new ProtectionErrors();\nexport default protectionErrors;\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport FactoryMaker from '../../core/FactoryMaker.js';\nimport Constants from '../constants/Constants.js';\nimport ProtectionConstants from '../constants/ProtectionConstants.js';\nimport ObjectUtils from './ObjectUtils.js';\nimport Debug from '../../core/Debug.js';\n\nexport function supportsMediaSource() {\n    let hasManagedMediaSource = ('ManagedMediaSource' in window)\n    let hasWebKit = ('WebKitMediaSource' in window);\n    let hasMediaSource = ('MediaSource' in window);\n\n    return (hasManagedMediaSource || hasWebKit || hasMediaSource);\n}\n\nfunction Capabilities() {\n\n    let instance,\n        settings,\n        protectionController,\n        testedCodecConfigurations,\n        encryptedMediaSupported,\n        logger;\n\n    const context = this.context;\n    const objectUtils = ObjectUtils(context).getInstance();\n\n    function setup() {\n        encryptedMediaSupported = false;\n        testedCodecConfigurations = [];\n        logger = Debug(context).getInstance().getLogger(instance);\n    }\n\n    function setConfig(config) {\n        if (!config) {\n            return;\n        }\n\n        if (config.settings) {\n            settings = config.settings;\n        }\n\n        if (config.protectionController) {\n            protectionController = config.protectionController;\n        }\n    }\n\n    function setProtectionController(data) {\n        protectionController = data;\n    }\n\n    function areKeyIdsUsable(mediaInfo) {\n        if (!protectionController || !mediaInfo || !mediaInfo.normalizedKeyIds || mediaInfo.normalizedKeyIds.size === 0) {\n            return true\n        }\n\n        return protectionController.areKeyIdsUsable(mediaInfo.normalizedKeyIds)\n    }\n\n    function areKeyIdsExpired(mediaInfo) {\n        if (!protectionController || !mediaInfo || !mediaInfo.normalizedKeyIds || mediaInfo.normalizedKeyIds.size === 0) {\n            return false\n        }\n\n        return protectionController.areKeyIdsExpired(mediaInfo.normalizedKeyIds)\n    }\n\n    function isProtectionCompatible(previousStreamInfo, newStreamInfo) {\n        if (!newStreamInfo) {\n            return true;\n        }\n        return !(!previousStreamInfo.isEncrypted && newStreamInfo.isEncrypted);\n    }\n\n    /**\n     * Returns whether Encrypted Media Extensions are supported on this\n     * user agent\n     *\n     * @return {boolean} true if EME is supported, false otherwise\n     */\n    function supportsEncryptedMedia() {\n        return encryptedMediaSupported;\n    }\n\n    /**\n     * Checks whether SourceBuffer.changeType() is available\n     * @return {boolean} true is changeType() is available\n     */\n    function supportsChangeType() {\n        return !!window.SourceBuffer && !!SourceBuffer.prototype && !!SourceBuffer.prototype.changeType;\n    }\n\n    /**\n     * @param {boolean} value\n     */\n    function setEncryptedMediaSupported(value) {\n        encryptedMediaSupported = value;\n    }\n\n    /**\n     * Check if a codec is supported by the MediaSource. We use the MediaCapabilities API or the MSE to check.\n     * @param {object} basicConfiguration\n     * @param {string} type\n     * @return {Promise<>}\n     */\n    function runCodecSupportCheck(basicConfiguration, type) {\n\n        if (type !== Constants.AUDIO && type !== Constants.VIDEO) {\n            return Promise.resolve();\n        }\n\n        const configurationsToTest = _getEnhancedConfigurations(basicConfiguration, type);\n\n        if (_canUseMediaCapabilitiesApi(basicConfiguration, type)) {\n            return _checkCodecWithMediaCapabilities(configurationsToTest);\n        }\n\n        _checkCodecWithMse(configurationsToTest);\n        return Promise.resolve();\n    }\n\n    /**\n     * Checks whether a codec is supported according to the previously tested configurations.\n     * Note that you need to call runCodecSupportCheck() first to populate the testedCodecConfigurations array.\n     * This function only validates codec support based on previously tested configurations.\n     * @param basicConfiguration\n     * @param type\n     * @returns {*|boolean}\n     */\n    function isCodecSupportedBasedOnTestedConfigurations(basicConfiguration, type) {\n        if (!basicConfiguration || !basicConfiguration.codec || (basicConfiguration.isSupported === false)) {\n            return false;\n        }\n\n        const configurationsToTest = _getEnhancedConfigurations(basicConfiguration, type);\n\n        const testedConfigurations = configurationsToTest\n            .map((config) => {\n                return _getTestedCodecConfiguration(config, type);\n            })\n            .filter((config) => {\n                return config !== null && config !== undefined;\n            })\n\n        if (testedConfigurations && testedConfigurations.length > 0) {\n            return _isConfigSupported(testedConfigurations)\n        }\n\n        return true\n    }\n\n    /**\n     * MediaCapabilitiesAPI throws an error if one of the attribute is missing. We only use it if we have all required information.\n     * @return {boolean}\n     * @private\n     */\n    function _canUseMediaCapabilitiesApi(basicConfiguration, type) {\n        return _isMediaCapabilitiesApiSupported() && ((basicConfiguration.codec && type === Constants.AUDIO) || (type === Constants.VIDEO && basicConfiguration.codec && basicConfiguration.width && basicConfiguration.height && basicConfiguration.bitrate && basicConfiguration.framerate));\n    }\n\n    function _isMediaCapabilitiesApiSupported() {\n        return settings.get().streaming.capabilities.useMediaCapabilitiesApi && navigator.mediaCapabilities && navigator.mediaCapabilities.decodingInfo\n    }\n\n\n    /**\n     * Check codec support using the MSE\n     * @param {object} configurationsToTest\n     * @private\n     */\n    function _checkCodecWithMse(configurationsToTest) {\n        if (!configurationsToTest || !configurationsToTest.length) {\n            return;\n        }\n\n        // We only need one config here as we can not add any DRM configuration to the test\n        const configurationToTest = configurationsToTest[0];\n\n        const alreadyTestedConfiguration = _getTestedCodecConfiguration(configurationToTest);\n        if (alreadyTestedConfiguration) {\n            return\n        }\n\n        let decodingInfo = {\n            supported: false\n        }\n\n        if ('ManagedMediaSource' in window && ManagedMediaSource.isTypeSupported(configurationToTest.mediaSourceCodecString)) {\n            decodingInfo.supported = true;\n        } else if ('MediaSource' in window && MediaSource.isTypeSupported(configurationToTest.mediaSourceCodecString)) {\n            decodingInfo.supported = true;\n        } else if ('WebKitMediaSource' in window && WebKitMediaSource.isTypeSupported(configurationToTest.mediaSourceCodecString)) {\n            decodingInfo.supported = true;\n        }\n\n        configurationToTest.decodingInfo = decodingInfo;\n        testedCodecConfigurations.push(configurationToTest);\n    }\n\n\n    /**\n     * Check codec support using the MediaCapabilities API\n     * @param {object} configurationsToTest\n     * @return {Promise<boolean>}\n     * @private\n     */\n    function _checkCodecWithMediaCapabilities(configurationsToTest) {\n        return new Promise((resolve) => {\n\n            if (!configurationsToTest || configurationsToTest.length === 0) {\n                resolve();\n                return;\n            }\n\n            const promises = configurationsToTest.map((configuration) => {\n                return _checkSingleConfigurationWithMediaCapabilities(configuration);\n            })\n\n            Promise.allSettled(promises)\n                .then(() => {\n                    resolve();\n                })\n                .catch((e) => {\n                    logger.error(e);\n                    resolve();\n                })\n        });\n    }\n\n    function _getEnhancedConfigurations(inputConfig, type) {\n        let configuration\n\n        if (type === Constants.VIDEO) {\n            configuration = _getGenericMediaCapabilitiesVideoConfig(inputConfig)\n        } else if (type === Constants.AUDIO) {\n            configuration = _getGenericMediaCapabilitiesAudioConfig(inputConfig)\n        }\n\n        configuration[type].contentType = inputConfig.codec;\n        configuration[type].bitrate = parseInt(inputConfig.bitrate);\n        configuration.type = 'media-source';\n\n        let mediaSourceCodecString = inputConfig.codec;\n        if (inputConfig.width && inputConfig.height) {\n            mediaSourceCodecString += ';width=\"' + inputConfig.width + '\";height=\"' + inputConfig.height + '\"';\n        }\n        configuration.mediaSourceCodecString = mediaSourceCodecString;\n\n        return _enhanceGenericConfigurationWithKeySystemConfiguration(configuration, inputConfig, type)\n    }\n\n    function _enhanceGenericConfigurationWithKeySystemConfiguration(genericConfiguration, inputConfig, type) {\n        if (!inputConfig || !inputConfig.keySystemsMetadata || inputConfig.keySystemsMetadata.length === 0) {\n            return [genericConfiguration];\n        }\n\n        return inputConfig.keySystemsMetadata.map((keySystemMetadata) => {\n            const curr = { ...genericConfiguration };\n            if (keySystemMetadata.ks) {\n                curr.keySystemConfiguration = {};\n                if (keySystemMetadata.ks.systemString) {\n                    curr.keySystemConfiguration.keySystem = keySystemMetadata.ks.systemString;\n                }\n\n                let robustnessLevel = ''\n                if (keySystemMetadata.ks.systemString === ProtectionConstants.WIDEVINE_KEYSTEM_STRING) {\n                    robustnessLevel = ProtectionConstants.ROBUSTNESS_STRINGS.WIDEVINE.SW_SECURE_CRYPTO;\n                }\n                const protData = keySystemMetadata.protData\n                const audioRobustness = (protData && protData.audioRobustness && protData.audioRobustness.length > 0) ? protData.audioRobustness : robustnessLevel;\n                const videoRobustness = (protData && protData.videoRobustness && protData.videoRobustness.length > 0) ? protData.videoRobustness : robustnessLevel;\n\n                if (type === Constants.AUDIO) {\n                    curr.keySystemConfiguration[type] = { robustness: audioRobustness }\n                } else if (type === Constants.VIDEO) {\n                    curr.keySystemConfiguration[type] = { robustness: videoRobustness }\n                }\n            }\n            return curr\n        })\n    }\n\n    function _checkSingleConfigurationWithMediaCapabilities(configuration) {\n        return new Promise((resolve) => {\n            const alreadyTestedConfiguration = _getTestedCodecConfiguration(configuration);\n            if (alreadyTestedConfiguration) {\n                resolve();\n                return\n            }\n\n            navigator.mediaCapabilities.decodingInfo(configuration)\n                .then((decodingInfo) => {\n                    configuration.decodingInfo = decodingInfo;\n                    testedCodecConfigurations.push(configuration);\n                    resolve();\n                })\n                .catch((e) => {\n                    configuration.decodingInfo = { supported: false };\n                    testedCodecConfigurations.push(configuration);\n                    logger.error(e);\n                    resolve();\n                })\n        })\n    }\n\n    function _isConfigSupported(testedConfigurations) {\n        return testedConfigurations.some((testedConfiguration) => {\n            return testedConfiguration && testedConfiguration.decodingInfo && testedConfiguration.decodingInfo.supported\n        });\n    }\n\n    function _getTestedCodecConfiguration(configuration) {\n        if (!testedCodecConfigurations || testedCodecConfigurations.length === 0 || !configuration) {\n            return\n        }\n\n        return testedCodecConfigurations.find((current) => {\n            const audioEqual = _isConfigEqual(configuration, current, Constants.AUDIO);\n            const videoEqual = _isConfigEqual(configuration, current, Constants.VIDEO);\n            const keySystemEqual = _isConfigEqual(configuration, current, 'keySystemConfiguration');\n\n            return audioEqual && videoEqual && keySystemEqual\n        })\n    }\n\n    function _isConfigEqual(configuration, current, attribute) {\n\n        // Config not present in both of them\n        if (!configuration[attribute] && !current[attribute]) {\n            return true\n        }\n\n        // Config present in both we need to compare\n        if (configuration[attribute] && current[attribute]) {\n            return objectUtils.areEqual(configuration[attribute], current[attribute])\n        }\n\n        return false\n    }\n\n    function _getGenericMediaCapabilitiesVideoConfig(inputConfig) {\n        const configuration = {\n            video: {}\n        };\n\n        if (!inputConfig) {\n            return configuration;\n        }\n        if (inputConfig.width) {\n            configuration.video.width = inputConfig.width;\n        }\n        if (inputConfig.height) {\n            configuration.video.height = inputConfig.height;\n        }\n        if (inputConfig.framerate) {\n            configuration.video.framerate = parseFloat(inputConfig.framerate)\n        }\n        if (inputConfig.hdrMetadataType) {\n            configuration.video.hdrMetadataType = inputConfig.hdrMetadataType;\n        }\n        if (inputConfig.colorGamut) {\n            configuration.video.colorGamut = inputConfig.colorGamut;\n        }\n        if (inputConfig.transferFunction) {\n            configuration.video.transferFunction = inputConfig.transferFunction;\n        }\n\n        return configuration\n    }\n\n    function _getGenericMediaCapabilitiesAudioConfig(inputConfig) {\n        const configuration = {\n            audio: {}\n        };\n\n        if (inputConfig.samplerate) {\n            configuration.audio.samplerate = inputConfig.samplerate;\n        }\n\n        return configuration\n    }\n\n    /**\n     * Add additional descriptors to list of descriptors,\n     * avoid duplicated entries\n     * @param {array} props\n     * @param {array} newProps\n     * @return {array}\n     * @private\n     */\n    function _addProperties(props, newProps) {\n        props = props.filter(p => {\n            return !(p.schemeIdUri && (newProps.some(np => np.schemeIdUri === p.schemeIdUri)));\n        });\n        props.push(...newProps);\n\n        return props;\n    }\n\n    /**\n     * Check if a specific EssentialProperty is supported\n     * @param {DescriptorType} ep\n     * @return {boolean}\n     */\n    function supportsEssentialProperty(ep) {\n        let supportedEssentialProps = settings.get().streaming.capabilities.supportedEssentialProperties;\n\n        // we already took care of these descriptors with the codecs check\n        // let's bypass them here\n        if (settings.get().streaming.capabilities.useMediaCapabilitiesApi && settings.get().streaming.capabilities.filterVideoColorimetryEssentialProperties) {\n            supportedEssentialProps = _addProperties(supportedEssentialProps,\n                [\n                    { schemeIdUri: Constants.COLOUR_PRIMARIES_SCHEME_ID_URI },\n                    { schemeIdUri: Constants.MATRIX_COEFFICIENTS_SCHEME_ID_URI },\n                    { schemeIdUri: Constants.TRANSFER_CHARACTERISTICS_SCHEME_ID_URI }\n                ]\n            );\n        }\n        if (settings.get().streaming.capabilities.useMediaCapabilitiesApi && settings.get().streaming.capabilities.filterHDRMetadataFormatEssentialProperties) {\n            supportedEssentialProps = _addProperties(supportedEssentialProps, [{ schemeIdUri: Constants.HDR_METADATA_FORMAT_SCHEME_ID_URI }]);\n        }\n\n        try {\n            return ep.inArray(supportedEssentialProps);\n        } catch (e) {\n            return true;\n        }\n    }\n\n    instance = {\n        areKeyIdsExpired,\n        areKeyIdsUsable,\n        isCodecSupportedBasedOnTestedConfigurations,\n        isProtectionCompatible,\n        runCodecSupportCheck,\n        setConfig,\n        setEncryptedMediaSupported,\n        setProtectionController,\n        supportsChangeType,\n        supportsEncryptedMedia,\n        supportsEssentialProperty,\n        supportsMediaSource,\n    };\n\n    setup();\n\n    return instance;\n}\n\nCapabilities.__dashjs_factory_name = 'Capabilities';\nexport default FactoryMaker.getSingletonFactory(Capabilities);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport FactoryMaker from '../../core/FactoryMaker.js';\nimport {checkInteger} from './SupervisorTools.js';\n\nfunction CustomTimeRanges(/*config*/) {\n    let customTimeRangeArray = [];\n    let length = 0;\n\n    function add(start, end) {\n        let i;\n\n        // eslint-disable-next-line curly\n        for (i = 0; (i < this.customTimeRangeArray.length) && (start > this.customTimeRangeArray[i].start); i++) ;\n\n        this.customTimeRangeArray.splice(i, 0, { start: start, end: end });\n\n        for (i = 0; i < this.customTimeRangeArray.length - 1; i++) {\n            if (this.mergeRanges(i, i + 1)) {\n                i--;\n            }\n        }\n        this.length = this.customTimeRangeArray.length;\n    }\n\n    function clear() {\n        this.customTimeRangeArray = [];\n        this.length = 0;\n    }\n\n    function remove(start, end) {\n        for (let i = 0; i < this.customTimeRangeArray.length; i++) {\n            if (start <= this.customTimeRangeArray[i].start && end >= this.customTimeRangeArray[i].end) {\n                //      |--------------Range i-------|\n                //|---------------Range to remove ---------------|\n                //    or\n                //|--------------Range i-------|\n                //|--------------Range to remove ---------------|\n                //    or\n                //                 |--------------Range i-------|\n                //|--------------Range to remove ---------------|\n                this.customTimeRangeArray.splice(i, 1);\n                i--;\n\n            } else if (start > this.customTimeRangeArray[i].start && end < this.customTimeRangeArray[i].end) {\n                //|-----------------Range i----------------|\n                //        |-------Range to remove -----|\n                this.customTimeRangeArray.splice(i + 1, 0, { start: end, end: this.customTimeRangeArray[i].end });\n                this.customTimeRangeArray[i].end = start;\n                break;\n            } else if (start > this.customTimeRangeArray[i].start && start < this.customTimeRangeArray[i].end) {\n                //|-----------Range i----------|\n                //                    |---------Range to remove --------|\n                //    or\n                //|-----------------Range i----------------|\n                //            |-------Range to remove -----|\n                this.customTimeRangeArray[i].end = start;\n            } else if (end > this.customTimeRangeArray[i].start && end < this.customTimeRangeArray[i].end) {\n                //                     |-----------Range i----------|\n                //|---------Range to remove --------|\n                //            or\n                //|-----------------Range i----------------|\n                //|-------Range to remove -----|\n                this.customTimeRangeArray[i].start = end;\n            }\n        }\n\n        this.length = this.customTimeRangeArray.length;\n    }\n\n    function mergeRanges(rangeIndex1, rangeIndex2) {\n        let range1 = this.customTimeRangeArray[rangeIndex1];\n        let range2 = this.customTimeRangeArray[rangeIndex2];\n\n        if (range1.start <= range2.start && range2.start <= range1.end && range1.end <= range2.end) {\n            //|-----------Range1----------|\n            //                    |-----------Range2----------|\n            range1.end = range2.end;\n            this.customTimeRangeArray.splice(rangeIndex2, 1);\n            return true;\n\n        } else if (range2.start <= range1.start && range1.start <= range2.end && range2.end <= range1.end) {\n            //                |-----------Range1----------|\n            //|-----------Range2----------|\n            range1.start = range2.start;\n            this.customTimeRangeArray.splice(rangeIndex2, 1);\n            return true;\n        } else if (range2.start <= range1.start && range1.start <= range2.end && range1.end <= range2.end) {\n            //      |--------Range1-------|\n            //|---------------Range2--------------|\n            this.customTimeRangeArray.splice(rangeIndex1, 1);\n            return true;\n        } else if (range1.start <= range2.start && range2.start <= range1.end && range2.end <= range1.end) {\n            //|-----------------Range1--------------|\n            //        |-----------Range2----------|\n            this.customTimeRangeArray.splice(rangeIndex2, 1);\n            return true;\n        }\n        return false;\n    }\n\n    function start(index) {\n        checkInteger(index);\n\n        if (index >= this.customTimeRangeArray.length || index < 0) {\n            return NaN;\n        }\n\n        return this.customTimeRangeArray[index].start;\n    }\n\n    function end(index) {\n        checkInteger(index);\n\n        if (index >= this.customTimeRangeArray.length || index < 0) {\n            return NaN;\n        }\n\n        return this.customTimeRangeArray[index].end;\n    }\n\n    return {\n        customTimeRangeArray: customTimeRangeArray,\n        length: length,\n        add: add,\n        clear: clear,\n        remove: remove,\n        mergeRanges: mergeRanges,\n        start: start,\n        end: end\n    };\n}\n\nCustomTimeRanges.__dashjs_factory_name = 'CustomTimeRanges';\nexport default FactoryMaker.getClassFactory(CustomTimeRanges);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport FactoryMaker from '../../core/FactoryMaker.js';\nimport deepEqual from 'fast-deep-equal';\n\n/**\n * @module ObjectUtils\n * @ignore\n * @description Provides utility functions for objects\n */\nfunction ObjectUtils() {\n\n    let instance;\n\n    /**\n     * Returns true if objects are equal\n     * @return {boolean}\n     * @param {object} obj1\n     * @param {object} obj2\n     * @memberof module:ObjectUtils\n     * @instance\n     */\n    function areEqual(obj1, obj2) {\n        return deepEqual(obj1, obj2);\n    }\n\n    instance = {\n        areEqual\n    };\n\n    return instance;\n}\n\nObjectUtils.__dashjs_factory_name = 'ObjectUtils';\nexport default FactoryMaker.getSingletonFactory(ObjectUtils);\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport Constants from '../constants/Constants.js';\n\nexport function checkParameterType(parameter, type) {\n    if (typeof parameter !== type) {\n        throw Constants.BAD_ARGUMENT_ERROR;\n    }\n}\n\nexport function checkInteger(parameter) {\n    const isInt = parameter !== null && !isNaN(parameter) && (parameter % 1 === 0);\n\n    if (!isInt) {\n        throw Constants.BAD_ARGUMENT_ERROR + ' : argument is not an integer';\n    }\n}\n\nexport function checkRange(parameter, min, max) {\n    if (parameter < min || parameter > max) {\n        throw Constants.BAD_ARGUMENT_ERROR + ' : argument out of range';\n    }\n}\n\nexport function checkIsVideoOrAudioType(type) {\n    if (typeof type !== 'string' || (type !== Constants.AUDIO && type !== Constants.VIDEO)) {\n        throw Constants.BAD_ARGUMENT_ERROR;\n    }\n}\n","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @class\n * @ignore\n */\nclass DashJSError {\n    constructor(code, message, data) {\n        this.code = code || null;\n        this.message = message || null;\n        this.data = data || null;\n    }\n}\n\nexport default DashJSError;","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n/**\n * @classdesc This Object holds reference to the HTTPRequest for manifest, fragment and xlink loading.\n * Members which are not defined in ISO23009-1 Annex D should be prefixed by a _ so that they are ignored\n * by Metrics Reporting code.\n * @ignore\n */\nclass HTTPRequest {\n    /**\n     * @class\n     */\n    constructor() {\n        /**\n         * Identifier of the TCP connection on which the HTTP request was sent.\n         * @public\n         */\n        this.tcpid = null;\n        /**\n         * This is an optional parameter and should not be included in HTTP request/response transactions for progressive download.\n         * The type of the request:\n         * - MPD\n         * - XLink expansion\n         * - Initialization Fragment\n         * - Index Fragment\n         * - Media Fragment\n         * - Bitstream Switching Fragment\n         * - other\n         * @public\n         */\n        this.type = null;\n        /**\n         * The original URL (before any redirects or failures)\n         * @public\n         */\n        this.url = null;\n        /**\n         * The actual URL requested, if different from above\n         * @public\n         */\n        this.actualurl = null;\n        /**\n         * The contents of the byte-range-spec part of the HTTP Range header.\n         * @public\n         */\n        this.range = null;\n        /**\n         * Real-Time | The real time at which the request was sent.\n         * @public\n         */\n        this.trequest = null;\n        /**\n         * Real-Time | The real time at which the first byte of the response was received.\n         * @public\n         */\n        this.tresponse = null;\n        /**\n         * The HTTP response code.\n         * @public\n         */\n        this.responsecode = null;\n        /**\n         * The duration of the throughput trace intervals (ms), for successful requests only.\n         * @public\n         */\n        this.interval = null;\n        /**\n         * Throughput traces, for successful requests only.\n         * @public\n         */\n        this.trace = [];\n        /**\n         * The CMSD static and dynamic values retrieved from CMSD response headers.\n         * @public\n         */\n        this.cmsd = null;\n\n        /**\n         * Type of stream (\"audio\" | \"video\" etc..)\n         * @public\n         */\n        this._stream = null;\n        /**\n         * Real-Time | The real time at which the request finished.\n         * @public\n         */\n        this._tfinish = null;\n        /**\n         * The duration of the media requests, if available, in seconds.\n         * @public\n         */\n        this._mediaduration = null;\n        /**\n         * The media segment quality\n         * @public\n         */\n        this._quality = null;\n        /**\n         * all the response headers from request.\n         * @public\n         */\n        this._responseHeaders = null;\n        /**\n         * The selected service location for the request. string.\n         * @public\n         */\n        this._serviceLocation = null;\n        /**\n         * The type of the loader that was used. Distinguish between fetch loader and xhr loader\n         */\n        this._fileLoaderType = null;\n        /**\n         * The values derived from the ResourceTimingAPI.\n         */\n        this._resourceTimingValues = null;\n    }\n}\n\n/**\n * @classdesc This Object holds reference to the progress of the HTTPRequest.\n * @ignore\n */\nclass HTTPRequestTrace {\n    /**\n     * @class\n     */\n    constructor() {\n        /**\n         * Real-Time | Measurement stream start.\n         * @public\n         */\n        this.s = null;\n        /**\n         * Measurement stream duration (ms).\n         * @public\n         */\n        this.d = null;\n        /**\n         * List of integers counting the bytes received in each trace interval within the measurement stream.\n         * @public\n         */\n        this.b = [];\n    }\n}\n\nHTTPRequest.GET = 'GET';\nHTTPRequest.HEAD = 'HEAD';\nHTTPRequest.MPD_TYPE = 'MPD';\nHTTPRequest.XLINK_EXPANSION_TYPE = 'XLinkExpansion';\nHTTPRequest.INIT_SEGMENT_TYPE = 'InitializationSegment';\nHTTPRequest.INDEX_SEGMENT_TYPE = 'IndexSegment';\nHTTPRequest.MEDIA_SEGMENT_TYPE = 'MediaSegment';\nHTTPRequest.BITSTREAM_SWITCHING_SEGMENT_TYPE = 'BitstreamSwitchingSegment';\nHTTPRequest.MSS_FRAGMENT_INFO_SEGMENT_TYPE = 'FragmentInfoSegment';\nHTTPRequest.DVB_REPORTING_TYPE = 'DVBReporting';\nHTTPRequest.LICENSE = 'license';\nHTTPRequest.CONTENT_STEERING_TYPE = 'ContentSteering';\nHTTPRequest.OTHER_TYPE = 'other';\n\nexport {HTTPRequest, HTTPRequestTrace};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","__webpack_require__.amdO = {};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport MediaPlayer from './src/streaming/MediaPlayer.js';\nimport FactoryMaker from './src/core/FactoryMaker.js';\nimport Debug from './src/core/Debug.js';\nimport { getVersionString } from './src/core/Version.js';\n\n// Shove both of these into the global scope\nvar context = (typeof window !== 'undefined' && window) || global;\n\nvar dashjs = context.dashjs;\nif (!dashjs) {\n    dashjs = context.dashjs = {};\n}\n\ndashjs.MediaPlayer = MediaPlayer;\ndashjs.FactoryMaker = FactoryMaker;\ndashjs.Debug = Debug;\ndashjs.Version = getVersionString();\n\nexport default dashjs;\nexport { MediaPlayer, FactoryMaker, Debug};\n"],"names":["exports","byteLength","b64","lens","getLens","validLen","placeHoldersLen","toByteArray","tmp","i","arr","Arr","_byteLength","curByte","len","revLookup","charCodeAt","fromByteArray","uint8","length","extraBytes","parts","maxChunkLength","len2","push","encodeChunk","lookup","join","Uint8Array","Array","code","Error","indexOf","start","end","num","output","base64","require","ieee754","customInspectSymbol","Symbol","Buffer","SlowBuffer","alloc","INSPECT_MAX_BYTES","K_MAX_LENGTH","createBuffer","RangeError","buf","Object","setPrototypeOf","prototype","arg","encodingOrOffset","TypeError","allocUnsafe","from","value","string","encoding","isEncoding","actual","write","slice","fromString","ArrayBuffer","isView","arrayView","isInstance","copy","fromArrayBuffer","buffer","byteOffset","fromArrayLike","fromArrayView","SharedArrayBuffer","valueOf","b","obj","isBuffer","checked","undefined","numberIsNaN","type","isArray","data","fromObject","toPrimitive","assertSize","size","array","toString","mustMatch","arguments","loweredCase","utf8ToBytes","base64ToBytes","toLowerCase","slowToString","this","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","n","m","bidirectionalIndexOf","val","dir","arrayIndexOf","call","lastIndexOf","indexSize","arrLength","valLength","String","read","readUInt16BE","foundIndex","found","j","hexWrite","offset","Number","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","str","byteArray","asciiToBytes","base64Write","ucs2Write","units","c","hi","lo","utf16leToBytes","Math","min","res","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","codePoints","MAX_ARGUMENTS_LENGTH","fromCharCode","apply","decodeCodePointsArray","kMaxLength","TYPED_ARRAY_SUPPORT","proto","foo","e","typedArraySupport","console","error","defineProperty","enumerable","get","poolSize","fill","allocUnsafeSlow","_isBuffer","compare","a","x","y","concat","list","pos","set","swap16","swap32","swap64","toLocaleString","equals","inspect","max","replace","trim","target","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","toJSON","_arr","ret","out","hexSliceLookupTable","bytes","checkOffset","ext","checkInt","checkIEEE754","writeFloat","littleEndian","noAssert","writeDouble","newBuf","subarray","readUintLE","readUIntLE","mul","readUintBE","readUIntBE","readUint8","readUInt8","readUint16LE","readUInt16LE","readUint16BE","readUint32LE","readUInt32LE","readUint32BE","readUInt32BE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUintLE","writeUIntLE","writeUintBE","writeUIntBE","writeUint8","writeUInt8","writeUint16LE","writeUInt16LE","writeUint16BE","writeUInt16BE","writeUint32LE","writeUInt32LE","writeUint32BE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","copyWithin","INVALID_BASE64_RE","Infinity","leadSurrogate","split","base64clean","src","dst","constructor","name","alphabet","table","i16","ISOBoxer","arrayBuffer","ISOFile","parse","parser","ISOBox","_boxProcessors","parent","newBox","create","append","createBox","version","flags","Utils","dataViewToString","dataView","impliedEncoding","TextDecoder","decode","getUint8","utf8ToByteArray","u","TextEncoder","encode","appendBox","box","_offset","_cursor","_root","_raw","_parent","index","boxes","splice","parseBuffer","addBoxProcessor","createFile","createFullBox","Cursor","initialOffset","DataView","fetch","result","fetchAll","returnEarly","_sweep","getLength","_rawo","_parseBox","_boxContainers","_procField","_parsing","_readField","_writeField","_procFieldArray","_procFullBox","_procEntries","fn","_procSubEntries","entry","_procEntryField","_procSubBoxes","_readUint","_readInt","_readTemplate","_readTerminatedString","_readString","_readData","_readUTF8String","_readUTF8TerminatedString","getInt8","getInt16","getInt32","s1","s2","getUint16","getUint32","char","l","_incomplete","largesize","_parseContainerBox","_data","_parseFullBox","_writeData","_writeInt","setInt8","setInt16","setInt32","floor","setUint32","_writeUint","setUint8","setUint16","_writeString","_writeTerminatedString","_writeTemplate","pre","post","_writeUTF8String","entry_count","nbCompatibleBrands","is_group_label","language","num_entities_in_group","DataSize","sample_count","reference_count","reference","reference_type","referenced_size","sap","starts_with_SAP","SAP_type","SAP_delta_time","subsegment_count","subsegment","ranges_count","range","subsample_count","subsample","reserved","length_size_of_traf_num","length_size_of_trun_num","length_size_of_sample_num","number_of_entry","sample","ReflectOwnKeys","R","Reflect","ReflectApply","receiver","args","Function","ownKeys","getOwnPropertySymbols","getOwnPropertyNames","NumberIsNaN","isNaN","EventEmitter","init","module","once","emitter","Promise","resolve","reject","errorListener","err","removeListener","resolver","eventTargetAgnosticAddListener","handler","on","addErrorHandlerIfEventEmitter","_events","_eventsCount","_maxListeners","defaultMaxListeners","checkListener","listener","_getMaxListeners","that","_addListener","prepend","events","existing","warning","newListener","emit","unshift","warned","w","count","warn","onceWrapper","fired","wrapFn","_onceWrap","state","wrapped","bind","_listeners","unwrap","evlistener","unwrapListeners","arrayClone","listenerCount","addEventListener","wrapListener","removeEventListener","getPrototypeOf","setMaxListeners","getMaxListeners","doError","er","message","context","listeners","addListener","prependListener","prependOnceListener","position","originalListener","shift","pop","spliceOne","off","removeAllListeners","key","keys","rawListeners","eventNames","equal","RegExp","source","hasOwnProperty","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","d","s","NaN","rt","abs","log","LN2","sax","strict","opt","SAXParser","SAXStream","createStream","MAX_BUFFER_LENGTH","Stream","buffers","clearBuffers","q","bufferCheckPosition","lowercase","lowercasetags","looseCase","tags","closed","closedRoot","sawRoot","tag","noscript","S","BEGIN","strictEntities","ENTITIES","XML_ENTITIES","attribList","xmlns","ns","rootNS","trackPosition","line","column","EVENTS","o","F","chunk","charAt","BEGIN_WHITESPACE","beginWhiteSpace","TEXT","starti","textNode","substring","not","whitespace","strictFail","TEXT_ENTITY","OPEN_WAKA","startTagPosition","SCRIPT","SCRIPT_ENDING","script","CLOSE_TAG","SGML_DECL","sgmlDecl","is","nameStart","OPEN_TAG","tagName","PROC_INST","procInstName","procInstBody","pad","toUpperCase","CDATA","emitNode","cdata","COMMENT","comment","DOCTYPE","doctype","quote","SGML_DECL_QUOTED","DOCTYPE_DTD","DOCTYPE_QUOTED","DOCTYPE_DTD_QUOTED","COMMENT_ENDING","COMMENT_ENDED","textopts","CDATA_ENDING","CDATA_ENDING_2","PROC_INST_ENDING","PROC_INST_BODY","body","nameBody","newTag","openTag","OPEN_TAG_SLASH","ATTRIB","closeTag","attribName","attribValue","ATTRIB_NAME","ATTRIB_VALUE","attrib","ATTRIB_NAME_SAW_WHITE","attributes","ATTRIB_VALUE_QUOTED","ATTRIB_VALUE_UNQUOTED","ATTRIB_VALUE_ENTITY_Q","ATTRIB_VALUE_CLOSED","attribEnd","ATTRIB_VALUE_ENTITY_U","CLOSE_TAG_SAW_WHITE","returnState","parseEntity","entity","entityBody","entityStart","maxAllowed","maxActual","closeText","checkBufferLength","resume","close","flush","ex","streamWraps","filter","ev","_parser","writable","readable","me","onend","onerror","_decoder","forEach","h","configurable","SD","number","letter","XML_NAMESPACE","XMLNS_NAMESPACE","xml","charClass","reduce","charclass","isRegExp","match","stringFromCharCode","fromCodePoint","STATE","COMMENT_STARTING","event","nodeType","text","normalize","qname","attribute","qualName","prefix","local","qn","selfClosing","uri","JSON","stringify","p","nv","isSelfClosing","t","closeTo","entityLC","numStr","highSurrogate","lowSurrogate","codeUnits","imscDoc","imscNames","imscStyles","imscUtils","cleanRubyContainers","element","rubyval","styleAttrs","byName","ruby","isrubycontainer","kind","contents","resolveTiming","doc","prev_sibling","isinseq","timeContainer","implicit_begin","begin","explicit_begin","implicit_end","set_i","sets","content_i","POSITIVE_INFINITY","explicit_end","explicit_dur","_registerEvent","ForeignElement","node","TT","head","Head","styling","Styling","layout","Layout","styles","initials","Style","id","styleRefs","Initial","regions","Image","ContentElement","IdentifiedElement","LayoutElement","regionID","StyledElement","AnimatedElement","ContainerElement","TimedElement","Body","Div","P","Span","AnonymousSpan","Br","Region","Set","elementGetXMLID","elementGetStyleRefs","style","elementGetStyles","errorHandler","sa","byQName","zIndex","reportWarning","reportError","findAttribute","parseTimeExpression","tickRate","effectiveFrameRate","r","exec","parseFloat","mergeChainedStyles","sref","mergeStylesIfNotPresent","mergeReferencedStyles","stylerefs","styleattrs","from_styles","into_styles","sname","msg","reportFatal","fatal","searchval","cur","curval","fromXML","xmlstring","metadataHandler","estack","xmllangstack","xmlspacestack","metadata_depth","onclosetag","sid","cs","ns_tt","onCloseTag","ontext","initFromText","onText","onopentag","xmlspace","xmllang","initFromNode","ini","bi","backgroundImage","img","nb","st","attrs","onOpenTag","hasRegions","dr","createDefaultRegion","lang","region_i","cr","ns_ttp","extractCellResolution","cellLength","ComputedLength","frtr","fps_attr","fps","frm_attr","frm","efps","tr","trattr","extractFrameAndTickRate","aspectRatio","ar","ns_ittp","rslt","extractAspectRatio","attr","ns_tts","parseLength","extractExtent","pxLength","unit","dimensions","elem","b_i","e_i","getMediaTimeRange","getMediaTimeEvents","ns_itts","ns_ebutts","region","elementGetRegionID","dur","processTiming","tc","elementGetTimeContainer","space","browserIsFirefox","test","navigator","userAgent","imscHTML","processElement","dom_parent","isd_element","isd_parent","document","createElement","imgResolver","height","regionH","width","regionW","appendChild","margin","wdir","writingMode","ipd","bpd","pdir","direction","STYLING_MAP_DEFS","sm","map","proc_e","lp","linePadding","isZero","plength","toUsedLength","padmeasure","ceil","paddingLeft","paddingRight","paddingTop","paddingBottom","mra","multiRowAlign","display","textAlign","rr","rubyReserve","fillLineGap","flg","te","textEmphasis","textCombine","textContent","_isd_element","applyTextEmphasis","cbuf","cc","span","k","linelist","constructLineList","lineList","rt1","rt2","rb","fs","RUBYPOSITION_PROP","RUBYPOSITION_ISWK","fontSize","sib","rbc","localName","setProperty","item","getPropertyValue","elements","parentElement","insertBefore","applyRubyReserve","applyRubyPosition","TEXTEMPHASISPOSITION_PROP","applyTextEmphasisOutside","br","lastnode","nextSibling","applyMultiRowAlign","pospadpxlen","negpadpxlen","se","start_elem","ee","end_elem","elementBoundingRect","getBoundingClientRect","marginLeft","marginRight","marginTop","marginBottom","applyLinePadding","previous","spanMerge","thisNode","ancestorBackgroundColor","clearTheseBackgrounds","el","getSpanAncestorColor","backgroundColor","mergeSpans","par_edges","rect2edges","par_before","par_after","sign","frontier","padding","round","after","before","applyFillLineGap","enableRollUp","displayAlign","RegionPBuffer","currentISDState","previousISDState","plist","body_elem","firstElementChild","bottom","transition","transform","ancestorList","isAncestor","nodeName","first","second","styleName","removeChild","rect","edges","top","left","right","llist","bgcolor","before1","after1","before2","after2","curbgcolor","childElementCount","bpd_dir","ipd_dir","child","firstChild","Node","ELEMENT_NODE","TEXTEMPHASISSTYLE_PROP","dom_element","symbol","HTMLStylingMapDefinition","qName","mapFunc","render","isd","eheight","ewidth","displayForcedOnlyMode","clientHeight","clientWidth","twidth","rootcontainer","color","flexDirection","justifyContent","hdelta","wdelta","unique","fi","fontFamily","angle","fontStyle","fontWeight","lineHeight","opacity","overflow","rubyAlign","ta","textDecoration","txto","textOutline","textShadow","to_color","x_off","y_off","b_radius","textCombineUpright","ub","unicodeBidi","visibility","whiteSpace","STYLMAP_BY_QNAME","window","getComputedStyle","documentElement","imscISD","generateISD","tt","ISD","activeRegions","initialShowBackground","showBackground","initialbackgroundColor","layout_child","clone","prop","filteredElement","isdProcessContentElement","_rcs_na_styles","inherited_region_id","associated_region_id","ISDContentElement","spec_attr","wm","all","ps","es","outs","inherit","parent_fs","rw","rh","ruby_fs","ivs","origin","iv","initial","piv","z","compute","cstyle","qnameb","na","rsp","rubyPosition","da","applies","elist","constructSpanList","trimmed_text","prev_element","next_element","collapseLWSP","pruneEmptySpans","region_id","ttelem","renderHTML","ns_xml","ns_smpte","StylingAttributeDefinition","initialValue","appliesTo","isInherit","isAnimatable","parseFunc","computeFunc","animatable","parseColor","toComputedLength","ffs","lh","extent","parsePosition","v","edge","thickness","parseTextShadow","shadow","HEX_COLOR_RE","DEC_COLOR_RE","DEC_COLORA_RE","NAMED_COLOR","transparent","black","silver","gray","white","maroon","red","purple","fuchsia","magenta","green","lime","olive","yellow","navy","blue","teal","aqua","cyan","nc","LENGTH_RE","shadows","out_shadow","isKeyword","comp","lengthVal","lengthUnit","emLength","percentLength","ctor","superCtor","super_","TempCtor","assertPath","path","normalizeStringPosix","allowAboveRoot","lastSegmentLength","lastSlash","dots","lastSlashIndex","posix","cwd","resolvedPath","resolvedAbsolute","process","isAbsolute","trailingSeparator","joined","relative","to","fromStart","fromEnd","fromLen","toStart","toLen","lastCommonSep","fromCode","_makeLong","dirname","hasRoot","matchedSlash","basename","extIdx","firstNonSlashEnd","extname","startDot","startPart","preDotState","format","pathObject","sep","root","base","_format","delimiter","win32","EE","inherits","Readable","Writable","Duplex","Transform","PassThrough","finished","pipeline","pipe","dest","options","ondata","pause","ondrain","_isStdio","onclose","didOnEnd","destroy","cleanup","codes","createErrorType","Base","NodeError","_Base","subClass","superClass","arg1","arg2","arg3","getMessage","__proto__","oneOf","expected","thing","determiner","search","this_len","endsWith","objectKeys","method","allowHalfOpen","_writableState","ended","nextTick","onEndNT","self","highWaterMark","getBuffer","_readableState","destroyed","_transform","cb","ReadableState","debug","EElistenerCount","OurUint8Array","global","debugUtil","debuglog","StringDecoder","createReadableStreamAsyncIterator","BufferList","destroyImpl","getHighWaterMark","_require$codes","ERR_INVALID_ARG_TYPE","ERR_STREAM_PUSH_AFTER_EOF","ERR_METHOD_NOT_IMPLEMENTED","ERR_STREAM_UNSHIFT_AFTER_END_EVENT","errorOrDestroy","kProxyEvents","stream","isDuplex","objectMode","readableObjectMode","pipes","pipesCount","flowing","endEmitted","reading","sync","needReadable","emittedReadable","readableListening","resumeScheduled","paused","emitClose","autoDestroy","defaultEncoding","awaitDrain","readingMore","decoder","_read","_destroy","readableAddChunk","addToFront","skipChunkCheck","emitReadable","emitReadable_","onEofChunk","chunkInvalid","_uint8ArrayToBuffer","addChunk","maybeReadMore","_undestroy","undestroy","isPaused","setEncoding","enc","content","next","clear","MAX_HWM","howMuchToRead","computeNewHighWaterMark","flow","maybeReadMore_","updateReadableListening","nReadingNextTick","resume_","fromList","consume","endReadable","endReadableNT","wState","xs","nOrig","doRead","pipeOpts","endFn","stdout","stderr","unpipe","onunpipe","unpipeInfo","hasUnpiped","onfinish","cleanedUp","needDrain","pipeOnDrain","dests","wrap","_this","asyncIterator","_fromList","iterable","opts","ERR_MULTIPLE_CALLBACK","ERR_TRANSFORM_ALREADY_TRANSFORMING","ERR_TRANSFORM_WITH_LENGTH_0","afterTransform","ts","_transformState","transforming","writecb","writechunk","rs","needTransform","writeencoding","_flush","prefinish","done","_write","err2","CorkedRequest","finish","corkReq","callback","pendingcb","onCorkedFinish","corkedRequestsFree","WritableState","realHasInstance","internalUtil","deprecate","ERR_STREAM_CANNOT_PIPE","ERR_STREAM_DESTROYED","ERR_STREAM_NULL_VALUES","ERR_STREAM_WRITE_AFTER_END","ERR_UNKNOWN_ENCODING","nop","writableObjectMode","finalCalled","ending","noDecode","decodeStrings","writing","corked","bufferProcessing","onwrite","writelen","onwriteStateUpdate","finishMaybe","errorEmitted","onwriteError","needFinish","bufferedRequest","clearBuffer","afterWrite","lastBufferedRequest","prefinished","bufferedRequestCount","writev","_writev","final","_final","doWrite","onwriteDrain","holder","allBuffers","isBuf","callFinal","need","rState","current","_","hasInstance","object","writeAfterEnd","validChunk","newChunk","decodeChunk","last","writeOrBuffer","cork","uncork","setDefaultEncoding","endWritable","_Object$setPrototypeO","_defineProperty","input","prim","hint","_toPrimitive","_toPropertyKey","kLastResolve","kLastReject","kError","kEnded","kLastPromise","kHandlePromise","kStream","createIterResult","readAndResolve","iter","onReadable","AsyncIteratorPrototype","ReadableStreamAsyncIteratorPrototype","promise","lastPromise","then","wrapForNext","_this2","_Object$create","iterator","enumerableOnly","symbols","sym","getOwnPropertyDescriptor","_objectSpread","getOwnPropertyDescriptors","defineProperties","_defineProperties","props","descriptor","custom","instance","Constructor","_classCallCheck","tail","protoProps","hasStrings","_getString","_getBuffer","depth","customInspect","emitErrorAndCloseNT","emitErrorNT","emitCloseNT","readableDestroyed","writableDestroyed","ERR_STREAM_PREMATURE_CLOSE","noop","eos","called","_len","_key","onlegacyfinish","writableEnded","readableEnded","onrequest","req","setHeader","abort","isRequest","ERR_MISSING_ARGS","streams","popCallback","destroys","destroyer","ERR_INVALID_OPT_VALUE","duplexKey","hwm","highWaterMarkFrom","nenc","retried","_normalizeEncoding","normalizeEncoding","utf16Text","utf16End","fillLast","utf8FillLast","base64Text","base64End","simpleWrite","simpleEnd","lastNeed","lastTotal","lastChar","utf8CheckByte","byte","utf8CheckExtraBytes","total","utf8CheckIncomplete","copyProps","SafeBuffer","FUNC_TYPE","UNDEF_TYPE","OBJ_TYPE","STR_TYPE","MAJOR","MODEL","NAME","TYPE","VENDOR","VERSION","ARCHITECTURE","CONSOLE","MOBILE","TABLET","SMARTTV","WEARABLE","EMBEDDED","AMAZON","APPLE","ASUS","BLACKBERRY","BROWSER","CHROME","FIREFOX","GOOGLE","HUAWEI","LG","MICROSOFT","MOTOROLA","OPERA","SAMSUNG","SHARP","SONY","XIAOMI","ZEBRA","FACEBOOK","CHROMIUM_OS","MAC_OS","enumerize","enums","has","str1","str2","lowerize","rgxMapper","ua","arrays","matches","regex","strMapper","windowsVersionMap","regexes","browser","cpu","device","engine","EDGE","os","UAParser","extensions","getResult","_navigator","_ua","_uach","userAgentData","_rgxmap","mergedRegexes","extend","_isSelfNav","getBrowser","_browser","brave","isBrave","getCPU","_cpu","getDevice","_device","mobile","standalone","maxTouchPoints","getEngine","_engine","getOS","_os","platform","getUA","setUA","CPU","DEVICE","ENGINE","OS","define","$","jQuery","Zepto","config","localStorage","trace","Debug","eventBus","EventBus","getInstance","settings","logFn","showLogTimestamp","showCalleeName","startTime","getLogFn","params","doLog","_len2","_key2","_len3","_key3","info","_len4","_key4","_len5","_key5","level","logTime","Date","getTime","getClassName","getType","_len6","_key6","logLevel","dispatchEvent","trigger","Events","LOG","getLogger","setLogTimestampVisible","setCalleeNameVisible","__dashjs_factory_name","factory","FactoryMaker","getSingletonFactory","LOG_LEVEL_NONE","LOG_LEVEL_FATAL","LOG_LEVEL_ERROR","LOG_LEVEL_WARNING","LOG_LEVEL_INFO","LOG_LEVEL_DEBUG","updateSingletonFactory","handlers","_commonOn","scope","executeOnlyOnce","priority","getHandlerIdx","getStreamId","streamId","mediaType","mode","some","idx","payload","filters","handlersToRemove","MediaPlayerEvents","EVENT_MODE_ON_RECEIVE","reset","EVENT_PRIORITY_LOW","EVENT_PRIORITY_HIGH","singletonContexts","singletonFactories","classFactories","getSingletonInstance","className","getFactoryByName","factoriesArray","updateFactory","merge","classConstructor","classInstance","extensionObject","extension","override","childInstance","setSingletonInstance","deleteSingletonInstances","getSingletonFactoryByName","getClassFactory","getClassFactoryByName","updateClassFactory","Settings","DISPATCH_KEY_MAP","SETTING_UPDATED_LIVE_DELAY","SETTING_UPDATED_LIVE_DELAY_FRAGMENT_COUNT","SETTING_UPDATED_CATCHUP_ENABLED","SETTING_UPDATED_PLAYBACK_RATE_MIN","SETTING_UPDATED_PLAYBACK_RATE_MAX","SETTING_UPDATED_ABR_ACTIVE_RULES","SETTING_UPDATED_MAX_BITRATE","SETTING_UPDATED_MIN_BITRATE","defaultSettings","streaming","abandonLoadTimeout","wallclockTimeUpdateInterval","manifestUpdateRetryInterval","liveUpdateTimeThresholdInMilliseconds","cacheInitSegments","applyServiceDescription","applyProducerReferenceTime","applyContentSteering","enableManifestDurationMismatchFix","parseInbandPrft","enableManifestTimescaleMismatchFix","capabilities","filterUnsupportedEssentialProperties","supportedEssentialProperties","schemeIdUri","Constants","FONT_DOWNLOAD_DVB_SCHEME","COLOUR_PRIMARIES_SCHEME_ID_URI","URL_QUERY_INFO_SCHEME","EXT_URL_QUERY_INFO_SCHEME","MATRIX_COEFFICIENTS_SCHEME_ID_URI","TRANSFER_CHARACTERISTICS_SCHEME_ID_URI","THUMBNAILS_SCHEME_ID_URIS","ep","useMediaCapabilitiesApi","filterVideoColorimetryEssentialProperties","filterHDRMetadataFormatEssentialProperties","eventControllerRefreshDelay","deleteEventMessageDataAfterEventStarted","timeShiftBuffer","calcFromSegmentTimeline","fallbackToSegmentTimeline","metrics","maxListDepth","delay","liveDelayFragmentCount","liveDelay","useSuggestedPresentationDelay","protection","keepProtectionMediaKeys","ignoreEmeEncryptedEvent","detectPlayreadyMessageFormat","ignoreKeyStatuses","enableSeekDecorrelationFix","fastSwitchEnabled","flushBufferAtTrackSwitch","reuseExistingSourceBuffers","bufferPruningInterval","bufferToKeep","bufferTimeAtTopQuality","bufferTimeAtTopQualityLongForm","initialBufferLevel","bufferTimeDefault","longFormContentDurationThreshold","stallThreshold","useAppendWindow","setStallState","avoidCurrentTimeRangePruning","useChangeType","mediaSourceDurationInfinity","resetSourceBuffersForTrackSwitch","syntheticStallEvents","enabled","ignoreReadyState","gaps","jumpGaps","jumpLargeGaps","smallGapLimit","threshold","enableSeekFix","enableStallFix","stallSeek","utcSynchronization","useManifestDateHeaderTimeSource","backgroundAttempts","timeBetweenSyncAttempts","maximumTimeBetweenSyncAttempts","minimumTimeBetweenSyncAttempts","timeBetweenSyncAttemptsAdjustmentFactor","maximumAllowedDrift","enableBackgroundSyncAfterSegmentDownloadError","defaultTimingSource","scheme","scheduling","defaultTimeout","lowLatencyTimeout","scheduleWhilePaused","defaultEnabled","dispatchForManualRendering","extendSegmentedCues","imsc","webvtt","customRenderingEnabled","liveCatchup","maxDrift","playbackRate","playbackBufferMin","LIVE_CATCHUP_MODE_DEFAULT","lastBitrateCachingInfo","ttl","lastMediaSettingsCachingInfo","saveLastMediaSettingsForCurrentStreamingSession","cacheLoadThresholds","video","audio","trackSwitchMode","TRACK_SWITCH_MODE_ALWAYS_REPLACE","TRACK_SWITCH_MODE_NEVER_REPLACE","selectionModeForInitialTrack","TRACK_SELECTION_MODE_HIGHEST_SELECTION_PRIORITY","fragmentRequestTimeout","fragmentRequestProgressTimeout","manifestRequestTimeout","retryIntervals","HTTPRequest","MPD_TYPE","XLINK_EXPANSION_TYPE","MEDIA_SEGMENT_TYPE","INIT_SEGMENT_TYPE","BITSTREAM_SWITCHING_SEGMENT_TYPE","INDEX_SEGMENT_TYPE","MSS_FRAGMENT_INFO_SEGMENT_TYPE","LICENSE","OTHER_TYPE","lowLatencyReductionFactor","retryAttempts","lowLatencyMultiplyFactor","abr","limitBitrateByPortal","usePixelRatioInLimitBitrateByPortal","enableSupplementalPropertyAdaptationSetSwitching","rules","throughputRule","active","bolaRule","insufficientBufferRule","parameters","throughputSafetyFactor","segmentIgnoreCount","switchHistoryRule","sampleSize","switchPercentageThreshold","droppedFramesRule","minimumSampleSize","droppedFramesPercentageThreshold","abandonRequestsRule","abandonDurationMultiplier","minSegmentDownloadTimeThresholdInMs","minThroughputSamplesThreshold","l2ARule","loLPRule","throughput","averageCalculationMode","THROUGHPUT_CALCULATION_MODES","EWMA","lowLatencyDownloadTimeCalculationMode","LOW_LATENCY_DOWNLOAD_TIME_CALCULATION_MODE","MOOF_PARSING","useResourceTimingApi","useNetworkInformationApi","xhr","useDeadTimeLatency","bandwidthSafetyFactor","sampleSettings","live","vod","enableSampleSizeAdjustment","decreaseScale","increaseScale","maxMeasurementsToKeep","averageLatencySampleAmount","ewma","throughputSlowHalfLifeSeconds","throughputFastHalfLifeSeconds","latencySlowHalfLifeCount","latencyFastHalfLifeCount","weightDownloadTimeMultiplicationFactor","maxBitrate","minBitrate","initialBitrate","autoSwitchBitrate","cmcd","applyParametersFromMpd","cid","rtp","rtpSafetyFactor","CMCD_MODE_QUERY","enabledKeys","CMCD_AVAILABLE_KEYS","includeInRequests","cmsd","applyMb","etpWeightRatio","defaultSchemeIdUri","viewpoint","audioChannelConfiguration","role","accessibility","errors","recoverAttempts","mediaErrorDecode","mixinSettings","update","settingsObj","mixin","empty","addAdditionalQueryParameterToUrl","url","updatedUrl","_ref","separator","encodeURIComponent","removeQueryParameterFromUrl","queryParameter","parsedUrl","URL","URLSearchParams","delete","parseHttpHeaders","headerStr","headers","headerPairs","ilen","headerPair","parseQueryParams","queryParamString","searchParams","entries","decodeURIComponent","generateUuid","dt","random","generateHashCode","hash","getRelativeUrl","originalUrl","targetUrl","original","protocol","relativePath","pathname","startIndexOffset","getHostFromUrl","urlString","host","parseUserAgent","uaString","stringHasProtocol","bufferSourceToDataView","bufferSource","toDataView","bufferSourceToInt8","bufferSourceToHex","hex","Type","getArrayBuffer","bytesPerElement","BYTES_PER_ELEMENT","dataEnd","rawStart","view","getCodecFamily","codecString","profile","_getCodecParts","CODEC_FAMILIES","MP3","AAC","AC3","EC3","DTSX","DTSC","AVC","HEVC","rest","getVersionString","publicOnly","CoreEvents","EventsBase","super","ATTEMPT_BACKGROUND_SYNC","BUFFERING_COMPLETED","BUFFER_CLEARED","BYTES_APPENDED_END_FRAGMENT","BUFFER_REPLACEMENT_STARTED","CHECK_FOR_EXISTENCE_COMPLETED","CMSD_STATIC_HEADER","CURRENT_TRACK_CHANGED","DATA_UPDATE_COMPLETED","INBAND_EVENTS","INITIAL_STREAM_SWITCH","INIT_FRAGMENT_LOADED","INIT_FRAGMENT_NEEDED","INTERNAL_MANIFEST_LOADED","ORIGINAL_MANIFEST_LOADED","LOADING_COMPLETED","LOADING_PROGRESS","LOADING_DATA_PROGRESS","LOADING_ABANDONED","MANIFEST_UPDATED","MEDIA_FRAGMENT_LOADED","MEDIA_FRAGMENT_NEEDED","MEDIAINFO_UPDATED","QUOTA_EXCEEDED","SEGMENT_LOCATION_BLACKLIST_ADD","SEGMENT_LOCATION_BLACKLIST_CHANGED","SERVICE_LOCATION_BASE_URL_BLACKLIST_ADD","SERVICE_LOCATION_BASE_URL_BLACKLIST_CHANGED","SERVICE_LOCATION_LOCATION_BLACKLIST_ADD","SERVICE_LOCATION_LOCATION_BLACKLIST_CHANGED","SET_FRAGMENTED_TEXT_AFTER_DISABLED","SET_NON_FRAGMENTED_TEXT","SOURCE_BUFFER_ERROR","STREAMS_COMPOSED","STREAM_BUFFERING_COMPLETED","STREAM_REQUESTING_COMPLETED","TEXT_TRACKS_QUEUE_INITIALIZED","TIME_SYNCHRONIZATION_COMPLETED","UPDATE_TIME_SYNC_OFFSET","URL_RESOLUTION_FAILED","VIDEO_CHUNK_RECEIVED","WALLCLOCK_TIME_UPDATED","XLINK_ELEMENT_LOADED","XLINK_READY","SEEK_TARGET","evt","ACCESSIBILITY","ADAPTATION_SET","ADAPTATION_SETS","ADAPTATION_SET_SWITCHING_SCHEME_ID_URI","ADD","ASSET_IDENTIFIER","AUDIO_CHANNEL_CONFIGURATION","AUDIO_SAMPLING_RATE","AVAILABILITY_END_TIME","AVAILABILITY_START_TIME","AVAILABILITY_TIME_COMPLETE","AVAILABILITY_TIME_OFFSET","BANDWITH","BASE_URL","BITSTREAM_SWITCHING","BITSTREAM_SWITCHING_MINUS","BYTE_RANGE","CAPTION","CENC_DEFAULT_KID","CLIENT_DATA_REPORTING","CLIENT_REQUIREMENT","CMCD_PARAMETERS","CODECS","CODEC_PRIVATE_DATA","CODING_DEPENDENCY","CONTENT_COMPONENT","CONTENT_PROTECTION","CONTENT_STEERING","CONTENT_STEERING_RESPONSE","TTL","RELOAD_URI","PATHWAY_PRIORITY","PATHWAY_CLONES","BASE_ID","ID","URI_REPLACEMENT","HOST","PARAMS","CONTENT_TYPE","DEFAULT_SERVICE_LOCATION","DEPENDENCY_ID","DURATION","DVB_PRIORITY","DVB_WEIGHT","DVB_URL","DVB_MIMETYPE","DVB_FONTFAMILY","DYNAMIC","ESSENTIAL_PROPERTY","EVENT","EVENT_STREAM","FORCED_SUBTITLE","FRAMERATE","FRAME_PACKING","GROUP_LABEL","HEIGHT","INBAND","INBAND_EVENT_STREAM","INDEX","INDEX_RANGE","INITIALIZATION","INITIALIZATION_MINUS","LA_URL","LA_URL_LOWER_CASE","LABEL","LANG","LOCATION","MAIN","MAXIMUM_SAP_PERIOD","MAX_PLAYOUT_RATE","MAX_SEGMENT_DURATION","MAX_SUBSEGMENT_DURATION","MEDIA","MEDIA_PRESENTATION_DURATION","MEDIA_RANGE","MEDIA_STREAM_STRUCTURE_ID","METRICS","METRICS_MINUS","MIME_TYPE","MINIMUM_UPDATE_PERIOD","MIN_BUFFER_TIME","MP4_PROTECTION_SCHEME","MPD","MPD_PATCH_TYPE","ORIGINAL_MPD_ID","ORIGINAL_PUBLISH_TIME","PATCH_LOCATION","PERIOD","PRESENTATION_TIME","PRESENTATION_TIME_OFFSET","PRO","PRODUCER_REFERENCE_TIME","PRODUCER_REFERENCE_TIME_TYPE","ENCODER","CAPTURED","APPLICATION","PROFILES","PSSH","PUBLISH_TIME","QUALITY_RANKING","QUERY_BEFORE_START","QUERY_PART","RANGE","RATING","REF","REF_ID","REMOVE","REPLACE","REPORTING","REPRESENTATION","REPRESENTATION_INDEX","ROBUSTNESS","ROLE","SAR","SCAN_TYPE","SEGMENT_ALIGNMENT","SEGMENT_BASE","SEGMENT_LIST","SEGMENT_PROFILES","SEGMENT_TEMPLATE","SEGMENT_TIMELINE","SEGMENT_TYPE","SEGMENT_URL","SERVICE_DESCRIPTION","SERVICE_DESCRIPTION_LATENCY","SERVICE_DESCRIPTION_OPERATING_BANDWIDTH","SERVICE_DESCRIPTION_OPERATING_QUALITY","SERVICE_DESCRIPTION_PLAYBACK_RATE","SERVICE_DESCRIPTION_SCOPE","SERVICE_LOCATION","SERVICE_LOCATIONS","SOURCE_URL","START","START_NUMBER","START_WITH_SAP","STATIC","STEERING_TYPE","SUBSET","SUBTITLE","SUB_REPRESENTATION","SUB_SEGMENT_ALIGNMENT","SUGGESTED_PRESENTATION_DELAY","SUPPLEMENTAL_PROPERTY","SUPPLEMENTAL_CODECS","TIMESCALE","TIMESHIFT_BUFFER_DEPTH","UTC_TIMING","VALUE","VIEWPOINT","WALL_CLOCK_TIME","WIDTH","CaptionsLogger","time","verboseLevel","severity","PenState","foreground","underline","italics","background","flash","setStyles","attribs","isDefault","other","newPenState","StyledUnicodeChar","uchar","penState","setChar","setPenState","newChar","isEmpty","NR_COLS","specialCea608CharsCodes","getCharForByte","Row","logger","chars","cueStartTime","currPenState","setCursor","absPos","moveCursor","relPos","newPos","backSpace","insertChar","clearFromPos","startPos","clearToEndOfRow","getTextString","setPenStyles","NR_ROWS","CaptionScreen","rows","currRow","nrRollUpRows","lastOutputScreen","setPen","setPAC","pacData","newRow","row","topRowIndex","prevLineTime","indent","prevPos","setBkgData","bkgData","setRollUpRows","nrRows","rollUp","getDisplayText","topRow","asOneRow","displayText","rowNr","rowText","getTextAndFormat","Cta608Channel","channelNumber","outputFilter","chNr","displayedMemory","nonDisplayedMemory","writeScreen","_b","_a","setMode","newMode","insertChars","screen","outputDataUpdate","ccRCL","ccBS","ccAOF","ccAON","ccDER","ccRU","ccFON","ccRDC","ccTR","ccRTD","ccEDM","ccCR","ccENM","ccEOC","ccTO","nrCols","ccMIDROW","colorIndex","colors","dispatch","newCue","dispatchCue","cueSplitAtTime","backgroundColors","hasCmdRepeated","cmdHistory","numArrayToHexArray","numArray","hexArray","rowsHighCh1","rowsHighCh2","rowsLowCh1","rowsLowCh2","setLastCmd","Cta608Parser","field","out1","out2","currentChannel","lastTime","channels","addData","byteList","cmdFound","charsFound","parseCmd","parseMidrow","parsePAC","parseBackgroundAttributes","parseChars","currChNr","channel","interpretPAC","pacIndex","channelNr","charCodes","charCode1","oneCode","TCP_CONNECTION","HTTP_REQUEST","TRACK_SWITCH","BUFFER_LEVEL","BUFFER_LOADED","ABANDON_LOAD","ALLOW_LOAD","BUFFER_EMPTY","BUFFER_STATE","DVR_INFO","DROPPED_FRAMES","SCHEDULING_INFO","REQUESTS_QUEUE","MANIFEST_UPDATE","MANIFEST_UPDATE_STREAM_INFO","MANIFEST_UPDATE_TRACK_INFO","PLAY_LIST","DVB_ERRORS","HTTP_REQUEST_DVB_REPORTING_TYPE","PlaybackController","streamController","serviceDescriptionController","dashMetrics","adapter","videoModel","timelineConverter","wallclockTimeIntervalId","originalLiveDelay","streamInfo","isDynamic","playOnceInitialized","lastLivePlaybackTime","lastLiveUpdateTime","availabilityStartTime","availabilityTimeComplete","lowLatencyModeEnabled","seekTarget","internalSeek","playbackStalled","manifestUpdateInProgress","initialCatchupModeActivated","_onDataUpdateCompleted","_onManifestUpdated","_onStreamsComposed","PLAYBACK_ENDED","_onPlaybackEnded","STREAM_INITIALIZING","_onStreamInitializing","REPRESENTATION_SWITCH","_onRepresentationSwitch","BUFFER_LEVEL_STATE_CHANGED","_onBufferLevelStateChanged","stopUpdatingWallclockTime","_onCanPlay","_onCanPlayThrough","_onPlaybackStart","_onPlaybackWaiting","_onPlaybackPlaying","_onPlaybackPaused","_onPlaybackError","_onPlaybackSeeking","_onPlaybackSeeked","_onPlaybackTimeUpdated","_onPlaybackProgress","_onPlaybackRateChanged","_onPlaybackMetaDataLoaded","_onPlaybackLoadedData","onPlaybackStalled","_onNativePlaybackEnded","_onVolumeChanged","getTimeToStreamEnd","getStreamEndTime","toFixed","sInfo","refInfo","duration","play","adjustLiveDelay","getElement","_adjustLiveDelayAfterUserInteraction","seek","stickToBuffered","internal","setCurrentTime","_getDvrWindowEnd","hasVideoTrack","VIDEO","AUDIO","dvrInfo","getCurrentDVRInfo","now","getClientReferenceTime","period","getRegularPeriods","nowAsPresentationTime","calcPresentationTimeFromWallTime","isSeeking","isStalled","getPlaybackRate","getEnded","getIsDynamic","updateCurrentTime","getReadyState","currentTime","actualTime","mediatype","DVRMetrics","DVRWindow","_getAdjustedPresentationTime","startUpdatingWallclockTime","setInterval","addDVRMetric","_updateLivePlaybackTime","_onWallclockTime","clearInterval","voRepresentation","currentRepresentation","mediaInfo","CAN_PLAY","CAN_PLAY_THROUGH","getActiveStreamInfo","MetricsConstants","PLAYBACK_STARTED","PLAYBACK_WAITING","playingTime","PLAYBACK_PLAYING","PLAYBACK_PAUSED","seekTime","PLAYBACK_SEEKING","PLAYBACK_SEEKED","PLAYBACK_TIME_UPDATED","timeToEnd","PLAYBACK_PROGRESS","rate","PLAYBACK_RATE_CHANGED","PLAYBACK_METADATA_LOADED","PLAYBACK_LOADED_DATA","isLast","PLAYBACK_VOLUME_CHANGED","srcElement","PLAYBACK_ERROR","_onDynamicToStatic","PLAYBACK_STALLED","supplementalProperties","find","SUPPLEMENTAL_PROPERTY_DVB_LL_SCHEME","activeStreamInfo","computeAndSetLiveDelay","fragmentDuration","manifestInfo","adjustedFragmentDuration","suggestedPresentationDelay","getSuggestedPresentationDelay","serviceDescriptionSettings","getServiceDescriptionSettings","minBufferTime","getAvailabilityStartTime","dvrWindowSize","getBufferLevel","filterList","bufferLevel","getActiveStreamProcessors","bl","getCurrentLiveLatency","getClientTimeOffset","getInitialCatchupModeActivated","getIsManifestUpdateInProgress","getLiveDelay","getLowLatencyModeEnabled","getOriginalLiveDelay","getPlaybackStalled","getPlayedRanges","getStreamController","initialize","periodSwitch","DYNAMIC_TO_STATIC","isProgressing","timeoutValue","timeout","_onComplete","clearTimeout","setTimeout","_onTimeout","seekToCurrentLive","dvrWindowEnd","seekToOriginalLive","setConfig","FragmentRequest","action","ACTION_DOWNLOAD","availabilityEndTime","bandwidth","bytesLoaded","bytesTotal","delayLoadingTime","endDate","firstByteDate","mediaStartTime","quality","representation","responseType","serviceLocation","startDate","timescale","wallStartTime","isInitializationRequest","setInfo","ACTION_COMPLETE","FRAGMENT_MODEL_LOADING","FRAGMENT_MODEL_EXECUTED","FRAGMENT_MODEL_FAILED","FragmentModel","fragmentLoader","executedRequests","loadingRequests","isFragmentLoaded","request","requests","isLoaded","req1","req2","adaptationIndex","isEqualInit","isEqualComplete","check","getRequestThreshold","removeExecutedRequestsBeforeTime","removeExecutedRequestsInTimeRange","getRequestForTime","addSchedulingInfoMetrics","addSchedulingInfo","addRequestsQueue","onLoadingCompleted","sender","response","FRAGMENT_LOADING_COMPLETED","onLoadingInProgress","FRAGMENT_LOADING_PROGRESS","onLoadingAborted","FRAGMENT_LOADING_ABANDONED","resetInitialSettings","abortRequests","executeRequest","FRAGMENT_LOADING_STARTED","load","loadCurrentFragment","getRequests","states","filteredRequests","getRequestsForState","filterRequests","isFragmentLoadedOrPending","removeExecutedRequestsAfterTime","syncExecutedRequestsWithBufferedRange","bufferedRanges","streamDuration","ln","FRAGMENT_MODEL_CANCELED","Errors","ErrorsBase","MANIFEST_LOADER_PARSING_FAILURE_ERROR_CODE","MANIFEST_LOADER_LOADING_FAILURE_ERROR_CODE","XLINK_LOADER_LOADING_FAILURE_ERROR_CODE","SEGMENT_BASE_LOADER_ERROR_CODE","TIME_SYNC_FAILED_ERROR_CODE","FRAGMENT_LOADER_LOADING_FAILURE_ERROR_CODE","FRAGMENT_LOADER_NULL_REQUEST_ERROR_CODE","URL_RESOLUTION_FAILED_GENERIC_ERROR_CODE","APPEND_ERROR_CODE","REMOVE_ERROR_CODE","DATA_UPDATE_FAILED_ERROR_CODE","CAPABILITY_MEDIASOURCE_ERROR_CODE","CAPABILITY_MEDIAKEYS_ERROR_CODE","DOWNLOAD_ERROR_ID_MANIFEST_CODE","DOWNLOAD_ERROR_ID_SIDX_CODE","DOWNLOAD_ERROR_ID_CONTENT_CODE","DOWNLOAD_ERROR_ID_INITIALIZATION_CODE","DOWNLOAD_ERROR_ID_XLINK_CODE","MANIFEST_ERROR_ID_PARSE_CODE","MANIFEST_ERROR_ID_NOSTREAMS_CODE","TIMED_TEXT_ERROR_ID_PARSE_CODE","MANIFEST_ERROR_ID_MULTIPLEXED_CODE","MEDIASOURCE_TYPE_UNSUPPORTED_CODE","NO_SUPPORTED_KEY_IDS","MANIFEST_LOADER_PARSING_FAILURE_ERROR_MESSAGE","MANIFEST_LOADER_LOADING_FAILURE_ERROR_MESSAGE","XLINK_LOADER_LOADING_FAILURE_ERROR_MESSAGE","SEGMENTS_UPDATE_FAILED_ERROR_MESSAGE","SEGMENTS_UNAVAILABLE_ERROR_MESSAGE","SEGMENT_BASE_LOADER_ERROR_MESSAGE","TIME_SYNC_FAILED_ERROR_MESSAGE","FRAGMENT_LOADER_NULL_REQUEST_ERROR_MESSAGE","URL_RESOLUTION_FAILED_GENERIC_ERROR_MESSAGE","APPEND_ERROR_MESSAGE","REMOVE_ERROR_MESSAGE","DATA_UPDATE_FAILED_ERROR_MESSAGE","CAPABILITY_MEDIASOURCE_ERROR_MESSAGE","CAPABILITY_MEDIAKEYS_ERROR_MESSAGE","TIMED_TEXT_ERROR_MESSAGE_PARSE","MEDIASOURCE_TYPE_UNSUPPORTED_MESSAGE","NO_SUPPORTED_KEY_IDS_MESSAGE","SourceBufferSink","textController","intervalId","callbacks","appendQueue","isAppendingInProgress","mediaSource","lastRequestAppended","_getCodecStringForRepresentation","mimeType","codecs","_initializeForText","getTextSourceBuffer","_addEventListeners","_updateEndHandler","_errHandler","removeEventListeners","updateAppendWindow","_waitForUpdateEnd","appendWindowEnd","appendWindowStart","updateTimestampOffset","mseTimeOffset","timestampOffset","_appendNextInQueue","nextChunk","afterSuccess","segmentType","bitrateInKbit","appendBuffer","DashJSError","_executeCallback","updating","eventType","_triggerEvent","readyState","setTextTrack","abortBeforeAppend","changeType","codec","getAllBufferRanges","buffered","initializeForFirstUse","mInfo","selectedRepresentation","addSourceBuffer","promises","constants","isFragmented","initializeForStreamSwitch","oldSourceBufferSink","_copyPreviousSinkData","remove","unintended","removeSourceBuffer","PreBufferSink","onAppendedCallback","outstandingInit","chunks","onAppended","ranges","timeranges","sort","discharge","getChunksAt","waitForUpdateEnd","InitCache","save","representationId","extract","BUFFER_RANGE_CALCULATION_THRESHOLD","BUFFER_CONTROLLER_TYPE","BufferController","fragmentModel","playbackController","representationController","isBufferingCompleted","criticalBufferLevel","maxAppendedIndex","maximumIndex","sourceBufferSink","dischargeBuffer","isPrebuffering","dischargeFragments","bufferState","appendedBytesInfo","wallclockTicked","isPruningInProgress","isQuotaExceeded","initCache","pendingPruningRanges","replacingBuffer","setMediaSource","createBufferSink","catch","oldBufferSinks","oldRepresentation","newRepresentation","getCurrentRepresentation","_changeCodec","updateBufferTimestampOffset","allSettled","_initializeSinkForStreamSwitch","_initializeSinkForFirstUse","_initializeSink","_initializeSinkForMseBuffering","sink","_onAppended","_initializeSinkForPrebuffering","_onInitFragmentLoaded","_appendToBuffer","_onMediaFragmentLoaded","_showBufferRanges","getTotalBufferedTime","bufferAhead","_handleQuotaExceededError","hasEnoughSpaceToAppend","quotaExceededTime","getClearRanges","_updateBufferLevel","endFragment","_checkIfBufferingCompleted","_onPlaybackProgression","rangeAtCurrenTime","getRangeAt","rangeAtSeekTarget","segmentDuration","_adjustSeekTarget","suppressAppendedEvent","_defaultQualitySwitchPreparation","codecFamily","supportsChangeType","pruneAllSafely","getAllRangesWithSafetyFactor","clearRanges","behindPruningRange","targetTime","bufferToKeepBehind","startOfBuffer","rangeEnd","currentTimeRequest","_getRangeBehindForPruning","aheadPruningRange","endOfBuffer","continuousBufferTime","getContinuousBufferTimeForTargetTime","bufferToKeepAhead","rangeStart","oldRangeStart","_getRangeAheadForPruning","isTextEnabled","_onPlaybackStalled","checkIfSufficientBuffer","tolerance","firstStart","lastEnd","gap","toler","referenceTime","getBufferLength","BUFFER_LEVEL_UPDATED","isLastIdxAppended","periodBuffered","setIsBufferingCompleted","_notifyBufferStateChanged","pruneBuffer","startRangeToKeep","behindRange","_addClearRangeWithPromise","clearNextRange","sourceBuffer","_onRemoved","quotaExceeded","_onWallclockTimeUpdated","totalBufferedTime","adjustedTime","errored","keepBuffers","tmpSourceBufferSinkToReset","appendInitSegmentFromCache","dischargePreBuffer","rangeStr","lastInit","initChunk","getBufferControllerType","getIsBufferingCompleted","getIsPruningInProgress","getMediaSource","hasBufferAtTime","prepareForAbandonQualitySwitch","prepareForDefaultQualitySwitch","prepareForFastQualitySwitch","prepareForForceReplacementQualitySwitch","prepareForNonReplacementTrackSwitch","prepareForPlaybackSeek","prepareForReplacementTrackSwitch","segmentRequestingCompleted","segmentIndex","setSeekTarget","NotFragmentedTextBufferController","errHandler","initialized","triggerEvent","ScheduleController","mediaPlayerModel","abrController","bufferController","timeToLoadDelay","scheduleTimeout","lastFragmentRequest","lastInitializedRepresentationId","switchTrack","initSegmentRequired","managedMediaSourceAllowsRequest","checkPlaybackQuality","_onManagedMediaSourceStartStreaming","_onManagedMediaSourceEndStreaming","startScheduleTimer","clearScheduleTimer","schedule","getInitialPlayback","getAutoPlay","_shouldClearScheduleTimer","segmentDurationToAddToBufferLevel","getCurrentBufferLevel","bufferTarget","getBufferTarget","_shouldBuffer","_shouldScheduleNextRequest","qualityChange","_getNextFragment","schedulingInfo","getCurrentSchedulingInfo","_getBufferTargetForFragmentedText","videoBufferLevel","_getBufferTargetForAudio","isPlayingAtTopQuality","getBufferTimeDefaultUnadjusted","_getGenericBufferTarget","_completeQualityChange","TRACK_CHANGE_RENDERED","oldMediaInfo","newMediaInfo","QUALITY_CHANGE_RENDERED","_onURLResolutionFailed","_onPlaybackStarted","updatePlayListTraceMetrics","playbackspeed","getPlaybackController","getSwitchTrack","getTimeToLoadDelay","_hasVideoTrack","MANAGED_MEDIA_SOURCE_START_STREAMING","MANAGED_MEDIA_SOURCE_END_STREAMING","setCheckPlaybackQuality","setInitSegmentRequired","setLastInitializedRepresentationId","setSwitchTrack","setTimeToLoadDelay","indexRange","media","mediaRange","presentationStartTime","replacementNumber","replacementTime","zeroPadToLength","minStrLength","unescapeDollarsInTemplate","replaceIDForTemplate","replaceTokenForTemplate","token","endPos","formatTagPos","specifier","paddedValue","tokenLen","formatTag","getSegment","presentationEndTime","seg","Segment","calcAvailabilityStartTimeFromPresentationTime","calcAvailabilityEndTimeFromPresentationTime","calcWallTimeForSegment","startNumber","isSegmentAvailable","segment","voPeriod","adaptation","availabilityTimeOffset","refTime","getIndexBasedSegment","calcMediaTimeFromPresentationTime","getTimeBasedSegment","fTimescale","tManifest","scaledTime","scaledDuration","calcPresentationTimeFromMediaTime","RepresentationController","segmentsController","voAvailableRepresentations","currentVoRepresentation","_updateRepresentation","currentRep","hasInitialization","hasSegments","updateInitData","updateSegmentData","_onInitLoaded","fragments","segments","_onSegmentsLoaded","mediaFinishedInformation","getMediaFinishedInformation","repInfo","manifestUpdateInfo","getCurrentManifestUpdate","alreadyAdded","representationInfo","addManifestUpdateRepresentationInfo","_onRepresentationUpdated","getRepresentationById","reps","rep","endDataUpdate","_setCurrentVoRepresentation","MISSING_CONFIG_ERROR","checkConfig","currentVideoTimeMs","addRepresentationSwitch","_addRepresentationSwitch","onManifestValidityChanged","newDuration","prepareQualityChange","newRep","voRepresentations","MANIFEST_VALIDITY_CHANGED","updateData","availableRepresentations","selectedRepresentationId","setPlaybackQuality","updateManifestUpdateInfo","latency","_onAllRepresentationsUpdated","DashHandler","urlUtils","baseURLController","lastSegment","isDynamicManifest","mediaHasFinished","_setRequestUrl","destination","baseURL","queryParams","isRelative","_getRequestForSegment","getSegmentRequestForTime","segmentInfoType","getSegmentByTime","_getRequest","indexToRequest","getSegmentByIndex","getCurrentIndex","getInitRequest","initialization","_generateInitRequest","getNextSegmentRequest","getNextSegmentRequestIdempotent","getStreamInfo","getValidTimeAheadOfTargetTime","targetThreshold","currentUpperTime","targetRequest","upperRequest","requestEndTime","isLastSegmentRequested","bufferingTime","numberOfSegments","DashConstants","nextPeriodId","mediaTimeOfLastSignaledSegment","repeatSegmentRequest","DefaultURLUtils","resolveFunction","schemeRegex","httpUrlRegex","httpsUrlRegex","originRegex","nativeURLResolver","baseUrl","dumbURLResolver","baseUrlParseFunc","parseBaseUrl","isPathAbsolute","parseOrigin","isSchemeRelative","parseScheme","joinChar","slashIndex","setup","isHTTPURL","isHTTPS","removeHostname","URLUtils","defaultURLUtils","regexUtils","internalCall","functionName","utils","getUtils","registerUrlRegex","PlayList","mstart","starttype","INITIAL_PLAYOUT_START_REASON","SEEK_START_REASON","RESUME_FROM_PAUSE_START_REASON","METRICS_COLLECTION_START_REASON","PlayListTrace","representationid","subreplevel","stopreason","TimelineSegmentsGetter","iterateSegments","iterFunc","mpd","manifest","Period","AdaptationSet","Representation","SegmentTemplate","SegmentList","timeline","SegmentTimeline","SegmentURL","frag","repeat","relativeIdx","breakIterator","_calculateRepeatCountForNegativeR","nextFrag","repeatEndTime","availabilityEnd","dvrWindow","lastSegmentTime","requestedTime","requiredMediaTime","scaledMediaTime","toPrecision","availableSegments","REPRESENTATION_SWITCH_STOP_REASON","REBUFFERING_REASON","USER_REQUEST_STOP_REASON","END_OF_PERIOD_STOP_REASON","END_OF_CONTENT_STOP_REASON","METRICS_COLLECTION_STOP_REASON","FAILURE_STOP_REASON","TemplateSegmentsGetter","template","periodTime","calcPeriodRelativeTimeFromMpdRelativeTime","ListSegmentsGetter","offsetToSubtract","relativeIndex","SegmentBaseGetter","epsilon","ft","fd","getIndexByTime","SegmentsController","dashConstants","segmentBaseController","getters","getSegmentsGetter","getSegmentBaseInitSegment","getSegmentList","getter","TimeUtils","ntpToUTC","ntpTimeStamp","UTC","previouslySelectedRepresentation","StreamProcessor","currentMediaInfo","dashHandler","mediaInfoArr","pendingSwitchToVoRepresentation","qualityChangeInProgress","scheduleController","shouldRepeatRequest","shouldUseExplicitTimeForRequest","trackSwitchInProgress","boxParser","manifestModel","mediaController","segmentBlacklistController","_resetPendingSwitchToRepresentation","_shouldSetBufferingComplete","_onInitFragmentNeeded","rescheduleIfNoRequest","_noValidRequest","isText","_onMediaFragmentNeeded","getRepresentation","_getFragmentRequest","blacklistUrl","contains","_shouldIgnoreRequest","_mediaRequestGenerated","mediaPresentationDuration","setExplicitBufferingTime","checkAndHandleCompletedBuffering","_noMediaRequestGenerated","addBufferState","pushPlayListTraceMetrics","_onBufferCleared","_onSourceBufferError","add","_onBytesAppended","_prepareForDefaultQualitySwitch","selectMediaInfo","mediaInfoSelectionInput","selectedValues","selectionInput","areMediaInfosEqual","_getTargetValuesForMpdUpdate","getInitialBitrateFor","getOptimalRepresentationForBitrate","_getTargetValuesForAdaptationSetSwitch","_setCurrentMediaInfo","getPossibleVoRepresentations","NEW_TRACK_SELECTED","handleNewMediaInfo","_handleDifferentSwitchTypes","reason","forceReplace","newPresentation","_replacementQualitySwitchPreparationDone","_prepareForForceReplacementQualitySwitch","forceAbandon","_abandonQualitySwitchPreparationDone","_prepareForAbandonQualitySwitch","getFastSwitchEnabled","safeBufferLevel","abandonmentState","getAbandonmentStateFor","_fastQualitySwitchPreparationDone","_prepareForFastQualitySwitch","createPlaylistTraceMetrics","_bufferClearedForReplacement","ongoingRequests","_defaultQualitySwitchPreparationDone","segmentAlignment","subSegmentAlignment","_bufferClearedForNonReplacement","_onFragmentLoadingAbandoned","_onFragmentLoadingCompleted","_handleFragmentLoadingError","_onSetFragmentedTextAfterDisabled","getScheduleController","_onSetNonFragmentedText","currentTrackInfo","MediaInfoSelectionInput","_onQuotaExceeded","checkInteger","getMediaTimescaleFromMoov","isoFile","prfts","prftBoxes","getBoxes","prft","ntpTimestamp","ntp_timestamp_sec","ntp_timestamp_frac","mediaTime","media_time","_parsePrftBox","_handleInbandPrfts","INBAND_PRFT","eventStreamMedia","getEventsFor","eventStreamTrack","mediaInbandEvents","trackInbandEvents","eventStreams","inbandEvents","eventBoxes","sidx","getBox","mediaAnchorTime","earliest_presentation_time","fragmentMediaStartTime","getEvent","_handleInbandEvents","_onSeekTarget","createBufferSinks","previousBufferSinks","finalisePlayList","getAllMediaInfos","getBufferController","getFragmentModel","getMediaInfo","getRepresentationController","registerStreamType","controller","_createBufferControllerForType","prepareInnerPeriodPlaybackSeeking","prepareOuterPeriodPlaybackSeeking","isAdaptationSetSwitch","_prepareAdaptationSwitchQualityChange","_prepareNonAdaptationSwitchQualityChange","prepareTrackSwitch","replaceBuffer","shouldReplace","_handleBufferingCompleteTrackSwitch","_handleReplaceTrackSwitch","_finishNoReplaceTrackSwitch","_handleNoReplaceTrackSwitch","probeNextRequest","unRegisterStreamType","setMediaInfoArray","setTrackSwitchInProgress","updateStreamInfo","newStreamInfo","XHRLoader","onloadend","onprogress","onload","commonMediaRequest","commonMediaResponse","XMLHttpRequest","open","header","setRequestHeader","withCredentials","credentials","responseURL","status","statusText","getAllResponseHeaders","customData","onabort","ontimeout","send","getXhr","FetchLoader","_readResponseBody","processResult","reader","_handleFetchError","_getCurrentTimestamp","performance","abortController","cancel","calculateDownloadedTime","downloadedData","bytesReceived","avgTimeDistance","timestamp","distance","_getThroughputInBitPerMs","timeInMs","Headers","_getHeaders","AbortController","signal","_setupAbortMechanism","fetchResourceRequestObject","Request","_getFetchResourceRequestObject","fetchResponse","responseHeaders","_updateCommonMediaResponseInstance","ok","totalBytesReceived","signaledFirstByte","receivedData","endPositionOfLastProcessedBoxInReceivedData","getReader","moofStartTimeData","mdatEndTimeData","lastChunkWasFinished","calculationMode","_processResult","calculatedDownloadTime","downloadTime","calculatedThroughput","filteredMoofStartTimeData","filteredMdatEndTimeData","chunkThroughputValues","shortDurationBytesReceived","shortDurationStartTime","chunkDownloadTime","cumulatedChunkDownloadTime","_calculateThroughputByMoofMdatTimes","_getDownloadTimeForMoofParsing","DOWNLOADED_DATA","_calculateDownloadTime","loaded","lengthComputable","_handleRequestComplete","_concatTypedArray","findLastTopIsoBoxCompleted","boxesInfo","endPositionOfLastTargetBox","_getDataForMediaSourceBufferAndAdjustReceivedData","startOffsetOfLastFoundTargetBox","sizeOfLastFoundTargetBox","noTrace","_handleTopIsoBoxCompleted","startOffsetOfLastCompletedBox","sizeOfLastCompletedBox","_handleNoCompletedTopIsoBox","_handleReceivedChunkData","_handleFetchResponse","cfg","BaseURL","weight","dvbPriority","dvbWeight","DEFAULT_DVB_PRIORITY","DEFAULT_DVB_WEIGHT","dvbUrl","dvbMimeType","dvbFontFamily","inArray","DescriptorType","sessionID","contentID","adaptationSets","adaptationSetsArray","cmcdParameters","serviceLocations","serviceLocationsArray","ref","refId","robustness","keyId","cencDefaultKid","pssh","pro","laUrl","mergeAttributesFromReference","defaultServiceLocation","defaultServiceLocationArray","queryBeforeStart","serverUrl","clientRequirement","presentationTime","messageData","eventStream","presentationTimeDelta","parsedMessageData","adaptionSet","presentationTimeOffset","maxSegmentDuration","minimumUpdatePeriod","publishTime","timeShiftBufferDepth","isEncrypted","DEFAULT_ID","inband","applicationScheme","wallClockTime","UTCTiming","absoluteIndex","bitsPerPixel","codecPrivateData","essentialProperties","frameRate","maxPlayoutRate","pixelsPerSecond","qualityRanking","scanType","DashManifestModel","BASE64","isInteger","getIsTypeOf","getEssentialPropertiesForRepresentation","essentialProperty","IMAGE","ContentComponent","MUXED","contentType","mimeTypeRegEx","getIsFragmented","getIsVideo","getIsText","getIsImage","processAdaptation","realAdaptation","getRealAdaptations","periodIndex","getRealPeriods","isPeriodEncrypted","contentProtectionElements","getContentProtectionByPeriod","protectionElements","periodProtectionElements","_getContentProtectionFromElement","as","curr","ContentProtection","contentProtectionData","contentProtection","_getProperties","propertyType","property","_getCombinedPropertiesForAdaptationSet","allProperties","repr","propertiesOfFirstRepresentation","every","currRep","_getPropertiesCommonToAllRepresentations","realRepresentation","getSupplementalPropertiesForRepresentation","calcSegmentDuration","segmentTimeline","s0","calcMseTimeOffset","presentationOffset","getPeriodId","realPeriod","getEventStreams","inbandStreams","EventStream","SCHEME_ID_URI","getBaseURLsFromElement","baseUrls","baseUri","earlyReturn","__text","_createContentSteeringInstance","ContentSteering","_createClientDataReportingInstance","ClientDataReporting","CTA_5004_2023_SCHEME","CMCDParameters","getAccessibilityForAdaptation","getAdaptationForId","realAdaptations","getAdaptationForIndex","getAdaptationsForPeriod","voAdaptations","voAdaptationSet","realAdaptationSet","getAdaptationsForType","adaptations","getAudioChannelConfigurationForAdaptation","audioChanCfg","acc","getAudioChannelConfigurationForRepresentation","getBandwidth","getBitrateListForAdaptation","processedRealAdaptation","getCodec","representationIndex","addResolutionInfo","getCombinedEssentialPropertiesForAdaptationSet","getCombinedSupplementalPropertiesForAdaptationSet","getContentProtectionByAdaptation","getContentProtectionByManifest","mpdElements","getContentSteering","getDuration","mpdDuration","MAX_SAFE_INTEGER","MAX_VALUE","getEssentialPropertiesForAdaptationSet","getEventStreamForAdaptationSet","periodArray","adaptationArray","InbandEventStream","getEventStreamForRepresentation","representationArray","getEventsForPeriod","Event","currentMpdEvent","calculatedPresentationTime","Signal","Binary","decodeArray","__cdata","getId","getIndexForAdaptation","ObjectUtils","areEqual","getLabelsForAdaptation","Label","labelArray","getLanguageForAdaptation","getLocation","MpdLocation","getManifestUpdatePeriod","latencyOfLastUpdate","getMimeType","getMpd","Mpd","loadedTime","getPatchLocation","PatchLocation","getProducerReferenceTimesForAdaptation","prtArray","prtsForAdaptation","prt","ProducerReferenceTime","getPublishTime","getRealPeriodForIndex","realPeriods","voPeriods","realPreviousPeriod","voPreviousPeriod","periodEnd","getEndTimeForLastPeriod","getRepresentationCount","getRepresentationFor","getRepresentationSortFunction","getRepresentationsForAdaptation","voAdaptation","getRealAdaptationFor","segmentInfo","numerator","denominator","SegmentBase","Initialization","sourceURL","getRolesForAdaptation","getSegmentAlignment","getSelectionPriority","realAdaption","selectionPriority","getServiceDescriptions","serviceDescriptions","sd","ServiceDescription","operatingQuality","operatingBandwidth","contentSteering","clientDataReporting","referenceId","maxQualityDifference","at","getSubSegmentAlignment","getSupplementalPropertiesForAdaptationSet","getUTCTimingSources","hasAST","utcTimingsArray","utcTimingEntries","utcTiming","getViewpointForAdaptation","vp","hasProfile","profiles","CmObjectType","MANIFEST","INIT","TIMED_TEXT","KEY","OTHER","CmcdObjectType","CmcdStreamType","CmcdStreamingFormat","SfItem","DICT","throwError","cause","Map","serializeError","SfToken","description","BARE_ITEM","BOOLEAN","BYTES","INTEGER","isInvalidInt","serializeInteger","roundToEven","precision","decimalShift","EPSILON","flooredValue","DECIMAL","serializeDecimal","roundedValue","stringValue","STRING","STRING_REGEX","symbolToStr","TOKEN","serializeToken","serializeBareItem","serializeString","serializeBoolean","serializeDate","binary","btoa","serializeByteSequence","serializeKey","serializeParams","serializeItem","toRounded","toHundred","CmcdFormatters","dl","mtp","nor","toUrlSafe","toPath","fromPath","urlToRelativePath","tb","encodeCmcd","dict","optionalWhiteSpace","serializeDict","encodeSfDict","results","formatters","assign","formatter","isValid","isTokenField","processCmcd","CmcdHeaderField","CmcdHeaderMap","DEFAULT_INCLUDE_IN_REQUESTS","CmcdModel","dashManifestModel","internalData","throughputController","streamProcessors","_lastMediaTypeRequest","_isStartup","_bufferLevelStarved","_initialMediaRequestsDone","_playbackStartedTime","_msdSent","_resetInitialSettings","pr","sf","_updateStreamProcessors","_onPeriodSwitchComplete","msd","getActiveStream","activeStream","getStreamProcessors","_applyWhitelist","cmcdData","cmcdParametersFromManifest","getCmcdParametersFromManifest","enabledCMCDKeys","isCmcdEnabled","isEnabledFromManifest","isEnabledFromSettings","_canBeEnabled","enabledRequests","defaultAvailableRequests","CMCD_AVAILABLE_REQUESTS","invalidRequests","_checkIncludeInRequests","defaultAvailableKeys","defaultV2AvailableKeys","CMCD_V2_AVAILABLE_KEYS","cmcdVersion","invalidKeys","_checkAvailableKeys","serviceDescription","getCmcdData","includeInRequestsArray","filtersTypes","CONTENT_STEERING_TYPE","_isIncludedInRequestFilter","_getGenericCmcdData","ot","_getCmcdDataForMpd","_initForMediaType","_getCmcdDataForMediaSegment","su","_getCmcdDataForInitSegment","_getCmcdDataForOther","_getCmcdDataForLicense","_getCmcdDataForSteering","encodedBitrate","_getBitrateByRequest","_getObjectDurationByRequest","getSafeAverageThroughput","_getMeasuredThroughputByType","_getDeadlineByType","_getBufferLevelByType","bitrates","getPossibleVoRepresentationsFilteredBySettings","_getTopBitrateByType","nextRequest","streamProcessor","_probeNextRequest","currentBufferLevel","minBandwidth","_calculateRtp","nrr","bs","ltc","_onManifestLoaded","getQueryParameter","finalPayloadString","MetricsReportingEvents","CMCD_DATA_GENERATED","cmcdString","getHeaderParameters","headerMap","customHeaderMap","shards","toCmcdHeaders","MANIFEST_LOADED","autoPlay","PERIOD_SWITCH_COMPLETED","MANIFEST_LOADING_STARTED","CMSD_DYNAMIC","CMSD_STATIC","CmsdObjectType","parseError","LIST","parsedValue","INNER","DATE","INTEGER_DECIMAL","parseIntegerOrDecimal","re_integer","result_integer","lastIndex","re_decimal","result_decimal","parseBareItem","parseString","parseBoolean","re","b64_content","atob","parseByteSequence","useSymbol","for","parseToken","date","parseDate","parseKey","parseParameters","parsedKey","parsedBareItem","parseItem","parsedParameters","parseItemOrInnerList","innerList","parsedItem","parseInnerList","CMSD_STATIC_RESPONSE_FIELD_NAME","CMSD_DYNAMIC_RESPONSE_FIELD_NAME","PERSISTENT_PARAMS","STREAM","MEDIATYPE_TO_OBJECTTYPE","CmsdModel","_staticParamsDict","_dynamicParamsDict","_clearParams","_parseCMSDStatic","member","parsedItemOrInnerList","parseDict","decodeSfDict","_parseCMSDDynamic","items","parseList","decodeSfList","_mediaTypetoObjectType","_getParamValueForObjectType","paramsType","otParams","streamParams","parseResponseHeaders","staticParams","dynamicParams","static","dynamic","getMaxBitrate","getEstimatedThroughput","getResponseDelay","getRoundTripTime","CommonAccessTokenController","hostTokenMap","processResponseHeaders","httpResponse","commonAccessTokenHeader","COMMON_ACCESS_TOKEN_HEADER","getCommonAccessTokenForUrl","ClientDataReportingController","isAdaptationsIncluded","adaptationSet","isServiceLocationIncluded","requestType","ExtUrlQueryInfoController","mpdQueryStringInformation","_generateQueryParams","resultObject","manifestObject","mpdUrlQuery","parentLevelInfo","mpdElement","properties","UrlQueryInfo","ExtUrlQueryInfo","_getDescriptorTypeFromManifestObject","defaultInitialString","initialQueryString","queryInfo","queryString","useMPDUrlQuery","_generateInitialQueryString","parentQueryString","finalQueryString","queryTemplate","_generateFinalQueryString","sameOriginOnly","parentIncludeInRequests","_getIncludeInRequestFromProperty","getFinalQueryString","requestUrl","canSendToOrigin","createFinalQueryStrings","periodObject","adaptationObject","representationObject","redirected","resourceTiming","HTTPLoader","requestTimeout","httpRequests","delayedRequests","retryRequests","downloadErrorToRequestTypeMap","cmcdModel","cmsdModel","xhrLoader","fetchLoader","customParametersModel","commonAccessTokenController","clientDataReportingController","extUrlQueryInfoController","_internalLoad","remainingAttempts","_onloadend","_onRequestEnd","_onprogress","firstProgress","requestObject","responseStart","encodedBodySize","traces","lastTraceTime","lastTraceReceivedCount","progressTimeout","loader","progress","_onabort","_ontimeout","timeoutMessage","percentageComplete","aborted","_updateRequestTimingInfo","_updateResourceTimingInfo","interceptors","getResponseInterceptors","prev","resp","_applyResponseInterceptors","_httpResponse","httpRequest","addHttpRequest","_addHttpRequestMetric","addManifestUpdate","MANIFEST_LOADING_FINISHED","success","complete","getRetryAttemptsForType","_retriggerRequest","requestStartTime","responseEnd","resources","getEntriesByType","resource","transferSize","_areResourceTimingValuesUsable","resourceTimingValues","_addResourceTimingValues","_loadRequest","getRequestInterceptors","_applyRequestInterceptors","_httpRequest","retryRequest","getRetryIntervalsForType","loaderInformation","fileLoaderType","FILE_LOADER_TYPES","FETCH","XHR","_getLoader","currentServiceLocation","currentAdaptationSetId","cmcdMode","CMCD_QUERY_KEY","additionalQueryParameter","cmcdQueryParameter","_getAdditionalQueryParameter","CMCD_MODE_HEADER","_updateRequestUrlAndHeadersWithCmcd","_addExtUrlQueryParameters","_addPathwayCloningParameters","commonAccessToken","_addCommonAccessToken","getXHRWithCredentialsForType","CommonMediaRequest","GET","CommonMediaResponse","delayedRequest","delayTimeout","reqData","CustomParametersModel","SchemeLoaderFactory","schemeLoaderMap","unregisterAllLoader","getLoader","startsWith","registerLoader","unregisterLoader","URLLoader","schemeLoaderFactory","loaderFactory","checkForExistenceOnly","FragmentLoader","urlLoader","checkForExistence","report","exists","headRequest","HeadRequest","errorText","FragmentController","fragmentModels","model","onFragmentLoadingCompleted","isInit","strInfo","DataChunk","createDataChunk","getModel","bitrate","tilesHor","tilesVert","widthPerTile","heightPerTile","templateUrl","IsoBox","boxData","isComplete","first_offset","references","subsegment_duration","scheme_id_uri","presentation_time_delta","presentation_time","event_duration","message_data","sequence_number","base_data_offset","sample_description_index","default_sample_duration","default_sample_size","default_sample_flags","baseMediaDecodeTime","first_sample_flags","data_offset","samples","sample_size","sample_duration","sample_composition_time_offset","reference_track_ID","getChildBox","getChildBoxes","IsoFile","parsedIsoFile","convertToDashIsoBox","setData","getLastBox","typeOfLastCompletedBox","typeOfLastTargetBox","BoxParser","fileStart","parsedFile","dashIsoFile","parseUint32","parseIsoBoxType","findInitRange","initRange","ftyp","moov","boxTypesToSearchFor","IsoBoxSearchInfo","boxInfo","boxSize","boxType","ab","mdhdBox","getSamplesInfo","sampleList","lastSequenceNumber","totalDuration","numSequences","sampleDuration","sampleCompositionTimeOffset","sampleCount","sampleDts","dataOffset","moofBoxes","mfhdBoxes","subsIndex","nextSubsSample","moofBox","trafBoxes","trafBox","tfhdBox","tfdtBox","trunBoxes","subsBoxes","trunBox","sampleData","subsBox","sample_delta","subSizes","subsamples","subsample_size","ThumbnailTracks","tracks","representations","currentTrackIndex","_createTrack","useSegmentBase","track","ThumbnailTrackInfo","vars","cache","_normalizeSegments","readThumbnail","cached","ss","blob","Blob","imageUrl","createObjectURL","_handleUpdatedSegmentData","buildTemplateUrl","addTracks","getMediaInfoForType","voReps","getVoRepresentations","getCurrentTrack","getCurrentTrackIndex","getRepresentations","getThumbnailRequestForTime","currentVoRep","getTracks","setTrackById","findIndex","setTrackByIndex","ThumbnailController","thumbnailTracks","provide","thumbIndex","thumbnail","Thumbnail","seq","seqIdx","_buildUrlFromTemplate","BlackListController","blacklist","updateEventName","addBlacklistEventName","onAddBlackList","query","MEDIA_TYPES","manifestUpdater","eventController","protectionController","isInitialized","isActive","hasFinishedBuffering","hasAudioTrack","fragmentController","thumbnailController","preloaded","isEndedEventSignaled","trackChangedEvents","_commonMediaInitialization","representationsFromPreviousPeriod","_addInlineEvents","representationFromPreviousPeriod","_initializeMediaForType","previousBuffersSinks","sp","bufferSinks","getValue","_initializationCompleted","createTracks","initialMediaInfo","allMediaForType","getAllMediaInfoForType","embeddedMediaInfos","isEmbedded","addEmbeddedTrack","_isMediaSupported","addTrack","setInitialMediaSettingsForType","addMediaInfosToBuffer","_createStreamProcessor","getCurrentTrackFor","supportsEncryptedMedia","deactivate","deactivateStream","_setPreloaded","setIsEndedEventSignaled","STREAM_DEACTIVATED","getStartTime","_onProtectionError","addInlineEvents","_getMediaInfo","_getStreamProcessorForType","onBufferingCompleted","processors","onInbandEvents","addInbandEvents","getProcessorForMediaInfo","_getProcessorByType","processor","startScheduleControllers","clearMediaInfoArray","initializeForMedia","handleKeySystemFromManifest","waitForReadyState","VIDEO_ELEMENT_READY_STATES","HAVE_METADATA","STREAM_INITIALIZED","getPreloaded","activate","STREAM_ACTIVATED","_initializeMedia","getAdapter","getCurrentMediaInfoForType","getCurrentRepresentationForType","getHasAudioTrack","getHasFinishedBuffering","getHasVideoTrack","getIsActive","getIsEndedEventSignaled","getRepresentationForTypeById","possibleVoRepresentations","mediaInfos","_getAllMediaInfos","flatMap","targetReps","getRepresentationForTypeByIndex","getRepresentationsByType","getThumbnailController","KEY_ERROR","SERVER_CERTIFICATE_UPDATED","LICENSE_REQUEST_COMPLETE","KEY_SYSTEM_SELECTED","KEY_SESSION_CREATED","initializeForStream","STREAM_UPDATED","initializeForTextWithMediaSource","createBufferSinkForText","prepareTrackChange","refreshManifestOnSwitchTrack","getIsUpdating","refreshManifest","clearDataForStream","startPreloading","previousBuffers","triggerProtectionError","updatedStreamInfo","trackChangedEvent","BlacklistController","reloadUri","pathwayPriority","pathwayClones","ContentSteeringController","currentSteeringResponseData","serviceLocationList","throughputList","nextRequestTimer","_onFragmentLoadingStarted","_addToServiceLocationList","_onManifestLoadingStarted","_onThroughputMeasurementStored","throughputValues","getSteeringDataFromManifest","contentSteeringData","loadSteeringData","steeringDataFromManifest","location","getArithmeticMean","_calculateThroughputForServiceLocation","pathwayString","throughputString","_getSteeringServerUrl","ContentSteeringRequest","ContentSteeringResponse","pathwayClone","_isValidPathwayClone","_startSteeringRequestTimer","_handleSteeringResponse","CONTENT_STEERING_REQUEST_COMPLETED","retryAfter","getResponseHeader","_handleSteeringResponseError","_getClearedServiceLocationListAfterSteeringRequest","_getSynthesizedElements","referenceElements","synthesizedElements","baseElements","referenceUrl","synthesizedElement","synthesizedUrl","stopSteeringRequestTimer","THROUGHPUT_MEASUREMENT_STORED","getCurrentSteeringResponseData","shouldQueryBeforeStart","getSynthesizedBaseUrlElements","synthesizedBaseUrl","getSynthesizedLocationElements","synthesizedLocation","LocationSelector","blacklistController","contentSteeringController","select","mpdLocations","mpdLocation","_findMpdLocation","_selectByContentSteering","_selectByDefault","ManifestUpdater","refreshDelay","refreshTimer","isStopped","isUpdating","manifestLoader","locationSelector","stopManifestRefreshTimer","startManifestRefreshTimer","onRefreshTimer","ignorePatch","availablePatchLocations","patchLocation","availableMpdLocations","manifestLocations","_getAvailableMpdLocations","getIsPatch","patch","isPatchValid","patchSuccessful","applyPatchToManifest","updatedPublishTime","setValue","onManifestLoaded","onPlaybackStarted","onPlaybackPaused","onStreamsComposed","setManifest","TimeSyncController","isSynchronizing","isBackgroundSynchronizing","backgroundSyncTimeOffsets","timingSources","timeOfLastSync","timeOfLastBackgroundSync","lastOffset","lastTimingSource","internalTimeBetweenSyncAttempts","_onAttemptBackgroundSync","_attemptBackgroundSync","attempts","_completeBackgroundTimeSyncSequence","deviceTimeBeforeSync","serverTime","deviceTimeAfterSync","_calculateOffset","_attemptRecursiveSync","failed","dateHeaderValue","getLatestMPDRequestHeaderValueByID","dateHeaderTime","_completeTimeSyncSequence","_checkForDateHeader","_xsdatetimeDecoder","xsdatetimeStr","parsedDate","utcDate","timezoneOffset","_alternateXsdatetimeDecoder","_iso8601Decoder","isoStr","_rfc1123Decoder","dateStr","_notSupportedHandler","onSuccessCB","onFailureCB","_directHandler","_httpHandler","isHeadRequest","oncomplete","verb","HEAD","urls","_httpHeadHandler","isOffsetDriftWithinThreshold","_isOffsetDriftWithinThreshold","adjustedTimeBetweenSyncAttempts","_adjustTimeBetweenSyncAttempts","shouldAttemptBackgroundSync","averageOffset","maxAllowedDrift","attemptSync","tSources","_shouldPerformSynchronization","HTTP_TIMEOUT_MS","MediaSourceController","mediaSourceType","attachMediaSource","objectURL","setSource","setDisableRemotePlayback","createMediaSource","hasWebKit","hasMediaSource","ManagedMediaSource","MediaSource","WebKitMediaSource","detachMediaSource","setDuration","sourceBuffers","isBufferUpdating","setSeekable","setLiveSeekableRange","clearLiveSeekableRange","signalEndOfStream","endOfStream","EventController","MPD_RELOAD_SCHEME","MPD_RELOAD_VALUE","MPD_CALLBACK_SCHEME","MPD_CALLBACK_VALUE","REMAINING_EVENTS_THRESHOLD","EVENT_HANDLED_STATES","inlineEvents","eventInterval","lastEventTimerCall","eventHandlingInProgress","isStarted","_onEventTimer","currentVideoTime","presentationTimeThreshold","_triggerEvents","_removeOutdatedEventObjects","_startEvent","EVENT_MODE_ON_START","_eventHasExpired","periodEndTime","_eventIsInvalid","periodId","_removeEvent","_iterateAndTriggerCallback","_addOrUpdateEvent","shouldOverwriteExistingEvents","eventState","indexOfExistingEvent","triggeredReceivedEvent","triggeredStartEvent","oldEvent","_handleManifestReloadEvent","validUntil","newManifestValidAfter","_triggerRemainingEvents","periodDuration","periodStart","calculatedPresentationTimeInSeconds","periodIds","currentPeriod","schemeIdUris","eventId","_refreshManifest","_sendCallbackRequest","values","getInbandEvents","getInlineEvents","_onStopEventController","_stop","LEVELS","SUGGESTION","WARNING","ERROR","NO_UTC_TIMING_ELEMENT","NON_COMPLIANT_SMPTE_IMAGE_ATTRIBUTE","INVALID_DVR_WINDOW","StreamController","capabilitiesFilter","mediaSourceController","timeSyncController","uriFragmentModel","protectionData","isStreamSwitchingInProgress","hasMediaError","hasInitialisationError","initialPlayback","initialSteeringRequest","playbackEndedTimerInterval","preloadingStreams","firstLicenseIsFetched","waitForPlaybackStartTimeout","providedStartTime","errorInformation","_checkConfig","_onTimeSyncCompleted","streamsInfo","getStreamsInfo","getBufferRange","clientTimeOffset","shouldKeepStream","_filterOutdatedStreams","_initializeOrUpdateStream","addManifestUpdateStreamInfo","_initializeForFirstStream","_checkIfPrebufferingCanStart","_composePeriods","_onKeySessionUpdated","getStreamById","dvrRange","waitingTime","AST_IN_FUTURE","calculateProducerReferenceTimeOffsets","_getFragmentDurationForLiveDelayCalculation","_calculateStartTimeAndSwitchStream","startTimeFromUri","_getStartTimeFromUriParameters","providedStartTimeAsPresentationTime","_getStartTimeFromProvidedData","getStreams","_getInitialStartTime","initialStream","getStreamForTime","startStream","_switchStream","previousStream","PERIOD_SWITCH_STARTED","fromStreamInfo","toStreamInfo","_canSourceBuffersBeKept","_getRepresentationsFromPreviousPeriod","_openMediaSource","streamActivated","_activateStream","inputParameters","sourceUrl","_onMediaSourceOpen","revokeObjectURL","_setMediaDuration","_open","sinks","seekToStream","_cancelPreloading","_handleOuterPeriodSeek","_flushPlaylistMetrics","_handleInnerPeriodSeek","_createPlaylistMetrics","_deactivateAllPreloadingStreams","_onCurrentTrackChanged","nextStream","isProtectionCompatible","_onStreamCanLoadNext","calcTimeShiftBufferWindow","activeStreamProcessors","addDVRInfo","_onBufferLevelUpdated","getInitialBufferLevel","excludedStreamProcessors","addBufferLevel","_onQualityChanged","_onLiveDelaySettingUpdated","playbackQuality","getPlaybackQuality","addDroppedFrames","_onStreamBufferingCompleted","upcomingStreams","refStream","refStreamInfo","_getNextStreams","_stopPlaybackEndedTimerInterval","targetIndex","lastDiff","diff","_getNextStream","manifestDuration","fragData","getURIFragmentData","_getStartTimeFromString","targetValue","targetString","streamInfos","maxFragmentDuration","updatePeriods","filterUnsupportedFeatures","manifestUTCTimingSources","CONFORMANCE_VIOLATION","ConformanceViolationConstants","allUTCTimingSources","addPlayList","startReason","createPlaylistMetrics","_onInternalKeyStatusesChanged","updateKeyStatusesMap","hasUnusableKey","areKeyIdsUsable","areKeyIdsExpired","ProtectionErrors","KEY_STATUS_CHANGED_EXPIRED_ERROR_CODE","KEY_STATUS_CHANGED_EXPIRED_ERROR_MESSAGE","_handleExpiredKeyId","supportedMediaInfos","setTrack","_handleUnusableKeyId","_triggerUnusableKeySeek","_handleKeyStatuses","counts","_handleMediaErrorDecode","msExtendedCode","_onManifestValidityChanged","METRIC_ADDED","_onMetricAdded","QUALITY_CHANGE_REQUESTED","KEY_SESSION_UPDATED","ProtectionEvents","INTERNAL_KEY_STATUSES_CHANGED","clearAllCurrentMetrics","PROTECTION_DESTROYED","STREAM_TEARDOWN_COMPLETE","metric","targetMediaType","getHasMediaOrInitialisationError","getIsStreamSwitchInProgress","getTimeRelativeToStreamId","baseStart","streamStart","streamDur","autoPl","protData","PROTECTION_CREATED","setMediaElement","setProtectionData","loadWithManifest","_checkInitialize","switchToVideoElement","GapController","lastPlaybackTime","gapHandlerInterval","lastGapJumpPosition","jumpTimeoutHandler","trackSwitchByMediaType","_onInitialStreamSwitch","_onBufferReplacementStarted","_onBufferReplacementEnded","_unregisterEvents","_shouldCheckForGaps","_jumpGap","_startGapHandler","checkSeekingState","shouldIgnoreSeekingState","streamEnd","_shouldIgnoreSeekingState","nextRangeIndex","seekToPosition","jumpToStreamEnd","_getNextRangeIndex","timeToStreamEnd","_isTimeBuffered","timeUntilGapEnd","timeToWait","_registerEvents","CatchupController","isCatchupSeekInProgress","isSafari","_onCatchupSettingUpdated","getCatchupModeEnabled","setPlaybackRate","getCatchupPlaybackRates","_getCatchupMode","LIVE_CATCHUP_MODE_LOLP","currentBuffer","_getLatencyDrift","_lolpNeedToCatchUpCustom","_defaultNeedToCatchUp","_shouldStartCatchUp","newRate","currentPlaybackRate","liveCatchupPlaybackRates","deltaLatency","getCatchupMaxDrift","currentLiveLatency","targetLiveDelay","liveCatchUpPlaybackRates","cpr","E","minDifference","_calculateNewPlaybackRateLolP","_calculateNewPlaybackRateDefault","minPlaybackRateChange","_startPlaybackCatchUp","_checkPlaybackRates","SUPPORTED_SCHEMES","SERVICE_DESCRIPTION_DVB_LL_SCHEME","ServiceDescriptionController","prftOffsets","_updateBandwidthSetting","getProducerReferenceTimeOffsets","timeOffsets","mediaTypes","astInSeconds","offsets","getProducerReferenceTimes","voRep","prt0","supportedServiceDescriptions","allClientsServiceDescriptions","_getDvbServiceDescriptionLatencyParameters","sdLatency","_calculateTimeOffset","_applyServiceDescriptionLatency","_applyServiceDescriptionPlaybackRate","maxBandwidth","targetBandwidth","mediaTypesToApply","_applyServiceDescriptionOperatingBandwidth","_applyServiceDescriptionContentSteering","_applyServiceDescriptionClientDataReporting","schema","irregular","regular","extendedLanguageSubtags","variants","singleton","privateuse","isAlphabetical","character","isDecimal","isAlphanumerical","normal","own","replacement","groups","fail","forgiving","cast","rightIndex","leftIndex","extendedFilter","fields","many","an","fq","nt","pc","yu","ant","scg","ntz","sun","yug","likely","aa","aaa","aab","aac","aad","aae","aaf","aag","aah","aai","aak","aal","aan","aao","aap","aaq","aas","aat","aau","aaw","aax","aaz","aba","abb","abc","abd","abe","abf","abg","abh","abi","abl","abm","abn","abo","abp","abq","abt","abu","abv","abw","abx","aby","abz","aca","acb","acd","ace","acf","ach","acm","acn","acp","acq","acr","acs","act","acu","acv","acw","acx","acy","acz","ada","adb","ade","adf","adg","adh","adi","adj","adl","adn","ado","adp","adq","adr","adt","adu","adw","adx","ady","adz","ae","aea","aeb","aec","aee","aek","ael","aem","aeq","aer","aeu","aew","aey","aez","af","afb","afd","afe","afh","afi","afk","afn","afo","afp","afs","afu","afz","aga","agb","agc","agd","age","agf","agg","agh","agi","agj","agk","agl","agm","agn","ago","agq","agr","ags","agt","agu","agv","agw","agx","agy","agz","aha","ahb","ahg","ahh","ahi","ahk","ahl","ahm","ahn","aho","ahp","ahr","ahs","aht","aia","aib","aic","aid","aie","aif","aig","aij","aik","ail","aim","ain","aio","aip","aiq","air","ait","aiw","aix","aiy","aja","ajg","aji","ajn","ajp","ajt","ajw","ajz","ak","akb","akc","akd","ake","akf","akg","akh","aki","akk","akl","ako","akp","akq","akr","aks","akt","aku","akv","akw","akz","ala","alc","ald","ale","alf","alh","ali","alj","alk","alm","aln","alo","alp","alq","alr","alt","alu","alw","alx","aly","alz","am","ama","amb","amc","ame","amf","amg","ami","amj","amk","amm","amn","amo","amp","amq","amr","ams","amt","amu","amv","amw","amx","amy","amz","ana","anb","anc","and","ane","anf","ang","anh","ani","anj","ank","anl","anm","ann","ano","anp","anr","ans","anu","anv","anw","anx","any","anz","aoa","aob","aoc","aod","aoe","aof","aog","aoi","aoj","aok","aol","aom","aon","aor","aos","aot","aox","aoz","apb","apc","apd","ape","apf","apg","aph","api","apj","apk","apl","apm","apn","apo","app","apr","aps","apt","apu","apv","apw","apx","apy","apz","aqc","aqd","aqg","aqk","aqm","aqn","aqr","aqt","aqz","arc","ard","are","arh","ari","arj","ark","arl","arn","aro","arp","arq","ars","aru","arw","arx","ary","arz","asa","asb","asc","ase","asg","ash","asi","asj","ask","asl","asn","aso","ass","ast","asu","asv","asx","asy","asz","ata","atb","atc","atd","ate","atg","ati","atj","atk","atl","atm","atn","ato","atp","atq","atr","ats","att","atu","atv","atw","atx","aty","atz","aua","auc","aud","aug","auh","aui","auj","auk","aul","aum","aun","auo","aup","auq","aur","aut","auu","auw","auy","auz","av","avb","avd","avi","avk","avl","avm","avn","avo","avs","avt","avu","avv","awa","awb","awc","awe","awg","awh","awi","awk","awm","awn","awo","awr","aws","awt","awu","awv","aww","awx","awy","axb","axe","axg","axk","axl","axm","axx","ay","aya","ayb","ayc","ayd","aye","ayg","ayh","ayi","ayk","ayl","ayn","ayo","ayp","ayq","ays","ayt","ayu","ayz","az","azb","azd","azg","azm","azn","azo","azt","azz","ba","baa","bab","bac","bae","baf","bag","bah","baj","bal","ban","bao","bap","bar","bas","bau","bav","baw","bax","bay","bba","bbb","bbc","bbd","bbe","bbf","bbg","bbi","bbj","bbk","bbl","bbm","bbn","bbo","bbp","bbq","bbr","bbs","bbt","bbu","bbv","bbw","bbx","bby","bca","bcb","bcd","bce","bcf","bcg","bch","bci","bcj","bck","bcm","bcn","bco","bcp","bcq","bcr","bcs","bct","bcu","bcv","bcw","bcy","bcz","bda","bdb","bdc","bdd","bde","bdf","bdg","bdh","bdi","bdj","bdk","bdl","bdm","bdn","bdo","bdp","bdq","bdr","bds","bdt","bdu","bdv","bdw","bdx","bdy","bdz","be","bea","beb","bec","bed","bee","bef","beh","bei","bej","bek","bem","beo","bep","beq","bes","bet","beu","bev","bew","bex","bey","bez","bfa","bfb","bfc","bfd","bfe","bff","bfg","bfh","bfj","bfl","bfm","bfn","bfo","bfp","bfq","bfs","bft","bfu","bfw","bfx","bfy","bfz","bg","bga","bgb","bgc","bgd","bgf","bgg","bgi","bgj","bgn","bgo","bgp","bgq","bgr","bgs","bgt","bgu","bgv","bgw","bgx","bgy","bgz","bha","bhb","bhc","bhd","bhe","bhf","bhg","bhh","bhi","bhj","bhl","bhm","bhn","bho","bhp","bhq","bhr","bhs","bht","bhu","bhv","bhw","bhy","bhz","bia","bib","bid","bie","bif","big","bik","bil","bim","bin","bio","bip","biq","bir","bit","biu","biv","biw","biy","biz","bja","bjb","bjc","bjf","bjg","bjh","bji","bjj","bjk","bjl","bjm","bjn","bjo","bjp","bjr","bjs","bjt","bju","bjv","bjw","bjx","bjy","bjz","bka","bkc","bkd","bkf","bkg","bkh","bki","bkj","bkl","bkm","bkn","bko","bkp","bkq","bkr","bks","bkt","bku","bkv","bkw","bkx","bky","bkz","bla","blb","blc","bld","ble","blf","blg","blh","bli","blj","blk","blm","bln","blo","blp","blq","blr","bls","blt","blv","blw","blx","bly","blz","bm","bma","bmb","bmc","bmd","bme","bmf","bmg","bmh","bmi","bmj","bmk","bml","bmm","bmn","bmo","bmp","bmq","bmr","bms","bmu","bmv","bmw","bmx","bmz","bn","bna","bnb","bnc","bnd","bne","bnf","bng","bni","bnj","bnk","bnm","bnn","bno","bnp","bnq","bnr","bns","bnu","bnv","bnw","bnx","bny","bnz","bo","boa","bob","boe","bof","boh","boj","bok","bol","bom","bon","boo","bop","boq","bor","bot","bou","bov","bow","boy","boz","bpa","bpc","bpe","bpg","bph","bpi","bpj","bpk","bpl","bpm","bpo","bpp","bpq","bpr","bps","bpt","bpu","bpv","bpw","bpx","bpy","bpz","bqa","bqb","bqc","bqd","bqf","bqg","bqi","bqj","bqk","bql","bqm","bqo","bqp","bqq","bqr","bqs","bqt","bqu","bqv","bqw","bqx","bqz","bra","brb","brc","brd","brf","brg","brh","bri","brj","brk","brl","brm","brn","brp","brq","brr","brs","brt","bru","brv","brx","bry","brz","bsa","bsb","bsc","bse","bsf","bsh","bsi","bsj","bsk","bsl","bsm","bsn","bso","bsp","bsq","bsr","bss","bst","bsu","bsv","bsw","bsx","bsy","bta","btc","btd","bte","btf","btg","bth","bti","btj","btm","btn","bto","btp","btq","btr","bts","btt","btu","btv","btw","btx","bty","btz","bua","bub","buc","bud","bue","bug","buh","bui","buj","buk","bum","bun","buo","bup","buq","bus","but","buu","buv","buw","bux","buy","buz","bva","bvb","bvc","bvd","bve","bvf","bvg","bvh","bvi","bvj","bvk","bvm","bvn","bvo","bvq","bvr","bvt","bvu","bvv","bvw","bvx","bvy","bvz","bwa","bwb","bwc","bwd","bwe","bwf","bwg","bwh","bwi","bwj","bwk","bwl","bwm","bwo","bwp","bwq","bwr","bws","bwt","bwu","bww","bwx","bwy","bwz","bxa","bxb","bxc","bxf","bxg","bxh","bxi","bxj","bxl","bxm","bxn","bxo","bxp","bxq","bxs","bxu","bxv","bxw","bxz","bya","byb","byc","byd","bye","byf","byh","byi","byj","byk","byl","bym","byn","byp","byr","bys","byv","byw","byx","byz","bza","bzb","bzc","bzd","bze","bzf","bzh","bzi","bzj","bzk","bzl","bzm","bzn","bzo","bzp","bzq","bzr","bzt","bzu","bzv","bzw","bzx","bzy","bzz","ca","caa","cab","cac","cad","cae","caf","cag","cah","caj","cak","cal","cam","can","cao","cap","caq","car","cas","cav","caw","cax","cay","caz","cbb","cbc","cbd","cbg","cbi","cbj","cbk","cbl","cbn","cbo","cbq","cbr","cbs","cbt","cbu","cbv","cbw","cby","ccc","ccd","cce","ccg","cch","ccj","ccl","ccm","cco","ccp","ccr","cde","cdf","cdh","cdi","cdj","cdm","cdo","cdr","cdz","ce","cea","ceb","ceg","cek","cen","cet","cey","cfa","cfd","cfm","cga","cgc","cgg","cgk","ch","chb","chd","chf","chg","chh","chj","chk","chl","chm","chn","cho","chp","chq","chr","cht","chw","chx","chy","chz","cia","cib","cic","cie","cih","cim","cin","cip","cir","ciw","ciy","cja","cje","cjh","cji","cjk","cjm","cjn","cjo","cjp","cjs","cjv","cjy","ckb","ckl","ckm","ckn","cko","ckq","ckr","cks","ckt","cku","ckv","ckx","cky","ckz","cla","clc","cle","clh","cli","clj","clk","cll","clm","clo","clt","clu","clw","cly","cma","cme","cmg","cmi","cml","cmo","cmr","cms","cmt","cna","cnb","cnc","cng","cnh","cni","cnk","cnl","cnp","cnq","cns","cnt","cnw","cnx","co","coa","cob","coc","cod","coe","cof","cog","coh","coj","cok","col","com","coo","cop","coq","cot","cou","cox","coz","cpa","cpb","cpc","cpg","cpi","cpn","cpo","cps","cpx","cpy","cqd","crb","crc","crd","crf","crg","crh","cri","crj","crk","crl","crm","crn","cro","crq","crs","crt","crv","crw","crx","cry","crz","csa","csb","csh","csj","csk","csm","cso","csp","css","cst","csv","csw","csy","csz","cta","ctc","ctd","cte","ctg","cth","ctl","ctm","ctn","cto","ctp","cts","ctt","ctu","ctz","cu","cua","cub","cuc","cuh","cui","cuj","cuk","cul","cuo","cup","cut","cuu","cuv","cux","cv","cvg","cvn","cwa","cwb","cwe","cwg","cwt","cy","cya","cyb","cyo","czh","czk","czn","czt","daa","dac","dad","dae","daf","dag","dah","dai","daj","dak","dal","dam","dao","daq","dar","das","dau","dav","daw","dax","daz","dba","dbb","dbd","dbe","dbf","dbg","dbi","dbj","dbl","dbm","dbn","dbo","dbp","dbq","dbt","dbu","dbv","dbw","dby","dcc","dcr","dda","ddd","dde","ddg","ddi","ddj","ddn","ddo","ddr","dds","ddw","de","dec","ded","dee","def","deg","deh","dei","dek","del","dem","den","deq","der","des","dev","dez","dga","dgb","dgc","dgd","dge","dgg","dgh","dgi","dgk","dgl","dgn","dgr","dgs","dgt","dgw","dgx","dgz","dhg","dhi","dhl","dhm","dhn","dho","dhr","dhs","dhu","dhv","dhw","dhx","dia","dib","dic","did","dif","dig","dih","dii","dij","dil","din","dio","dip","dis","diu","diw","dix","diy","diz","dja","djb","djc","djd","dje","djf","dji","djj","djk","djm","djn","djo","djr","dju","djw","dka","dkg","dkk","dkr","dks","dkx","dlg","dlm","dln","dma","dmb","dmc","dmd","dme","dmf","dmg","dmk","dml","dmm","dmo","dmr","dms","dmu","dmv","dmw","dmx","dmy","dna","dnd","dne","dng","dni","dnj","dnk","dnn","dno","dnr","dnt","dnu","dnv","dnw","dny","doa","dob","doe","dof","doh","doi","dok","dol","don","doo","dop","dor","dos","dot","dov","dow","dox","doy","dpp","drc","dre","drg","drh","dri","drl","drn","dro","drq","drs","drt","dru","dry","dsb","dsh","dsi","dsn","dso","dsq","dta","dtb","dtd","dth","dti","dtk","dtm","dto","dtp","dtr","dts","dtt","dtu","dty","dua","dub","duc","dud","due","duf","dug","duh","dui","duk","dul","dum","dun","duo","dup","duq","dus","duu","duv","duw","dux","duy","duz","dv","dva","dwa","dwk","dwr","dws","dwu","dww","dwy","dwz","dya","dyb","dyd","dyg","dyi","dym","dyn","dyo","dyu","dyy","dz","dza","dze","dzg","dzl","dzn","eaa","ebc","ebg","ebk","ebo","ebr","ebu","ecr","ecy","efa","efe","efi","ega","egl","egm","ego","egy","ehu","eip","eit","eiv","eja","eka","eke","ekg","eki","ekl","ekm","eko","ekp","ekr","eky","ele","elk","elm","elo","elu","ema","emb","eme","emg","emi","emm","emn","emp","ems","emu","emw","emx","emz","en","ena","enb","enf","enh","enl","enm","enn","eno","enq","enr","env","enw","enx","eo","eot","epi","era","erg","erh","eri","erk","ert","erw","ese","esg","esh","esi","esm","ess","esu","esy","et","etb","etn","eto","etr","ets","ett","etu","etx","etz","eu","eve","evh","evn","ewo","eya","eyo","eza","eze","fa","faa","fab","fad","faf","fag","fah","fai","faj","fak","fal","fam","fan","fap","far","fau","fax","fay","faz","fbl","fer","ff","ffi","ffm","fgr","fia","fie","fif","fil","fip","fir","fit","fiw","fj","fkk","fkv","fla","flh","fli","fll","fln","flr","fly","fmp","fmu","fnb","fng","fni","fo","fod","foi","fom","fon","fos","fpe","fqs","fr","frc","frd","frk","fro","frp","frq","frr","frs","frt","fub","fud","fue","fuf","fuh","fui","fum","fun","fuq","fur","fut","fuu","fuv","fuy","fvr","fwa","fwe","fy","ga","gaa","gab","gac","gad","gae","gaf","gag","gah","gai","gaj","gak","gal","gam","gan","gao","gaq","gar","gas","gat","gau","gaw","gax","gay","gba","gbb","gbd","gbe","gbf","gbg","gbh","gbi","gbj","gbk","gbl","gbm","gbn","gbp","gbq","gbr","gbs","gbu","gbv","gbw","gbx","gby","gbz","gcc","gcd","gcf","gcl","gcn","gcr","gct","gd","gdb","gdc","gdd","gde","gdf","gdg","gdh","gdi","gdj","gdk","gdl","gdm","gdn","gdo","gdq","gdr","gdt","gdu","gdx","gea","geb","gec","ged","gef","geg","geh","gei","gej","gek","gel","geq","ges","gev","gew","gex","gey","gez","gfk","gga","ggb","ggd","gge","ggg","ggk","ggl","ggn","ggt","ggu","ggw","gha","ghc","ghe","ghk","ghn","ghr","ghs","ght","gia","gib","gic","gid","gie","gig","gih","gil","gim","gin","gip","giq","gir","gis","git","gix","giy","giz","gjk","gjm","gjn","gjr","gju","gka","gkd","gke","gkn","gko","gkp","gku","gl","glb","glc","gld","glh","glj","glk","gll","glo","glr","glu","glw","gma","gmb","gmd","gmg","gmh","gmm","gmn","gmr","gmu","gmv","gmx","gmy","gmz","gn","gna","gnb","gnc","gnd","gne","gng","gnh","gni","gnj","gnk","gnl","gnm","gnn","gnq","gnr","gnt","gnu","gnw","gnz","goa","gob","goc","god","goe","gof","gog","goh","goi","gok","gol","gom","gon","goo","gop","goq","gor","gos","got","gou","gov","gow","gox","goy","gpa","gpe","gpn","gqa","gqn","gqr","gra","grb","grc","grd","grg","grh","gri","grj","grm","grq","grs","grt","gru","grv","grw","grx","gry","grz","gsl","gsn","gso","gsp","gsw","gta","gtu","gu","gua","gub","guc","gud","gue","guf","guh","gui","guk","gul","gum","gun","guo","gup","guq","gur","gut","guu","guw","gux","guz","gv","gva","gvc","gve","gvf","gvj","gvl","gvm","gvn","gvo","gvp","gvr","gvs","gvy","gwa","gwb","gwc","gwd","gwe","gwf","gwg","gwi","gwj","gwm","gwn","gwr","gwt","gwu","gww","gwx","gxx","gyb","gyd","gye","gyf","gyg","gyi","gyl","gym","gyn","gyo","gyr","gyy","gyz","gza","gzi","gzn","ha","haa","hac","had","hae","hag","hah","hai","haj","hak","hal","ham","han","hao","hap","haq","har","hav","haw","hax","hay","haz","hba","hbb","hbn","hbo","hbu","hch","hdy","he","hed","heg","heh","hei","hem","hgm","hgw","hhi","hhr","hhy","hia","hib","hid","hif","hig","hih","hii","hij","hik","hil","hio","hir","hit","hiw","hix","hji","hka","hke","hkh","hkk","hla","hlb","hld","hlt","hlu","hma","hmb","hmd","hmf","hmj","hmm","hmn","hmp","hmq","hmr","hms","hmt","hmu","hmv","hmw","hmy","hmz","hna","hnd","hne","hng","hnh","hni","hnj","hnn","hno","hns","ho","hoa","hob","hoc","hod","hoe","hoh","hoi","hoj","hol","hom","hoo","hop","hor","hot","hov","how","hoy","hpo","hr","hra","hrc","hre","hrk","hrm","hro","hrp","hrt","hru","hrw","hrx","hrz","hsb","hsn","hss","ht","hti","hto","hts","htu","htx","hu","hub","huc","hud","hue","huf","hug","huh","hui","huk","hul","hum","hup","hur","hus","hut","huu","huv","huw","hux","huy","huz","hvc","hve","hvk","hvn","hvv","hwa","hwc","hwo","hy","hya","hyw","hz","ia","iai","ian","iar","iba","ibb","ibd","ibe","ibg","ibh","ibl","ibm","ibn","ibr","ibu","iby","ica","ich","icr","ida","idb","idc","idd","ide","idi","idr","ids","idt","idu","ie","ifa","ifb","ife","iff","ifk","ifm","ifu","ify","ig","igb","ige","igg","igl","igm","ign","igo","igs","igw","ihb","ihi","ihp","ihw","ii","iin","ijc","ije","ijj","ijn","ijs","ik","iki","ikk","ikl","iko","ikp","ikr","ikt","ikv","ikw","ikx","ikz","ila","ilb","ilg","ili","ilk","ilm","ilo","ilp","ilu","ilv","imi","iml","imn","imo","imr","ims","imt","imy","in","inb","ing","inh","inj","inn","ino","inp","int","io","ior","iou","iow","ipi","ipo","iqu","iqw","ire","irh","iri","irk","irn","iru","irx","iry","isa","isc","ish","isi","isk","ism","isn","iso","ist","isu","it","itb","itd","ite","iti","itk","itl","itm","ito","itr","its","itt","itv","itw","itx","ity","itz","iu","ium","ivb","ivv","iw","iwk","iwm","iwo","iws","ixc","ixl","iya","iyo","iyx","izh","izi","izr","izz","ja","jaa","jab","jac","jad","jae","jaf","jah","jaj","jak","jal","jam","jan","jao","jaq","jar","jas","jat","jau","jax","jay","jaz","jbe","jbi","jbj","jbk","jbm","jbn","jbo","jbr","jbt","jbu","jbw","jct","jda","jdg","jdt","jeb","jee","jeh","jei","jek","jel","jen","jer","jet","jeu","jgb","jge","jgk","jgo","jhi","ji","jia","jib","jic","jid","jie","jig","jil","jim","jit","jiu","jiv","jiy","jje","jjr","jka","jkm","jko","jku","jle","jma","jmb","jmc","jmd","jmi","jml","jmn","jmr","jms","jmw","jmx","jna","jnd","jng","jni","jnj","jnl","jns","job","jod","jog","jor","jow","jpa","jpr","jqr","jra","jrr","jrt","jru","jua","jub","jud","juh","jui","juk","jul","jum","jun","juo","jup","jur","jut","juu","juw","juy","jv","jvd","jvn","jw","jwi","jya","jye","jyy","ka","kaa","kab","kac","kad","kag","kah","kai","kaj","kak","kam","kao","kap","kaq","kav","kaw","kax","kay","kba","kbb","kbc","kbd","kbe","kbh","kbi","kbj","kbk","kbl","kbm","kbn","kbo","kbp","kbq","kbr","kbs","kbt","kbu","kbv","kbw","kbx","kby","kbz","kca","kcb","kcc","kcd","kce","kcf","kcg","kch","kci","kcj","kck","kcl","kcm","kcn","kco","kcp","kcq","kcs","kct","kcu","kcv","kcw","kcz","kda","kdc","kdd","kde","kdf","kdg","kdh","kdi","kdj","kdk","kdl","kdm","kdn","kdp","kdq","kdr","kdt","kdw","kdx","kdy","kdz","kea","keb","kec","ked","kee","kef","keg","keh","kei","kek","kel","kem","ken","keo","ker","kes","ket","keu","kew","kex","kez","kfa","kfb","kfc","kfd","kfe","kff","kfh","kfi","kfk","kfl","kfm","kfn","kfo","kfp","kfq","kfr","kfs","kfv","kfw","kfx","kfy","kfz","kg","kga","kgb","kge","kgf","kgj","kgk","kgl","kgm","kgo","kgp","kgq","kgr","kgs","kgt","kgu","kgv","kgw","kgx","kgy","kha","khb","khc","khd","khe","khf","khg","khh","khj","khl","khn","khp","khq","khr","khs","kht","khu","khv","khw","khx","khy","khz","ki","kia","kib","kic","kid","kie","kif","kig","kih","kij","kil","kim","kio","kip","kiq","kis","kit","kiu","kiv","kiw","kix","kiy","kiz","kj","kja","kjb","kjc","kjd","kje","kjg","kjh","kji","kjj","kjk","kjl","kjm","kjn","kjo","kjp","kjq","kjr","kjs","kjt","kju","kjx","kjy","kk","kka","kkb","kkc","kkd","kke","kkf","kkg","kkh","kki","kkj","kkk","kkl","kkm","kko","kkp","kkq","kkr","kks","kkt","kku","kkv","kkw","kkx","kky","kkz","kl","kla","klb","klc","kld","kle","klf","klg","klh","kli","klj","klk","kll","klm","kln","klo","klp","klq","klr","kls","klt","klu","klv","klw","klx","kly","klz","km","kma","kmb","kmc","kmd","kme","kmf","kmg","kmh","kmi","kmj","kmk","kml","kmm","kmn","kmo","kmp","kmq","kms","kmt","kmu","kmv","kmw","kmx","kmy","kmz","kn","kna","knb","knd","kne","knf","kni","knj","knk","knl","knm","kno","knp","knq","knr","kns","knt","knu","knv","knw","knx","kny","knz","ko","koa","koc","kod","koe","kof","kog","koh","koi","kok","kol","koo","kop","koq","kos","kot","kou","kov","kow","koy","koz","kpa","kpc","kpd","kpe","kpf","kpg","kph","kpi","kpj","kpk","kpl","kpm","kpn","kpo","kpq","kpr","kps","kpt","kpu","kpw","kpx","kpy","kpz","kqa","kqb","kqc","kqd","kqe","kqf","kqg","kqh","kqi","kqj","kqk","kql","kqm","kqn","kqo","kqp","kqq","kqr","kqs","kqt","kqu","kqv","kqw","kqx","kqy","kqz","kr","kra","krb","krc","krd","kre","krf","krh","kri","krj","krk","krl","krn","krp","krr","krs","krt","kru","krv","krw","krx","kry","krz","ks","ksa","ksb","ksc","ksd","kse","ksf","ksg","ksh","ksi","ksj","ksk","ksl","ksm","ksn","kso","ksp","ksq","ksr","kss","kst","ksu","ksv","ksw","ksx","ksz","kta","ktb","ktc","ktd","ktf","ktg","kth","kti","ktj","ktk","ktl","ktm","ktn","kto","ktp","ktq","ktr","kts","ktt","ktu","ktv","ktw","ktx","kty","ktz","ku","kub","kuc","kud","kue","kuf","kug","kuh","kui","kuj","kuk","kul","kum","kun","kuo","kup","kuq","kus","kut","kuu","kuv","kuw","kux","kuy","kuz","kv","kva","kvb","kvc","kvd","kve","kvf","kvg","kvh","kvi","kvj","kvl","kvm","kvn","kvo","kvp","kvq","kvr","kvt","kvv","kvw","kvx","kvy","kvz","kw","kwa","kwb","kwc","kwd","kwe","kwf","kwg","kwh","kwi","kwj","kwk","kwl","kwm","kwn","kwo","kwp","kwq","kwr","kws","kwt","kwu","kwv","kww","kwy","kwz","kxa","kxb","kxc","kxd","kxe","kxf","kxi","kxj","kxk","kxl","kxm","kxn","kxo","kxp","kxq","kxr","kxt","kxv","kxw","kxx","kxy","kxz","ky","kya","kyb","kyc","kyd","kye","kyf","kyg","kyh","kyi","kyj","kyk","kyl","kym","kyn","kyo","kyq","kyr","kys","kyt","kyu","kyv","kyw","kyx","kyy","kyz","kza","kzb","kzc","kzd","kze","kzf","kzh","kzi","kzj","kzk","kzl","kzm","kzn","kzo","kzp","kzr","kzs","kzt","kzu","kzv","kzw","kzx","kzy","kzz","la","laa","lab","lac","lad","lae","lag","lah","lai","laj","lal","lam","lan","lap","laq","lar","las","lau","law","lax","laz","lb","lbb","lbc","lbe","lbf","lbi","lbj","lbl","lbm","lbn","lbo","lbq","lbr","lbt","lbu","lbv","lbw","lbx","lby","lbz","lcc","lcd","lce","lcf","lch","lcl","lcm","lcp","lcq","lcs","lda","ldb","ldd","ldg","ldh","ldi","ldj","ldk","ldl","ldm","ldn","ldo","ldp","ldq","lea","leb","lec","led","lee","lef","leh","lei","lej","lek","lel","lem","leo","lep","leq","ler","les","let","leu","lev","lew","lex","ley","lez","lfa","lfn","lg","lga","lgb","lgg","lgh","lgi","lgk","lgl","lgm","lgn","lgo","lgq","lgr","lgt","lgu","lgz","lha","lhh","lhi","lhm","lhn","lhs","lht","lhu","li","lia","lib","lic","lid","lie","lif","lig","lih","lij","lik","lil","lio","lip","liq","lir","lis","liu","liv","liw","lix","liy","liz","lja","lje","lji","ljl","ljp","ljw","ljx","lka","lkb","lkc","lkd","lke","lkh","lki","lkj","lkl","lkm","lkn","lko","lkr","lks","lkt","lku","lky","lla","llb","llc","lld","lle","llf","llg","lli","llj","llk","lll","llm","lln","llp","llq","llu","llx","lma","lmb","lmc","lmd","lme","lmf","lmg","lmh","lmi","lmj","lmk","lml","lmn","lmo","lmp","lmq","lmr","lmu","lmv","lmw","lmx","lmy","lna","lnb","lnd","lnh","lni","lnj","lnl","lnm","lnn","lns","lnu","lnw","lnz","loa","lob","loc","loe","loh","loi","loj","lok","lol","lom","lon","loo","lop","loq","lor","los","lot","lou","low","lox","loy","loz","lpa","lpe","lpn","lpo","lpx","lqr","lra","lrc","lrg","lri","lrk","lrl","lrm","lrn","lro","lrt","lrv","lrz","lsa","lsd","lse","lsi","lsm","lsr","lss","lt","ltg","lth","lti","ltn","lto","lts","ltu","lu","lua","luc","lud","lue","luf","lui","luj","luk","lul","lum","lun","luo","lup","luq","lur","lus","lut","luu","luv","luw","luy","luz","lv","lva","lvi","lvk","lvu","lwa","lwe","lwg","lwh","lwl","lwm","lwo","lwt","lww","lxm","lya","lyn","lzh","lzl","lzn","lzz","maa","mab","mad","mae","maf","mag","mai","maj","mak","mam","man","maq","mas","mat","mau","mav","maw","maz","mba","mbb","mbc","mbd","mbf","mbh","mbi","mbj","mbk","mbl","mbm","mbn","mbo","mbp","mbq","mbr","mbs","mbt","mbu","mbv","mbw","mbx","mby","mbz","mca","mcb","mcc","mcd","mce","mcf","mcg","mch","mci","mcj","mck","mcl","mcm","mcn","mco","mcp","mcq","mcr","mcs","mct","mcu","mcv","mcw","mcx","mcy","mcz","mda","mdb","mdc","mdd","mde","mdf","mdg","mdh","mdi","mdj","mdk","mdm","mdn","mdp","mdq","mdr","mds","mdt","mdu","mdv","mdw","mdx","mdy","mdz","mea","meb","mec","med","mee","meh","mej","mek","mel","mem","men","meo","mep","meq","mer","mes","met","meu","mev","mew","mey","mez","mfa","mfb","mfc","mfd","mfe","mff","mfg","mfh","mfi","mfj","mfk","mfl","mfm","mfn","mfo","mfp","mfq","mfr","mft","mfu","mfv","mfw","mfx","mfy","mfz","mg","mgb","mgc","mgd","mge","mgf","mgg","mgh","mgi","mgj","mgk","mgl","mgm","mgn","mgo","mgp","mgq","mgr","mgs","mgt","mgu","mgv","mgw","mgy","mgz","mh","mhb","mhc","mhd","mhe","mhf","mhg","mhi","mhj","mhk","mhl","mhm","mhn","mho","mhp","mhq","mhs","mht","mhu","mhw","mhx","mhy","mhz","mi","mia","mib","mic","mid","mie","mif","mig","mih","mii","mij","mik","mil","mim","mio","mip","miq","mir","mit","miu","miw","mix","miy","miz","mjb","mjc","mjd","mje","mjg","mjh","mji","mjj","mjk","mjl","mjm","mjn","mjq","mjr","mjs","mjt","mju","mjv","mjw","mjx","mjy","mjz","mk","mka","mkb","mkc","mke","mkf","mki","mkj","mkk","mkl","mkm","mkn","mko","mkp","mkr","mks","mkt","mku","mkv","mkw","mkx","mky","mkz","ml","mla","mlb","mlc","mle","mlf","mlh","mli","mlj","mlk","mll","mln","mlo","mlp","mlq","mlr","mls","mlu","mlv","mlw","mlx","mlz","mma","mmb","mmc","mmd","mme","mmf","mmg","mmh","mmi","mmm","mmn","mmo","mmp","mmq","mmr","mmt","mmu","mmv","mmw","mmx","mmy","mmz","mn","mna","mnb","mnd","mne","mnf","mng","mnh","mni","mnj","mnl","mnm","mnn","mnp","mnq","mnr","mns","mnu","mnv","mnw","mnx","mny","mnz","mo","moa","moc","mod","moe","mog","moh","moi","moj","mok","mom","moo","mop","moq","mor","mos","mot","mou","mov","mow","mox","moy","moz","mpa","mpb","mpc","mpe","mpg","mph","mpi","mpj","mpk","mpl","mpm","mpn","mpo","mpp","mpq","mpr","mps","mpt","mpu","mpv","mpw","mpx","mpy","mpz","mqa","mqb","mqc","mqe","mqf","mqg","mqh","mqi","mqj","mqk","mql","mqm","mqn","mqo","mqp","mqq","mqr","mqs","mqu","mqv","mqw","mqx","mqy","mqz","mr","mrb","mrc","mrd","mrf","mrg","mrh","mrj","mrk","mrl","mrm","mrn","mro","mrp","mrq","mrr","mrs","mrt","mru","mrv","mrw","mrx","mry","mrz","ms","msb","msc","mse","msf","msh","msi","msj","msk","msl","msm","msn","mso","msp","msq","mss","msu","msv","msw","msx","msy","msz","mt","mta","mtb","mtc","mtd","mte","mtf","mtg","mth","mti","mtj","mtk","mtl","mtm","mtn","mto","mtq","mtr","mts","mtt","mtu","mtv","mtw","mtx","mty","mua","mub","muc","mud","mue","mug","muh","mui","muj","muk","mum","muo","muq","mur","mus","mut","muu","muv","mux","muy","muz","mva","mvd","mvf","mvg","mvh","mvk","mvl","mvn","mvo","mvp","mvq","mvr","mvs","mvt","mvu","mvv","mvw","mvx","mvy","mvz","mwa","mwb","mwc","mwe","mwf","mwg","mwh","mwi","mwk","mwl","mwm","mwn","mwo","mwp","mwq","mwr","mws","mwt","mwu","mwv","mww","mwz","mxa","mxb","mxc","mxd","mxe","mxf","mxg","mxh","mxi","mxj","mxk","mxl","mxm","mxn","mxo","mxp","mxq","mxr","mxs","mxt","mxu","mxv","mxw","mxx","mxy","mxz","my","myb","myc","mye","myf","myg","myh","myj","myk","myl","mym","myp","myr","myu","myv","myw","myx","myy","myz","mza","mzd","mze","mzh","mzi","mzj","mzk","mzl","mzm","mzn","mzo","mzp","mzq","mzr","mzt","mzu","mzv","mzw","mzx","mzz","naa","nab","nac","nae","naf","nag","naj","nak","nal","nam","nan","nao","nap","naq","nar","nas","nat","naw","nax","nay","naz","nba","nbb","nbc","nbd","nbe","nbh","nbi","nbj","nbk","nbm","nbn","nbo","nbp","nbq","nbr","nbt","nbu","nbv","nbw","nby","nca","ncb","ncc","ncd","nce","ncf","ncg","nch","nci","ncj","nck","ncl","ncm","ncn","nco","ncq","ncr","nct","ncu","ncx","ncz","nd","nda","ndb","ndc","ndd","ndf","ndg","ndh","ndi","ndj","ndk","ndl","ndm","ndn","ndp","ndq","ndr","nds","ndt","ndu","ndv","ndw","ndx","ndy","ndz","ne","nea","neb","nec","ned","nee","neg","neh","nei","nej","nek","nem","nen","neo","neq","ner","net","neu","new","nex","ney","nez","nfa","nfd","nfl","nfr","nfu","ng","nga","ngb","ngc","ngd","nge","ngg","ngh","ngi","ngj","ngk","ngl","ngm","ngn","ngp","ngq","ngr","ngs","ngt","ngu","ngv","ngw","ngx","ngy","ngz","nha","nhb","nhc","nhd","nhe","nhf","nhg","nhi","nhk","nhm","nhn","nho","nhp","nhq","nhr","nht","nhu","nhv","nhw","nhx","nhy","nhz","nia","nib","nid","nie","nif","nig","nih","nii","nij","nil","nim","nin","nio","niq","nir","nis","nit","niu","niv","niw","nix","niy","niz","nja","njb","njd","njh","nji","njj","njl","njm","njn","njo","njr","njs","njt","nju","njx","njy","njz","nka","nkb","nkc","nkd","nke","nkf","nkg","nkh","nki","nkj","nkk","nkm","nkn","nko","nkq","nkr","nks","nkt","nku","nkv","nkw","nkx","nkz","nl","nla","nlc","nle","nlg","nli","nlj","nlk","nlm","nlo","nlq","nlu","nlv","nlw","nlx","nly","nlz","nma","nmb","nmc","nmd","nme","nmf","nmg","nmh","nmi","nmj","nmk","nml","nmm","nmn","nmo","nmp","nmq","nmr","nms","nmt","nmu","nmv","nmw","nmx","nmz","nn","nna","nnb","nnc","nnd","nne","nnf","nng","nnh","nni","nnj","nnk","nnl","nnm","nnn","nnp","nnq","nnr","nnt","nnu","nnv","nnw","nny","nnz","no","noa","noc","nod","noe","nof","nog","noh","noi","noj","nok","nom","non","noq","nos","nou","nov","noy","npb","npg","nph","npl","npn","npo","nps","npu","npx","npy","nqg","nqk","nql","nqm","nqn","nqo","nqq","nqt","nqy","nr","nra","nrb","nre","nrf","nrg","nri","nrk","nrl","nrm","nrp","nru","nrx","nrz","nsa","nsb","nsc","nsd","nse","nsf","nsg","nsh","nsk","nsm","nsn","nso","nsq","nss","nst","nsu","nsv","nsw","nsx","nsy","nsz","ntd","nte","ntg","nti","ntj","ntk","ntm","nto","ntp","ntr","ntu","ntx","nty","nua","nuc","nud","nue","nuf","nug","nuh","nui","nuj","nuk","nun","nuo","nup","nuq","nur","nus","nut","nuu","nuv","nuw","nux","nuy","nuz","nvh","nvm","nvo","nwb","nwc","nwe","nwg","nwi","nwm","nwo","nwr","nww","nwx","nxa","nxd","nxe","nxg","nxi","nxl","nxn","nxo","nxq","nxr","nxx","ny","nyb","nyc","nyd","nye","nyf","nyg","nyh","nyi","nyj","nyk","nyl","nym","nyn","nyo","nyp","nyq","nyr","nys","nyt","nyu","nyv","nyx","nyy","nza","nzb","nzd","nzi","nzk","nzm","nzu","nzy","nzz","oaa","oac","oar","oav","obi","obk","obl","obm","obo","obr","obt","obu","oc","oca","oco","ocu","oda","odk","odt","odu","ofu","ogb","ogc","ogg","ogo","ogu","oht","oia","oie","oin","oj","ojb","ojc","ojs","ojv","ojw","oka","okb","okc","okd","oke","okg","oki","okk","okm","oko","okr","oks","oku","okv","okx","okz","ola","old","ole","olk","olm","olo","olr","olt","olu","om","oma","omb","omc","omg","omi","omk","oml","omo","omp","omr","omt","omu","omw","ona","one","ong","oni","onj","onk","onn","ono","onp","onr","ons","ont","onu","onx","ood","oon","oor","opa","opk","opm","opo","opy","or","ora","orc","ore","org","orn","oro","orr","ors","ort","oru","orv","orw","orx","orz","osa","osc","osi","oso","osp","ost","osu","osx","ota","otb","otd","ote","oti","otk","otl","otm","otn","otq","otr","ots","ott","otu","otw","otx","oty","otz","oub","oue","oui","oum","ovd","owi","owl","oyd","oym","oyy","ozm","pa","pab","pac","pae","paf","pag","pah","pai","pak","pal","pam","pao","pap","paq","par","pas","pau","pav","paw","pax","pay","paz","pbb","pbc","pbe","pbf","pbg","pbh","pbi","pbl","pbm","pbn","pbo","pbp","pbr","pbs","pbt","pbv","pby","pca","pcb","pcc","pcd","pce","pcf","pcg","pch","pci","pcj","pck","pcm","pcn","pcp","pcw","pda","pdc","pdn","pdo","pdt","pdu","pea","peb","ped","pee","peg","pei","pek","pel","pem","peo","pep","peq","pev","pex","pey","pez","pfa","pfe","pfl","pga","pgd","pgg","pgi","pgk","pgl","pgn","pgs","pgu","phd","phg","phh","phk","phl","phm","phn","pho","phr","pht","phv","phw","pi","pia","pib","pic","pid","pif","pig","pih","pij","pil","pim","pin","pio","pip","pir","pis","pit","piu","piw","pix","piy","piz","pjt","pka","pkb","pkg","pkh","pkn","pko","pkp","pkr","pku","pl","pla","plb","plc","pld","ple","plg","plh","plj","plk","pll","pln","plo","plr","pls","plu","plv","plw","plz","pma","pmb","pmd","pme","pmf","pmh","pmi","pmj","pml","pmm","pmn","pmo","pmq","pmr","pms","pmt","pmw","pmx","pmy","pmz","pna","pnc","pnd","pne","png","pnh","pni","pnj","pnk","pnl","pnm","pnn","pno","pnp","pnq","pnr","pns","pnt","pnv","pnw","pny","pnz","poc","poe","pof","pog","poh","poi","pok","pom","pon","poo","poq","pot","pov","poy","ppa","ppe","ppi","ppk","ppl","ppm","ppn","ppo","ppp","ppq","pps","ppt","pqa","pqm","pra","prc","prd","prf","prg","prh","pri","prk","prm","prp","prq","prr","pru","prw","prx","psa","pse","psh","psi","psm","psn","psq","pss","pst","psw","pt","pta","pth","pti","ptn","pto","ptp","ptr","ptt","ptu","ptv","pua","pub","puc","pud","pue","puf","pug","pui","puj","pum","puo","pup","puq","pur","put","puu","puw","pux","puy","pwa","pwb","pwg","pwm","pwn","pwo","pwr","pww","pxm","pye","pym","pyn","pyu","pyx","pyy","pzh","pzn","qu","qua","qub","quc","qud","quf","qug","qui","quk","qul","qum","qun","qup","quq","qur","qus","quv","quw","qux","quy","qva","qvc","qve","qvh","qvi","qvj","qvl","qvm","qvn","qvo","qvp","qvs","qvw","qvz","qwa","qwc","qwh","qwm","qws","qwt","qxa","qxc","qxh","qxl","qxn","qxo","qxp","qxq","qxr","qxt","qxu","qxw","qya","qyp","raa","rab","rac","rad","raf","rag","rah","rai","raj","rak","ram","ran","rao","rap","rar","rav","raw","rax","ray","raz","rbb","rbk","rbl","rbp","rcf","rdb","rea","reb","ree","reg","rei","rej","rel","rem","ren","rey","rga","rgn","rgr","rgs","rgu","rhg","rhp","ria","rif","ril","rim","rin","rir","rit","riu","rjg","rji","rjs","rka","rkb","rkh","rki","rkm","rkt","rkw","rm","rma","rmb","rmc","rmd","rme","rmf","rmg","rmh","rmi","rmk","rml","rmm","rmn","rmo","rmp","rmq","rmt","rmu","rmw","rmx","rmz","rn","rna","rnd","rng","rnl","rnn","rnr","rnw","ro","rob","roc","rod","roe","rof","rog","rol","rom","roo","rop","ror","rou","rpn","rpt","rri","rro","rrt","rsk","rtc","rth","rtm","rtw","ru","rub","ruc","rue","ruf","rug","rui","ruk","ruo","rup","ruq","rut","ruu","ruy","ruz","rwa","rwk","rwl","rwm","rwo","rwr","rxd","rxw","ryu","saa","sab","sac","sad","sae","saf","sah","saj","sak","sam","sao","saq","sar","sas","sat","sau","sav","saw","say","saz","sba","sbb","sbc","sbd","sbe","sbg","sbh","sbi","sbj","sbk","sbl","sbm","sbn","sbo","sbp","sbq","sbr","sbs","sbt","sbu","sbv","sbw","sbx","sby","sbz","sc","scb","sce","scf","sch","sci","sck","scl","scn","sco","scp","scs","sct","scu","scv","scw","scx","sda","sdb","sdc","sde","sdf","sdg","sdh","sdj","sdk","sdn","sdo","sdq","sds","sdu","sdx","sea","seb","sec","sed","see","sef","seh","sei","sej","sek","sel","sen","seo","ser","ses","seu","sev","sew","sey","sez","sfe","sfm","sfw","sg","sga","sgb","sgc","sgd","sge","sgh","sgi","sgj","sgm","sgp","sgr","sgs","sgt","sgu","sgw","sgy","sgz","sha","shb","shc","shd","she","shg","shh","shi","shj","shk","shm","shn","sho","shp","shq","shr","shs","sht","shu","shv","shw","shy","shz","si","sia","sie","sif","sig","sih","sii","sij","sik","sil","sim","sip","siq","sir","sis","siu","siv","siw","six","siy","siz","sja","sjb","sjd","sje","sjg","sjl","sjm","sjp","sjr","sjt","sju","sjw","sk","ska","skb","skc","skd","ske","skf","skg","skh","ski","skj","skm","skn","sko","skp","skq","skr","sks","skt","sku","skv","skw","skx","sky","skz","sl","slc","sld","slg","slh","sli","slj","sll","slm","sln","slp","slq","slr","slu","slw","slx","sly","slz","sma","smb","smc","smd","smf","smg","smh","smj","smk","sml","smn","smp","smq","smr","sms","smt","smu","smw","smx","smy","smz","sn","snb","snc","sne","snf","sng","sni","snj","snk","snl","snm","snn","sno","snp","snq","snr","sns","snu","snv","snw","snx","sny","snz","so","soa","sob","soc","sod","soe","sog","soi","sok","sol","soo","sop","soq","sor","sos","sou","sov","sow","sox","soy","soz","spb","spc","spd","spe","spg","spi","spk","spl","spm","spn","spo","spp","spq","spr","sps","spt","spv","sq","sqa","sqh","sqm","sqo","sqq","sqt","squ","sr","sra","srb","sre","srf","srg","srh","sri","srk","srl","srm","srn","sro","srq","srr","srs","srt","sru","srv","srw","srx","sry","srz","ssb","ssc","ssd","sse","ssf","ssg","ssh","ssj","ssl","ssm","ssn","sso","ssq","sss","sst","ssu","ssv","ssx","ssy","ssz","sta","stb","ste","stf","stg","sth","sti","stj","stk","stl","stm","stn","sto","stp","stq","sts","stt","stv","stw","sty","sua","suc","sue","sug","sui","suj","suk","suo","suq","sur","sus","sut","suv","suw","suy","suz","sv","sva","svb","svc","sve","svm","svs","sw","swb","swc","swf","swg","swi","swj","swk","swm","swo","swp","swq","swr","sws","swt","swu","swv","sww","swx","swy","sxb","sxe","sxn","sxr","sxs","sxu","sxw","sya","syb","syc","syi","syk","syl","syn","syo","syr","sys","syw","syx","sza","szb","szc","szd","szg","szl","szn","szp","szv","szw","szy","taa","tab","tac","tad","tae","taf","taj","tak","tal","tan","tao","tap","taq","tar","tas","tau","tav","taw","tax","tay","taz","tba","tbc","tbd","tbe","tbf","tbg","tbh","tbi","tbj","tbk","tbl","tbm","tbn","tbo","tbp","tbs","tbt","tbu","tbv","tbw","tbx","tby","tbz","tca","tcb","tcc","tcd","tce","tcf","tcg","tch","tci","tck","tcm","tcn","tco","tcp","tcq","tcs","tcu","tcw","tcx","tcy","tcz","tda","tdb","tdc","tdd","tde","tdg","tdh","tdi","tdj","tdk","tdl","tdm","tdn","tdo","tdq","tdr","tds","tdt","tdu","tdv","tdx","tdy","tea","teb","tec","ted","tee","teg","teh","tei","tek","tem","ten","teo","tep","teq","ter","tes","tet","teu","tev","tew","tex","tey","tfi","tfn","tfo","tfr","tft","tg","tga","tgb","tgc","tgd","tge","tgf","tgh","tgi","tgj","tgn","tgo","tgp","tgq","tgs","tgt","tgu","tgv","tgw","tgx","tgy","tgz","th","thd","the","thf","thh","thi","thk","thl","thm","thp","thq","thr","ths","tht","thu","thv","thy","thz","ti","tic","tif","tig","tih","tii","tij","tik","til","tim","tin","tio","tip","tiq","tis","tit","tiu","tiv","tiw","tix","tiy","tja","tjg","tji","tjj","tjl","tjn","tjo","tjp","tjs","tju","tjw","tk","tka","tkb","tkd","tke","tkf","tkg","tkl","tkp","tkq","tkr","tks","tkt","tku","tkv","tkw","tkx","tkz","tl","tla","tlb","tlc","tld","tlf","tlg","tli","tlj","tlk","tll","tlm","tln","tlp","tlq","tlr","tls","tlt","tlu","tlv","tlx","tly","tma","tmb","tmc","tmd","tme","tmf","tmg","tmh","tmi","tmj","tmk","tml","tmm","tmn","tmo","tmq","tmr","tmt","tmu","tmv","tmw","tmy","tmz","tn","tna","tnb","tnc","tnd","tng","tnh","tni","tnk","tnl","tnm","tnn","tno","tnp","tnq","tnr","tns","tnt","tnv","tnw","tnx","tny","tob","toc","tod","tof","tog","toh","toi","toj","tok","tol","tom","too","toq","tor","tos","tou","tov","tow","tox","toy","toz","tpa","tpc","tpe","tpf","tpg","tpi","tpj","tpk","tpl","tpm","tpn","tpp","tpr","tpt","tpu","tpv","tpx","tpy","tpz","tqb","tql","tqm","tqn","tqo","tqp","tqt","tqu","tqw","tra","trb","trc","tre","trf","trg","trh","tri","trj","trl","trm","trn","tro","trp","trq","trr","trs","trt","tru","trv","trw","trx","try","trz","tsa","tsb","tsc","tsd","tsf","tsg","tsh","tsi","tsj","tsl","tsp","tsr","tst","tsu","tsv","tsw","tsx","tsz","ttb","ttc","ttd","tte","ttf","tth","tti","ttj","ttk","ttm","ttn","tto","ttp","ttr","tts","ttt","ttu","ttv","ttw","tty","tua","tub","tuc","tud","tue","tuf","tug","tuh","tui","tuj","tul","tum","tun","tuo","tuq","tus","tuu","tuv","tux","tuy","tuz","tva","tvd","tve","tvk","tvl","tvm","tvn","tvo","tvs","tvt","tvu","tvw","tvx","twa","twb","twd","twe","twf","twg","twh","twl","twm","twn","two","twp","twq","twr","twt","twu","tww","twx","twy","txa","txe","txg","txi","txj","txm","txn","txo","txq","txs","txt","txu","txx","txy","ty","tya","tye","tyh","tyi","tyj","tyl","tyn","typ","tyr","tys","tyt","tyu","tyv","tyx","tyy","tyz","tzh","tzj","tzl","tzm","tzn","tzo","tzx","uam","uar","uba","ubi","ubl","ubr","ubu","uda","ude","udg","udi","udj","udl","udm","udu","ues","ufi","ug","uga","ugb","uge","ugh","ugo","uha","uhn","uis","uiv","uji","uk","uka","ukg","ukh","uki","ukk","ukp","ukq","uku","ukv","ukw","uky","ula","ulb","ulc","ule","ulf","uli","ulk","ulm","uln","ulu","ulw","uma","umb","umd","umg","umi","umm","umn","umo","ump","umr","ums","una","und","une","ung","uni","unk","unm","unn","unr","unu","unx","unz","uok","uon","upi","upv","ur","ura","urb","urc","ure","urf","urg","urh","urk","urm","urn","uro","urp","urr","urt","uru","urv","urw","urx","ury","urz","usa","ush","usi","usk","usp","uss","usu","uta","ute","uth","utp","utr","utu","uum","uur","uve","uvh","uvl","uwa","uya","uz","uzs","vaa","vae","vaf","vag","vah","vai","vaj","vam","van","vao","vap","var","vas","vau","vav","vay","vbb","vbk","ve","vec","vem","veo","vep","ver","vgr","vi","vic","vid","vif","vig","vil","vin","vit","viv","vka","vkj","vkk","vkl","vkm","vkn","vko","vkp","vkt","vku","vkz","vlp","vls","vma","vmb","vmc","vmd","vme","vmf","vmg","vmh","vmi","vmj","vmk","vml","vmm","vmp","vmq","vmr","vms","vmu","vmw","vmx","vmy","vmz","vnk","vnm","vnp","vo","vor","vot","vra","vro","vrs","vrt","vto","vum","vun","vut","vwa","wa","waa","wab","wac","wad","wae","waf","wag","wah","wai","waj","wal","wam","wan","wap","waq","war","was","wat","wau","wav","waw","wax","way","waz","wba","wbb","wbe","wbf","wbh","wbi","wbj","wbk","wbl","wbm","wbp","wbq","wbr","wbt","wbv","wbw","wca","wci","wdd","wdg","wdj","wdk","wdt","wdu","wdy","wec","wed","weg","weh","wei","wem","weo","wep","wer","wes","wet","weu","wew","wfg","wga","wgb","wgg","wgi","wgo","wgu","wgy","wha","whg","whk","whu","wib","wic","wie","wif","wig","wih","wii","wij","wik","wil","wim","win","wir","wiu","wiv","wiy","wja","wji","wka","wkd","wkr","wkw","wky","wla","wlg","wlh","wli","wlm","wlo","wlr","wls","wlu","wlv","wlw","wlx","wma","wmb","wmc","wmd","wme","wmh","wmi","wmm","wmn","wmo","wms","wmt","wmw","wmx","wnb","wnc","wnd","wne","wng","wni","wnk","wnm","wnn","wno","wnp","wnu","wnw","wny","wo","woa","wob","woc","wod","woe","wof","wog","woi","wok","wom","won","woo","wor","wos","wow","wpc","wrb","wrg","wrh","wri","wrk","wrl","wrm","wro","wrp","wrr","wrs","wru","wrv","wrw","wrx","wrz","wsa","wsg","wsi","wsk","wsr","wss","wsu","wsv","wtf","wth","wti","wtk","wtm","wtw","wua","wub","wud","wul","wum","wun","wur","wut","wuu","wuv","wux","wuy","wwa","wwb","wwo","wwr","www","wxw","wyb","wyi","wym","wyn","wyr","wyy","xaa","xab","xai","xaj","xak","xal","xam","xan","xao","xar","xas","xat","xau","xav","xaw","xay","xbb","xbd","xbe","xbg","xbi","xbj","xbm","xbn","xbp","xbr","xbw","xby","xch","xco","xcr","xda","xdk","xdo","xdq","xdy","xed","xeg","xem","xer","xes","xet","xeu","xgb","xgd","xgg","xgi","xgm","xgu","xgw","xh","xhe","xhm","xhv","xii","xin","xir","xis","xiy","xjb","xjt","xka","xkb","xkc","xkd","xke","xkg","xkj","xkl","xkn","xkp","xkq","xkr","xks","xkt","xku","xkv","xkw","xkx","xky","xkz","xla","xlc","xld","xly","xma","xmb","xmc","xmd","xmf","xmg","xmh","xmj","xmm","xmn","xmo","xmp","xmq","xmr","xmt","xmu","xmv","xmw","xmx","xmy","xmz","xna","xnb","xni","xnj","xnk","xnm","xnn","xnq","xnr","xnt","xnu","xny","xnz","xoc","xod","xog","xoi","xok","xom","xon","xoo","xop","xor","xow","xpa","xpb","xpd","xpf","xpg","xph","xpi","xpj","xpk","xpl","xpm","xpn","xpo","xpq","xpr","xpt","xpv","xpw","xpx","xpz","xra","xrb","xrd","xre","xrg","xri","xrm","xrn","xrr","xru","xrw","xsa","xsb","xse","xsh","xsi","xsm","xsn","xsp","xsq","xsr","xss","xsu","xsy","xta","xtb","xtc","xtd","xte","xth","xti","xtj","xtl","xtm","xtn","xtp","xts","xtt","xtu","xtv","xtw","xty","xub","xud","xuj","xul","xum","xun","xuo","xut","xuu","xve","xvi","xvn","xvo","xvs","xwa","xwd","xwe","xwj","xwk","xwl","xwo","xwr","xwt","xww","xxb","xxk","xxm","xxr","xxt","xya","xyb","xyj","xyk","xyl","xyt","xyy","xzh","xzp","yaa","yab","yac","yad","yae","yaf","yag","yai","yaj","yak","yal","yam","yan","yao","yap","yaq","yar","yas","yat","yau","yav","yaw","yax","yay","yaz","yba","ybb","ybe","ybh","ybi","ybj","ybl","ybm","ybn","ybo","ybx","yby","ycl","ycn","yda","yde","ydg","ydk","yea","yec","yee","yei","yej","yel","yer","yes","yet","yeu","yev","yey","yga","ygi","ygl","ygm","ygp","ygr","ygu","ygw","yhd","yi","yia","yig","yih","yii","yij","yil","yim","yir","yis","yiv","yka","ykg","yki","ykk","ykm","yko","ykr","yky","yla","ylb","yle","ylg","yli","yll","ylr","ylu","yly","ymb","yme","ymg","ymk","yml","ymm","ymn","ymo","ymp","yna","ynd","yng","ynk","ynl","ynq","yns","ynu","yo","yob","yog","yoi","yok","yol","yom","yon","yot","yoy","yra","yrb","yre","yrk","yrl","yrm","yro","yrs","yrw","yry","ysd","ysn","ysp","ysr","yss","ysy","ytw","yty","yua","yub","yuc","yud","yue","yuf","yui","yuj","yul","yum","yun","yup","yuq","yur","yut","yuw","yux","yuz","yva","yvt","ywa","ywg","ywn","ywq","ywr","ywu","yww","yxa","yxg","yxl","yxm","yxu","yxy","yyr","yyu","za","zaa","zab","zac","zad","zae","zaf","zag","zah","zaj","zak","zam","zao","zap","zaq","zar","zas","zat","zau","zav","zaw","zax","zay","zaz","zba","zbc","zbe","zbt","zbu","zbw","zca","zch","zdj","zea","zeg","zeh","zen","zga","zgb","zgh","zgm","zgn","zgr","zh","zhd","zhi","zhn","zhw","zhx","zia","zik","zil","zim","zin","ziw","ziz","zka","zkb","zkd","zko","zkp","zkt","zku","zkz","zla","zlj","zlm","zln","zlq","zma","zmb","zmc","zmd","zme","zmf","zmg","zmh","zmi","zmj","zmk","zml","zmm","zmn","zmo","zmp","zmq","zmr","zms","zmt","zmu","zmv","zmw","zmx","zmy","zmz","zna","zne","zng","znk","zns","zoc","zoh","zom","zoo","zoq","zor","zos","zpa","zpb","zpc","zpd","zpe","zpf","zpg","zph","zpi","zpj","zpk","zpl","zpm","zpn","zpo","zpp","zpq","zpr","zps","zpt","zpu","zpv","zpw","zpx","zpy","zpz","zqe","zrn","zro","zrp","zrs","zsa","zsr","zsu","zte","ztg","ztl","ztm","ztn","ztp","ztq","zts","ztt","ztu","ztx","zty","zu","zua","zuh","zum","zun","zuy","zyg","zyj","zyn","zyp","zza","zzj","addLikelySubtags","changes","bcp47Normalize","maxLocale","removeLikelySubtags","compareSingleton","replacements","removed","MediaController","initialSettings","lastSelectedTracks","lastSelectedRepresentations","domStorage","_onRepresentationSwitched","getTracksFor","areTracksEqual","switchMode","noSettingsSave","roles","extractSettings","storeLastSettings","setSavedMediaSettings","setInitialSettings","getInitialSettings","t1","t2","sameId","sameViewpoint","sameLang","sameCodec","sameRoles","sameAccessibility","sameAudioChannelConfiguration","filterTracksBySettings","filterFn","tracksAfterMatcher","matchSettingsLang","matchSettingsIndex","matchSettingsId","matchSettingsViewPoint","_compareDescriptorType","matchSettingsRole","isTrackActive","matchSettingsAccessibility","matchAccessibility","matchSettingsAudioChannelConfig","matchSettingsCodec","getTracksWithHighestSelectionPriority","trackArr","getTracksWithHighestBitrate","bitrateList","getTracksWithHighestEfficiency","sum","resolution","getTracksWithWidestRange","representationCount","selectInitialTrack","filteredMediaInfos","DASH_ROLE_SCHEME_ID","_handleInitialTextTrackSelection","tmpArr","customInitialTrackSelectionFunction","getCustomInitialTrackSelectionFunction","filteredArray","bitrateInfo","getAbrBitrateParameter","_filterMediaInfosByPossibleBitrate","elementWidth","getVideoElementSize","_filterMediaInfosByPortalSize","_initialFilterMediaInfosByAllowedSettings","targetBitrate","_trackSelectionModeClosestBitrate","_trackSelectionModeHighestSelectionPriority","TRACK_SELECTION_MODE_HIGHEST_BITRATE","_trackSelectionModeHighestBitrate","TRACK_SELECTION_MODE_FIRST_TRACK","_trackSelectionModeFirstTrack","TRACK_SELECTION_MODE_HIGHEST_EFFICIENCY","_trackSelectionModeHighestEfficiency","TRACK_SELECTION_MODE_WIDEST_RANGE","_trackSelectionModeWidestRange","v1","v2","image","createTrackInfo","mediaTracks","isCurrentTrack","matchSettings","matchLang","normalizedSettingsLang","matchIndex","matchViewPoint","matchRole","matchAudioChannelConfiguration","saveTextSettingsDisabled","possibleTracks","filteredTracks","getSavedMediaSettings","DEFAULT_INDEX","_baseUrls","_selectedIdx","selectedIdx","children","BaseURLTreeModel","objectUtils","updateChildData","_getAvailableBaseUrls","targetBaseUrls","synthesizedBaseUrls","walk","ai","ri","getBaseURLCollectionsFromManifest","getForPath","nodes","invalidateSelectedIndexes","getBaseUrls","DVBSelector","availableUrls","totalWeight","cumulWeights","selectByWeight","removedPriorities","getNonBlacklistedBaseUrls","BasicSelector","selectedBaseUrl","ContentSteeringSelector","blacklistResetTimeout","_findexIndexOfServiceLocation","steeringIndex","_onAddBlackList","timer","selectBaseUrlIndex","steeringDataFromMpd","BaseURLSelector","serviceLocationBlacklistController","basicSelector","dvbSelector","contentSteeringSelector","selector","chooseSelector","isDVB","checkParameterType","BaseURLController","baseURLTreeModel","baseURLSelector","getIsDVB","BASE_URLS_UPDATED","XlinkLoader","resolveObject","resolveToZero","resolved","resolvedContent","TextRequest","RESOLVE_TYPE_ONLOAD","XlinkController","xlinkLoader","resolveType","onXlinkAllElementsLoaded","originalContent","onXlinkElementLoaded","mergedContent","parseXml","elementsToResolve","isResolvingFinished","resolvedElements","getIron","run","mergeElementsBack","getElementsToResolve","xlinkObject","toResolve","createXlinkObject","resolveManifestOnLoad","setParser","ObjectIron","mappers","mergeValues","parentItem","childItem","mapProperties","parentValue","childValue","mapItem","childNode","periodMapper","periods","adaptationSetMapper","adaptationset","converter","_test","_converter","durationRegex","BaseMatcher","attrName","attributeList","START_TIME","datetimeRegex","numericRegex","StringAttributeList","stringAttrsInElements","attrNames","_name","_merge","_properties","_children","CommonProperty","MapNode","commonProperties","translateEntitiesAndCharacterReferences","entitiesList","entitySplit","keepComments","keepWhitespace","attrMatchers","nodesAsArray","openBracket","openBracketCC","closeBracket","closeBracketCC","minusCC","slashCC","exclamationCC","singleQuoteCC","doubleQuoteCC","openCornerBracketCC","closeCornerBracketCC","parseChildren","closeStart","parsedText","startCommentPos","cdataEndIndex","startDoctype","encapsuled","parseNode","processAttr","attrValue","matcher","nameSpacer","parseName","NoChildNodes","noChildNodes","__prefix","startChar","startpos","__children","simplify","setPos","kids","_attributes","f","dept","arrayNodes","DashParser","matchers","objectIron","tXml","Patch","operand","parsedTime","DurationMatcher","DateTimeMatcher","NumericMatcher","LangMatcher","RepresentationBaseValuesMap","SegmentValuesMap","ManifestLoader","xlinkController","mssHandler","onXlinkReady","requestStartDate","textStatus","actualUrl","href","createMssParser","createMssFragmentProcessor","registerEvents","createParser","sumPeriodDurations","originalManifest","ErrorHandler","CapabilitiesFilter","_isCodecSupported","_createConfiguration","isCodecSupportedBasedOnTestedConfigurations","_processCodecToCheck","configurationsSet","configurations","configString","framerate","isSupported","colorGamut","transferFunction","EssentialProperty","MEDIA_CAPABILITIES_API","COLORGAMUT","SRGB","P3","REC2020","TRANSFERFUNCTION","PQ","HLG","_convertHDRColorimetryToConfig","colorimetrySupported","hdrMetadataType","HDR_METADATA_FORMAT_SCHEME_ID_URI","HDR_METADATA_FORMAT_VALUES","ST2094_10","HDR_METADATATYPE","SMPTE_ST_2094_10","SL_HDR2","SLHDR2","ST2094_40","SMPTE_ST_2094_40","_convertHDRMetadataFormatToConfig","metadataFormatSupported","_createVideoConfiguration","samplerate","audioSamplingRate","_createAudioConfiguration","keySystemsMetadata","getSupportedKeySystemMetadataFromContentProtection","_addGenericAttributesToConfig","_doesSupportEssentialProperties","supportsEssentialProperty","mediaTypesToCheck","configurationsToCheck","supplementalCodecs","getSupplementalCodecs","_getConfigurationsToCheck","basicConfiguration","runCodecSupportCheck","isMainCodecSupported","isSupplementalCodecSupported","_isSupplementalCodecSupported","_filterUnsupportedRepresentationsOfAdaptation","supported","ADAPTATION_SET_REMOVED_NO_CAPABILITIES","_filterUnsupportedAdaptationSetsOfPeriod","_filterUnsupportedCodecs","_filterUnsupportedEssentialProperties","customCapabilitiesFilters","getCustomCapabilitiesFilters","customFilter","_applyCustomFiltersRepresentation","isReprSupported","_applyCustomFiltersRepresentationsOfAdaptation","_applyCustomFiltersAdaptationSetsOfPeriod","_applyCustomFilters","xywh","URIFragmentModel","URIFragmentDataVO","URIFragmentData","hashIndex","fragment","equalIndex","ManifestModel","MediaPlayerModel","_checkMinPlaybackRate","_checkMaxPlaybackRate","getBufferTimeDefault","settingsPlaybackRate","sdPlaybackRate","setting","PRIORITY","DEFAULT","STRONG","WEAK","SwitchRequest","reas","prio","rule","getPriority","NO_CHANGE","ThroughputRule","getSwitchRequest","rulesContext","switchRequest","getMediaType","currentBufferState","getCurrentBufferState","getAbrController","getThroughputController","getAverageLatency","InsufficientBufferRule","bufferStateDict","ignoreCount","_shouldExecuteRule","getAverageThroughput","AbandonRequestsRule","abandonDict","shouldAbandon","getCurrentRequest","stableBufferTime","elapsedTimeSinceFirstByteInMs","downloadedBytes","downloadTimeInMs","throughputInKbit","estimatedTimeOfDownloadInSeconds","isPlayingAtLowestQuality","remainingBytesToDownload","optimalRepresentationForBitrate","currentRequestedRepresentation","_getSwitchRequest","DroppedFramesRule","droppedFramesHistory","getDroppedFramesHistory","droppedFramesHistoryData","getFrameHistory","droppedFrames","totalFrames","droppedVideoFrames","totalVideoFrames","SwitchHistoryRule","switchRequestHistory","getSwitchRequestHistory","switchRequests","getSwitchRequests","drops","noDrops","currentPossibleRepresentation","BOLA_STATE_ONE_BITRATE","BOLA_STATE_STARTUP","BOLA_STATE_STEADY","MINIMUM_BUFFER_S","BolaRule","AbrController","bolaStateDict","_onBufferEmpty","stateDict","placeholderBuffer","bolaState","_clearBolaStateOnSeek","mostAdvancedSegmentStart","lastSegmentWasReplacement","lastSegmentStart","lastSegmentDurationS","lastSegmentRequestTimeMs","lastSegmentFinishTimeMs","_streamId","trequest","_tfinish","_checkNewSegment","bufferAtLastSegmentRequest","maxEffectiveBufferForLastSegment","_maxBufferLevelForRepresentation","maxPlaceholderBuffer","_onQualityChangeRequested","_calculateBolaParameters","utilities","highestUtilityIndex","highestIndex","uIndex","bufferTime","gp","Vp","_checkBolaStateBufferTimeDefault","effectiveBufferLevel","_onMinMaxBitrateUpdated","_minBufferLevelForRepresentation","qBitrate","qUtility","iBitrate","iUtility","wantEffectiveBufferLevel","initialState","_getInitialBolaState","_getBolaState","safeThroughput","_handleBolaStateStartup","nowMs","lastCallTimeMs","_updatePlaceholderBuffer","bitrateCount","score","_getRepresentationFromBufferLevel","representationForThroughput","delayS","_handleBolaStateSteady","_handleBolaStateBad","L2A_STATE_ONE_BITRATE","L2A_STATE_STARTUP","L2A_STATE_STEADY","VL","L2ARule","l2AStateDict","l2AParameterDict","_clearL2AStateOnSeek","l2AState","lastSegmentUrl","l2aState","l2AParameters","L2AState","segment_request_start_s","segment_download_finish_s","_dotmultiplication","arr1","arr2","sumdot","prev_w","Q","B_target","_initializeL2AParameters","_getInitialL2AState","_getL2AState","l2AParameter","possibleRepresentations","_handleStartupState","diff1","lastThroughput","ARITHMETIC_MEAN","currentHttpRequest","getCurrentHttpRequest","V","getVideoModel","alpha","sqrt","bget","tmpsum","tmax","euclideanProjection","temp","getRepresentationByAbsoluteIndex","_handleSteadyState","_handleErrorState","LearningAbrController","somBitrateNeurons","bitrateNormalizationFactor","latencyNormalizationFactor","weights","sortedCenters","weightSelectionMode","_getMaxThroughput","maxThroughput","neuron","_getDistance","_getNeuronDistance","rebuffer","switch","_updateNeurons","winnerNeuron","somNeuron","sigma","neuronDistance","_updateNeuronState","exp","neighbourHood","getNextQuality","dynamicWeightsSelector","currentLatency","currentThroughput","magnitude","_getMagnitude","centers","randomDataSet","dataArray","_getRandomData","distanceWeights","nextPoint","maxDistance","currentPoint","minDistance","leastSimilarIndex","minIndex","_getInitialKmeansPlusPlusCenters","_setSomBitrateNeurons","throughputNormalized","currentNeuron","getSegmentDuration","getMinBuffer","maxSuitableBitrate","_getDownShiftNeuron","neuronCount","W","upperBound","_getXavierWeights","weightVector","findWeightVector","_dynamicWeightSelection","targetRepresentation","somNeuronState","somData","nextBuffer","getNextBufferWithBitrate","isBufferLow","bitrateSwitch","lastBitrate","bitrateReward","bitrateSwitchPenalty","rebufferPenalty","latencyPenalty","playbackSpeedPenalty","bitrateWSum","bitrateSwitchWSum","rebufferWSum","latencyWSum","playbackSpeedWSum","totalQoe","LoLpQoeEvaluator","voPerSegmentQoeInfo","maxBitrateKbps","minBitrateKbps","_createQoeInfo","fragmentType","qoeInfo","QoeInfo","penalty","_logMetricsInQoeInfo","rebufferTime","playbackSpeed","latencyRange","setupPerSegmentQoe","sDuration","maxBrKbps","minBrKbps","logSegmentMetrics","segmentBitrate","segmentRebufferTime","currentPlaybackSpeed","getPerSegmentQoe","calculateSingleUseQoe","singleUseQoeInfo","LoLpWeightSelector","valueList","weightTypeCount","weightOptions","previousLatency","targetLatency","bufferMin","qoeEvaluator","getNextBuffer","bitrateToDownload","neurons","currentRebuffer","maxQoE","winnerWeights","winnerBitrate","wt","weightsObj","weightedRebuffer","weightedLatency","totalQoE","nextLatency","_checkConstraints","perm","generate","currLen","currPerm","_getPermutations","LoLPRule","learningController","bufferStateVO","bandwidths","currentBitrateKbps","lastFragmentDownloadTime","tresponse","ABRRulesCollection","qualitySwitchRules","abandonFragmentRules","shouldUseBolaRuleByMediaType","_updateRules","QUALITY_SWITCH_RULES","ruleName","_handleRuleUpdate","abandonFragmentRulesList","ABANDON_FRAGMENT_RULES","getAbrCustomRules","RULES_TYPES","rulesCollection","_arrayContainsRule","BOLA_RULE","THROUGHPUT_RULE","INSUFFICIENT_BUFFER_RULE","SWITCH_HISTORY_RULE","DROPPED_FRAMES_RULE","LEARN_TO_ADAPT_RULE","LOL_PLUS_RULE","ABANDON_REQUEST_RULE","_createRuleInstance","_removeRuleFromArray","_getRulesWithChange","srArray","getMinSwitchRequest","currentSwitchRequest","newSwitchReq","_onAbrSettingsActiveRulesUpdated","getAbandonFragmentRules","getBestPossibleSwitchRequest","getBolaState","getQualitySwitchRules","setBolaState","shouldAbandonFragment","RulesContext","currentRequest","SwitchRequestHistory","clearForStream","_initializeForStream","_initializeForMediaType","currentRepresentationId","dropSize","_initializeForRepresentation","indexDiff","drop","noDrop","removedHistorySample","_adjustSwitchRequestHistory","_adjustSwitchRequestDrops","DroppedFramesHistory","lastDroppedFrames","lastTotalFrames","intervalDroppedFrames","intervalTotalFrames","abrRulesCollection","streamProcessorDict","abandonmentStateDict","abandonmentTimeout","windowResizeEventCalled","playbackRepresentationId","_getPossibleVoRepresentations","maxCmsdBitrate","_filterByCmsdMaxBitrate","_filterByPortalSize","representationBitrate","_filterByPossibleBitrate","_filterByAllowedSettings","includeCompatibleMediaInfos","possibleMediaInfos","adaptationSetSwitchingCompatibleIds","compatibleMediaInfos","_getPossibleMediaInfos","currentVoRepresentations","firstMediaInfo","_shouldSortByQualityRankingAttribute","_sortByQualityRankingAttribute","_sortByDefaultParameters","_sortRepresentationsByQuality","isMediaInfoAllowed","_onFragmentLoadProgress","targetAbandonmentStateDict","_getAbandonmentStateDictFor","_onSegmentDownloadShouldBeAbandoned","_onQualityChangeRendered","_shouldApplyDynamicAbrStrategy","switchOnThreshold","switchOffThreshold","isUsingBolaRule","shouldUseBolaRule","_updateDynamicAbrStrategy","_changeQuality","oldBitrate","setSavedBitrateSettings","configBitrate","savedBitrate","getSavedBitrateSettings","averageThroughput","smallestRepresentation","targetRepresentations","setWindowResizeEventCalled","READY_STATES_TO_EVENT_NAMES","HAVE_CURRENT_DATA","HAVE_FUTURE_DATA","HAVE_ENOUGH_DATA","VideoModel","_currentTime","setCurrentTimeReadyStateFunction","resumeReadyStateFunction","TTMLRenderingDiv","vttRenderingDiv","previousPlaybackRate","stalledStreams","removeStalledStream","createEvent","initEvent","func","onPlaying","eventName","eventCallBack","getClientWidth","getClientHeight","getTextTrack","label","isTTML","textTracks","targetReadyState","HAVE_NOTHING","_listenOnce","addTextTrack","childElement","getVideoPlaybackQuality","webkitDroppedFrameCount","webkitDecodedFrameCount","creationTime","played","getSource","getTTMLRenderingDiv","getTextTracks","pixelRatio","devicePixelRatio","elementHeight","getVideoHeight","videoHeight","getVideoRelativeOffsetLeft","parentNode","getVideoRelativeOffsetTop","getVideoWidth","videoWidth","getVttRenderingDiv","seeking","autoplay","PLAYBACK_NOT_ALLOWED","closestTime","closestDistance","distanceToStart","distanceToEnd","stickTimeToBuffered","INVALID_STATE_ERR","disableRemotePlayback","setElement","preload","removeAttribute","addStalledStream","stallStream","setTTMLRenderingDiv","div","pointerEvents","setVttRenderingDiv","legacyKeysAndReplacements","oldKey","newKey","LOCAL_STORAGE_BITRATE_KEY_TEMPLATE","LOCAL_STORAGE_SETTINGS_KEY_TEMPLATE","STORAGE_TYPE_LOCAL","LAST_BITRATE","LAST_MEDIA_SETTINGS","DOMStorage","storage","setItem","removeItem","getTimestamp","ten_minutes_ms","canStore","storageType","getItem","isExpired","mediaSettings","SegmentBaseLoader","_loadInitializationRecursively","loadingInfo","searching","bytesToLoad","getFragmentRequest","_loadSegmentsRecursively","onLoaded","hasRange","loadedLength","loadMultiSidx","segs","tmpCallback","refs","getSegmentsForSidx","lastBox","loadInitialization","loadSegments","EBMLParser","consumeTag","p1","p2","bytesConsumed","required","getMatroskaCodedNum","retainMSB","bytesUsed","mask","getPos","consumeTagAndSize","parseTag","skipOverElement","headerSize","getMatroskaFloat","outFloat","getFloat32","getFloat64","getMatroskaUint","getMatroskaUintLarge","moreData","WebmSegmentBaseLoader","WebM","theRange","segmentEnd","segmentStart","ebmlParser","EBML","Info","SeekHead","Tracks","Cues","Void","infoTag","infoElementSize","Duration","cue","cueTrack","cues","CuePoint","CueTime","CueTracks","CueTrackPositions","cueTrackPositionSize","Track","CueTrack","ClusterPosition","CueClusterPosition","parseCues","parseSegments","parseEbmlHeader","TimecodeScale","SegmentBaseController","segmentBaseLoader","webmSegmentBaseLoader","isWebM","labels","normalizedKeyIds","availableFrom","valid","component","qualifierPoint","qualifier","equalityPoint","findsElement","findsAttribute","findsTextReplace","getMpdTarget","isSiblingOperation","leaf","xpath","PatchManifestModel","getMpdId","getOriginalPublishTime","getPatchOperations","SimpleXPath","operation","PatchOperation","utf8ArrayToStr","exitOnNull","decoded","char2","char3","toUint8","decodeId3Frame","frame","owner","privateData","decodeId3PrivFrame","decodeId3UrlFrame","metadataFrame","pictureType","mimeTypeEndIndex","descriptionEndIndex","decodeId3ImageFrame","decodeId3TextFrame","readId3Size","getId3FrameData","isId3Footer","isId3Header","DashAdapter","patchManifestModel","cea608parser","getMainAdaptationForType","_getAllMediaInfo","embeddedText","mediaArr","convertAdaptationToMediaInfo","accessibilityLength","ACCESSIBILITY_CEA608_SCHEME","convertVideoInfoToEmbeddedTextInfo","CC1","externalManifest","getManifest","getAdaptationForMediaInfo","selectedVoPeriod","getPeriodForStreamInfo","voPeriodsArray","MediaInfo","convertPeriodToStreamInfo","embeddedCaptions","allContentProtectionElements","contentProtectionElementsByRefId","contentProtectionElement","contentProtectionElementSource","_applyContentProtectionReferencing","keyIds","cp","_applyDefaultKeyId","_getNormalizedKeyIds","adaptationSetSwitching","_getAdaptationSetSwitchingCompatibleIds","StreamInfo","ManifestInfo","convertMpdToManifestInfo","getPeriod","periodIdx","findRepresentation","returnIndex","adaptationSetArray","adaptationSetArrayIndex","representationArrayIndex","relativePosition","targetArray","insert","insertNodes","updatedNodes","mInfoOne","mInfoTwo","voLocalPeriods","adaptationsForType","getBandwidthForRepresentation","eventBox","ID3_SCHEME_ID_URI","id3Data","frames","frameData","getId3Frames","getIndexForRepresentation","findRepresentationIndex","getIsTextTrack","patchLocations","getPeriodById","getRealAdaptation","getRealPeriodByIndex","maxStreamsInfo","manifestId","patchManifestId","manifestPublishTime","patchPublishTime","originalManifestPublishTime","newManifest","Round10","round10","_decimalAdjust","TcpList","HttpList","RepSwitchList","BufferLevel","BufferState","DroppedFrames","SchedulingInfo","DVRInfo","ManifestUpdate","RequestsQueue","DVBErrors","requestTime","fetchTime","ManifestUpdateStreamInfo","ManifestUpdateRepresentationInfo","MetricsModel","streamMetrics","metricsChanged","METRICS_CHANGED","metricChanged","METRIC_CHANGED","metricUpdated","metricType","METRIC_UPDATED","metricAdded","getMetricsFor","readOnly","MetricsList","pushMetrics","pushAndNotify","metricObject","addDVBErrors","actualurl","tcpid","responsecode","_stream","_mediaduration","_quality","_responseHeaders","_serviceLocation","_fileLoaderType","_resourceTimingValues","HTTPRequestTrace","interval","appendHttpTrace","manifestUpdate","TrackSwitch","clearCurrentMetricsForType","updatedFields","DashMetrics","playListTraceMetricsClosed","playListTraceMetrics","playListMetrics","metricsModel","httpList","httpListLastIndex","currentHttpList","getHttpRequests","getCurrent","metricName","getCurrentRepresentationSwitch","getCurrentDroppedFrames","getLatestFragmentRequestHeaderValueByID","httpRequestList","responseUrl","responseStatus","speed","traceToUpdate","endTime","TimelineConverter","timelineAnchorAvailabilityOffset","clientServerTimeShift","setClientTimeOffset","_calcAvailabilityTimeFromPresentationTime","calculateAvailabilityEndTime","availabilityTime","wallTime","_calcTimeShiftBufferWindowForDynamicTimelineManifest","periodRange","segmentTime","hasValidSegmentTime","enhancedSegmentTime","_calcRangeForTimeline","currentVoPeriod","adjustedEndTime","_adjustTimeBasedOnPeriodRanges","_adjustTimelineAnchorAvailabilityOffset","isEndOfDvrWindow","_onUpdateTimeSyncOffset","mpdRelativeTime","displayStartTime","_calcTimeshiftBufferForStaticManifest","timelineRefData","_calcTimeShiftBufferWindowForDynamicManifest","T","encodeArray","ASCII","UTF8","encodeASCII","decodeASCII","captionData","defaultTrack","EmbeddedTextHtmlRender","captionId","checkIndent","getRegionProperties","y1","y2","createRGB","getStyle","videoElement","ltrim","rtrim","createHTMLCaptionsFromScreen","captionScreen","currRegion","existingRegion","lastRowHasText","lastRowIndentL","currP","spans","currentStyle","seenRegions","styleStates","prevPenState","rowIndent","contat","uc","currPenStateString","captionsArray","cueID","finalDiv","cueRegionProperties","cssText","bodyDiv","cueUniWrapper","ptag","lastSpanRow","brElement","sameRow","spanStyle","spanElement","cueHTMLElement","cellResolution","isFromCEA608","getSeiData","cursor","isCea608Sei","payloadType","payloadSize","isNonEmptyCCData","ccData1","ccData2","parseCta608DataFromSei","fieldData","ccCount","ccType","extractCta608DataFromSample","nalSize","nalType","TextSourceBuffer","vttParser","vttCustomRenderingParser","ttmlParser","initializationSegmentReceived","fragmentedTracks","firstFragmentedSubtitleStart","currFragmentedTrackIdx","embeddedTracks","embeddedTimescale","embeddedLastSequenceNumber","lastChunkEnd","embeddedCea608FieldParsers","embeddedTextHtmlRender","embeddedInitialized","_createTextTrackInfoFromMediaInfo","trackKindMap","textTrackInfo","TextTrackInfo","getIsDefault","STPP","TTML","_checkTtml","caption","_getKind","addTextTrackInfo","_onVideoChunkReceived","setCurrentFragmentedTrackIdx","codecType","samplesInfo","_getParser","sampleStart","_getTimestampOffset","ccContent","images","subOffset","inData","offsetTime","ttmlTimeIsRelative","addCaptions","_appendFragmentedSttp","captionArray","sampleBoxes","box1","box2","cue_text","stylings","getCaptionStyles","_appendFragmentedWebVtt","_appendFragmentedText","sequenceNumber","chunkStart","trunc","chunkEnd","trackIdx","getTrackIdxForId","_makeCueAdderForIndex","_setupCeaParser","_isDiscontinuityOfChunks","allCcData","splits","ccData","lastSampleTime","_extractCea608Data","fieldNr","fieldParser","_appendEmbeddedText","getCurrentTrackIdx","_appendText","trackIndex","VTT","onVideoBufferCleared","deleteCuesFromTrackIdx","addMediaInfos","mInfos","fModel","CustomTimeRanges","currFragTrack","resetMediaInfos","CC3","resetEmbedded","deleteAllTextTracks","getConfig","CUE_PROPS_TO_COMPARE","TextTracks","Cue","textTrackInfos","nativeTexttracks","currentTrackIdx","actualVideoLeft","actualVideoTop","actualVideoWidth","actualVideoHeight","captionContainer","vttCaptionContainer","videoSizeCheckInterval","fullscreenAttribute","displayCCOnTop","topZIndex","resizeObserver","hasRequestAnimationFrame","currentCaptionEventCue","_createNativeTextrackElement","getVideoVisibleVideoSize","viewWidth","viewHeight","use80Percent","videoPictureWidth","videoPictureHeight","videoPictureXAspect","videoPictureYAspect","videoPictureWidthAspect","videoPictureHeightAspect","checkVideoSize","forceDrawing","videoOffsetTop","videoOffsetLeft","realVideoSize","newVideoWidth","newVideoHeight","newVideoLeft","newVideoTop","containerStyle","CAPTION_CONTAINER_RESIZE","activeCues","scaleCue","_scaleCue","activeCue","replaceValue","valueFontSize","valueLineHeight","cellUnit","elementsSpan","getElementsByClassName","htmlCaptionDiv","getElementById","_renderCaption","_resolveImageSrc","imsc1ImgUrnTester","smpteImgUrnTester","imageId","embeddedImages","clearCaptionContainer","finalCue","CAPTION_RENDERED","captionDiv","_areCuesAdjacent","prevCue","_extendLastCue","cue1","cue2","_cuesContentAreEqual","_resolveImagesInContents","timeOffset","getTrackByIdx","currentItem","_handleCaptionEvents","_isHTMLCue","_handleHtmlCaption","_handleNonHtmlCaption","cueInTrack","manualCueList","onexit","TEXT_DISABLED","addCue","_deleteOutdatedTrackCues","_deleteTrackCues","_getCueInformation","onenter","_triggerCueExit","_triggerCueEnter","CUE_ENTER","CUE_EXIT","TEXT_SHOWING","requestAnimationFrame","divs","childNodes","align","snapToLines","_getCueInformationForHtml","_getCueInformationForNonHtml","_removeManualCue","_getManualActiveTracks","activeTracks","manualMode","setCurrentTrackIdx","setCueStyleOnTrack","renderingType","ResizeObserver","observe","setNativeCueStyle","removeNativeCueStyle","cueInRange","_isCueActive","removeCue","styleElement","stylesheet","sheet","insertRule","classList","textTrackInfoVO","defaultIndex","nativeTexttrack","default","textTrack","TEXT_TRACK_ADDED","onMetadataLoaded","videoTextTrack","TEXT_HIDDEN","unobserve","disableManualTracks","getCurrentTextTrackInfo","getTextTrackInfos","trackId","VTTCue","TextTrackCue","fullscreenElement","webkitIsFullScreen","msFullscreenElement","mozFullScreen","manualCueProcessing","WebVTT","processCues","setModeForTrackIdx","VTTParser","regExNewLine","regExToken","regExWhiteSpace","regExWhiteSpaceWordBoundary","convertCuePointTimes","timeArray","parseItemAttributes","vttCuePoints","cuePoints","styleObject","isPercentage","getSublines","lineCount","subline","lineData","lastStartTime","VttCustomRenderingParser","vttjs","oncue","Parser","TTMLParser","cueCounter","getCueID","startTimeSegment","endTimeSegment","errorMsg","currentImageId","accumulated_image_data","TTML_TO_PARSE","imsc1doc","TTML_PARSED","ttmlString","ttmlDoc","mediaTimeEvents","topLevelContents","DVBFonts","FONT_DOWNLOAD_STATUS","dvbFontList","_addFontFromTrack","asBaseUrl","dvbFontProps","isEssential","essentialTags","supplementalTags","OFF_MIMETYPE","WOFF_MIMETYPE","_hasMandatoryDvbFontAttributes","resolvedUrl","fontUrl","fontFace","FontFace","_updateFontStatus","newStatus","font","addFontsFromTracks","downloadFonts","fonts","DVB_FONT_DOWNLOAD_ADDED","DVB_FONT_DOWNLOAD_COMPLETE","DVB_FONT_DOWNLOAD_FAILED","getFonts","getFontsForTrackId","deleted","_cleanUpDvbCustomFonts","TextController","streamData","textSourceBuffers","allTracksAreDisabled","forceTextStreaming","textTracksAdded","disableTextBeforeTextTracksAdded","dvbFonts","_onFontDownloadFailure","_onFontDownloadSuccess","_onTextTracksAdded","currentTrack","lastEnabledIndex","TEXT_TRACKS_ADDED","_onMediaInfoUpdated","currentTextTrackInfo","suitableForcedSubtitleIndex","_getSuitableForceSubtitleTrackIndex","_isForcedSubtitleTrack","oldTrackIdx","currentNativeTrackInfo","currentFragTrack","_setFragmentedTextTrack","_setNonFragmentedTextTrack","forcedSubtitleTrackIndex","forcedSubtitleTracks","_indexToSelect","_getForcedSubtitleTracks","currentAudioTrack","suitableTrack","enableForcedTextStreaming","enable","enableText","getAllTracksAreDisabled","textSourceBuffer","ThroughputModel","throughputDict","latencyDict","ewmaThroughputDict","ewmaLatencyDict","ewmaHalfLife","_deriveThroughputFromNetworkApi","connection","downlink","_updateEwmaValues","ewmaObj","halfLife","fastAlpha","fast","fastEstimate","slowAlpha","slow","slowEstimate","addEntry","_createSettingsForMediaType","latencyInMs","_calculateThroughputValuesForFetch","deriveThroughputViaResourceTimingApi","referenceTimeInMs","_calculateThroughputValuesForXhr","_calculateThroughputValues","etp","cacheReferenceTime","decodedBodySize","_isCachedResponse","_cleanupDict","bandwidthHalfLife","latencyHalfLife","getThroughputDict","getEwmaThroughputDict","getEwmaLatencyDict","getEwmaHalfLife","getLatencyDict","ThroughputController","throughputModel","_onResourceTimingBufferFull","clearResourceTimings","_getAverage","throughputType","adjustedSampleSize","useMin","THROUGHPUT_TYPES","BANDWIDTH","LATENCY","_getAdjustedSampleSize","BYTE_SIZE_WEIGHTED_ARITHMETIC_MEAN","getByteSizeWeightedArithmeticMean","DATE_WEIGHTED_ARITHMETIC_MEAN","getDateWeightedArithmeticMean","HARMONIC_MEAN","getHarmonicMean","BYTE_SIZE_WEIGHTED_HARMONIC_MEAN","getByteSizeWeightedHarmonicMean","DATE_WEIGHTED_HARMONIC_MEAN","getDateWeightedHarmonicMean","getEwma","ZLEMA","getZlema","ratio","divideBy","dividend","zlema","getRawThroughputData","average","MediaPlayer","STREAMING_NOT_INITIALIZED_ERROR","PLAYBACK_NOT_INITIALIZED_ERROR","ELEMENT_NOT_ATTACHED_ERROR","SOURCE_NOT_ATTACHED_ERROR","MEDIA_PLAYER_NOT_INITIALIZED_ERROR","mediaPlayerInitialized","streamingInitialized","playbackInitialized","metricsReportingController","offlineController","gapController","catchupController","attachSource","attachView","isReady","getVersion","getDvrSeekOffset","_adjustSeekTimeBasedOnLiveDelay","seektime","getVideoElement","setAutoPlay","restoreDefaultUTCTimingSources","getDashMetrics","_detectProtection","dashjs","detectedMetricsReporting","MetricsReporting","metricsReporting","createMetricsReporting","mediaElement","metricsConstants","_detectMetricsReporting","detectedMssHandler","MssHandler","initSegmentType","_detectMss","_resetPlaybackControllers","_initializePlayback","urlOrManifest","stop","_createManifestLoader","detectedProtection","Protection","createProtectionSystem","Capabilities","setProtectionController","_detectOffline","detectedOfflineController","OfflineController","resetRecords","_createPlaybackControllers","PLAYBACK_INITIALIZED","addABRCustomRule","rulename","addAbrCustomRule","addRequestInterceptor","interceptor","addResponseInterceptor","addUTCTimingSource","attachProtectionController","attachTTMLRenderingDiv","attachVttRenderingDiv","clearDefaultUTCTimingSources","convertToTimeCode","parentNameString","formatUTC","locales","hour12","withDate","toLocaleDateString","toLocaleTimeString","getABRCustomRules","getAvailableBaseUrls","getAvailableLocations","types","getCurrentTextTrackIndex","getDashAdapter","getDebug","getDvrWindow","startAsUtc","endAsUtc","getInitialMediaSettingsFor","getOfflineController","getProtectionController","getSettings","getStreamsFromManifest","getTargetLiveDelay","getTracksForTypeFromManifest","getVolume","volume","supportsMediaSource","isMuted","muted","provideThumbnail","registerCustomCapabilitiesFilter","registerLicenseRequestFilter","registerLicenseResponseFilter","removeABRCustomRule","removeAbrCustomRule","removeAllABRCustomRule","removeAllAbrCustomRule","removeRequestInterceptor","removeResponseInterceptor","removeUTCTimingSource","resetCustomInitialTrackSelectionFunction","resetSettings","retrieveManifest","BAD_ARGUMENT_ERROR","seekToPresentationTime","setCurrentTrack","setCustomInitialTrackSelectionFunction","customFunc","setInitialMediaSettingsFor","sanitizedValue","defaults","__sanitizeDescriptorType","_sanitizeSettings","setMute","setRepresentationForTypeById","setRepresentationForTypeByIndex","setVolume","setXHRWithCredentialsForType","timeAsUTC","utcValue","timeInDvrWindow","triggerSteeringRequest","unregisterCustomCapabilitiesFilter","unregisterLicenseRequestFilter","unregisterLicenseResponseFilter","updateSettings","updateSource","mediaPlayerEvents","WVTT","MOVING_AVERAGE_SLIDING_WINDOW","MOVING_AVERAGE_EWMA","INITIALIZE","XML","ARRAY_BUFFER","DVB_REPORTING_URL","DVB_PROBABILITY","AAST","CLEARKEY_KEYSTEM_STRING","WIDEVINE_KEYSTEM_STRING","PLAYREADY_KEYSTEM_STRING","PLAYREADY_RECOMMENDATION_KEYSTEM_STRING","WIDEVINE_UUID","PLAYREADY_UUID","CLEARKEY_UUID","W3C_CLEARKEY_UUID","INITIALIZATION_DATA_TYPE_CENC","INITIALIZATION_DATA_TYPE_KEYIDS","INITIALIZATION_DATA_TYPE_WEBM","ENCRYPTION_SCHEME_CENC","ENCRYPTION_SCHEME_CBCS","MEDIA_KEY_MESSAGE_TYPES","LICENSE_REQUEST","LICENSE_RENEWAL","LICENSE_RELEASE","INDIVIDUALIZATION_REQUEST","ROBUSTNESS_STRINGS","WIDEVINE","SW_SECURE_CRYPTO","SW_SECURE_DECODE","HW_SECURE_CRYPTO","HW_SECURE_DECODE","HW_SECURE_ALL","MEDIA_KEY_STATUSES","USABLE","EXPIRED","RELEASED","OUTPUT_RESTRICTED","OUTPUT_DOWNSCALED","STATUS_PENDING","INTERNAL_ERROR","METRICS_INITIALISATION_COMPLETE","BECAME_REPORTING_PLAYER","metricsReportingEvents","utcTimingSources","xhrWithCredentials","requestInterceptors","responseInterceptors","licenseRequestFilters","licenseResponseFilters","customAbrRules","_unregisterFilter","_findAbrCustomRuleIndex","getLicenseRequestFilters","getLicenseResponseFilters","useCreds","defaultUtcTimingSource","INTERNAL_KEY_MESSAGE","KEY_ADDED","KEY_MESSAGE","KEY_SESSION_CLOSED","KEY_SESSION_REMOVED","KEY_STATUSES_CHANGED","KEY_STATUSES_MAP_UPDATED","KEY_SYSTEM_ACCESS_COMPLETE","LICENSE_REQUEST_SENDING","NEED_KEY","TEARDOWN_COMPLETE","VIDEO_ELEMENT_SELECTED","protectionEvents","MEDIA_KEYERR_CODE","MEDIA_KEYERR_UNKNOWN_CODE","MEDIA_KEYERR_CLIENT_CODE","MEDIA_KEYERR_SERVICE_CODE","MEDIA_KEYERR_OUTPUT_CODE","MEDIA_KEYERR_HARDWARECHANGE_CODE","MEDIA_KEYERR_DOMAIN_CODE","MEDIA_KEY_MESSAGE_ERROR_CODE","MEDIA_KEY_MESSAGE_NO_CHALLENGE_ERROR_CODE","SERVER_CERTIFICATE_UPDATED_ERROR_CODE","MEDIA_KEY_MESSAGE_NO_LICENSE_SERVER_URL_ERROR_CODE","KEY_SYSTEM_ACCESS_DENIED_ERROR_CODE","KEY_SESSION_CREATED_ERROR_CODE","MEDIA_KEY_MESSAGE_LICENSER_ERROR_CODE","MEDIA_KEYERR_UNKNOWN_MESSAGE","MEDIA_KEYERR_CLIENT_MESSAGE","MEDIA_KEYERR_SERVICE_MESSAGE","MEDIA_KEYERR_OUTPUT_MESSAGE","MEDIA_KEYERR_HARDWARECHANGE_MESSAGE","MEDIA_KEYERR_DOMAIN_MESSAGE","MEDIA_KEY_MESSAGE_ERROR_MESSAGE","MEDIA_KEY_MESSAGE_NO_CHALLENGE_ERROR_MESSAGE","SERVER_CERTIFICATE_UPDATED_ERROR_MESSAGE","MEDIA_KEY_MESSAGE_NO_LICENSE_SERVER_URL_ERROR_MESSAGE","KEY_SYSTEM_ACCESS_DENIED_ERROR_MESSAGE","KEY_SESSION_CREATED_ERROR_MESSAGE","MEDIA_KEY_MESSAGE_LICENSER_ERROR_MESSAGE","protectionErrors","hasManagedMediaSource","testedCodecConfigurations","encryptedMediaSupported","_getEnhancedConfigurations","inputConfig","configuration","_getGenericMediaCapabilitiesVideoConfig","_getGenericMediaCapabilitiesAudioConfig","mediaSourceCodecString","genericConfiguration","keySystemMetadata","keySystemConfiguration","systemString","keySystem","robustnessLevel","ProtectionConstants","audioRobustness","videoRobustness","_enhanceGenericConfigurationWithKeySystemConfiguration","_getTestedCodecConfiguration","audioEqual","_isConfigEqual","videoEqual","keySystemEqual","_addProperties","newProps","np","testedConfigurations","testedConfiguration","decodingInfo","_isConfigSupported","previousStreamInfo","configurationsToTest","mediaCapabilities","_canUseMediaCapabilitiesApi","_checkSingleConfigurationWithMediaCapabilities","_checkCodecWithMediaCapabilities","configurationToTest","isTypeSupported","_checkCodecWithMse","setEncryptedMediaSupported","SourceBuffer","supportedEssentialProps","customTimeRangeArray","mergeRanges","rangeIndex1","rangeIndex2","range1","range2","obj1","obj2","deepEqual","parameter","checkRange","checkIsVideoOrAudioType","DVB_REPORTING_TYPE","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","amdO","definition","g","globalThis","toStringTag","Version"],"sourceRoot":""}